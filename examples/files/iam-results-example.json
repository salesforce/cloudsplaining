[
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AWSCloudTrailFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess",
        "ActionsCount": 18,
        "ServicesCount": 4,
        "Services": [
            "cloudtrail",
            "iam",
            "s3",
            "sns"
        ],
        "Actions": [
            "cloudtrail:AddTags",
            "cloudtrail:CreateTrail",
            "cloudtrail:DeleteTrail",
            "cloudtrail:PutEventSelectors",
            "cloudtrail:PutInsightSelectors",
            "cloudtrail:RemoveTags",
            "cloudtrail:StartLogging",
            "cloudtrail:StopLogging",
            "cloudtrail:UpdateTrail",
            "iam:PassRole",
            "s3:CreateBucket",
            "s3:DeleteBucket",
            "s3:GetObject",
            "s3:PutBucketPolicy",
            "sns:AddPermission",
            "sns:CreateTopic",
            "sns:DeleteTopic",
            "sns:SetTopicAttributes"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "sns:AddPermission",
                        "sns:CreateTopic",
                        "sns:DeleteTopic",
                        "sns:ListTopics",
                        "sns:SetTopicAttributes",
                        "sns:GetTopicAttributes"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "s3:CreateBucket",
                        "s3:DeleteBucket",
                        "s3:ListAllMyBuckets",
                        "s3:PutBucketPolicy",
                        "s3:ListBucket",
                        "s3:GetObject",
                        "s3:GetBucketLocation",
                        "s3:GetBucketPolicy"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "cloudtrail:*",
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogGroup"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "iam:ListRoles",
                        "iam:GetRolePolicy",
                        "iam:GetUser"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "iam:PassRole"
                    ],
                    "Resource": "*",
                    "Condition": {
                        "StringEquals": {
                            "iam:PassedToService": "cloudtrail.amazonaws.com"
                        }
                    }
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "kms:ListKeys",
                        "kms:ListAliases"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "lambda:ListFunctions"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [
            "s3:GetObject"
        ],
        "PermissionsManagementActions": [
            "sns:AddPermission",
            "sns:CreateTopic",
            "sns:SetTopicAttributes",
            "s3:PutBucketPolicy",
            "iam:PassRole"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AWSCodeCommitFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AWSCodeCommitFullAccess",
        "ActionsCount": 52,
        "ServicesCount": 4,
        "Services": [
            "codecommit",
            "codeguru-reviewer",
            "codestar-notifications",
            "events"
        ],
        "Actions": [
            "codecommit:AssociateApprovalRuleTemplateWithRepository",
            "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
            "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
            "codecommit:CreateBranch",
            "codecommit:CreateCommit",
            "codecommit:CreatePullRequest",
            "codecommit:CreatePullRequestApprovalRule",
            "codecommit:CreateRepository",
            "codecommit:CreateUnreferencedMergeCommit",
            "codecommit:DeleteBranch",
            "codecommit:DeleteCommentContent",
            "codecommit:DeleteFile",
            "codecommit:DeletePullRequestApprovalRule",
            "codecommit:DeleteRepository",
            "codecommit:DisassociateApprovalRuleTemplateFromRepository",
            "codecommit:GitPush",
            "codecommit:MergeBranchesByFastForward",
            "codecommit:MergeBranchesBySquash",
            "codecommit:MergeBranchesByThreeWay",
            "codecommit:MergePullRequestByFastForward",
            "codecommit:MergePullRequestBySquash",
            "codecommit:MergePullRequestByThreeWay",
            "codecommit:OverridePullRequestApprovalRules",
            "codecommit:PostCommentForComparedCommit",
            "codecommit:PostCommentForPullRequest",
            "codecommit:PostCommentReply",
            "codecommit:PutFile",
            "codecommit:PutRepositoryTriggers",
            "codecommit:TagResource",
            "codecommit:TestRepositoryTriggers",
            "codecommit:UntagResource",
            "codecommit:UpdateComment",
            "codecommit:UpdateDefaultBranch",
            "codecommit:UpdatePullRequestApprovalRuleContent",
            "codecommit:UpdatePullRequestApprovalState",
            "codecommit:UpdatePullRequestDescription",
            "codecommit:UpdatePullRequestStatus",
            "codecommit:UpdatePullRequestTitle",
            "codecommit:UpdateRepositoryDescription",
            "codecommit:UpdateRepositoryName",
            "codecommit:UploadArchive",
            "codeguru-reviewer:AssociateRepository",
            "codeguru-reviewer:DisassociateRepository",
            "codestar-notifications:CreateNotificationRule",
            "codestar-notifications:DeleteNotificationRule",
            "codestar-notifications:Subscribe",
            "codestar-notifications:Unsubscribe",
            "codestar-notifications:UpdateNotificationRule",
            "events:DeleteRule",
            "events:PutRule",
            "events:PutTargets",
            "events:RemoveTargets"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "codecommit:*"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "CloudWatchEventsCodeCommitRulesAccess",
                    "Effect": "Allow",
                    "Action": [
                        "events:DeleteRule",
                        "events:DescribeRule",
                        "events:DisableRule",
                        "events:EnableRule",
                        "events:PutRule",
                        "events:PutTargets",
                        "events:RemoveTargets",
                        "events:ListTargetsByRule"
                    ],
                    "Resource": "arn:aws:events:*:*:rule/codecommit*"
                },
                {
                    "Sid": "SNSTopicAndSubscriptionAccess",
                    "Effect": "Allow",
                    "Action": [
                        "sns:CreateTopic",
                        "sns:DeleteTopic",
                        "sns:Subscribe",
                        "sns:Unsubscribe",
                        "sns:SetTopicAttributes"
                    ],
                    "Resource": "arn:aws:sns:*:*:codecommit*"
                },
                {
                    "Sid": "SNSTopicAndSubscriptionReadAccess",
                    "Effect": "Allow",
                    "Action": [
                        "sns:ListTopics",
                        "sns:ListSubscriptionsByTopic",
                        "sns:GetTopicAttributes"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "LambdaReadOnlyListAccess",
                    "Effect": "Allow",
                    "Action": [
                        "lambda:ListFunctions"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "IAMReadOnlyListAccess",
                    "Effect": "Allow",
                    "Action": [
                        "iam:ListUsers"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "IAMReadOnlyConsoleAccess",
                    "Effect": "Allow",
                    "Action": [
                        "iam:ListAccessKeys",
                        "iam:ListSSHPublicKeys",
                        "iam:ListServiceSpecificCredentials"
                    ],
                    "Resource": "arn:aws:iam::*:user/${aws:username}"
                },
                {
                    "Sid": "IAMUserSSHKeys",
                    "Effect": "Allow",
                    "Action": [
                        "iam:DeleteSSHPublicKey",
                        "iam:GetSSHPublicKey",
                        "iam:ListSSHPublicKeys",
                        "iam:UpdateSSHPublicKey",
                        "iam:UploadSSHPublicKey"
                    ],
                    "Resource": "arn:aws:iam::*:user/${aws:username}"
                },
                {
                    "Sid": "IAMSelfManageServiceSpecificCredentials",
                    "Effect": "Allow",
                    "Action": [
                        "iam:CreateServiceSpecificCredential",
                        "iam:UpdateServiceSpecificCredential",
                        "iam:DeleteServiceSpecificCredential",
                        "iam:ResetServiceSpecificCredential"
                    ],
                    "Resource": "arn:aws:iam::*:user/${aws:username}"
                },
                {
                    "Sid": "CodeStarNotificationsReadWriteAccess",
                    "Effect": "Allow",
                    "Action": [
                        "codestar-notifications:CreateNotificationRule",
                        "codestar-notifications:DescribeNotificationRule",
                        "codestar-notifications:UpdateNotificationRule",
                        "codestar-notifications:DeleteNotificationRule",
                        "codestar-notifications:Subscribe",
                        "codestar-notifications:Unsubscribe"
                    ],
                    "Resource": "*",
                    "Condition": {
                        "StringLike": {
                            "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                        }
                    }
                },
                {
                    "Sid": "CodeStarNotificationsListAccess",
                    "Effect": "Allow",
                    "Action": [
                        "codestar-notifications:ListNotificationRules",
                        "codestar-notifications:ListTargets",
                        "codestar-notifications:ListTagsforResource",
                        "codestar-notifications:ListEventTypes"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
                    "Effect": "Allow",
                    "Action": [
                        "sns:CreateTopic",
                        "sns:SetTopicAttributes"
                    ],
                    "Resource": "arn:aws:sns:*:*:codestar-notifications*"
                },
                {
                    "Sid": "AmazonCodeGuruReviewerFullAccess",
                    "Effect": "Allow",
                    "Action": [
                        "codeguru-reviewer:AssociateRepository",
                        "codeguru-reviewer:DescribeRepositoryAssociation",
                        "codeguru-reviewer:ListRepositoryAssociations",
                        "codeguru-reviewer:DisassociateRepository"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "AmazonCodeGuruReviewerSLRCreation",
                    "Action": "iam:CreateServiceLinkedRole",
                    "Effect": "Allow",
                    "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                    "Condition": {
                        "StringLike": {
                            "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                        }
                    }
                },
                {
                    "Sid": "CloudWatchEventsManagedRules",
                    "Effect": "Allow",
                    "Action": [
                        "events:PutRule",
                        "events:PutTargets",
                        "events:DeleteRule",
                        "events:RemoveTargets"
                    ],
                    "Resource": "*",
                    "Condition": {
                        "StringEquals": {
                            "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                        }
                    }
                },
                {
                    "Sid": "CodeStarNotificationsChatbotAccess",
                    "Effect": "Allow",
                    "Action": [
                        "chatbot:DescribeSlackChannelConfigurations"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": []
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AWSCodeCommitPowerUser",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AWSCodeCommitPowerUser",
        "ActionsCount": 47,
        "ServicesCount": 4,
        "Services": [
            "codecommit",
            "codeguru-reviewer",
            "codestar-notifications",
            "events"
        ],
        "Actions": [
            "codecommit:AssociateApprovalRuleTemplateWithRepository",
            "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
            "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
            "codecommit:CreateBranch",
            "codecommit:CreateCommit",
            "codecommit:CreatePullRequest",
            "codecommit:CreatePullRequestApprovalRule",
            "codecommit:CreateRepository",
            "codecommit:CreateUnreferencedMergeCommit",
            "codecommit:DeleteBranch",
            "codecommit:DeleteFile",
            "codecommit:DisassociateApprovalRuleTemplateFromRepository",
            "codecommit:GitPush",
            "codecommit:MergeBranchesByFastForward",
            "codecommit:MergeBranchesBySquash",
            "codecommit:MergeBranchesByThreeWay",
            "codecommit:MergePullRequestByFastForward",
            "codecommit:MergePullRequestBySquash",
            "codecommit:MergePullRequestByThreeWay",
            "codecommit:OverridePullRequestApprovalRules",
            "codecommit:PostCommentForComparedCommit",
            "codecommit:PostCommentForPullRequest",
            "codecommit:PostCommentReply",
            "codecommit:PutFile",
            "codecommit:PutRepositoryTriggers",
            "codecommit:TagResource",
            "codecommit:TestRepositoryTriggers",
            "codecommit:UntagResource",
            "codecommit:UpdateComment",
            "codecommit:UpdateDefaultBranch",
            "codecommit:UpdatePullRequestApprovalRuleContent",
            "codecommit:UpdatePullRequestApprovalState",
            "codecommit:UpdatePullRequestDescription",
            "codecommit:UpdatePullRequestStatus",
            "codecommit:UpdatePullRequestTitle",
            "codecommit:UpdateRepositoryDescription",
            "codecommit:UpdateRepositoryName",
            "codeguru-reviewer:AssociateRepository",
            "codeguru-reviewer:DisassociateRepository",
            "codestar-notifications:CreateNotificationRule",
            "codestar-notifications:Subscribe",
            "codestar-notifications:Unsubscribe",
            "codestar-notifications:UpdateNotificationRule",
            "events:DeleteRule",
            "events:PutRule",
            "events:PutTargets",
            "events:RemoveTargets"
        ],
        "PolicyDocument": {
            "Statement": [
                {
                    "Action": [
                        "codecommit:AssociateApprovalRuleTemplateWithRepository",
                        "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                        "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                        "codecommit:BatchGet*",
                        "codecommit:BatchDescribe*",
                        "codecommit:Create*",
                        "codecommit:DeleteBranch",
                        "codecommit:DeleteFile",
                        "codecommit:Describe*",
                        "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                        "codecommit:EvaluatePullRequestApprovalRules",
                        "codecommit:Get*",
                        "codecommit:List*",
                        "codecommit:Merge*",
                        "codecommit:OverridePullRequestApprovalRules",
                        "codecommit:Put*",
                        "codecommit:Post*",
                        "codecommit:TagResource",
                        "codecommit:Test*",
                        "codecommit:UntagResource",
                        "codecommit:Update*",
                        "codecommit:GitPull",
                        "codecommit:GitPush"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                {
                    "Action": [
                        "events:DeleteRule",
                        "events:DescribeRule",
                        "events:DisableRule",
                        "events:EnableRule",
                        "events:PutRule",
                        "events:PutTargets",
                        "events:RemoveTargets",
                        "events:ListTargetsByRule"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:events:*:*:rule/codecommit*",
                    "Sid": "CloudWatchEventsCodeCommitRulesAccess"
                },
                {
                    "Action": [
                        "sns:Subscribe",
                        "sns:Unsubscribe"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:sns:*:*:codecommit*",
                    "Sid": "SNSTopicAndSubscriptionAccess"
                },
                {
                    "Action": [
                        "sns:ListTopics",
                        "sns:ListSubscriptionsByTopic",
                        "sns:GetTopicAttributes"
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": "SNSTopicAndSubscriptionReadAccess"
                },
                {
                    "Action": [
                        "lambda:ListFunctions"
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": "LambdaReadOnlyListAccess"
                },
                {
                    "Action": [
                        "iam:ListUsers"
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": "IAMReadOnlyListAccess"
                },
                {
                    "Action": [
                        "iam:ListAccessKeys",
                        "iam:ListSSHPublicKeys",
                        "iam:ListServiceSpecificCredentials"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:iam::*:user/${aws:username}",
                    "Sid": "IAMReadOnlyConsoleAccess"
                },
                {
                    "Action": [
                        "iam:DeleteSSHPublicKey",
                        "iam:GetSSHPublicKey",
                        "iam:ListSSHPublicKeys",
                        "iam:UpdateSSHPublicKey",
                        "iam:UploadSSHPublicKey"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:iam::*:user/${aws:username}",
                    "Sid": "IAMUserSSHKeys"
                },
                {
                    "Action": [
                        "iam:CreateServiceSpecificCredential",
                        "iam:UpdateServiceSpecificCredential",
                        "iam:DeleteServiceSpecificCredential",
                        "iam:ResetServiceSpecificCredential"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:iam::*:user/${aws:username}",
                    "Sid": "IAMSelfManageServiceSpecificCredentials"
                },
                {
                    "Action": [
                        "codestar-notifications:CreateNotificationRule",
                        "codestar-notifications:DescribeNotificationRule",
                        "codestar-notifications:UpdateNotificationRule",
                        "codestar-notifications:Subscribe",
                        "codestar-notifications:Unsubscribe"
                    ],
                    "Condition": {
                        "StringLike": {
                            "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                        }
                    },
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": "CodeStarNotificationsReadWriteAccess"
                },
                {
                    "Action": [
                        "codestar-notifications:ListNotificationRules",
                        "codestar-notifications:ListTargets",
                        "codestar-notifications:ListTagsforResource",
                        "codestar-notifications:ListEventTypes"
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": "CodeStarNotificationsListAccess"
                },
                {
                    "Action": [
                        "codeguru-reviewer:AssociateRepository",
                        "codeguru-reviewer:DescribeRepositoryAssociation",
                        "codeguru-reviewer:ListRepositoryAssociations",
                        "codeguru-reviewer:DisassociateRepository"
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": "AmazonCodeGuruReviewerFullAccess"
                },
                {
                    "Action": "iam:CreateServiceLinkedRole",
                    "Condition": {
                        "StringLike": {
                            "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                        }
                    },
                    "Effect": "Allow",
                    "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                    "Sid": "AmazonCodeGuruReviewerSLRCreation"
                },
                {
                    "Action": [
                        "events:PutRule",
                        "events:PutTargets",
                        "events:DeleteRule",
                        "events:RemoveTargets"
                    ],
                    "Condition": {
                        "StringEquals": {
                            "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                        }
                    },
                    "Effect": "Allow",
                    "Resource": "*",
                    "Sid": "CloudWatchEventsManagedRules"
                }
            ],
            "Version": "2012-10-17"
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": []
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AWSCodeDeployFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AWSCodeDeployFullAccess",
        "ActionsCount": 21,
        "ServicesCount": 2,
        "Services": [
            "codedeploy",
            "codestar-notifications"
        ],
        "Actions": [
            "codedeploy:AddTagsToOnPremisesInstances",
            "codedeploy:CreateApplication",
            "codedeploy:CreateDeployment",
            "codedeploy:CreateDeploymentConfig",
            "codedeploy:CreateDeploymentGroup",
            "codedeploy:DeleteApplication",
            "codedeploy:DeleteDeploymentConfig",
            "codedeploy:DeleteDeploymentGroup",
            "codedeploy:DeregisterOnPremisesInstance",
            "codedeploy:RegisterApplicationRevision",
            "codedeploy:RegisterOnPremisesInstance",
            "codedeploy:RemoveTagsFromOnPremisesInstances",
            "codedeploy:TagResource",
            "codedeploy:UntagResource",
            "codedeploy:UpdateApplication",
            "codedeploy:UpdateDeploymentGroup",
            "codestar-notifications:CreateNotificationRule",
            "codestar-notifications:DeleteNotificationRule",
            "codestar-notifications:Subscribe",
            "codestar-notifications:Unsubscribe",
            "codestar-notifications:UpdateNotificationRule"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": "codedeploy:*",
                    "Effect": "Allow",
                    "Resource": "*"
                },
                {
                    "Sid": "CodeStarNotificationsReadWriteAccess",
                    "Effect": "Allow",
                    "Action": [
                        "codestar-notifications:CreateNotificationRule",
                        "codestar-notifications:DescribeNotificationRule",
                        "codestar-notifications:UpdateNotificationRule",
                        "codestar-notifications:DeleteNotificationRule",
                        "codestar-notifications:Subscribe",
                        "codestar-notifications:Unsubscribe"
                    ],
                    "Resource": "*",
                    "Condition": {
                        "StringLike": {
                            "codestar-notifications:NotificationsForResource": "arn:aws:codedeploy:*"
                        }
                    }
                },
                {
                    "Sid": "CodeStarNotificationsListAccess",
                    "Effect": "Allow",
                    "Action": [
                        "codestar-notifications:ListNotificationRules",
                        "codestar-notifications:ListTargets",
                        "codestar-notifications:ListTagsforResource",
                        "codestar-notifications:ListEventTypes"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
                    "Effect": "Allow",
                    "Action": [
                        "sns:CreateTopic",
                        "sns:SetTopicAttributes"
                    ],
                    "Resource": "arn:aws:sns:*:*:codestar-notifications*"
                },
                {
                    "Sid": "CodeStarNotificationsChatbotAccess",
                    "Effect": "Allow",
                    "Action": [
                        "chatbot:DescribeSlackChannelConfigurations"
                    ],
                    "Resource": "*"
                },
                {
                    "Sid": "SNSTopicListAccess",
                    "Effect": "Allow",
                    "Action": [
                        "sns:ListTopics"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": []
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AWSDirectoryServiceFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess",
        "ActionsCount": 44,
        "ServicesCount": 2,
        "Services": [
            "ds",
            "ec2"
        ],
        "Actions": [
            "ds:AcceptSharedDirectory",
            "ds:AddIpRoutes",
            "ds:AddTagsToResource",
            "ds:AuthorizeApplication",
            "ds:CancelSchemaExtension",
            "ds:CreateAlias",
            "ds:CreateComputer",
            "ds:CreateConditionalForwarder",
            "ds:CreateLogSubscription",
            "ds:CreateSnapshot",
            "ds:CreateTrust",
            "ds:DeleteConditionalForwarder",
            "ds:DeleteDirectory",
            "ds:DeleteLogSubscription",
            "ds:DeleteSnapshot",
            "ds:DeleteTrust",
            "ds:DeregisterCertificate",
            "ds:DeregisterEventTopic",
            "ds:DisableLDAPS",
            "ds:DisableRadius",
            "ds:DisableSso",
            "ds:EnableLDAPS",
            "ds:EnableRadius",
            "ds:EnableSso",
            "ds:RegisterCertificate",
            "ds:RegisterEventTopic",
            "ds:RejectSharedDirectory",
            "ds:RemoveIpRoutes",
            "ds:RemoveTagsFromResource",
            "ds:ResetUserPassword",
            "ds:RestoreFromSnapshot",
            "ds:ShareDirectory",
            "ds:StartSchemaExtension",
            "ds:UnauthorizeApplication",
            "ds:UnshareDirectory",
            "ds:UpdateConditionalForwarder",
            "ds:UpdateNumberOfDomainControllers",
            "ds:UpdateRadius",
            "ds:UpdateTrust",
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:DeleteSecurityGroup",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupIngress"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": [
                        "ds:*",
                        "ec2:AuthorizeSecurityGroupEgress",
                        "ec2:AuthorizeSecurityGroupIngress",
                        "ec2:CreateNetworkInterface",
                        "ec2:CreateSecurityGroup",
                        "ec2:DeleteNetworkInterface",
                        "ec2:DeleteSecurityGroup",
                        "ec2:DescribeNetworkInterfaces",
                        "ec2:DescribeSubnets",
                        "ec2:DescribeVpcs",
                        "ec2:RevokeSecurityGroupEgress",
                        "ec2:RevokeSecurityGroupIngress",
                        "ec2:DescribeSecurityGroups",
                        "sns:GetTopicAttributes",
                        "sns:ListSubscriptions",
                        "sns:ListSubscriptionsByTopic",
                        "sns:ListTopics",
                        "iam:ListRoles",
                        "organizations:ListAccountsForParent",
                        "organizations:ListRoots",
                        "organizations:ListAccounts",
                        "organizations:DescribeOrganization",
                        "organizations:DescribeAccount",
                        "organizations:ListOrganizationalUnitsForParent",
                        "organizations:ListAWSServiceAccessForOrganization"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                {
                    "Action": [
                        "sns:CreateTopic",
                        "sns:DeleteTopic",
                        "sns:SetTopicAttributes",
                        "sns:Subscribe",
                        "sns:Unsubscribe"
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:aws:sns:*:*:DirectoryMonitoring*"
                },
                {
                    "Action": [
                        "organizations:EnableAWSServiceAccess",
                        "organizations:DisableAWSServiceAccess"
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                    "Condition": {
                        "ForAllValues:StringLike": {
                            "organizations:ServicePrincipal": [
                                "ds.amazonaws.com"
                            ]
                        }
                    }
                },
                {
                    "Action": [
                        "ec2:CreateTags",
                        "ec2:DeleteTags"
                    ],
                    "Effect": "Allow",
                    "Resource": [
                        "arn:aws:ec2:*:*:network-interface/*",
                        "arn:aws:ec2:*:*:security-group/*"
                    ]
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "ds:CreateConditionalForwarder",
            "ds:CreateDirectory",
            "ds:CreateMicrosoftAD",
            "ds:CreateTrust",
            "ds:ShareDirectory"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AWSKeyManagementServicePowerUser",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser",
        "ActionsCount": 4,
        "ServicesCount": 1,
        "Services": [
            "kms"
        ],
        "Actions": [
            "kms:CreateAlias",
            "kms:DeleteAlias",
            "kms:TagResource",
            "kms:UntagResource"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "kms:CreateAlias",
                        "kms:CreateKey",
                        "kms:DeleteAlias",
                        "kms:Describe*",
                        "kms:GenerateRandom",
                        "kms:Get*",
                        "kms:List*",
                        "kms:TagResource",
                        "kms:UntagResource",
                        "iam:ListGroups",
                        "iam:ListRoles",
                        "iam:ListUsers"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": []
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AWSLambdaFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
        "ActionsCount": 150,
        "ServicesCount": 12,
        "Services": [
            "cloudwatch",
            "cognito-sync",
            "dynamodb",
            "events",
            "iam",
            "iot",
            "kinesis",
            "lambda",
            "logs",
            "s3",
            "sns",
            "sqs"
        ],
        "Actions": [
            "cloudwatch:DeleteAlarms",
            "cloudwatch:DeleteDashboards",
            "cloudwatch:DeleteInsightRules",
            "cloudwatch:DisableAlarmActions",
            "cloudwatch:DisableInsightRules",
            "cloudwatch:EnableAlarmActions",
            "cloudwatch:EnableInsightRules",
            "cloudwatch:PutDashboard",
            "cloudwatch:PutInsightRule",
            "cloudwatch:PutMetricAlarm",
            "cloudwatch:SetAlarmState",
            "cloudwatch:TagResource",
            "cloudwatch:UntagResource",
            "cognito-sync:SetCognitoEvents",
            "dynamodb:BatchWriteItem",
            "dynamodb:CreateBackup",
            "dynamodb:CreateGlobalTable",
            "dynamodb:CreateTable",
            "dynamodb:CreateTableReplica",
            "dynamodb:DeleteBackup",
            "dynamodb:DeleteItem",
            "dynamodb:DeleteTable",
            "dynamodb:DeleteTableReplica",
            "dynamodb:PutItem",
            "dynamodb:RestoreTableFromBackup",
            "dynamodb:RestoreTableToPointInTime",
            "dynamodb:TagResource",
            "dynamodb:UntagResource",
            "dynamodb:UpdateContinuousBackups",
            "dynamodb:UpdateContributorInsights",
            "dynamodb:UpdateGlobalTable",
            "dynamodb:UpdateGlobalTableSettings",
            "dynamodb:UpdateItem",
            "dynamodb:UpdateTable",
            "dynamodb:UpdateTableReplicaAutoScaling",
            "dynamodb:UpdateTimeToLive",
            "events:ActivateEventSource",
            "events:CreateEventBus",
            "events:CreatePartnerEventSource",
            "events:DeactivateEventSource",
            "events:DeleteEventBus",
            "events:DeletePartnerEventSource",
            "events:DeleteRule",
            "events:DisableRule",
            "events:EnableRule",
            "events:PutRule",
            "events:PutTargets",
            "events:RemoveTargets",
            "events:TagResource",
            "events:UntagResource",
            "iam:PassRole",
            "iot:AttachPrincipalPolicy",
            "iot:CreateThing",
            "iot:CreateTopicRule",
            "iot:ReplaceTopicRule",
            "kinesis:PutRecord",
            "lambda:AddLayerVersionPermission",
            "lambda:AddPermission",
            "lambda:CreateAlias",
            "lambda:CreateFunction",
            "lambda:DeleteAlias",
            "lambda:DeleteEventSourceMapping",
            "lambda:DeleteFunction",
            "lambda:DeleteFunctionConcurrency",
            "lambda:DeleteFunctionEventInvokeConfig",
            "lambda:DeleteLayerVersion",
            "lambda:DeleteProvisionedConcurrencyConfig",
            "lambda:DisableReplication",
            "lambda:EnableReplication",
            "lambda:InvokeAsync",
            "lambda:InvokeFunction",
            "lambda:PublishLayerVersion",
            "lambda:PublishVersion",
            "lambda:PutFunctionConcurrency",
            "lambda:PutFunctionEventInvokeConfig",
            "lambda:PutProvisionedConcurrencyConfig",
            "lambda:RemoveLayerVersionPermission",
            "lambda:RemovePermission",
            "lambda:TagResource",
            "lambda:UntagResource",
            "lambda:UpdateAlias",
            "lambda:UpdateEventSourceMapping",
            "lambda:UpdateFunctionCode",
            "lambda:UpdateFunctionConfiguration",
            "lambda:UpdateFunctionEventInvokeConfig",
            "logs:AssociateKmsKey",
            "logs:CreateExportTask",
            "logs:CreateLogStream",
            "logs:DeleteLogGroup",
            "logs:DeleteLogStream",
            "logs:DeleteMetricFilter",
            "logs:DeleteRetentionPolicy",
            "logs:DeleteSubscriptionFilter",
            "logs:DisassociateKmsKey",
            "logs:PutLogEvents",
            "logs:PutMetricFilter",
            "logs:PutRetentionPolicy",
            "logs:PutSubscriptionFilter",
            "logs:TagLogGroup",
            "logs:UntagLogGroup",
            "s3:AbortMultipartUpload",
            "s3:BypassGovernanceRetention",
            "s3:CreateAccessPoint",
            "s3:CreateBucket",
            "s3:DeleteAccessPoint",
            "s3:DeleteAccessPointPolicy",
            "s3:DeleteBucket",
            "s3:DeleteBucketPolicy",
            "s3:DeleteBucketWebsite",
            "s3:DeleteObject",
            "s3:DeleteObjectTagging",
            "s3:DeleteObjectVersion",
            "s3:DeleteObjectVersionTagging",
            "s3:GetObject",
            "s3:ObjectOwnerOverrideToBucketOwner",
            "s3:PutAccelerateConfiguration",
            "s3:PutAccessPointPolicy",
            "s3:PutAnalyticsConfiguration",
            "s3:PutBucketAcl",
            "s3:PutBucketCORS",
            "s3:PutBucketLogging",
            "s3:PutBucketNotification",
            "s3:PutBucketObjectLockConfiguration",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutBucketRequestPayment",
            "s3:PutBucketTagging",
            "s3:PutBucketVersioning",
            "s3:PutBucketWebsite",
            "s3:PutEncryptionConfiguration",
            "s3:PutInventoryConfiguration",
            "s3:PutLifecycleConfiguration",
            "s3:PutMetricsConfiguration",
            "s3:PutObject",
            "s3:PutObjectAcl",
            "s3:PutObjectLegalHold",
            "s3:PutObjectRetention",
            "s3:PutObjectTagging",
            "s3:PutObjectVersionAcl",
            "s3:PutObjectVersionTagging",
            "s3:PutReplicationConfiguration",
            "s3:ReplicateDelete",
            "s3:ReplicateObject",
            "s3:ReplicateTags",
            "s3:RestoreObject",
            "s3:UpdateJobPriority",
            "s3:UpdateJobStatus",
            "sns:Publish",
            "sns:Subscribe",
            "sqs:SendMessage"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "cloudformation:DescribeChangeSet",
                        "cloudformation:DescribeStackResources",
                        "cloudformation:DescribeStacks",
                        "cloudformation:GetTemplate",
                        "cloudformation:ListStackResources",
                        "cloudwatch:*",
                        "cognito-identity:ListIdentityPools",
                        "cognito-sync:GetCognitoEvents",
                        "cognito-sync:SetCognitoEvents",
                        "dynamodb:*",
                        "ec2:DescribeSecurityGroups",
                        "ec2:DescribeSubnets",
                        "ec2:DescribeVpcs",
                        "events:*",
                        "iam:GetPolicy",
                        "iam:GetPolicyVersion",
                        "iam:GetRole",
                        "iam:GetRolePolicy",
                        "iam:ListAttachedRolePolicies",
                        "iam:ListRolePolicies",
                        "iam:ListRoles",
                        "iam:PassRole",
                        "iot:AttachPrincipalPolicy",
                        "iot:AttachThingPrincipal",
                        "iot:CreateKeysAndCertificate",
                        "iot:CreatePolicy",
                        "iot:CreateThing",
                        "iot:CreateTopicRule",
                        "iot:DescribeEndpoint",
                        "iot:GetTopicRule",
                        "iot:ListPolicies",
                        "iot:ListThings",
                        "iot:ListTopicRules",
                        "iot:ReplaceTopicRule",
                        "kinesis:DescribeStream",
                        "kinesis:ListStreams",
                        "kinesis:PutRecord",
                        "kms:ListAliases",
                        "lambda:*",
                        "logs:*",
                        "s3:*",
                        "sns:ListSubscriptions",
                        "sns:ListSubscriptionsByTopic",
                        "sns:ListTopics",
                        "sns:Publish",
                        "sns:Subscribe",
                        "sns:Unsubscribe",
                        "sqs:ListQueues",
                        "sqs:SendMessage",
                        "tag:GetResources",
                        "xray:PutTelemetryRecords",
                        "xray:PutTraceSegments"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [
            {
                "type": "PassExistingRoleToNewLambdaThenInvoke",
                "actions": [
                    "iam:passrole",
                    "lambda:createfunction",
                    "lambda:invokefunction"
                ]
            },
            {
                "type": "PassExistingRoleToNewLambdaThenTriggerWithNewDynamo",
                "actions": [
                    "iam:passrole",
                    "lambda:createfunction",
                    "lambda:createeventsourcemapping",
                    "dynamodb:createtable",
                    "dynamodb:putitem"
                ]
            },
            {
                "type": "PassExistingRoleToNewLambdaThenTriggerWithExistingDynamo",
                "actions": [
                    "iam:passrole",
                    "lambda:createfunction",
                    "lambda:createeventsourcemapping"
                ]
            },
            {
                "type": "EditExistingLambdaFunctionWithRole",
                "actions": [
                    "lambda:updatefunctioncode"
                ]
            }
        ],
        "DataExfiltrationActions": [
            "s3:GetObject"
        ],
        "PermissionsManagementActions": [
            "iam:PassRole",
            "iot:AttachPrincipalPolicy",
            "lambda:AddLayerVersionPermission",
            "lambda:AddPermission",
            "lambda:DisableReplication",
            "lambda:EnableReplication",
            "lambda:RemoveLayerVersionPermission",
            "lambda:RemovePermission",
            "logs:DeleteResourcePolicy",
            "logs:PutResourcePolicy",
            "s3:BypassGovernanceRetention",
            "s3:DeleteAccessPointPolicy",
            "s3:DeleteBucketPolicy",
            "s3:ObjectOwnerOverrideToBucketOwner",
            "s3:PutAccessPointPolicy",
            "s3:PutAccountPublicAccessBlock",
            "s3:PutBucketAcl",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutObjectAcl",
            "s3:PutObjectVersionAcl"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonEC2FullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
        "ActionsCount": 198,
        "ServicesCount": 5,
        "Services": [
            "autoscaling",
            "cloudwatch",
            "ec2",
            "elasticloadbalancing",
            "iam"
        ],
        "Actions": [
            "autoscaling:AttachInstances",
            "autoscaling:AttachLoadBalancerTargetGroups",
            "autoscaling:AttachLoadBalancers",
            "autoscaling:BatchDeleteScheduledAction",
            "autoscaling:BatchPutScheduledUpdateGroupAction",
            "autoscaling:CompleteLifecycleAction",
            "autoscaling:CreateAutoScalingGroup",
            "autoscaling:CreateLaunchConfiguration",
            "autoscaling:CreateOrUpdateTags",
            "autoscaling:DeleteAutoScalingGroup",
            "autoscaling:DeleteLaunchConfiguration",
            "autoscaling:DeleteLifecycleHook",
            "autoscaling:DeleteNotificationConfiguration",
            "autoscaling:DeletePolicy",
            "autoscaling:DeleteScheduledAction",
            "autoscaling:DeleteTags",
            "autoscaling:DetachInstances",
            "autoscaling:DetachLoadBalancerTargetGroups",
            "autoscaling:DetachLoadBalancers",
            "autoscaling:DisableMetricsCollection",
            "autoscaling:EnableMetricsCollection",
            "autoscaling:EnterStandby",
            "autoscaling:ExecutePolicy",
            "autoscaling:ExitStandby",
            "autoscaling:PutLifecycleHook",
            "autoscaling:PutNotificationConfiguration",
            "autoscaling:PutScalingPolicy",
            "autoscaling:PutScheduledUpdateGroupAction",
            "autoscaling:RecordLifecycleActionHeartbeat",
            "autoscaling:ResumeProcesses",
            "autoscaling:SetDesiredCapacity",
            "autoscaling:SetInstanceHealth",
            "autoscaling:SetInstanceProtection",
            "autoscaling:SuspendProcesses",
            "autoscaling:TerminateInstanceInAutoScalingGroup",
            "autoscaling:UpdateAutoScalingGroup",
            "cloudwatch:DeleteAlarms",
            "cloudwatch:DeleteDashboards",
            "cloudwatch:DeleteInsightRules",
            "cloudwatch:DisableAlarmActions",
            "cloudwatch:DisableInsightRules",
            "cloudwatch:EnableAlarmActions",
            "cloudwatch:EnableInsightRules",
            "cloudwatch:PutDashboard",
            "cloudwatch:PutInsightRule",
            "cloudwatch:PutMetricAlarm",
            "cloudwatch:SetAlarmState",
            "cloudwatch:TagResource",
            "cloudwatch:UntagResource",
            "ec2:AcceptTransitGatewayPeeringAttachment",
            "ec2:AcceptTransitGatewayVpcAttachment",
            "ec2:AcceptVpcEndpointConnections",
            "ec2:AcceptVpcPeeringConnection",
            "ec2:AllocateHosts",
            "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
            "ec2:AssociateClientVpnTargetNetwork",
            "ec2:AssociateIamInstanceProfile",
            "ec2:AssociateTransitGatewayMulticastDomain",
            "ec2:AssociateTransitGatewayRouteTable",
            "ec2:AttachClassicLinkVpc",
            "ec2:AttachVolume",
            "ec2:AuthorizeClientVpnIngress",
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CancelCapacityReservation",
            "ec2:CopySnapshot",
            "ec2:CreateClientVpnEndpoint",
            "ec2:CreateClientVpnRoute",
            "ec2:CreateFlowLogs",
            "ec2:CreateLaunchTemplateVersion",
            "ec2:CreateLocalGatewayRoute",
            "ec2:CreateLocalGatewayRouteTableVpcAssociation",
            "ec2:CreateNetworkInterfacePermission",
            "ec2:CreateRoute",
            "ec2:CreateSnapshot",
            "ec2:CreateSnapshots",
            "ec2:CreateTags",
            "ec2:CreateTrafficMirrorFilter",
            "ec2:CreateTrafficMirrorFilterRule",
            "ec2:CreateTrafficMirrorSession",
            "ec2:CreateTrafficMirrorTarget",
            "ec2:CreateTransitGateway",
            "ec2:CreateTransitGatewayMulticastDomain",
            "ec2:CreateTransitGatewayPeeringAttachment",
            "ec2:CreateTransitGatewayRoute",
            "ec2:CreateTransitGatewayRouteTable",
            "ec2:CreateTransitGatewayVpcAttachment",
            "ec2:CreateVolume",
            "ec2:CreateVpcEndpoint",
            "ec2:CreateVpcEndpointServiceConfiguration",
            "ec2:CreateVpcPeeringConnection",
            "ec2:CreateVpnConnection",
            "ec2:DeleteClientVpnEndpoint",
            "ec2:DeleteClientVpnRoute",
            "ec2:DeleteCustomerGateway",
            "ec2:DeleteDhcpOptions",
            "ec2:DeleteInternetGateway",
            "ec2:DeleteLaunchTemplate",
            "ec2:DeleteLaunchTemplateVersions",
            "ec2:DeleteLocalGatewayRoute",
            "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
            "ec2:DeleteNetworkAcl",
            "ec2:DeleteNetworkAclEntry",
            "ec2:DeleteRoute",
            "ec2:DeleteRouteTable",
            "ec2:DeleteSecurityGroup",
            "ec2:DeleteSnapshot",
            "ec2:DeleteTags",
            "ec2:DeleteTrafficMirrorFilter",
            "ec2:DeleteTrafficMirrorFilterRule",
            "ec2:DeleteTrafficMirrorSession",
            "ec2:DeleteTrafficMirrorTarget",
            "ec2:DeleteTransitGateway",
            "ec2:DeleteTransitGatewayMulticastDomain",
            "ec2:DeleteTransitGatewayPeeringAttachment",
            "ec2:DeleteTransitGatewayRoute",
            "ec2:DeleteTransitGatewayRouteTable",
            "ec2:DeleteTransitGatewayVpcAttachment",
            "ec2:DeleteVolume",
            "ec2:DeleteVpcEndpointServiceConfigurations",
            "ec2:DeleteVpcEndpoints",
            "ec2:DeleteVpcPeeringConnection",
            "ec2:DeregisterTransitGatewayMulticastGroupMembers",
            "ec2:DeregisterTransitGatewayMulticastGroupSources",
            "ec2:DetachClassicLinkVpc",
            "ec2:DetachVolume",
            "ec2:DisableFastSnapshotRestores",
            "ec2:DisableTransitGatewayRouteTablePropagation",
            "ec2:DisableVpcClassicLink",
            "ec2:DisassociateClientVpnTargetNetwork",
            "ec2:DisassociateIamInstanceProfile",
            "ec2:DisassociateTransitGatewayMulticastDomain",
            "ec2:DisassociateTransitGatewayRouteTable",
            "ec2:EnableFastSnapshotRestores",
            "ec2:EnableTransitGatewayRouteTablePropagation",
            "ec2:EnableVpcClassicLink",
            "ec2:ImportClientVpnClientCertificateRevocationList",
            "ec2:ModifyCapacityReservation",
            "ec2:ModifyClientVpnEndpoint",
            "ec2:ModifyInstanceCreditSpecification",
            "ec2:ModifyInstanceEventStartTime",
            "ec2:ModifyLaunchTemplate",
            "ec2:ModifySnapshotAttribute",
            "ec2:ModifyTrafficMirrorFilterNetworkServices",
            "ec2:ModifyTrafficMirrorFilterRule",
            "ec2:ModifyTrafficMirrorSession",
            "ec2:ModifyTransitGatewayVpcAttachment",
            "ec2:ModifyVpcEndpoint",
            "ec2:ModifyVpcEndpointServiceConfiguration",
            "ec2:ModifyVpcEndpointServicePermissions",
            "ec2:ModifyVpnConnection",
            "ec2:ModifyVpnTunnelOptions",
            "ec2:RebootInstances",
            "ec2:RegisterTransitGatewayMulticastGroupMembers",
            "ec2:RegisterTransitGatewayMulticastGroupSources",
            "ec2:RejectTransitGatewayPeeringAttachment",
            "ec2:RejectTransitGatewayVpcAttachment",
            "ec2:RejectVpcEndpointConnections",
            "ec2:RejectVpcPeeringConnection",
            "ec2:ReplaceIamInstanceProfileAssociation",
            "ec2:ReplaceRoute",
            "ec2:ReplaceTransitGatewayRoute",
            "ec2:RevokeClientVpnIngress",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupIngress",
            "ec2:RunInstances",
            "ec2:SendDiagnosticInterrupt",
            "ec2:StartInstances",
            "ec2:StartVpcEndpointServicePrivateDnsVerification",
            "ec2:StopInstances",
            "ec2:TerminateClientVpnConnections",
            "ec2:TerminateInstances",
            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
            "elasticloadbalancing:AddListenerCertificates",
            "elasticloadbalancing:AddTags",
            "elasticloadbalancing:CreateListener",
            "elasticloadbalancing:CreateLoadBalancer",
            "elasticloadbalancing:CreateRule",
            "elasticloadbalancing:CreateTargetGroup",
            "elasticloadbalancing:DeleteListener",
            "elasticloadbalancing:DeleteLoadBalancer",
            "elasticloadbalancing:DeleteRule",
            "elasticloadbalancing:DeleteTargetGroup",
            "elasticloadbalancing:DeregisterTargets",
            "elasticloadbalancing:ModifyListener",
            "elasticloadbalancing:ModifyLoadBalancerAttributes",
            "elasticloadbalancing:ModifyRule",
            "elasticloadbalancing:ModifyTargetGroup",
            "elasticloadbalancing:ModifyTargetGroupAttributes",
            "elasticloadbalancing:RegisterTargets",
            "elasticloadbalancing:RemoveListenerCertificates",
            "elasticloadbalancing:RemoveTags",
            "elasticloadbalancing:SetIpAddressType",
            "elasticloadbalancing:SetRulePriorities",
            "elasticloadbalancing:SetSecurityGroups",
            "elasticloadbalancing:SetSubnets",
            "iam:CreateServiceLinkedRole"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": "ec2:*",
                    "Effect": "Allow",
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "elasticloadbalancing:*",
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "cloudwatch:*",
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "autoscaling:*",
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "iam:CreateServiceLinkedRole",
                    "Resource": "*",
                    "Condition": {
                        "StringEquals": {
                            "iam:AWSServiceName": [
                                "autoscaling.amazonaws.com",
                                "ec2scheduled.amazonaws.com",
                                "elasticloadbalancing.amazonaws.com",
                                "spot.amazonaws.com",
                                "spotfleet.amazonaws.com",
                                "transitgateway.amazonaws.com"
                            ]
                        }
                    }
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "ec2:CreateNetworkInterfacePermission",
            "ec2:DeleteNetworkInterfacePermission",
            "ec2:ModifySnapshotAttribute",
            "ec2:ModifyVpcEndpointServicePermissions",
            "ec2:ResetSnapshotAttribute",
            "iam:CreateServiceLinkedRole"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonRDSFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonRDSFullAccess",
        "ActionsCount": 84,
        "ServicesCount": 4,
        "Services": [
            "cloudwatch",
            "iam",
            "rds",
            "sns"
        ],
        "Actions": [
            "cloudwatch:DeleteAlarms",
            "cloudwatch:PutMetricAlarm",
            "iam:CreateServiceLinkedRole",
            "rds:AddRoleToDBCluster",
            "rds:AddRoleToDBInstance",
            "rds:AddSourceIdentifierToSubscription",
            "rds:AddTagsToResource",
            "rds:ApplyPendingMaintenanceAction",
            "rds:AuthorizeDBSecurityGroupIngress",
            "rds:BacktrackDBCluster",
            "rds:CopyDBClusterParameterGroup",
            "rds:CopyDBClusterSnapshot",
            "rds:CopyDBParameterGroup",
            "rds:CopyDBSnapshot",
            "rds:CopyOptionGroup",
            "rds:CreateDBCluster",
            "rds:CreateDBClusterEndpoint",
            "rds:CreateDBClusterParameterGroup",
            "rds:CreateDBClusterSnapshot",
            "rds:CreateDBInstance",
            "rds:CreateDBInstanceReadReplica",
            "rds:CreateDBParameterGroup",
            "rds:CreateDBSecurityGroup",
            "rds:CreateDBSnapshot",
            "rds:CreateDBSubnetGroup",
            "rds:CreateEventSubscription",
            "rds:CreateGlobalCluster",
            "rds:CreateOptionGroup",
            "rds:DeleteDBCluster",
            "rds:DeleteDBClusterEndpoint",
            "rds:DeleteDBClusterParameterGroup",
            "rds:DeleteDBClusterSnapshot",
            "rds:DeleteDBInstance",
            "rds:DeleteDBParameterGroup",
            "rds:DeleteDBProxy",
            "rds:DeleteDBSecurityGroup",
            "rds:DeleteDBSnapshot",
            "rds:DeleteDBSubnetGroup",
            "rds:DeleteEventSubscription",
            "rds:DeleteGlobalCluster",
            "rds:DeleteOptionGroup",
            "rds:DeregisterDBProxyTargets",
            "rds:FailoverDBCluster",
            "rds:ModifyCurrentDBClusterCapacity",
            "rds:ModifyDBCluster",
            "rds:ModifyDBClusterEndpoint",
            "rds:ModifyDBClusterParameterGroup",
            "rds:ModifyDBClusterSnapshotAttribute",
            "rds:ModifyDBInstance",
            "rds:ModifyDBParameterGroup",
            "rds:ModifyDBProxy",
            "rds:ModifyDBProxyTargetGroup",
            "rds:ModifyDBSnapshot",
            "rds:ModifyDBSnapshotAttribute",
            "rds:ModifyDBSubnetGroup",
            "rds:ModifyEventSubscription",
            "rds:ModifyGlobalCluster",
            "rds:ModifyOptionGroup",
            "rds:PromoteReadReplica",
            "rds:PromoteReadReplicaDBCluster",
            "rds:PurchaseReservedDBInstancesOffering",
            "rds:RebootDBInstance",
            "rds:RegisterDBProxyTargets",
            "rds:RemoveFromGlobalCluster",
            "rds:RemoveRoleFromDBCluster",
            "rds:RemoveRoleFromDBInstance",
            "rds:RemoveSourceIdentifierFromSubscription",
            "rds:RemoveTagsFromResource",
            "rds:ResetDBClusterParameterGroup",
            "rds:ResetDBParameterGroup",
            "rds:RestoreDBClusterFromS3",
            "rds:RestoreDBClusterFromSnapshot",
            "rds:RestoreDBClusterToPointInTime",
            "rds:RestoreDBInstanceFromDBSnapshot",
            "rds:RestoreDBInstanceFromS3",
            "rds:RestoreDBInstanceToPointInTime",
            "rds:RevokeDBSecurityGroupIngress",
            "rds:StartActivityStream",
            "rds:StartDBCluster",
            "rds:StartDBInstance",
            "rds:StopActivityStream",
            "rds:StopDBCluster",
            "rds:StopDBInstance",
            "sns:Publish"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": [
                        "rds:*",
                        "application-autoscaling:DeleteScalingPolicy",
                        "application-autoscaling:DeregisterScalableTarget",
                        "application-autoscaling:DescribeScalableTargets",
                        "application-autoscaling:DescribeScalingActivities",
                        "application-autoscaling:DescribeScalingPolicies",
                        "application-autoscaling:PutScalingPolicy",
                        "application-autoscaling:RegisterScalableTarget",
                        "cloudwatch:DescribeAlarms",
                        "cloudwatch:GetMetricStatistics",
                        "cloudwatch:PutMetricAlarm",
                        "cloudwatch:DeleteAlarms",
                        "ec2:DescribeAccountAttributes",
                        "ec2:DescribeAvailabilityZones",
                        "ec2:DescribeInternetGateways",
                        "ec2:DescribeSecurityGroups",
                        "ec2:DescribeSubnets",
                        "ec2:DescribeVpcAttribute",
                        "ec2:DescribeVpcs",
                        "sns:ListSubscriptions",
                        "sns:ListTopics",
                        "sns:Publish",
                        "logs:DescribeLogStreams",
                        "logs:GetLogEvents"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                {
                    "Action": "pi:*",
                    "Effect": "Allow",
                    "Resource": "arn:aws:pi:*:*:metrics/rds/*"
                },
                {
                    "Action": "iam:CreateServiceLinkedRole",
                    "Effect": "Allow",
                    "Resource": "*",
                    "Condition": {
                        "StringLike": {
                            "iam:AWSServiceName": [
                                "rds.amazonaws.com",
                                "rds.application-autoscaling.amazonaws.com"
                            ]
                        }
                    }
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "rds:AuthorizeDBSecurityGroupIngress",
            "iam:CreateServiceLinkedRole"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonRoute53FullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
        "ActionsCount": 18,
        "ServicesCount": 1,
        "Services": [
            "route53"
        ],
        "Actions": [
            "route53:AssociateVPCWithHostedZone",
            "route53:ChangeResourceRecordSets",
            "route53:ChangeTagsForResource",
            "route53:CreateQueryLoggingConfig",
            "route53:CreateTrafficPolicyInstance",
            "route53:CreateTrafficPolicyVersion",
            "route53:CreateVPCAssociationAuthorization",
            "route53:DeleteHealthCheck",
            "route53:DeleteHostedZone",
            "route53:DeleteQueryLoggingConfig",
            "route53:DeleteReusableDelegationSet",
            "route53:DeleteTrafficPolicy",
            "route53:DeleteTrafficPolicyInstance",
            "route53:DeleteVPCAssociationAuthorization",
            "route53:UpdateHealthCheck",
            "route53:UpdateHostedZoneComment",
            "route53:UpdateTrafficPolicyComment",
            "route53:UpdateTrafficPolicyInstance"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "route53:*",
                        "route53domains:*",
                        "cloudfront:ListDistributions",
                        "elasticloadbalancing:DescribeLoadBalancers",
                        "elasticbeanstalk:DescribeEnvironments",
                        "s3:ListBucket",
                        "s3:GetBucketLocation",
                        "s3:GetBucketWebsite",
                        "ec2:DescribeVpcs",
                        "ec2:DescribeVpcEndpoints",
                        "ec2:DescribeRegions",
                        "sns:ListTopics",
                        "sns:ListSubscriptionsByTopic",
                        "cloudwatch:DescribeAlarms",
                        "cloudwatch:GetMetricStatistics"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "apigateway:GET",
                    "Resource": "arn:aws:apigateway:*::/domainnames"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": []
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonS3FullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
        "ActionsCount": 47,
        "ServicesCount": 1,
        "Services": [
            "s3"
        ],
        "Actions": [
            "s3:AbortMultipartUpload",
            "s3:BypassGovernanceRetention",
            "s3:CreateAccessPoint",
            "s3:CreateBucket",
            "s3:DeleteAccessPoint",
            "s3:DeleteAccessPointPolicy",
            "s3:DeleteBucket",
            "s3:DeleteBucketPolicy",
            "s3:DeleteBucketWebsite",
            "s3:DeleteObject",
            "s3:DeleteObjectTagging",
            "s3:DeleteObjectVersion",
            "s3:DeleteObjectVersionTagging",
            "s3:GetObject",
            "s3:ObjectOwnerOverrideToBucketOwner",
            "s3:PutAccelerateConfiguration",
            "s3:PutAccessPointPolicy",
            "s3:PutAnalyticsConfiguration",
            "s3:PutBucketAcl",
            "s3:PutBucketCORS",
            "s3:PutBucketLogging",
            "s3:PutBucketNotification",
            "s3:PutBucketObjectLockConfiguration",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutBucketRequestPayment",
            "s3:PutBucketTagging",
            "s3:PutBucketVersioning",
            "s3:PutBucketWebsite",
            "s3:PutEncryptionConfiguration",
            "s3:PutInventoryConfiguration",
            "s3:PutLifecycleConfiguration",
            "s3:PutMetricsConfiguration",
            "s3:PutObject",
            "s3:PutObjectAcl",
            "s3:PutObjectLegalHold",
            "s3:PutObjectRetention",
            "s3:PutObjectTagging",
            "s3:PutObjectVersionAcl",
            "s3:PutObjectVersionTagging",
            "s3:PutReplicationConfiguration",
            "s3:ReplicateDelete",
            "s3:ReplicateObject",
            "s3:ReplicateTags",
            "s3:RestoreObject",
            "s3:UpdateJobPriority",
            "s3:UpdateJobStatus"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": "s3:*",
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [
            "s3:GetObject"
        ],
        "PermissionsManagementActions": [
            "s3:BypassGovernanceRetention",
            "s3:DeleteAccessPointPolicy",
            "s3:DeleteBucketPolicy",
            "s3:ObjectOwnerOverrideToBucketOwner",
            "s3:PutAccessPointPolicy",
            "s3:PutAccountPublicAccessBlock",
            "s3:PutBucketAcl",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutObjectAcl",
            "s3:PutObjectVersionAcl"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonS3ReadOnlyAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
        "ActionsCount": 1,
        "ServicesCount": 1,
        "Services": [
            "s3"
        ],
        "Actions": [
            "s3:GetObject"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "s3:Get*",
                        "s3:List*"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [
            "s3:GetObject"
        ],
        "PermissionsManagementActions": []
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonSESFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonSESFullAccess",
        "ActionsCount": 21,
        "ServicesCount": 1,
        "Services": [
            "ses"
        ],
        "Actions": [
            "ses:CreateConfigurationSet",
            "ses:CreateConfigurationSetEventDestination",
            "ses:CreateDedicatedIpPool",
            "ses:CreateDeliverabilityTestReport",
            "ses:CreateEmailIdentity",
            "ses:DeleteConfigurationSet",
            "ses:DeleteConfigurationSetEventDestination",
            "ses:DeleteDedicatedIpPool",
            "ses:DeleteEmailIdentity",
            "ses:PutConfigurationSetDeliveryOptions",
            "ses:PutConfigurationSetReputationOptions",
            "ses:PutConfigurationSetSendingOptions",
            "ses:PutConfigurationSetTrackingOptions",
            "ses:PutDedicatedIpInPool",
            "ses:PutEmailIdentityDkimAttributes",
            "ses:PutEmailIdentityFeedbackAttributes",
            "ses:PutEmailIdentityMailFromAttributes",
            "ses:SendEmail",
            "ses:TagResource",
            "ses:UntagResource",
            "ses:UpdateConfigurationSetEventDestination"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "ses:*"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": []
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonSQSFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonSQSFullAccess",
        "ActionsCount": 14,
        "ServicesCount": 1,
        "Services": [
            "sqs"
        ],
        "Actions": [
            "sqs:AddPermission",
            "sqs:ChangeMessageVisibility",
            "sqs:ChangeMessageVisibilityBatch",
            "sqs:CreateQueue",
            "sqs:DeleteMessage",
            "sqs:DeleteMessageBatch",
            "sqs:DeleteQueue",
            "sqs:PurgeQueue",
            "sqs:RemovePermission",
            "sqs:SendMessage",
            "sqs:SendMessageBatch",
            "sqs:SetQueueAttributes",
            "sqs:TagQueue",
            "sqs:UntagQueue"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": [
                        "sqs:*"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "sqs:AddPermission",
            "sqs:CreateQueue",
            "sqs:RemovePermission",
            "sqs:SetQueueAttributes"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "AmazonVPCFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/AmazonVPCFullAccess",
        "ActionsCount": 38,
        "ServicesCount": 1,
        "Services": [
            "ec2"
        ],
        "Actions": [
            "ec2:AcceptVpcEndpointConnections",
            "ec2:AcceptVpcPeeringConnection",
            "ec2:AttachClassicLinkVpc",
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CreateFlowLogs",
            "ec2:CreateNetworkInterfacePermission",
            "ec2:CreateRoute",
            "ec2:CreateTags",
            "ec2:CreateVpcEndpoint",
            "ec2:CreateVpcEndpointServiceConfiguration",
            "ec2:CreateVpcPeeringConnection",
            "ec2:CreateVpnConnection",
            "ec2:DeleteCustomerGateway",
            "ec2:DeleteDhcpOptions",
            "ec2:DeleteInternetGateway",
            "ec2:DeleteNetworkAcl",
            "ec2:DeleteNetworkAclEntry",
            "ec2:DeleteRoute",
            "ec2:DeleteRouteTable",
            "ec2:DeleteSecurityGroup",
            "ec2:DeleteTags",
            "ec2:DeleteVpcEndpointServiceConfigurations",
            "ec2:DeleteVpcEndpoints",
            "ec2:DeleteVpcPeeringConnection",
            "ec2:DetachClassicLinkVpc",
            "ec2:DisableVpcClassicLink",
            "ec2:EnableVpcClassicLink",
            "ec2:ModifyVpcEndpoint",
            "ec2:ModifyVpcEndpointServiceConfiguration",
            "ec2:ModifyVpcEndpointServicePermissions",
            "ec2:RejectVpcEndpointConnections",
            "ec2:RejectVpcPeeringConnection",
            "ec2:ReplaceRoute",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupIngress",
            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
            "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "ec2:AcceptVpcPeeringConnection",
                        "ec2:AcceptVpcEndpointConnections",
                        "ec2:AllocateAddress",
                        "ec2:AssignIpv6Addresses",
                        "ec2:AssignPrivateIpAddresses",
                        "ec2:AssociateAddress",
                        "ec2:AssociateDhcpOptions",
                        "ec2:AssociateRouteTable",
                        "ec2:AssociateSubnetCidrBlock",
                        "ec2:AssociateVpcCidrBlock",
                        "ec2:AttachClassicLinkVpc",
                        "ec2:AttachInternetGateway",
                        "ec2:AttachNetworkInterface",
                        "ec2:AttachVpnGateway",
                        "ec2:AuthorizeSecurityGroupEgress",
                        "ec2:AuthorizeSecurityGroupIngress",
                        "ec2:CreateCustomerGateway",
                        "ec2:CreateDefaultSubnet",
                        "ec2:CreateDefaultVpc",
                        "ec2:CreateDhcpOptions",
                        "ec2:CreateEgressOnlyInternetGateway",
                        "ec2:CreateFlowLogs",
                        "ec2:CreateInternetGateway",
                        "ec2:CreateNatGateway",
                        "ec2:CreateNetworkAcl",
                        "ec2:CreateNetworkAcl",
                        "ec2:CreateNetworkAclEntry",
                        "ec2:CreateNetworkInterface",
                        "ec2:CreateNetworkInterfacePermission",
                        "ec2:CreateRoute",
                        "ec2:CreateRouteTable",
                        "ec2:CreateSecurityGroup",
                        "ec2:CreateSubnet",
                        "ec2:CreateTags",
                        "ec2:CreateVpc",
                        "ec2:CreateVpcEndpoint",
                        "ec2:CreateVpcEndpointConnectionNotification",
                        "ec2:CreateVpcEndpointServiceConfiguration",
                        "ec2:CreateVpcPeeringConnection",
                        "ec2:CreateVpnConnection",
                        "ec2:CreateVpnConnectionRoute",
                        "ec2:CreateVpnGateway",
                        "ec2:DeleteCustomerGateway",
                        "ec2:DeleteDhcpOptions",
                        "ec2:DeleteEgressOnlyInternetGateway",
                        "ec2:DeleteFlowLogs",
                        "ec2:DeleteInternetGateway",
                        "ec2:DeleteNatGateway",
                        "ec2:DeleteNetworkAcl",
                        "ec2:DeleteNetworkAclEntry",
                        "ec2:DeleteNetworkInterface",
                        "ec2:DeleteNetworkInterfacePermission",
                        "ec2:DeleteRoute",
                        "ec2:DeleteRouteTable",
                        "ec2:DeleteSecurityGroup",
                        "ec2:DeleteSubnet",
                        "ec2:DeleteTags",
                        "ec2:DeleteVpc",
                        "ec2:DeleteVpcEndpoints",
                        "ec2:DeleteVpcEndpointConnectionNotifications",
                        "ec2:DeleteVpcEndpointServiceConfigurations",
                        "ec2:DeleteVpcPeeringConnection",
                        "ec2:DeleteVpnConnection",
                        "ec2:DeleteVpnConnectionRoute",
                        "ec2:DeleteVpnGateway",
                        "ec2:DescribeAccountAttributes",
                        "ec2:DescribeAddresses",
                        "ec2:DescribeAvailabilityZones",
                        "ec2:DescribeClassicLinkInstances",
                        "ec2:DescribeCustomerGateways",
                        "ec2:DescribeDhcpOptions",
                        "ec2:DescribeEgressOnlyInternetGateways",
                        "ec2:DescribeFlowLogs",
                        "ec2:DescribeInstances",
                        "ec2:DescribeInternetGateways",
                        "ec2:DescribeKeyPairs",
                        "ec2:DescribeMovingAddresses",
                        "ec2:DescribeNatGateways",
                        "ec2:DescribeNetworkAcls",
                        "ec2:DescribeNetworkInterfaceAttribute",
                        "ec2:DescribeNetworkInterfacePermissions",
                        "ec2:DescribeNetworkInterfaces",
                        "ec2:DescribePrefixLists",
                        "ec2:DescribeRouteTables",
                        "ec2:DescribeSecurityGroupReferences",
                        "ec2:DescribeSecurityGroups",
                        "ec2:DescribeStaleSecurityGroups",
                        "ec2:DescribeSubnets",
                        "ec2:DescribeTags",
                        "ec2:DescribeVpcAttribute",
                        "ec2:DescribeVpcClassicLink",
                        "ec2:DescribeVpcClassicLinkDnsSupport",
                        "ec2:DescribeVpcEndpointConnectionNotifications",
                        "ec2:DescribeVpcEndpointConnections",
                        "ec2:DescribeVpcEndpoints",
                        "ec2:DescribeVpcEndpointServiceConfigurations",
                        "ec2:DescribeVpcEndpointServicePermissions",
                        "ec2:DescribeVpcEndpointServices",
                        "ec2:DescribeVpcPeeringConnections",
                        "ec2:DescribeVpcs",
                        "ec2:DescribeVpnConnections",
                        "ec2:DescribeVpnGateways",
                        "ec2:DetachClassicLinkVpc",
                        "ec2:DetachInternetGateway",
                        "ec2:DetachNetworkInterface",
                        "ec2:DetachVpnGateway",
                        "ec2:DisableVgwRoutePropagation",
                        "ec2:DisableVpcClassicLink",
                        "ec2:DisableVpcClassicLinkDnsSupport",
                        "ec2:DisassociateAddress",
                        "ec2:DisassociateRouteTable",
                        "ec2:DisassociateSubnetCidrBlock",
                        "ec2:DisassociateVpcCidrBlock",
                        "ec2:EnableVgwRoutePropagation",
                        "ec2:EnableVpcClassicLink",
                        "ec2:EnableVpcClassicLinkDnsSupport",
                        "ec2:ModifyNetworkInterfaceAttribute",
                        "ec2:ModifySubnetAttribute",
                        "ec2:ModifyVpcAttribute",
                        "ec2:ModifyVpcEndpoint",
                        "ec2:ModifyVpcEndpointConnectionNotification",
                        "ec2:ModifyVpcEndpointServiceConfiguration",
                        "ec2:ModifyVpcEndpointServicePermissions",
                        "ec2:ModifyVpcPeeringConnectionOptions",
                        "ec2:ModifyVpcTenancy",
                        "ec2:MoveAddressToVpc",
                        "ec2:RejectVpcEndpointConnections",
                        "ec2:RejectVpcPeeringConnection",
                        "ec2:ReleaseAddress",
                        "ec2:ReplaceNetworkAclAssociation",
                        "ec2:ReplaceNetworkAclEntry",
                        "ec2:ReplaceRoute",
                        "ec2:ReplaceRouteTableAssociation",
                        "ec2:ResetNetworkInterfaceAttribute",
                        "ec2:RestoreAddressToClassic",
                        "ec2:RevokeSecurityGroupEgress",
                        "ec2:RevokeSecurityGroupIngress",
                        "ec2:UnassignIpv6Addresses",
                        "ec2:UnassignPrivateIpAddresses",
                        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                        "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "ec2:CreateNetworkInterfacePermission",
            "ec2:DeleteNetworkInterfacePermission",
            "ec2:ModifyVpcEndpointServicePermissions"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "CloudWatchFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/CloudWatchFullAccess",
        "ActionsCount": 38,
        "ServicesCount": 3,
        "Services": [
            "cloudwatch",
            "logs",
            "sns"
        ],
        "Actions": [
            "cloudwatch:DeleteAlarms",
            "cloudwatch:DeleteDashboards",
            "cloudwatch:DeleteInsightRules",
            "cloudwatch:DisableAlarmActions",
            "cloudwatch:DisableInsightRules",
            "cloudwatch:EnableAlarmActions",
            "cloudwatch:EnableInsightRules",
            "cloudwatch:PutDashboard",
            "cloudwatch:PutInsightRule",
            "cloudwatch:PutMetricAlarm",
            "cloudwatch:SetAlarmState",
            "cloudwatch:TagResource",
            "cloudwatch:UntagResource",
            "logs:AssociateKmsKey",
            "logs:CreateExportTask",
            "logs:CreateLogStream",
            "logs:DeleteLogGroup",
            "logs:DeleteLogStream",
            "logs:DeleteMetricFilter",
            "logs:DeleteRetentionPolicy",
            "logs:DeleteSubscriptionFilter",
            "logs:DisassociateKmsKey",
            "logs:PutLogEvents",
            "logs:PutMetricFilter",
            "logs:PutRetentionPolicy",
            "logs:PutSubscriptionFilter",
            "logs:TagLogGroup",
            "logs:UntagLogGroup",
            "sns:AddPermission",
            "sns:ConfirmSubscription",
            "sns:CreateTopic",
            "sns:DeleteTopic",
            "sns:Publish",
            "sns:RemovePermission",
            "sns:SetTopicAttributes",
            "sns:Subscribe",
            "sns:TagResource",
            "sns:UntagResource"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": [
                        "autoscaling:Describe*",
                        "cloudwatch:*",
                        "logs:*",
                        "sns:*",
                        "iam:GetPolicy",
                        "iam:GetPolicyVersion",
                        "iam:GetRole"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": "iam:CreateServiceLinkedRole",
                    "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                    "Condition": {
                        "StringLike": {
                            "iam:AWSServiceName": "events.amazonaws.com"
                        }
                    }
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "logs:DeleteResourcePolicy",
            "logs:PutResourcePolicy",
            "sns:AddPermission",
            "sns:CreateTopic",
            "sns:RemovePermission",
            "sns:SetTopicAttributes"
        ]
    },
    {
        "AccountID": "012345678901",
        "ManagedBy": "Customer",
        "PolicyName": "EC2-IAM-example",
        "Type": "Role",
        "Arn": "arn:aws:iam::012345678901:role/MyRole",
        "ActionsCount": 5,
        "ServicesCount": 2,
        "Services": [
            "ec2",
            "iam"
        ],
        "Actions": [
            "ec2:AssociateIamInstanceProfile",
            "ec2:DisassociateIamInstanceProfile",
            "iam:AddRoleToInstanceProfile",
            "iam:CreateInstanceProfile",
            "iam:PassRole"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "VisualEditor0",
                    "Effect": "Allow",
                    "Action": [
                        "iam:CreateInstanceProfile",
                        "iam:ListInstanceProfilesForRole",
                        "iam:PassRole",
                        "ec2:DescribeIamInstanceProfileAssociations",
                        "iam:GetInstanceProfile",
                        "ec2:DisassociateIamInstanceProfile",
                        "ec2:AssociateIamInstanceProfile",
                        "iam:AddRoleToInstanceProfile"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "ssm.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                }
            ]
        },
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "iam:AddRoleToInstanceProfile",
            "iam:CreateInstanceProfile",
            "iam:PassRole"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "IAMFullAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/IAMFullAccess",
        "ActionsCount": 78,
        "ServicesCount": 1,
        "Services": [
            "iam"
        ],
        "Actions": [
            "iam:AddClientIDToOpenIDConnectProvider",
            "iam:AddRoleToInstanceProfile",
            "iam:AddUserToGroup",
            "iam:AttachGroupPolicy",
            "iam:AttachRolePolicy",
            "iam:AttachUserPolicy",
            "iam:ChangePassword",
            "iam:CreateAccessKey",
            "iam:CreateGroup",
            "iam:CreateInstanceProfile",
            "iam:CreateLoginProfile",
            "iam:CreateOpenIDConnectProvider",
            "iam:CreatePolicy",
            "iam:CreatePolicyVersion",
            "iam:CreateRole",
            "iam:CreateSAMLProvider",
            "iam:CreateServiceLinkedRole",
            "iam:CreateServiceSpecificCredential",
            "iam:CreateUser",
            "iam:CreateVirtualMFADevice",
            "iam:DeactivateMFADevice",
            "iam:DeleteAccessKey",
            "iam:DeleteGroup",
            "iam:DeleteGroupPolicy",
            "iam:DeleteInstanceProfile",
            "iam:DeleteLoginProfile",
            "iam:DeleteOpenIDConnectProvider",
            "iam:DeletePolicy",
            "iam:DeletePolicyVersion",
            "iam:DeleteRole",
            "iam:DeleteRolePermissionsBoundary",
            "iam:DeleteRolePolicy",
            "iam:DeleteSAMLProvider",
            "iam:DeleteSSHPublicKey",
            "iam:DeleteServerCertificate",
            "iam:DeleteServiceLinkedRole",
            "iam:DeleteServiceSpecificCredential",
            "iam:DeleteSigningCertificate",
            "iam:DeleteUser",
            "iam:DeleteUserPermissionsBoundary",
            "iam:DeleteUserPolicy",
            "iam:DeleteVirtualMFADevice",
            "iam:DetachGroupPolicy",
            "iam:DetachRolePolicy",
            "iam:DetachUserPolicy",
            "iam:EnableMFADevice",
            "iam:PassRole",
            "iam:PutGroupPolicy",
            "iam:PutRolePermissionsBoundary",
            "iam:PutRolePolicy",
            "iam:PutUserPermissionsBoundary",
            "iam:PutUserPolicy",
            "iam:RemoveClientIDFromOpenIDConnectProvider",
            "iam:RemoveRoleFromInstanceProfile",
            "iam:RemoveUserFromGroup",
            "iam:ResetServiceSpecificCredential",
            "iam:ResyncMFADevice",
            "iam:SetDefaultPolicyVersion",
            "iam:TagRole",
            "iam:TagUser",
            "iam:UntagRole",
            "iam:UntagUser",
            "iam:UpdateAccessKey",
            "iam:UpdateAssumeRolePolicy",
            "iam:UpdateGroup",
            "iam:UpdateLoginProfile",
            "iam:UpdateOpenIDConnectProviderThumbprint",
            "iam:UpdateRole",
            "iam:UpdateRoleDescription",
            "iam:UpdateSAMLProvider",
            "iam:UpdateSSHPublicKey",
            "iam:UpdateServerCertificate",
            "iam:UpdateServiceSpecificCredential",
            "iam:UpdateSigningCertificate",
            "iam:UpdateUser",
            "iam:UploadSSHPublicKey",
            "iam:UploadServerCertificate",
            "iam:UploadSigningCertificate"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "iam:*",
                        "organizations:DescribeAccount",
                        "organizations:DescribeOrganization",
                        "organizations:DescribeOrganizationalUnit",
                        "organizations:DescribePolicy",
                        "organizations:ListChildren",
                        "organizations:ListParents",
                        "organizations:ListPoliciesForTarget",
                        "organizations:ListRoots",
                        "organizations:ListPolicies",
                        "organizations:ListTargetsForPolicy"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [
            {
                "type": "CreateAccessKey",
                "actions": [
                    "iam:createaccesskey"
                ]
            },
            {
                "type": "CreateLoginProfile",
                "actions": [
                    "iam:createloginprofile"
                ]
            },
            {
                "type": "UpdateLoginProfile",
                "actions": [
                    "iam:updateloginprofile"
                ]
            },
            {
                "type": "CreateNewPolicyVersion",
                "actions": [
                    "iam:createpolicyversion"
                ]
            },
            {
                "type": "SetExistingDefaultPolicyVersion",
                "actions": [
                    "iam:setdefaultpolicyversion"
                ]
            },
            {
                "type": "AttachUserPolicy",
                "actions": [
                    "iam:attachuserpolicy"
                ]
            },
            {
                "type": "AttachGroupPolicy",
                "actions": [
                    "iam:attachgrouppolicy"
                ]
            },
            {
                "type": "PutUserPolicy",
                "actions": [
                    "iam:putuserpolicy"
                ]
            },
            {
                "type": "PutGroupPolicy",
                "actions": [
                    "iam:putgrouppolicy"
                ]
            },
            {
                "type": "AddUserToGroup",
                "actions": [
                    "iam:addusertogroup"
                ]
            }
        ],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "iam:AddClientIDToOpenIDConnectProvider",
            "iam:AddRoleToInstanceProfile",
            "iam:AddUserToGroup",
            "iam:AttachGroupPolicy",
            "iam:AttachRolePolicy",
            "iam:AttachUserPolicy",
            "iam:ChangePassword",
            "iam:CreateAccessKey",
            "iam:CreateAccountAlias",
            "iam:CreateGroup",
            "iam:CreateInstanceProfile",
            "iam:CreateLoginProfile",
            "iam:CreateOpenIDConnectProvider",
            "iam:CreatePolicy",
            "iam:CreatePolicyVersion",
            "iam:CreateRole",
            "iam:CreateSAMLProvider",
            "iam:CreateServiceLinkedRole",
            "iam:CreateServiceSpecificCredential",
            "iam:CreateUser",
            "iam:CreateVirtualMFADevice",
            "iam:DeactivateMFADevice",
            "iam:DeleteAccessKey",
            "iam:DeleteAccountAlias",
            "iam:DeleteAccountPasswordPolicy",
            "iam:DeleteGroup",
            "iam:DeleteGroupPolicy",
            "iam:DeleteInstanceProfile",
            "iam:DeleteLoginProfile",
            "iam:DeleteOpenIDConnectProvider",
            "iam:DeletePolicy",
            "iam:DeletePolicyVersion",
            "iam:DeleteRole",
            "iam:DeleteRolePermissionsBoundary",
            "iam:DeleteRolePolicy",
            "iam:DeleteSAMLProvider",
            "iam:DeleteSSHPublicKey",
            "iam:DeleteServerCertificate",
            "iam:DeleteServiceLinkedRole",
            "iam:DeleteServiceSpecificCredential",
            "iam:DeleteSigningCertificate",
            "iam:DeleteUser",
            "iam:DeleteUserPermissionsBoundary",
            "iam:DeleteUserPolicy",
            "iam:DeleteVirtualMFADevice",
            "iam:DetachGroupPolicy",
            "iam:DetachRolePolicy",
            "iam:DetachUserPolicy",
            "iam:EnableMFADevice",
            "iam:PassRole",
            "iam:PutGroupPolicy",
            "iam:PutRolePermissionsBoundary",
            "iam:PutRolePolicy",
            "iam:PutUserPermissionsBoundary",
            "iam:PutUserPolicy",
            "iam:RemoveClientIDFromOpenIDConnectProvider",
            "iam:RemoveRoleFromInstanceProfile",
            "iam:RemoveUserFromGroup",
            "iam:ResetServiceSpecificCredential",
            "iam:ResyncMFADevice",
            "iam:SetDefaultPolicyVersion",
            "iam:SetSecurityTokenServicePreferences",
            "iam:UpdateAccessKey",
            "iam:UpdateAccountPasswordPolicy",
            "iam:UpdateAssumeRolePolicy",
            "iam:UpdateGroup",
            "iam:UpdateLoginProfile",
            "iam:UpdateOpenIDConnectProviderThumbprint",
            "iam:UpdateRole",
            "iam:UpdateRoleDescription",
            "iam:UpdateSAMLProvider",
            "iam:UpdateSSHPublicKey",
            "iam:UpdateServerCertificate",
            "iam:UpdateServiceSpecificCredential",
            "iam:UpdateSigningCertificate",
            "iam:UpdateUser",
            "iam:UploadSSHPublicKey",
            "iam:UploadServerCertificate",
            "iam:UploadSigningCertificate"
        ]
    },
    {
        "AccountID": "012345678901",
        "ManagedBy": "Customer",
        "PolicyName": "InsecurePolicy",
        "Type": "Policy",
        "Arn": "arn:aws:iam::012345678901:policy/InsecurePolicy",
        "ActionsCount": 2,
        "ServicesCount": 1,
        "Services": [
            "s3"
        ],
        "Actions": [
            "s3:PutObject",
            "s3:PutObjectAcl"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "VisualEditor0",
                    "Effect": "Allow",
                    "Action": [
                        "s3:PutObject",
                        "s3:PutObjectAcl"
                    ],
                    "Resource": [
                        "*"
                    ]
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "s3:PutObjectAcl"
        ]
    },
    {
        "AccountID": "012345678901",
        "ManagedBy": "Customer",
        "PolicyName": "InsecureUserPolicy",
        "Type": "User",
        "Arn": "arn:aws:iam::012345678901:user/userwithlotsofpermissions",
        "ActionsCount": 3,
        "ServicesCount": 1,
        "Services": [
            "s3"
        ],
        "Actions": [
            "s3:PutObject",
            "s3:PutObjectAcl",
            "s3:GetObject"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "VisualEditor0",
                    "Effect": "Allow",
                    "Action": [
                        "s3:PutObject",
                        "s3:PutObjectAcl",
                        "s3:GetObject"
                    ],
                    "Resource": [
                        "*"
                    ]
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [
            "s3:GetObject"
        ],
        "PermissionsManagementActions": [
            "s3:PutObjectAcl"
        ]
    },
    {
        "AccountID": "012345678901",
        "ManagedBy": "Customer",
        "PolicyName": "MyOtherRolePolicy",
        "Type": "Role",
        "Arn": "arn:aws:iam::012345678901:role/MyOtherRole",
        "ActionsCount": 5,
        "ServicesCount": 2,
        "Services": [
            "ec2",
            "iam"
        ],
        "Actions": [
            "ec2:AssociateIamInstanceProfile",
            "ec2:DisassociateIamInstanceProfile",
            "iam:AddRoleToInstanceProfile",
            "iam:CreateInstanceProfile",
            "iam:PassRole"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "VisualEditor0",
                    "Effect": "Allow",
                    "Action": [
                        "iam:CreateInstanceProfile",
                        "iam:ListInstanceProfilesForRole",
                        "iam:PassRole",
                        "ec2:DescribeIamInstanceProfileAssociations",
                        "iam:GetInstanceProfile",
                        "ec2:DisassociateIamInstanceProfile",
                        "ec2:AssociateIamInstanceProfile",
                        "iam:AddRoleToInstanceProfile"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "ec2.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                }
            ]
        },
        "AssumableByComputeService": [
            "ec2"
        ],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [],
        "PermissionsManagementActions": [
            "iam:AddRoleToInstanceProfile",
            "iam:CreateInstanceProfile",
            "iam:PassRole"
        ]
    },
    {
        "AccountID": "012345678901",
        "ManagedBy": "Customer",
        "PolicyName": "OverprivilegedEC2",
        "Type": "Role",
        "Arn": "arn:aws:iam::012345678901:role/OverprivilegedEC2",
        "ActionsCount": 3,
        "ServicesCount": 3,
        "Services": [
            "iam",
            "s3",
            "secretsmanager"
        ],
        "Actions": [
            "iam:CreateAccessKey",
            "s3:GetObject",
            "secretsmanager:GetSecretValue"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "VisualEditor0",
                    "Effect": "Allow",
                    "Action": [
                        "secretsmanager:GetSecretValue",
                        "s3:GetObject",
                        "iam:CreateAccessKey"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "ec2.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                }
            ]
        },
        "AssumableByComputeService": [
            "ec2"
        ],
        "PrivilegeEscalation": [
            {
                "type": "CreateAccessKey",
                "actions": [
                    "iam:createaccesskey"
                ]
            }
        ],
        "DataExfiltrationActions": [
            "s3:GetObject",
            "secretsmanager:GetSecretValue"
        ],
        "PermissionsManagementActions": [
            "iam:CreateAccessKey"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "PowerUserAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/PowerUserAccess",
        "ActionsCount": 2766,
        "ServicesCount": 158,
        "Services": [
            "a4b",
            "access-analyzer",
            "acm",
            "acm-pca",
            "amplify",
            "apigateway",
            "appconfig",
            "appmesh",
            "appmesh-preview",
            "appstream",
            "appsync",
            "artifact",
            "athena",
            "autoscaling",
            "backup",
            "batch",
            "budgets",
            "cassandra",
            "cloud9",
            "clouddirectory",
            "cloudformation",
            "cloudfront",
            "cloudhsm",
            "cloudsearch",
            "cloudtrail",
            "cloudwatch",
            "codebuild",
            "codecommit",
            "codedeploy",
            "codeguru-profiler",
            "codeguru-reviewer",
            "codepipeline",
            "codestar",
            "codestar-notifications",
            "cognito-identity",
            "cognito-idp",
            "cognito-sync",
            "comprehend",
            "config",
            "connect",
            "cur",
            "dataexchange",
            "datasync",
            "dax",
            "deepcomposer",
            "deeplens",
            "deepracer",
            "detective",
            "devicefarm",
            "directconnect",
            "dlm",
            "dms",
            "ds",
            "dynamodb",
            "ec2",
            "ec2-instance-connect",
            "ecr",
            "ecs",
            "eks",
            "elastic-inference",
            "elasticbeanstalk",
            "elasticfilesystem",
            "elasticloadbalancing",
            "elasticmapreduce",
            "elastictranscoder",
            "es",
            "events",
            "execute-api",
            "firehose",
            "fms",
            "forecast",
            "freertos",
            "fsx",
            "gamelift",
            "glacier",
            "globalaccelerator",
            "glue",
            "greengrass",
            "groundstation",
            "guardduty",
            "iam",
            "imagebuilder",
            "iot",
            "iot1click",
            "iotanalytics",
            "iotevents",
            "iotsitewise",
            "iotthingsgraph",
            "kafka",
            "kendra",
            "kinesis",
            "kinesisanalytics",
            "kinesisvideo",
            "kms",
            "lambda",
            "lex",
            "license-manager",
            "lightsail",
            "logs",
            "machinelearning",
            "managedblockchain",
            "mediaconvert",
            "medialive",
            "mediapackage",
            "mediapackage-vod",
            "mediatailor",
            "mgh",
            "mobilehub",
            "mobiletargeting",
            "mq",
            "neptune-db",
            "networkmanager",
            "opsworks",
            "personalize",
            "polly",
            "qldb",
            "quicksight",
            "ram",
            "rds",
            "rds-db",
            "redshift",
            "rekognition",
            "resource-groups",
            "robomaker",
            "route53",
            "route53resolver",
            "s3",
            "sagemaker",
            "savingsplans",
            "schemas",
            "sdb",
            "secretsmanager",
            "securityhub",
            "serverlessrepo",
            "servicecatalog",
            "servicediscovery",
            "servicequotas",
            "ses",
            "shield",
            "signer",
            "sns",
            "sqs",
            "ssm",
            "states",
            "storagegateway",
            "sts",
            "swf",
            "synthetics",
            "transfer",
            "trustedadvisor",
            "waf",
            "waf-regional",
            "wafv2",
            "wellarchitected",
            "worklink",
            "workmail",
            "workspaces",
            "xray"
        ],
        "Actions": [
            "a4b:AssociateContactWithAddressBook",
            "a4b:AssociateDeviceWithRoom",
            "a4b:AssociateSkillGroupWithRoom",
            "a4b:AssociateSkillWithSkillGroup",
            "a4b:CreateRoom",
            "a4b:CreateUser",
            "a4b:DeleteAddressBook",
            "a4b:DeleteBusinessReportSchedule",
            "a4b:DeleteConferenceProvider",
            "a4b:DeleteContact",
            "a4b:DeleteDevice",
            "a4b:DeleteProfile",
            "a4b:DeleteRoom",
            "a4b:DeleteRoomSkillParameter",
            "a4b:DeleteSkillAuthorization",
            "a4b:DeleteSkillGroup",
            "a4b:DeleteUser",
            "a4b:DisassociateContactFromAddressBook",
            "a4b:DisassociateDeviceFromRoom",
            "a4b:DisassociateSkillFromSkillGroup",
            "a4b:DisassociateSkillFromUsers",
            "a4b:DisassociateSkillGroupFromRoom",
            "a4b:ForgetSmartHomeAppliances",
            "a4b:PutRoomSkillParameter",
            "a4b:PutSkillAuthorization",
            "a4b:RevokeInvitation",
            "a4b:SendInvitation",
            "a4b:TagResource",
            "a4b:UntagResource",
            "a4b:UpdateAddressBook",
            "a4b:UpdateBusinessReportSchedule",
            "a4b:UpdateConferenceProvider",
            "a4b:UpdateContact",
            "a4b:UpdateDevice",
            "a4b:UpdateProfile",
            "a4b:UpdateRoom",
            "a4b:UpdateSkillGroup",
            "access-analyzer:CreateAnalyzer",
            "access-analyzer:CreateArchiveRule",
            "access-analyzer:DeleteAnalyzer",
            "access-analyzer:DeleteArchiveRule",
            "access-analyzer:TagResource",
            "access-analyzer:UntagResource",
            "access-analyzer:UpdateArchiveRule",
            "acm-pca:CreateCertificateAuthorityAuditReport",
            "acm-pca:CreatePermission",
            "acm-pca:DeleteCertificateAuthority",
            "acm-pca:DeletePermission",
            "acm-pca:ImportCertificateAuthorityCertificate",
            "acm-pca:IssueCertificate",
            "acm-pca:RestoreCertificateAuthority",
            "acm-pca:RevokeCertificate",
            "acm-pca:TagCertificateAuthority",
            "acm-pca:UntagCertificateAuthority",
            "acm-pca:UpdateCertificateAuthority",
            "acm:AddTagsToCertificate",
            "acm:DeleteCertificate",
            "acm:ImportCertificate",
            "acm:RemoveTagsFromCertificate",
            "acm:RenewCertificate",
            "acm:ResendValidationEmail",
            "acm:UpdateCertificateOptions",
            "amplify:CreateApp",
            "amplify:CreateBackendEnvironment",
            "amplify:CreateBranch",
            "amplify:CreateDeployment",
            "amplify:CreateDomainAssociation",
            "amplify:CreateWebHook",
            "amplify:DeleteApp",
            "amplify:DeleteBackendEnvironment",
            "amplify:DeleteBranch",
            "amplify:DeleteDomainAssociation",
            "amplify:DeleteJob",
            "amplify:DeleteWebHook",
            "amplify:GenerateAccessLogs",
            "amplify:StartDeployment",
            "amplify:StartJob",
            "amplify:StopJob",
            "amplify:TagResource",
            "amplify:UntagResource",
            "amplify:UpdateApp",
            "amplify:UpdateBranch",
            "amplify:UpdateDomainAssociation",
            "amplify:UpdateWebHook",
            "apigateway:DELETE",
            "apigateway:PATCH",
            "apigateway:POST",
            "apigateway:PUT",
            "apigateway:SetWebACL",
            "apigateway:UpdateRestApiPolicy",
            "appconfig:CreateApplication",
            "appconfig:CreateConfigurationProfile",
            "appconfig:CreateDeploymentStrategy",
            "appconfig:CreateEnvironment",
            "appconfig:DeleteApplication",
            "appconfig:DeleteConfigurationProfile",
            "appconfig:DeleteDeploymentStrategy",
            "appconfig:DeleteEnvironment",
            "appconfig:StartDeployment",
            "appconfig:StopDeployment",
            "appconfig:TagResource",
            "appconfig:UntagResource",
            "appconfig:UpdateApplication",
            "appconfig:UpdateConfigurationProfile",
            "appconfig:UpdateDeploymentStrategy",
            "appconfig:UpdateEnvironment",
            "appconfig:ValidateConfiguration",
            "appmesh-preview:CreateMesh",
            "appmesh-preview:CreateRoute",
            "appmesh-preview:CreateVirtualNode",
            "appmesh-preview:CreateVirtualRouter",
            "appmesh-preview:CreateVirtualService",
            "appmesh-preview:DeleteMesh",
            "appmesh-preview:DeleteRoute",
            "appmesh-preview:DeleteVirtualNode",
            "appmesh-preview:DeleteVirtualRouter",
            "appmesh-preview:DeleteVirtualService",
            "appmesh-preview:UpdateMesh",
            "appmesh-preview:UpdateRoute",
            "appmesh-preview:UpdateVirtualNode",
            "appmesh-preview:UpdateVirtualRouter",
            "appmesh-preview:UpdateVirtualService",
            "appmesh:CreateMesh",
            "appmesh:CreateRoute",
            "appmesh:CreateVirtualNode",
            "appmesh:CreateVirtualRouter",
            "appmesh:CreateVirtualService",
            "appmesh:DeleteMesh",
            "appmesh:DeleteRoute",
            "appmesh:DeleteVirtualNode",
            "appmesh:DeleteVirtualRouter",
            "appmesh:DeleteVirtualService",
            "appmesh:TagResource",
            "appmesh:UntagResource",
            "appmesh:UpdateMesh",
            "appmesh:UpdateRoute",
            "appmesh:UpdateVirtualNode",
            "appmesh:UpdateVirtualRouter",
            "appmesh:UpdateVirtualService",
            "appstream:AssociateFleet",
            "appstream:BatchAssociateUserStack",
            "appstream:BatchDisassociateUserStack",
            "appstream:CopyImage",
            "appstream:CreateFleet",
            "appstream:CreateImageBuilder",
            "appstream:CreateImageBuilderStreamingURL",
            "appstream:CreateStack",
            "appstream:CreateStreamingURL",
            "appstream:DeleteFleet",
            "appstream:DeleteImage",
            "appstream:DeleteImageBuilder",
            "appstream:DeleteImagePermissions",
            "appstream:DeleteStack",
            "appstream:DisassociateFleet",
            "appstream:StartFleet",
            "appstream:StartImageBuilder",
            "appstream:StopFleet",
            "appstream:StopImageBuilder",
            "appstream:Stream",
            "appstream:TagResource",
            "appstream:UntagResource",
            "appstream:UpdateFleet",
            "appstream:UpdateImagePermissions",
            "appstream:UpdateStack",
            "appsync:DeleteGraphqlApi",
            "appsync:GraphQL",
            "appsync:TagResource",
            "appsync:UntagResource",
            "appsync:UpdateGraphqlApi",
            "artifact:AcceptAgreement",
            "artifact:TerminateAgreement",
            "athena:CancelQueryExecution",
            "athena:CreateNamedQuery",
            "athena:CreateWorkGroup",
            "athena:DeleteNamedQuery",
            "athena:DeleteWorkGroup",
            "athena:StartQueryExecution",
            "athena:StopQueryExecution",
            "athena:TagResource",
            "athena:UntagResource",
            "athena:UpdateWorkGroup",
            "autoscaling:AttachInstances",
            "autoscaling:AttachLoadBalancerTargetGroups",
            "autoscaling:AttachLoadBalancers",
            "autoscaling:BatchDeleteScheduledAction",
            "autoscaling:BatchPutScheduledUpdateGroupAction",
            "autoscaling:CompleteLifecycleAction",
            "autoscaling:CreateAutoScalingGroup",
            "autoscaling:CreateLaunchConfiguration",
            "autoscaling:CreateOrUpdateTags",
            "autoscaling:DeleteAutoScalingGroup",
            "autoscaling:DeleteLaunchConfiguration",
            "autoscaling:DeleteLifecycleHook",
            "autoscaling:DeleteNotificationConfiguration",
            "autoscaling:DeletePolicy",
            "autoscaling:DeleteScheduledAction",
            "autoscaling:DeleteTags",
            "autoscaling:DetachInstances",
            "autoscaling:DetachLoadBalancerTargetGroups",
            "autoscaling:DetachLoadBalancers",
            "autoscaling:DisableMetricsCollection",
            "autoscaling:EnableMetricsCollection",
            "autoscaling:EnterStandby",
            "autoscaling:ExecutePolicy",
            "autoscaling:ExitStandby",
            "autoscaling:PutLifecycleHook",
            "autoscaling:PutNotificationConfiguration",
            "autoscaling:PutScalingPolicy",
            "autoscaling:PutScheduledUpdateGroupAction",
            "autoscaling:RecordLifecycleActionHeartbeat",
            "autoscaling:ResumeProcesses",
            "autoscaling:SetDesiredCapacity",
            "autoscaling:SetInstanceHealth",
            "autoscaling:SetInstanceProtection",
            "autoscaling:SuspendProcesses",
            "autoscaling:TerminateInstanceInAutoScalingGroup",
            "autoscaling:UpdateAutoScalingGroup",
            "backup:CreateBackupPlan",
            "backup:CreateBackupSelection",
            "backup:CreateBackupVault",
            "backup:DeleteBackupPlan",
            "backup:DeleteBackupSelection",
            "backup:DeleteBackupVault",
            "backup:DeleteBackupVaultAccessPolicy",
            "backup:DeleteBackupVaultNotifications",
            "backup:DeleteRecoveryPoint",
            "backup:PutBackupVaultAccessPolicy",
            "backup:PutBackupVaultNotifications",
            "backup:StartBackupJob",
            "backup:StartCopyJob",
            "backup:StartRestoreJob",
            "backup:UpdateBackupPlan",
            "backup:UpdateRecoveryPointLifecycle",
            "batch:DeregisterJobDefinition",
            "batch:RegisterJobDefinition",
            "batch:SubmitJob",
            "budgets:ModifyBudget",
            "cassandra:Alter",
            "cassandra:Create",
            "cassandra:Drop",
            "cassandra:Modify",
            "cassandra:TagResource",
            "cassandra:UntagResource",
            "cloud9:CreateEnvironmentMembership",
            "cloud9:DeleteEnvironment",
            "cloud9:DeleteEnvironmentMembership",
            "cloud9:TagResource",
            "cloud9:UntagResource",
            "cloud9:UpdateEnvironment",
            "cloud9:UpdateEnvironmentMembership",
            "clouddirectory:AddFacetToObject",
            "clouddirectory:ApplySchema",
            "clouddirectory:AttachObject",
            "clouddirectory:AttachPolicy",
            "clouddirectory:AttachToIndex",
            "clouddirectory:AttachTypedLink",
            "clouddirectory:BatchWrite",
            "clouddirectory:CreateDirectory",
            "clouddirectory:CreateFacet",
            "clouddirectory:CreateIndex",
            "clouddirectory:CreateObject",
            "clouddirectory:CreateTypedLinkFacet",
            "clouddirectory:DeleteDirectory",
            "clouddirectory:DeleteFacet",
            "clouddirectory:DeleteObject",
            "clouddirectory:DeleteSchema",
            "clouddirectory:DeleteTypedLinkFacet",
            "clouddirectory:DetachFromIndex",
            "clouddirectory:DetachObject",
            "clouddirectory:DetachPolicy",
            "clouddirectory:DetachTypedLink",
            "clouddirectory:DisableDirectory",
            "clouddirectory:EnableDirectory",
            "clouddirectory:PublishSchema",
            "clouddirectory:RemoveFacetFromObject",
            "clouddirectory:TagResource",
            "clouddirectory:UntagResource",
            "clouddirectory:UpdateFacet",
            "clouddirectory:UpdateLinkAttributes",
            "clouddirectory:UpdateObjectAttributes",
            "clouddirectory:UpdateSchema",
            "clouddirectory:UpdateTypedLinkFacet",
            "cloudformation:CancelUpdateStack",
            "cloudformation:ContinueUpdateRollback",
            "cloudformation:CreateChangeSet",
            "cloudformation:CreateStack",
            "cloudformation:CreateStackInstances",
            "cloudformation:DeleteChangeSet",
            "cloudformation:DeleteStack",
            "cloudformation:DeleteStackInstances",
            "cloudformation:DeleteStackSet",
            "cloudformation:ExecuteChangeSet",
            "cloudformation:SetStackPolicy",
            "cloudformation:SignalResource",
            "cloudformation:StopStackSetOperation",
            "cloudformation:TagResource",
            "cloudformation:UntagResource",
            "cloudformation:UpdateStack",
            "cloudformation:UpdateStackInstances",
            "cloudformation:UpdateStackSet",
            "cloudformation:UpdateTerminationProtection",
            "cloudfront:CreateCloudFrontOriginAccessIdentity",
            "cloudfront:CreateDistribution",
            "cloudfront:CreateDistributionWithTags",
            "cloudfront:CreateInvalidation",
            "cloudfront:CreateStreamingDistribution",
            "cloudfront:CreateStreamingDistributionWithTags",
            "cloudfront:DeleteCloudFrontOriginAccessIdentity",
            "cloudfront:DeleteDistribution",
            "cloudfront:DeleteStreamingDistribution",
            "cloudfront:TagResource",
            "cloudfront:UntagResource",
            "cloudfront:UpdateCloudFrontOriginAccessIdentity",
            "cloudfront:UpdateDistribution",
            "cloudfront:UpdateStreamingDistribution",
            "cloudhsm:CopyBackupToRegion",
            "cloudhsm:CreateCluster",
            "cloudhsm:CreateHsm",
            "cloudhsm:DeleteBackup",
            "cloudhsm:DeleteCluster",
            "cloudhsm:InitializeCluster",
            "cloudhsm:RestoreBackup",
            "cloudhsm:TagResource",
            "cloudhsm:UntagResource",
            "cloudsearch:AddTags",
            "cloudsearch:BuildSuggesters",
            "cloudsearch:CreateDomain",
            "cloudsearch:DefineAnalysisScheme",
            "cloudsearch:DefineExpression",
            "cloudsearch:DefineIndexField",
            "cloudsearch:DefineSuggester",
            "cloudsearch:DeleteAnalysisScheme",
            "cloudsearch:DeleteDomain",
            "cloudsearch:DeleteExpression",
            "cloudsearch:DeleteIndexField",
            "cloudsearch:DeleteSuggester",
            "cloudsearch:IndexDocuments",
            "cloudsearch:RemoveTags",
            "cloudsearch:UpdateAvailabilityOptions",
            "cloudsearch:UpdateDomainEndpointOptions",
            "cloudsearch:UpdateScalingParameters",
            "cloudsearch:UpdateServiceAccessPolicies",
            "cloudsearch:document",
            "cloudtrail:AddTags",
            "cloudtrail:CreateTrail",
            "cloudtrail:DeleteTrail",
            "cloudtrail:PutEventSelectors",
            "cloudtrail:PutInsightSelectors",
            "cloudtrail:RemoveTags",
            "cloudtrail:StartLogging",
            "cloudtrail:StopLogging",
            "cloudtrail:UpdateTrail",
            "cloudwatch:DeleteAlarms",
            "cloudwatch:DeleteDashboards",
            "cloudwatch:DeleteInsightRules",
            "cloudwatch:DisableAlarmActions",
            "cloudwatch:DisableInsightRules",
            "cloudwatch:EnableAlarmActions",
            "cloudwatch:EnableInsightRules",
            "cloudwatch:PutDashboard",
            "cloudwatch:PutInsightRule",
            "cloudwatch:PutMetricAlarm",
            "cloudwatch:SetAlarmState",
            "cloudwatch:TagResource",
            "cloudwatch:UntagResource",
            "codebuild:BatchDeleteBuilds",
            "codebuild:BatchPutTestCases",
            "codebuild:CreateProject",
            "codebuild:CreateReport",
            "codebuild:CreateReportGroup",
            "codebuild:CreateWebhook",
            "codebuild:DeleteProject",
            "codebuild:DeleteReport",
            "codebuild:DeleteReportGroup",
            "codebuild:DeleteResourcePolicy",
            "codebuild:DeleteWebhook",
            "codebuild:InvalidateProjectCache",
            "codebuild:PutResourcePolicy",
            "codebuild:StartBuild",
            "codebuild:StopBuild",
            "codebuild:UpdateProject",
            "codebuild:UpdateReport",
            "codebuild:UpdateReportGroup",
            "codebuild:UpdateWebhook",
            "codecommit:AssociateApprovalRuleTemplateWithRepository",
            "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
            "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
            "codecommit:CreateBranch",
            "codecommit:CreateCommit",
            "codecommit:CreatePullRequest",
            "codecommit:CreatePullRequestApprovalRule",
            "codecommit:CreateRepository",
            "codecommit:CreateUnreferencedMergeCommit",
            "codecommit:DeleteBranch",
            "codecommit:DeleteCommentContent",
            "codecommit:DeleteFile",
            "codecommit:DeletePullRequestApprovalRule",
            "codecommit:DeleteRepository",
            "codecommit:DisassociateApprovalRuleTemplateFromRepository",
            "codecommit:GitPush",
            "codecommit:MergeBranchesByFastForward",
            "codecommit:MergeBranchesBySquash",
            "codecommit:MergeBranchesByThreeWay",
            "codecommit:MergePullRequestByFastForward",
            "codecommit:MergePullRequestBySquash",
            "codecommit:MergePullRequestByThreeWay",
            "codecommit:OverridePullRequestApprovalRules",
            "codecommit:PostCommentForComparedCommit",
            "codecommit:PostCommentForPullRequest",
            "codecommit:PostCommentReply",
            "codecommit:PutFile",
            "codecommit:PutRepositoryTriggers",
            "codecommit:TagResource",
            "codecommit:TestRepositoryTriggers",
            "codecommit:UntagResource",
            "codecommit:UpdateComment",
            "codecommit:UpdateDefaultBranch",
            "codecommit:UpdatePullRequestApprovalRuleContent",
            "codecommit:UpdatePullRequestApprovalState",
            "codecommit:UpdatePullRequestDescription",
            "codecommit:UpdatePullRequestStatus",
            "codecommit:UpdatePullRequestTitle",
            "codecommit:UpdateRepositoryDescription",
            "codecommit:UpdateRepositoryName",
            "codecommit:UploadArchive",
            "codedeploy:AddTagsToOnPremisesInstances",
            "codedeploy:CreateApplication",
            "codedeploy:CreateDeployment",
            "codedeploy:CreateDeploymentConfig",
            "codedeploy:CreateDeploymentGroup",
            "codedeploy:DeleteApplication",
            "codedeploy:DeleteDeploymentConfig",
            "codedeploy:DeleteDeploymentGroup",
            "codedeploy:DeregisterOnPremisesInstance",
            "codedeploy:RegisterApplicationRevision",
            "codedeploy:RegisterOnPremisesInstance",
            "codedeploy:RemoveTagsFromOnPremisesInstances",
            "codedeploy:TagResource",
            "codedeploy:UntagResource",
            "codedeploy:UpdateApplication",
            "codedeploy:UpdateDeploymentGroup",
            "codeguru-profiler:ConfigureAgent",
            "codeguru-profiler:CreateProfilingGroup",
            "codeguru-profiler:DeleteProfilingGroup",
            "codeguru-profiler:PostAgentProfile",
            "codeguru-profiler:PutPermission",
            "codeguru-profiler:RemovePermission",
            "codeguru-profiler:UpdateProfilingGroup",
            "codeguru-reviewer:AssociateRepository",
            "codeguru-reviewer:DisassociateRepository",
            "codepipeline:CreateCustomActionType",
            "codepipeline:CreatePipeline",
            "codepipeline:DeleteCustomActionType",
            "codepipeline:DeletePipeline",
            "codepipeline:DeleteWebhook",
            "codepipeline:DeregisterWebhookWithThirdParty",
            "codepipeline:DisableStageTransition",
            "codepipeline:EnableStageTransition",
            "codepipeline:PollForJobs",
            "codepipeline:PutActionRevision",
            "codepipeline:PutApprovalResult",
            "codepipeline:PutWebhook",
            "codepipeline:RegisterWebhookWithThirdParty",
            "codepipeline:RetryStageExecution",
            "codepipeline:StartPipelineExecution",
            "codepipeline:StopPipelineExecution",
            "codepipeline:TagResource",
            "codepipeline:UntagResource",
            "codepipeline:UpdatePipeline",
            "codestar-notifications:CreateNotificationRule",
            "codestar-notifications:DeleteNotificationRule",
            "codestar-notifications:Subscribe",
            "codestar-notifications:TagResource",
            "codestar-notifications:Unsubscribe",
            "codestar-notifications:UntagResource",
            "codestar-notifications:UpdateNotificationRule",
            "codestar:AssociateTeamMember",
            "codestar:CreateUserProfile",
            "codestar:DeleteExtendedAccess",
            "codestar:DeleteProject",
            "codestar:DeleteUserProfile",
            "codestar:DisassociateTeamMember",
            "codestar:PutExtendedAccess",
            "codestar:TagProject",
            "codestar:UntagProject",
            "codestar:UpdateProject",
            "codestar:UpdateTeamMember",
            "codestar:UpdateUserProfile",
            "cognito-identity:DeleteIdentityPool",
            "cognito-identity:MergeDeveloperIdentities",
            "cognito-identity:TagResource",
            "cognito-identity:UnlinkDeveloperIdentity",
            "cognito-identity:UntagResource",
            "cognito-identity:UpdateIdentityPool",
            "cognito-idp:AddCustomAttributes",
            "cognito-idp:AdminAddUserToGroup",
            "cognito-idp:AdminConfirmSignUp",
            "cognito-idp:AdminCreateUser",
            "cognito-idp:AdminDeleteUser",
            "cognito-idp:AdminDeleteUserAttributes",
            "cognito-idp:AdminDisableProviderForUser",
            "cognito-idp:AdminDisableUser",
            "cognito-idp:AdminEnableUser",
            "cognito-idp:AdminForgetDevice",
            "cognito-idp:AdminInitiateAuth",
            "cognito-idp:AdminLinkProviderForUser",
            "cognito-idp:AdminRemoveUserFromGroup",
            "cognito-idp:AdminResetUserPassword",
            "cognito-idp:AdminRespondToAuthChallenge",
            "cognito-idp:AdminSetUserMFAPreference",
            "cognito-idp:AdminSetUserPassword",
            "cognito-idp:AdminSetUserSettings",
            "cognito-idp:AdminUpdateAuthEventFeedback",
            "cognito-idp:AdminUpdateDeviceStatus",
            "cognito-idp:AdminUpdateUserAttributes",
            "cognito-idp:AdminUserGlobalSignOut",
            "cognito-idp:CreateGroup",
            "cognito-idp:CreateIdentityProvider",
            "cognito-idp:CreateResourceServer",
            "cognito-idp:CreateUserImportJob",
            "cognito-idp:CreateUserPoolClient",
            "cognito-idp:CreateUserPoolDomain",
            "cognito-idp:DeleteGroup",
            "cognito-idp:DeleteIdentityProvider",
            "cognito-idp:DeleteResourceServer",
            "cognito-idp:DeleteUserPool",
            "cognito-idp:DeleteUserPoolClient",
            "cognito-idp:DeleteUserPoolDomain",
            "cognito-idp:SetRiskConfiguration",
            "cognito-idp:SetUICustomization",
            "cognito-idp:SetUserPoolMfaConfig",
            "cognito-idp:StartUserImportJob",
            "cognito-idp:StopUserImportJob",
            "cognito-idp:TagResource",
            "cognito-idp:UntagResource",
            "cognito-idp:UpdateAuthEventFeedback",
            "cognito-idp:UpdateGroup",
            "cognito-idp:UpdateIdentityProvider",
            "cognito-idp:UpdateResourceServer",
            "cognito-idp:UpdateUserPool",
            "cognito-idp:UpdateUserPoolClient",
            "cognito-idp:UpdateUserPoolDomain",
            "cognito-sync:BulkPublish",
            "cognito-sync:DeleteDataset",
            "cognito-sync:RegisterDevice",
            "cognito-sync:SetCognitoEvents",
            "cognito-sync:SetDatasetConfiguration",
            "cognito-sync:SetIdentityPoolConfiguration",
            "cognito-sync:SubscribeToDataset",
            "cognito-sync:UnsubscribeFromDataset",
            "cognito-sync:UpdateRecords",
            "comprehend:CreateEndpoint",
            "comprehend:DeleteDocumentClassifier",
            "comprehend:DeleteEndpoint",
            "comprehend:DeleteEntityRecognizer",
            "comprehend:StartDocumentClassificationJob",
            "comprehend:StopTrainingDocumentClassifier",
            "comprehend:StopTrainingEntityRecognizer",
            "comprehend:TagResource",
            "comprehend:UntagResource",
            "comprehend:UpdateEndpoint",
            "config:DeleteAggregationAuthorization",
            "config:DeleteConfigRule",
            "config:DeleteConfigurationAggregator",
            "config:DeleteEvaluationResults",
            "config:DeleteRemediationConfiguration",
            "config:PutAggregationAuthorization",
            "config:PutConfigRule",
            "config:PutConfigurationAggregator",
            "config:PutRemediationConfigurations",
            "config:StartConfigRulesEvaluation",
            "config:StartRemediationExecution",
            "config:TagResource",
            "config:UntagResource",
            "connect:CreateUser",
            "connect:DeleteUser",
            "connect:DestroyInstance",
            "connect:GetFederationTokens",
            "connect:ModifyInstance",
            "connect:StartChatContact",
            "connect:StartOutboundVoiceContact",
            "connect:StopContact",
            "connect:TagResource",
            "connect:UntagResource",
            "connect:UpdateContactAttributes",
            "connect:UpdateUserHierarchy",
            "connect:UpdateUserIdentityInfo",
            "connect:UpdateUserPhoneConfig",
            "connect:UpdateUserRoutingProfile",
            "connect:UpdateUserSecurityProfiles",
            "cur:DeleteReportDefinition",
            "cur:ModifyReportDefinition",
            "cur:PutReportDefinition",
            "dataexchange:CancelJob",
            "dataexchange:CreateJob",
            "dataexchange:DeleteAsset",
            "dataexchange:DeleteDataSet",
            "dataexchange:DeleteRevision",
            "dataexchange:GetJob",
            "dataexchange:StartJob",
            "dataexchange:TagResource",
            "dataexchange:UntagResource",
            "dataexchange:UpdateAsset",
            "dataexchange:UpdateDataSet",
            "dataexchange:UpdateRevision",
            "datasync:CancelTaskExecution",
            "datasync:DeleteAgent",
            "datasync:DeleteLocation",
            "datasync:DeleteTask",
            "datasync:StartTaskExecution",
            "datasync:TagResource",
            "datasync:UntagResource",
            "datasync:UpdateAgent",
            "datasync:UpdateTask",
            "dax:BatchWriteItem",
            "dax:CreateCluster",
            "dax:DecreaseReplicationFactor",
            "dax:DeleteCluster",
            "dax:DeleteItem",
            "dax:IncreaseReplicationFactor",
            "dax:PutItem",
            "dax:RebootNode",
            "dax:TagResource",
            "dax:UntagResource",
            "dax:UpdateCluster",
            "dax:UpdateItem",
            "deepcomposer:CreateAudio",
            "deepcomposer:DeleteComposition",
            "deepcomposer:DeleteModel",
            "deepcomposer:UpdateComposition",
            "deepcomposer:UpdateModel",
            "deeplens:DeleteModel",
            "deeplens:DeleteProject",
            "deeplens:DeployProject",
            "deeplens:DeregisterDevice",
            "deeplens:RemoveProject",
            "deeplens:UpdateProject",
            "deepracer:CloneReinforcementLearningModel",
            "deepracer:CreateLeaderboardSubmission",
            "deepracer:CreateReinforcementLearningModel",
            "deepracer:DeleteModel",
            "deepracer:StartEvaluation",
            "deepracer:StopEvaluation",
            "deepracer:StopTrainingReinforcementLearningModel",
            "detective:AcceptInvitation",
            "detective:CreateMembers",
            "detective:DeleteGraph",
            "detective:DeleteMembers",
            "detective:DisassociateMembership",
            "detective:RejectInvitation",
            "devicefarm:CreateDevicePool",
            "devicefarm:CreateNetworkProfile",
            "devicefarm:CreateRemoteAccessSession",
            "devicefarm:CreateTestGridUrl",
            "devicefarm:CreateUpload",
            "devicefarm:DeleteDevicePool",
            "devicefarm:DeleteInstanceProfile",
            "devicefarm:DeleteNetworkProfile",
            "devicefarm:DeleteProject",
            "devicefarm:DeleteRemoteAccessSession",
            "devicefarm:DeleteRun",
            "devicefarm:DeleteTestGridProject",
            "devicefarm:DeleteUpload",
            "devicefarm:DeleteVPCEConfiguration",
            "devicefarm:InstallToRemoteAccessSession",
            "devicefarm:ScheduleRun",
            "devicefarm:StopJob",
            "devicefarm:StopRemoteAccessSession",
            "devicefarm:StopRun",
            "devicefarm:TagResource",
            "devicefarm:UntagResource",
            "devicefarm:UpdateDeviceInstance",
            "devicefarm:UpdateDevicePool",
            "devicefarm:UpdateInstanceProfile",
            "devicefarm:UpdateNetworkProfile",
            "devicefarm:UpdateProject",
            "devicefarm:UpdateTestGridProject",
            "devicefarm:UpdateUpload",
            "devicefarm:UpdateVPCEConfiguration",
            "directconnect:AcceptDirectConnectGatewayAssociationProposal",
            "directconnect:AllocateConnectionOnInterconnect",
            "directconnect:AllocateHostedConnection",
            "directconnect:AllocatePrivateVirtualInterface",
            "directconnect:AllocatePublicVirtualInterface",
            "directconnect:AllocateTransitVirtualInterface",
            "directconnect:AssociateConnectionWithLag",
            "directconnect:AssociateHostedConnection",
            "directconnect:AssociateVirtualInterface",
            "directconnect:ConfirmConnection",
            "directconnect:ConfirmPrivateVirtualInterface",
            "directconnect:ConfirmPublicVirtualInterface",
            "directconnect:ConfirmTransitVirtualInterface",
            "directconnect:CreateBGPPeer",
            "directconnect:CreateConnection",
            "directconnect:CreateDirectConnectGatewayAssociation",
            "directconnect:CreateDirectConnectGatewayAssociationProposal",
            "directconnect:CreateInterconnect",
            "directconnect:CreateLag",
            "directconnect:CreatePrivateVirtualInterface",
            "directconnect:CreatePublicVirtualInterface",
            "directconnect:CreateTransitVirtualInterface",
            "directconnect:DeleteBGPPeer",
            "directconnect:DeleteConnection",
            "directconnect:DeleteDirectConnectGateway",
            "directconnect:DeleteDirectConnectGatewayAssociation",
            "directconnect:DeleteInterconnect",
            "directconnect:DeleteLag",
            "directconnect:DeleteVirtualInterface",
            "directconnect:DisassociateConnectionFromLag",
            "directconnect:TagResource",
            "directconnect:UntagResource",
            "directconnect:UpdateLag",
            "directconnect:UpdateVirtualInterfaceAttributes",
            "dlm:DeleteLifecyclePolicy",
            "dlm:TagResource",
            "dlm:UntagResource",
            "dlm:UpdateLifecyclePolicy",
            "dms:AddTagsToResource",
            "dms:ApplyPendingMaintenanceAction",
            "dms:CreateReplicationTask",
            "dms:DeleteCertificate",
            "dms:DeleteEndpoint",
            "dms:DeleteEventSubscription",
            "dms:DeleteReplicationInstance",
            "dms:DeleteReplicationSubnetGroup",
            "dms:DeleteReplicationTask",
            "dms:ModifyEndpoint",
            "dms:ModifyReplicationInstance",
            "dms:ModifyReplicationTask",
            "dms:RebootReplicationInstance",
            "dms:RefreshSchemas",
            "dms:ReloadTables",
            "dms:RemoveTagsFromResource",
            "dms:StartReplicationTask",
            "dms:StartReplicationTaskAssessment",
            "dms:StopReplicationTask",
            "ds:AcceptSharedDirectory",
            "ds:AddIpRoutes",
            "ds:AddTagsToResource",
            "ds:AuthorizeApplication",
            "ds:CancelSchemaExtension",
            "ds:CreateAlias",
            "ds:CreateComputer",
            "ds:CreateConditionalForwarder",
            "ds:CreateLogSubscription",
            "ds:CreateSnapshot",
            "ds:CreateTrust",
            "ds:DeleteConditionalForwarder",
            "ds:DeleteDirectory",
            "ds:DeleteLogSubscription",
            "ds:DeleteSnapshot",
            "ds:DeleteTrust",
            "ds:DeregisterCertificate",
            "ds:DeregisterEventTopic",
            "ds:DisableLDAPS",
            "ds:DisableRadius",
            "ds:DisableSso",
            "ds:EnableLDAPS",
            "ds:EnableRadius",
            "ds:EnableSso",
            "ds:RegisterCertificate",
            "ds:RegisterEventTopic",
            "ds:RejectSharedDirectory",
            "ds:RemoveIpRoutes",
            "ds:RemoveTagsFromResource",
            "ds:ResetUserPassword",
            "ds:RestoreFromSnapshot",
            "ds:ShareDirectory",
            "ds:StartSchemaExtension",
            "ds:UnauthorizeApplication",
            "ds:UnshareDirectory",
            "ds:UpdateConditionalForwarder",
            "ds:UpdateNumberOfDomainControllers",
            "ds:UpdateRadius",
            "ds:UpdateTrust",
            "dynamodb:BatchWriteItem",
            "dynamodb:CreateBackup",
            "dynamodb:CreateGlobalTable",
            "dynamodb:CreateTable",
            "dynamodb:CreateTableReplica",
            "dynamodb:DeleteBackup",
            "dynamodb:DeleteItem",
            "dynamodb:DeleteTable",
            "dynamodb:DeleteTableReplica",
            "dynamodb:PutItem",
            "dynamodb:RestoreTableFromBackup",
            "dynamodb:RestoreTableToPointInTime",
            "dynamodb:TagResource",
            "dynamodb:UntagResource",
            "dynamodb:UpdateContinuousBackups",
            "dynamodb:UpdateContributorInsights",
            "dynamodb:UpdateGlobalTable",
            "dynamodb:UpdateGlobalTableSettings",
            "dynamodb:UpdateItem",
            "dynamodb:UpdateTable",
            "dynamodb:UpdateTableReplicaAutoScaling",
            "dynamodb:UpdateTimeToLive",
            "ec2-instance-connect:SendSSHPublicKey",
            "ec2:AcceptTransitGatewayPeeringAttachment",
            "ec2:AcceptTransitGatewayVpcAttachment",
            "ec2:AcceptVpcEndpointConnections",
            "ec2:AcceptVpcPeeringConnection",
            "ec2:AllocateHosts",
            "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
            "ec2:AssociateClientVpnTargetNetwork",
            "ec2:AssociateIamInstanceProfile",
            "ec2:AssociateTransitGatewayMulticastDomain",
            "ec2:AssociateTransitGatewayRouteTable",
            "ec2:AttachClassicLinkVpc",
            "ec2:AttachVolume",
            "ec2:AuthorizeClientVpnIngress",
            "ec2:AuthorizeSecurityGroupEgress",
            "ec2:AuthorizeSecurityGroupIngress",
            "ec2:CancelCapacityReservation",
            "ec2:CopySnapshot",
            "ec2:CreateClientVpnEndpoint",
            "ec2:CreateClientVpnRoute",
            "ec2:CreateFlowLogs",
            "ec2:CreateLaunchTemplateVersion",
            "ec2:CreateLocalGatewayRoute",
            "ec2:CreateLocalGatewayRouteTableVpcAssociation",
            "ec2:CreateNetworkInterfacePermission",
            "ec2:CreateRoute",
            "ec2:CreateSnapshot",
            "ec2:CreateSnapshots",
            "ec2:CreateTags",
            "ec2:CreateTrafficMirrorFilter",
            "ec2:CreateTrafficMirrorFilterRule",
            "ec2:CreateTrafficMirrorSession",
            "ec2:CreateTrafficMirrorTarget",
            "ec2:CreateTransitGateway",
            "ec2:CreateTransitGatewayMulticastDomain",
            "ec2:CreateTransitGatewayPeeringAttachment",
            "ec2:CreateTransitGatewayRoute",
            "ec2:CreateTransitGatewayRouteTable",
            "ec2:CreateTransitGatewayVpcAttachment",
            "ec2:CreateVolume",
            "ec2:CreateVpcEndpoint",
            "ec2:CreateVpcEndpointServiceConfiguration",
            "ec2:CreateVpcPeeringConnection",
            "ec2:CreateVpnConnection",
            "ec2:DeleteClientVpnEndpoint",
            "ec2:DeleteClientVpnRoute",
            "ec2:DeleteCustomerGateway",
            "ec2:DeleteDhcpOptions",
            "ec2:DeleteInternetGateway",
            "ec2:DeleteLaunchTemplate",
            "ec2:DeleteLaunchTemplateVersions",
            "ec2:DeleteLocalGatewayRoute",
            "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
            "ec2:DeleteNetworkAcl",
            "ec2:DeleteNetworkAclEntry",
            "ec2:DeleteRoute",
            "ec2:DeleteRouteTable",
            "ec2:DeleteSecurityGroup",
            "ec2:DeleteSnapshot",
            "ec2:DeleteTags",
            "ec2:DeleteTrafficMirrorFilter",
            "ec2:DeleteTrafficMirrorFilterRule",
            "ec2:DeleteTrafficMirrorSession",
            "ec2:DeleteTrafficMirrorTarget",
            "ec2:DeleteTransitGateway",
            "ec2:DeleteTransitGatewayMulticastDomain",
            "ec2:DeleteTransitGatewayPeeringAttachment",
            "ec2:DeleteTransitGatewayRoute",
            "ec2:DeleteTransitGatewayRouteTable",
            "ec2:DeleteTransitGatewayVpcAttachment",
            "ec2:DeleteVolume",
            "ec2:DeleteVpcEndpointServiceConfigurations",
            "ec2:DeleteVpcEndpoints",
            "ec2:DeleteVpcPeeringConnection",
            "ec2:DeregisterTransitGatewayMulticastGroupMembers",
            "ec2:DeregisterTransitGatewayMulticastGroupSources",
            "ec2:DetachClassicLinkVpc",
            "ec2:DetachVolume",
            "ec2:DisableFastSnapshotRestores",
            "ec2:DisableTransitGatewayRouteTablePropagation",
            "ec2:DisableVpcClassicLink",
            "ec2:DisassociateClientVpnTargetNetwork",
            "ec2:DisassociateIamInstanceProfile",
            "ec2:DisassociateTransitGatewayMulticastDomain",
            "ec2:DisassociateTransitGatewayRouteTable",
            "ec2:EnableFastSnapshotRestores",
            "ec2:EnableTransitGatewayRouteTablePropagation",
            "ec2:EnableVpcClassicLink",
            "ec2:ImportClientVpnClientCertificateRevocationList",
            "ec2:ModifyCapacityReservation",
            "ec2:ModifyClientVpnEndpoint",
            "ec2:ModifyInstanceCreditSpecification",
            "ec2:ModifyInstanceEventStartTime",
            "ec2:ModifyLaunchTemplate",
            "ec2:ModifySnapshotAttribute",
            "ec2:ModifyTrafficMirrorFilterNetworkServices",
            "ec2:ModifyTrafficMirrorFilterRule",
            "ec2:ModifyTrafficMirrorSession",
            "ec2:ModifyTransitGatewayVpcAttachment",
            "ec2:ModifyVpcEndpoint",
            "ec2:ModifyVpcEndpointServiceConfiguration",
            "ec2:ModifyVpcEndpointServicePermissions",
            "ec2:ModifyVpnConnection",
            "ec2:ModifyVpnTunnelOptions",
            "ec2:RebootInstances",
            "ec2:RegisterTransitGatewayMulticastGroupMembers",
            "ec2:RegisterTransitGatewayMulticastGroupSources",
            "ec2:RejectTransitGatewayPeeringAttachment",
            "ec2:RejectTransitGatewayVpcAttachment",
            "ec2:RejectVpcEndpointConnections",
            "ec2:RejectVpcPeeringConnection",
            "ec2:ReplaceIamInstanceProfileAssociation",
            "ec2:ReplaceRoute",
            "ec2:ReplaceTransitGatewayRoute",
            "ec2:RevokeClientVpnIngress",
            "ec2:RevokeSecurityGroupEgress",
            "ec2:RevokeSecurityGroupIngress",
            "ec2:RunInstances",
            "ec2:SendDiagnosticInterrupt",
            "ec2:StartInstances",
            "ec2:StartVpcEndpointServicePrivateDnsVerification",
            "ec2:StopInstances",
            "ec2:TerminateClientVpnConnections",
            "ec2:TerminateInstances",
            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
            "ecr:BatchDeleteImage",
            "ecr:CompleteLayerUpload",
            "ecr:CreateRepository",
            "ecr:DeleteLifecyclePolicy",
            "ecr:DeleteRepository",
            "ecr:DeleteRepositoryPolicy",
            "ecr:InitiateLayerUpload",
            "ecr:PutImage",
            "ecr:PutImageScanningConfiguration",
            "ecr:PutImageTagMutability",
            "ecr:PutLifecyclePolicy",
            "ecr:SetRepositoryPolicy",
            "ecr:StartImageScan",
            "ecr:StartLifecyclePolicyPreview",
            "ecr:TagResource",
            "ecr:UntagResource",
            "ecr:UploadLayerPart",
            "ecs:CreateService",
            "ecs:DeleteAttributes",
            "ecs:DeleteCluster",
            "ecs:DeleteService",
            "ecs:DeleteTaskSet",
            "ecs:DeregisterContainerInstance",
            "ecs:Poll",
            "ecs:PutAttributes",
            "ecs:RegisterContainerInstance",
            "ecs:RunTask",
            "ecs:StartTask",
            "ecs:StartTelemetrySession",
            "ecs:StopTask",
            "ecs:SubmitAttachmentStateChanges",
            "ecs:SubmitContainerStateChange",
            "ecs:SubmitTaskStateChange",
            "ecs:TagResource",
            "ecs:UntagResource",
            "ecs:UpdateContainerAgent",
            "ecs:UpdateContainerInstancesState",
            "ecs:UpdateService",
            "ecs:UpdateServicePrimaryTaskSet",
            "ecs:UpdateTaskSet",
            "eks:CreateFargateProfile",
            "eks:CreateNodegroup",
            "eks:DeleteCluster",
            "eks:DeleteFargateProfile",
            "eks:DeleteNodegroup",
            "eks:TagResource",
            "eks:UntagResource",
            "eks:UpdateClusterConfig",
            "eks:UpdateClusterVersion",
            "eks:UpdateNodegroupConfig",
            "eks:UpdateNodegroupVersion",
            "elastic-inference:Connect",
            "elasticbeanstalk:AbortEnvironmentUpdate",
            "elasticbeanstalk:AddTags",
            "elasticbeanstalk:ApplyEnvironmentManagedAction",
            "elasticbeanstalk:ComposeEnvironments",
            "elasticbeanstalk:CreateApplication",
            "elasticbeanstalk:CreateApplicationVersion",
            "elasticbeanstalk:CreateConfigurationTemplate",
            "elasticbeanstalk:CreateEnvironment",
            "elasticbeanstalk:CreatePlatformVersion",
            "elasticbeanstalk:DeleteApplication",
            "elasticbeanstalk:DeleteApplicationVersion",
            "elasticbeanstalk:DeleteConfigurationTemplate",
            "elasticbeanstalk:DeleteEnvironmentConfiguration",
            "elasticbeanstalk:DeletePlatformVersion",
            "elasticbeanstalk:RebuildEnvironment",
            "elasticbeanstalk:RemoveTags",
            "elasticbeanstalk:RestartAppServer",
            "elasticbeanstalk:SwapEnvironmentCNAMEs",
            "elasticbeanstalk:TerminateEnvironment",
            "elasticbeanstalk:UpdateApplication",
            "elasticbeanstalk:UpdateApplicationResourceLifecycle",
            "elasticbeanstalk:UpdateApplicationVersion",
            "elasticbeanstalk:UpdateConfigurationTemplate",
            "elasticbeanstalk:UpdateEnvironment",
            "elasticfilesystem:Backup",
            "elasticfilesystem:ClientRootAccess",
            "elasticfilesystem:ClientWrite",
            "elasticfilesystem:CreateAccessPoint",
            "elasticfilesystem:CreateMountTarget",
            "elasticfilesystem:CreateTags",
            "elasticfilesystem:DeleteAccessPoint",
            "elasticfilesystem:DeleteFileSystem",
            "elasticfilesystem:DeleteFileSystemPolicy",
            "elasticfilesystem:DeleteMountTarget",
            "elasticfilesystem:DeleteTags",
            "elasticfilesystem:ModifyMountTargetSecurityGroups",
            "elasticfilesystem:PutFileSystemPolicy",
            "elasticfilesystem:PutLifecycleConfiguration",
            "elasticfilesystem:Restore",
            "elasticfilesystem:UpdateFileSystem",
            "elasticloadbalancing:AddListenerCertificates",
            "elasticloadbalancing:AddTags",
            "elasticloadbalancing:CreateListener",
            "elasticloadbalancing:CreateLoadBalancer",
            "elasticloadbalancing:CreateRule",
            "elasticloadbalancing:CreateTargetGroup",
            "elasticloadbalancing:DeleteListener",
            "elasticloadbalancing:DeleteLoadBalancer",
            "elasticloadbalancing:DeleteRule",
            "elasticloadbalancing:DeleteTargetGroup",
            "elasticloadbalancing:DeregisterTargets",
            "elasticloadbalancing:ModifyListener",
            "elasticloadbalancing:ModifyLoadBalancerAttributes",
            "elasticloadbalancing:ModifyRule",
            "elasticloadbalancing:ModifyTargetGroup",
            "elasticloadbalancing:ModifyTargetGroupAttributes",
            "elasticloadbalancing:RegisterTargets",
            "elasticloadbalancing:RemoveListenerCertificates",
            "elasticloadbalancing:RemoveTags",
            "elasticloadbalancing:SetIpAddressType",
            "elasticloadbalancing:SetRulePriorities",
            "elasticloadbalancing:SetSecurityGroups",
            "elasticloadbalancing:SetSubnets",
            "elasticmapreduce:AddInstanceFleet",
            "elasticmapreduce:AddInstanceGroups",
            "elasticmapreduce:AddJobFlowSteps",
            "elasticmapreduce:AddTags",
            "elasticmapreduce:CancelSteps",
            "elasticmapreduce:CreateEditor",
            "elasticmapreduce:DeleteEditor",
            "elasticmapreduce:ModifyCluster",
            "elasticmapreduce:ModifyInstanceFleet",
            "elasticmapreduce:ModifyInstanceGroups",
            "elasticmapreduce:OpenEditorInConsole",
            "elasticmapreduce:PutAutoScalingPolicy",
            "elasticmapreduce:RemoveAutoScalingPolicy",
            "elasticmapreduce:RemoveTags",
            "elasticmapreduce:SetTerminationProtection",
            "elasticmapreduce:StartEditor",
            "elasticmapreduce:StopEditor",
            "elasticmapreduce:TerminateJobFlows",
            "elastictranscoder:CancelJob",
            "elastictranscoder:CreateJob",
            "elastictranscoder:CreatePipeline",
            "elastictranscoder:CreatePreset",
            "elastictranscoder:DeletePipeline",
            "elastictranscoder:DeletePreset",
            "elastictranscoder:UpdatePipeline",
            "elastictranscoder:UpdatePipelineNotifications",
            "elastictranscoder:UpdatePipelineStatus",
            "es:AddTags",
            "es:CreateElasticsearchDomain",
            "es:DeleteElasticsearchDomain",
            "es:ESHttpDelete",
            "es:ESHttpPatch",
            "es:ESHttpPost",
            "es:ESHttpPut",
            "es:RemoveTags",
            "es:UpdateElasticsearchDomainConfig",
            "es:UpgradeElasticsearchDomain",
            "events:ActivateEventSource",
            "events:CreateEventBus",
            "events:CreatePartnerEventSource",
            "events:DeactivateEventSource",
            "events:DeleteEventBus",
            "events:DeletePartnerEventSource",
            "events:DeleteRule",
            "events:DisableRule",
            "events:EnableRule",
            "events:PutRule",
            "events:PutTargets",
            "events:RemoveTargets",
            "events:TagResource",
            "events:UntagResource",
            "execute-api:InvalidateCache",
            "execute-api:Invoke",
            "execute-api:ManageConnections",
            "firehose:CreateDeliveryStream",
            "firehose:DeleteDeliveryStream",
            "firehose:PutRecord",
            "firehose:PutRecordBatch",
            "firehose:StartDeliveryStreamEncryption",
            "firehose:StopDeliveryStreamEncryption",
            "firehose:TagDeliveryStream",
            "firehose:UntagDeliveryStream",
            "firehose:UpdateDestination",
            "fms:DeletePolicy",
            "fms:PutPolicy",
            "fms:TagResource",
            "fms:UntagResource",
            "forecast:CreateDataset",
            "forecast:CreateDatasetGroup",
            "forecast:CreateDatasetImportJob",
            "forecast:CreateForecast",
            "forecast:CreateForecastExportJob",
            "forecast:CreatePredictor",
            "forecast:DeleteDataset",
            "forecast:DeleteDatasetGroup",
            "forecast:DeleteDatasetImportJob",
            "forecast:DeleteForecast",
            "forecast:DeleteForecastExportJob",
            "forecast:DeletePredictor",
            "forecast:UpdateDatasetGroup",
            "freertos:CreateSoftwareConfiguration",
            "freertos:DeleteSoftwareConfiguration",
            "freertos:UpdateSoftwareConfiguration",
            "fsx:CancelDataRepositoryTask",
            "fsx:CreateBackup",
            "fsx:CreateDataRepositoryTask",
            "fsx:CreateFileSystem",
            "fsx:CreateFileSystemFromBackup",
            "fsx:DeleteBackup",
            "fsx:DeleteFileSystem",
            "fsx:TagResource",
            "fsx:UntagResource",
            "fsx:UpdateFileSystem",
            "gamelift:DeleteAlias",
            "gamelift:DeleteBuild",
            "gamelift:DeleteFleet",
            "gamelift:DeleteGameSessionQueue",
            "gamelift:DeleteMatchmakingConfiguration",
            "gamelift:DeleteMatchmakingRuleSet",
            "gamelift:DeleteScalingPolicy",
            "gamelift:DeleteScript",
            "gamelift:PutScalingPolicy",
            "gamelift:StartFleetActions",
            "gamelift:StartGameSessionPlacement",
            "gamelift:StopFleetActions",
            "gamelift:TagResource",
            "gamelift:UntagResource",
            "gamelift:UpdateAlias",
            "gamelift:UpdateBuild",
            "gamelift:UpdateFleetAttributes",
            "gamelift:UpdateFleetCapacity",
            "gamelift:UpdateFleetPortSettings",
            "gamelift:UpdateGameSessionQueue",
            "gamelift:UpdateMatchmakingConfiguration",
            "gamelift:UpdateRuntimeConfiguration",
            "gamelift:UpdateScript",
            "glacier:AbortMultipartUpload",
            "glacier:AbortVaultLock",
            "glacier:AddTagsToVault",
            "glacier:CompleteMultipartUpload",
            "glacier:CompleteVaultLock",
            "glacier:CreateVault",
            "glacier:DeleteArchive",
            "glacier:DeleteVault",
            "glacier:DeleteVaultAccessPolicy",
            "glacier:DeleteVaultNotifications",
            "glacier:InitiateJob",
            "glacier:InitiateMultipartUpload",
            "glacier:InitiateVaultLock",
            "glacier:RemoveTagsFromVault",
            "glacier:SetVaultAccessPolicy",
            "glacier:SetVaultNotifications",
            "glacier:UploadArchive",
            "glacier:UploadMultipartPart",
            "globalaccelerator:CreateEndpointGroup",
            "globalaccelerator:CreateListener",
            "globalaccelerator:DeleteAccelerator",
            "globalaccelerator:DeleteEndpointGroup",
            "globalaccelerator:DeleteListener",
            "globalaccelerator:TagResource",
            "globalaccelerator:UntagResource",
            "globalaccelerator:UpdateAccelerator",
            "globalaccelerator:UpdateAcceleratorAttributes",
            "globalaccelerator:UpdateEndpointGroup",
            "globalaccelerator:UpdateListener",
            "glue:BatchCreatePartition",
            "glue:BatchDeleteConnection",
            "glue:BatchDeletePartition",
            "glue:BatchDeleteTable",
            "glue:CancelMLTaskRun",
            "glue:CreateConnection",
            "glue:CreateDatabase",
            "glue:CreatePartition",
            "glue:CreateTable",
            "glue:CreateUserDefinedFunction",
            "glue:DeleteConnection",
            "glue:DeleteDatabase",
            "glue:DeleteMLTransform",
            "glue:DeletePartition",
            "glue:DeleteResourcePolicy",
            "glue:DeleteTable",
            "glue:DeleteUserDefinedFunction",
            "glue:ImportCatalogToGlue",
            "glue:PutResourcePolicy",
            "glue:StartExportLabelsTaskRun",
            "glue:StartImportLabelsTaskRun",
            "glue:StartMLEvaluationTaskRun",
            "glue:StartMLLabelingSetGenerationTaskRun",
            "glue:TagResource",
            "glue:UntagResource",
            "glue:UpdateConnection",
            "glue:UpdateDatabase",
            "glue:UpdateMLTransform",
            "glue:UpdatePartition",
            "glue:UpdateTable",
            "glue:UpdateUserDefinedFunction",
            "glue:UseMLTransforms",
            "greengrass:AssociateRoleToGroup",
            "greengrass:CreateConnectorDefinitionVersion",
            "greengrass:CreateCoreDefinitionVersion",
            "greengrass:CreateDeployment",
            "greengrass:CreateDeviceDefinitionVersion",
            "greengrass:CreateFunctionDefinitionVersion",
            "greengrass:CreateGroupCertificateAuthority",
            "greengrass:CreateGroupVersion",
            "greengrass:CreateLoggerDefinitionVersion",
            "greengrass:CreateResourceDefinitionVersion",
            "greengrass:CreateSubscriptionDefinitionVersion",
            "greengrass:DeleteConnectorDefinition",
            "greengrass:DeleteCoreDefinition",
            "greengrass:DeleteDeviceDefinition",
            "greengrass:DeleteFunctionDefinition",
            "greengrass:DeleteGroup",
            "greengrass:DeleteLoggerDefinition",
            "greengrass:DeleteResourceDefinition",
            "greengrass:DeleteSubscriptionDefinition",
            "greengrass:DisassociateRoleFromGroup",
            "greengrass:ResetDeployments",
            "greengrass:StopBulkDeployment",
            "greengrass:TagResource",
            "greengrass:UntagResource",
            "greengrass:UpdateConnectivityInfo",
            "greengrass:UpdateConnectorDefinition",
            "greengrass:UpdateCoreDefinition",
            "greengrass:UpdateDeviceDefinition",
            "greengrass:UpdateFunctionDefinition",
            "greengrass:UpdateGroup",
            "greengrass:UpdateGroupCertificateConfiguration",
            "greengrass:UpdateLoggerDefinition",
            "greengrass:UpdateResourceDefinition",
            "greengrass:UpdateSubscriptionDefinition",
            "groundstation:CancelContact",
            "groundstation:DeleteConfig",
            "groundstation:DeleteDataflowEndpointGroup",
            "groundstation:DeleteMissionProfile",
            "groundstation:TagResource",
            "groundstation:UntagResource",
            "groundstation:UpdateConfig",
            "groundstation:UpdateMissionProfile",
            "guardduty:AcceptInvitation",
            "guardduty:ArchiveFindings",
            "guardduty:CreateFilter",
            "guardduty:CreateIPSet",
            "guardduty:CreateMembers",
            "guardduty:CreatePublishingDestination",
            "guardduty:CreateSampleFindings",
            "guardduty:CreateThreatIntelSet",
            "guardduty:DeleteDetector",
            "guardduty:DeleteFilter",
            "guardduty:DeleteIPSet",
            "guardduty:DeleteMembers",
            "guardduty:DeletePublishingDestination",
            "guardduty:DeleteThreatIntelSet",
            "guardduty:DisassociateFromMasterAccount",
            "guardduty:DisassociateMembers",
            "guardduty:InviteMembers",
            "guardduty:StartMonitoringMembers",
            "guardduty:StopMonitoringMembers",
            "guardduty:TagResource",
            "guardduty:UnarchiveFindings",
            "guardduty:UntagResource",
            "guardduty:UpdateDetector",
            "guardduty:UpdateFilter",
            "guardduty:UpdateFindingsFeedback",
            "guardduty:UpdateIPSet",
            "guardduty:UpdatePublishingDestination",
            "guardduty:UpdateThreatIntelSet",
            "iam:CreateServiceLinkedRole",
            "iam:DeleteServiceLinkedRole",
            "imagebuilder:CancelImageCreation",
            "imagebuilder:CreateComponent",
            "imagebuilder:CreateDistributionConfiguration",
            "imagebuilder:CreateImage",
            "imagebuilder:CreateImagePipeline",
            "imagebuilder:CreateImageRecipe",
            "imagebuilder:CreateInfrastructureConfiguration",
            "imagebuilder:DeleteComponent",
            "imagebuilder:DeleteDistributionConfiguration",
            "imagebuilder:DeleteImage",
            "imagebuilder:DeleteImagePipeline",
            "imagebuilder:DeleteImageRecipe",
            "imagebuilder:DeleteInfrastructureConfiguration",
            "imagebuilder:PutComponentPolicy",
            "imagebuilder:PutImagePolicy",
            "imagebuilder:PutImageRecipePolicy",
            "imagebuilder:StartImagePipelineExecution",
            "imagebuilder:TagResource",
            "imagebuilder:UntagResource",
            "imagebuilder:UpdateDistributionConfiguration",
            "imagebuilder:UpdateImagePipeline",
            "imagebuilder:UpdateInfrastructureConfiguration",
            "iot1click:AssociateDeviceWithPlacement",
            "iot1click:CreatePlacement",
            "iot1click:CreateProject",
            "iot1click:DeletePlacement",
            "iot1click:DeleteProject",
            "iot1click:DisassociateDeviceFromPlacement",
            "iot1click:InvokeDeviceMethod",
            "iot1click:TagResource",
            "iot1click:UntagResource",
            "iot1click:UpdateDeviceState",
            "iot1click:UpdatePlacement",
            "iot1click:UpdateProject",
            "iot:AddThingToBillingGroup",
            "iot:AddThingToThingGroup",
            "iot:AssociateTargetsWithJob",
            "iot:AttachPolicy",
            "iot:AttachPrincipalPolicy",
            "iot:AttachSecurityProfile",
            "iot:CancelJob",
            "iot:CancelJobExecution",
            "iot:CloseTunnel",
            "iot:Connect",
            "iot:CreateAuthorizer",
            "iot:CreateBillingGroup",
            "iot:CreateDynamicThingGroup",
            "iot:CreateJob",
            "iot:CreateOTAUpdate",
            "iot:CreatePolicyVersion",
            "iot:CreateProvisioningClaim",
            "iot:CreateProvisioningTemplate",
            "iot:CreateProvisioningTemplateVersion",
            "iot:CreateRoleAlias",
            "iot:CreateScheduledAudit",
            "iot:CreateSecurityProfile",
            "iot:CreateStream",
            "iot:CreateThing",
            "iot:CreateThingGroup",
            "iot:CreateThingType",
            "iot:CreateTopicRule",
            "iot:DeleteAuthorizer",
            "iot:DeleteBillingGroup",
            "iot:DeleteCACertificate",
            "iot:DeleteCertificate",
            "iot:DeleteDynamicThingGroup",
            "iot:DeleteJob",
            "iot:DeleteJobExecution",
            "iot:DeleteOTAUpdate",
            "iot:DeletePolicy",
            "iot:DeletePolicyVersion",
            "iot:DeleteProvisioningTemplate",
            "iot:DeleteProvisioningTemplateVersion",
            "iot:DeleteRoleAlias",
            "iot:DeleteScheduledAudit",
            "iot:DeleteSecurityProfile",
            "iot:DeleteStream",
            "iot:DeleteThing",
            "iot:DeleteThingGroup",
            "iot:DeleteThingShadow",
            "iot:DeleteThingType",
            "iot:DeleteTopicRule",
            "iot:DeprecateThingType",
            "iot:DetachPolicy",
            "iot:DetachPrincipalPolicy",
            "iot:DetachSecurityProfile",
            "iot:DisableTopicRule",
            "iot:EnableTopicRule",
            "iot:Publish",
            "iot:Receive",
            "iot:RejectCertificateTransfer",
            "iot:RemoveThingFromBillingGroup",
            "iot:RemoveThingFromThingGroup",
            "iot:ReplaceTopicRule",
            "iot:SetDefaultAuthorizer",
            "iot:SetDefaultPolicyVersion",
            "iot:StartNextPendingJobExecution",
            "iot:Subscribe",
            "iot:TagResource",
            "iot:TransferCertificate",
            "iot:UntagResource",
            "iot:UpdateAuthorizer",
            "iot:UpdateBillingGroup",
            "iot:UpdateCACertificate",
            "iot:UpdateCertificate",
            "iot:UpdateDynamicThingGroup",
            "iot:UpdateJob",
            "iot:UpdateJobExecution",
            "iot:UpdateProvisioningTemplate",
            "iot:UpdateRoleAlias",
            "iot:UpdateScheduledAudit",
            "iot:UpdateSecurityProfile",
            "iot:UpdateStream",
            "iot:UpdateThing",
            "iot:UpdateThingGroup",
            "iot:UpdateThingGroupsForThing",
            "iot:UpdateThingShadow",
            "iotanalytics:BatchPutMessage",
            "iotanalytics:CancelPipelineReprocessing",
            "iotanalytics:CreateChannel",
            "iotanalytics:CreateDataset",
            "iotanalytics:CreateDatasetContent",
            "iotanalytics:CreateDatastore",
            "iotanalytics:CreatePipeline",
            "iotanalytics:DeleteChannel",
            "iotanalytics:DeleteDataset",
            "iotanalytics:DeleteDatasetContent",
            "iotanalytics:DeleteDatastore",
            "iotanalytics:DeletePipeline",
            "iotanalytics:StartPipelineReprocessing",
            "iotanalytics:TagResource",
            "iotanalytics:UntagResource",
            "iotanalytics:UpdateChannel",
            "iotanalytics:UpdateDataset",
            "iotanalytics:UpdateDatastore",
            "iotanalytics:UpdatePipeline",
            "iotevents:BatchPutMessage",
            "iotevents:BatchUpdateDetector",
            "iotevents:CreateDetectorModel",
            "iotevents:CreateInput",
            "iotevents:DeleteDetectorModel",
            "iotevents:DeleteInput",
            "iotevents:TagResource",
            "iotevents:UntagResource",
            "iotevents:UpdateDetectorModel",
            "iotevents:UpdateInput",
            "iotevents:UpdateInputRouting",
            "iotsitewise:AssociateAssets",
            "iotsitewise:AssociateViewEntities",
            "iotsitewise:BatchAssociateProjectAssets",
            "iotsitewise:BatchDisassociateProjectAssets",
            "iotsitewise:BatchPutAssetPropertyValue",
            "iotsitewise:CreateAccessPolicy",
            "iotsitewise:CreateAsset",
            "iotsitewise:CreateDashboard",
            "iotsitewise:CreateProject",
            "iotsitewise:DeleteAccessPolicy",
            "iotsitewise:DeleteAsset",
            "iotsitewise:DeleteAssetModel",
            "iotsitewise:DeleteAssetTemplate",
            "iotsitewise:DeleteDashboard",
            "iotsitewise:DeleteGroup",
            "iotsitewise:DeleteMeasurementDataStore",
            "iotsitewise:DeleteMetricType",
            "iotsitewise:DeletePortal",
            "iotsitewise:DeleteProject",
            "iotsitewise:DeleteView",
            "iotsitewise:DeregisterViewEntities",
            "iotsitewise:DisassociateAssets",
            "iotsitewise:DisassociateViewEntities",
            "iotsitewise:RegisterViewEntities",
            "iotsitewise:UpdateAccessPolicy",
            "iotsitewise:UpdateAsset",
            "iotsitewise:UpdateAssetModel",
            "iotsitewise:UpdateAssetProperty",
            "iotsitewise:UpdateAssetTemplate",
            "iotsitewise:UpdateDashboard",
            "iotsitewise:UpdateGroup",
            "iotsitewise:UpdateMeasurementDataStore",
            "iotsitewise:UpdatePortal",
            "iotsitewise:UpdateProject",
            "iotsitewise:UpdateView",
            "iotthingsgraph:DeleteFlowTemplate",
            "iotthingsgraph:DeleteSystemInstance",
            "iotthingsgraph:DeleteSystemTemplate",
            "iotthingsgraph:DeploySystemInstance",
            "iotthingsgraph:DeprecateFlowTemplate",
            "iotthingsgraph:DeprecateSystemTemplate",
            "iotthingsgraph:TagResource",
            "iotthingsgraph:UndeploySystemInstance",
            "iotthingsgraph:UntagResource",
            "iotthingsgraph:UpdateFlowTemplate",
            "iotthingsgraph:UpdateSystemTemplate",
            "kafka:TagResource",
            "kafka:UntagResource",
            "kendra:BatchDeleteDocument",
            "kendra:BatchPutDocument",
            "kendra:CreateDataSource",
            "kendra:CreateFaq",
            "kendra:DeleteFaq",
            "kendra:DeleteIndex",
            "kendra:StartDataSourceSyncJob",
            "kendra:StopDataSourceSyncJob",
            "kendra:SubmitFeedback",
            "kendra:UpdateDataSource",
            "kendra:UpdateIndex",
            "kinesis:AddTagsToStream",
            "kinesis:CreateStream",
            "kinesis:DecreaseStreamRetentionPeriod",
            "kinesis:DeleteStream",
            "kinesis:DeregisterStreamConsumer",
            "kinesis:IncreaseStreamRetentionPeriod",
            "kinesis:MergeShards",
            "kinesis:PutRecord",
            "kinesis:PutRecords",
            "kinesis:RegisterStreamConsumer",
            "kinesis:RemoveTagsFromStream",
            "kinesis:SplitShard",
            "kinesisanalytics:AddApplicationInput",
            "kinesisanalytics:AddApplicationOutput",
            "kinesisanalytics:AddApplicationReferenceDataSource",
            "kinesisanalytics:DeleteApplication",
            "kinesisanalytics:DeleteApplicationOutput",
            "kinesisanalytics:DeleteApplicationReferenceDataSource",
            "kinesisanalytics:StartApplication",
            "kinesisanalytics:StopApplication",
            "kinesisanalytics:TagResource",
            "kinesisanalytics:UntagResource",
            "kinesisanalytics:UpdateApplication",
            "kinesisvideo:ConnectAsMaster",
            "kinesisvideo:ConnectAsViewer",
            "kinesisvideo:CreateSignalingChannel",
            "kinesisvideo:CreateStream",
            "kinesisvideo:DeleteSignalingChannel",
            "kinesisvideo:DeleteStream",
            "kinesisvideo:PutMedia",
            "kinesisvideo:SendAlexaOfferToMaster",
            "kinesisvideo:TagResource",
            "kinesisvideo:TagStream",
            "kinesisvideo:UntagResource",
            "kinesisvideo:UntagStream",
            "kinesisvideo:UpdateDataRetention",
            "kinesisvideo:UpdateSignalingChannel",
            "kinesisvideo:UpdateStream",
            "kms:CancelKeyDeletion",
            "kms:CreateAlias",
            "kms:CreateGrant",
            "kms:Decrypt",
            "kms:DeleteAlias",
            "kms:DeleteImportedKeyMaterial",
            "kms:DisableKey",
            "kms:DisableKeyRotation",
            "kms:EnableKey",
            "kms:EnableKeyRotation",
            "kms:Encrypt",
            "kms:GenerateDataKey",
            "kms:GenerateDataKeyPair",
            "kms:GenerateDataKeyPairWithoutPlaintext",
            "kms:GenerateDataKeyWithoutPlaintext",
            "kms:ImportKeyMaterial",
            "kms:PutKeyPolicy",
            "kms:ReEncryptFrom",
            "kms:ReEncryptTo",
            "kms:RetireGrant",
            "kms:RevokeGrant",
            "kms:ScheduleKeyDeletion",
            "kms:Sign",
            "kms:TagResource",
            "kms:UntagResource",
            "kms:UpdateAlias",
            "kms:UpdateKeyDescription",
            "kms:Verify",
            "lambda:AddLayerVersionPermission",
            "lambda:AddPermission",
            "lambda:CreateAlias",
            "lambda:CreateFunction",
            "lambda:DeleteAlias",
            "lambda:DeleteEventSourceMapping",
            "lambda:DeleteFunction",
            "lambda:DeleteFunctionConcurrency",
            "lambda:DeleteFunctionEventInvokeConfig",
            "lambda:DeleteLayerVersion",
            "lambda:DeleteProvisionedConcurrencyConfig",
            "lambda:DisableReplication",
            "lambda:EnableReplication",
            "lambda:InvokeAsync",
            "lambda:InvokeFunction",
            "lambda:PublishLayerVersion",
            "lambda:PublishVersion",
            "lambda:PutFunctionConcurrency",
            "lambda:PutFunctionEventInvokeConfig",
            "lambda:PutProvisionedConcurrencyConfig",
            "lambda:RemoveLayerVersionPermission",
            "lambda:RemovePermission",
            "lambda:TagResource",
            "lambda:UntagResource",
            "lambda:UpdateAlias",
            "lambda:UpdateEventSourceMapping",
            "lambda:UpdateFunctionCode",
            "lambda:UpdateFunctionConfiguration",
            "lambda:UpdateFunctionEventInvokeConfig",
            "lex:CreateBotVersion",
            "lex:CreateIntentVersion",
            "lex:CreateSlotTypeVersion",
            "lex:DeleteBot",
            "lex:DeleteBotAlias",
            "lex:DeleteBotChannelAssociation",
            "lex:DeleteBotVersion",
            "lex:DeleteIntent",
            "lex:DeleteIntentVersion",
            "lex:DeleteSession",
            "lex:DeleteSlotType",
            "lex:DeleteSlotTypeVersion",
            "lex:DeleteUtterances",
            "lex:PostContent",
            "lex:PostText",
            "lex:PutBot",
            "lex:PutBotAlias",
            "lex:PutIntent",
            "lex:PutSession",
            "lex:PutSlotType",
            "lex:TagResource",
            "lex:UntagResource",
            "license-manager:DeleteLicenseConfiguration",
            "license-manager:TagResource",
            "license-manager:UntagResource",
            "license-manager:UpdateLicenseConfiguration",
            "license-manager:UpdateLicenseSpecificationsForResource",
            "lightsail:AllocateStaticIp",
            "lightsail:AttachDisk",
            "lightsail:AttachInstancesToLoadBalancer",
            "lightsail:AttachLoadBalancerTlsCertificate",
            "lightsail:AttachStaticIp",
            "lightsail:CloseInstancePublicPorts",
            "lightsail:CreateCloudFormationStack",
            "lightsail:CreateDisk",
            "lightsail:CreateDiskFromSnapshot",
            "lightsail:CreateDiskSnapshot",
            "lightsail:CreateDomain",
            "lightsail:CreateDomainEntry",
            "lightsail:CreateInstanceSnapshot",
            "lightsail:CreateInstances",
            "lightsail:CreateInstancesFromSnapshot",
            "lightsail:CreateKeyPair",
            "lightsail:CreateLoadBalancer",
            "lightsail:CreateLoadBalancerTlsCertificate",
            "lightsail:CreateRelationalDatabase",
            "lightsail:CreateRelationalDatabaseFromSnapshot",
            "lightsail:CreateRelationalDatabaseSnapshot",
            "lightsail:DeleteDisk",
            "lightsail:DeleteDiskSnapshot",
            "lightsail:DeleteDomain",
            "lightsail:DeleteDomainEntry",
            "lightsail:DeleteInstance",
            "lightsail:DeleteInstanceSnapshot",
            "lightsail:DeleteKeyPair",
            "lightsail:DeleteKnownHostKeys",
            "lightsail:DeleteLoadBalancer",
            "lightsail:DeleteLoadBalancerTlsCertificate",
            "lightsail:DeleteRelationalDatabase",
            "lightsail:DeleteRelationalDatabaseSnapshot",
            "lightsail:DetachDisk",
            "lightsail:DetachInstancesFromLoadBalancer",
            "lightsail:DetachStaticIp",
            "lightsail:DownloadDefaultKeyPair",
            "lightsail:GetInstanceAccessDetails",
            "lightsail:ImportKeyPair",
            "lightsail:OpenInstancePublicPorts",
            "lightsail:PutInstancePublicPorts",
            "lightsail:RebootInstance",
            "lightsail:RebootRelationalDatabase",
            "lightsail:ReleaseStaticIp",
            "lightsail:StartInstance",
            "lightsail:StartRelationalDatabase",
            "lightsail:StopInstance",
            "lightsail:StopRelationalDatabase",
            "lightsail:TagResource",
            "lightsail:UntagResource",
            "lightsail:UpdateDomainEntry",
            "lightsail:UpdateLoadBalancerAttribute",
            "lightsail:UpdateRelationalDatabase",
            "logs:AssociateKmsKey",
            "logs:CreateExportTask",
            "logs:CreateLogStream",
            "logs:DeleteLogGroup",
            "logs:DeleteLogStream",
            "logs:DeleteMetricFilter",
            "logs:DeleteRetentionPolicy",
            "logs:DeleteSubscriptionFilter",
            "logs:DisassociateKmsKey",
            "logs:PutLogEvents",
            "logs:PutMetricFilter",
            "logs:PutRetentionPolicy",
            "logs:PutSubscriptionFilter",
            "logs:TagLogGroup",
            "logs:UntagLogGroup",
            "machinelearning:AddTags",
            "machinelearning:CreateBatchPrediction",
            "machinelearning:CreateDataSourceFromRDS",
            "machinelearning:CreateDataSourceFromRedshift",
            "machinelearning:CreateDataSourceFromS3",
            "machinelearning:CreateEvaluation",
            "machinelearning:CreateMLModel",
            "machinelearning:CreateRealtimeEndpoint",
            "machinelearning:DeleteBatchPrediction",
            "machinelearning:DeleteDataSource",
            "machinelearning:DeleteEvaluation",
            "machinelearning:DeleteMLModel",
            "machinelearning:DeleteRealtimeEndpoint",
            "machinelearning:DeleteTags",
            "machinelearning:Predict",
            "machinelearning:UpdateBatchPrediction",
            "machinelearning:UpdateDataSource",
            "machinelearning:UpdateEvaluation",
            "machinelearning:UpdateMLModel",
            "managedblockchain:CreateMember",
            "managedblockchain:CreateNode",
            "managedblockchain:CreateProposal",
            "managedblockchain:DeleteMember",
            "managedblockchain:DeleteNode",
            "managedblockchain:RejectInvitation",
            "managedblockchain:VoteOnProposal",
            "mediaconvert:CancelJob",
            "mediaconvert:CreateJob",
            "mediaconvert:CreateJobTemplate",
            "mediaconvert:DeleteJobTemplate",
            "mediaconvert:DeletePreset",
            "mediaconvert:DeleteQueue",
            "mediaconvert:TagResource",
            "mediaconvert:UntagResource",
            "mediaconvert:UpdateJobTemplate",
            "mediaconvert:UpdatePreset",
            "mediaconvert:UpdateQueue",
            "medialive:BatchUpdateSchedule",
            "medialive:CreateChannel",
            "medialive:CreateInput",
            "medialive:CreateInputSecurityGroup",
            "medialive:CreateMultiplex",
            "medialive:CreateTags",
            "medialive:DeleteChannel",
            "medialive:DeleteInput",
            "medialive:DeleteInputSecurityGroup",
            "medialive:DeleteMultiplex",
            "medialive:DeleteReservation",
            "medialive:DeleteTags",
            "medialive:PurchaseOffering",
            "medialive:StartChannel",
            "medialive:StartMultiplex",
            "medialive:StopChannel",
            "medialive:StopMultiplex",
            "medialive:UpdateChannel",
            "medialive:UpdateChannelClass",
            "medialive:UpdateInput",
            "medialive:UpdateInputSecurityGroup",
            "medialive:UpdateMultiplex",
            "medialive:UpdateReservation",
            "mediapackage-vod:DeleteAsset",
            "mediapackage-vod:DeletePackagingConfiguration",
            "mediapackage-vod:DeletePackagingGroup",
            "mediapackage:DeleteChannel",
            "mediapackage:DeleteOriginEndpoint",
            "mediapackage:RotateIngestEndpointCredentials",
            "mediapackage:TagResource",
            "mediapackage:UntagResource",
            "mediapackage:UpdateChannel",
            "mediapackage:UpdateOriginEndpoint",
            "mediatailor:DeletePlaybackConfiguration",
            "mediatailor:PutPlaybackConfiguration",
            "mgh:AssociateCreatedArtifact",
            "mgh:AssociateDiscoveredResource",
            "mgh:CreateProgressUpdateStream",
            "mgh:DeleteProgressUpdateStream",
            "mgh:DisassociateCreatedArtifact",
            "mgh:DisassociateDiscoveredResource",
            "mgh:ImportMigrationTask",
            "mgh:NotifyMigrationTaskState",
            "mgh:PutResourceAttributes",
            "mobilehub:DeleteProject",
            "mobilehub:GenerateProjectParameters",
            "mobilehub:SynchronizeProject",
            "mobilehub:UpdateProject",
            "mobiletargeting:CreateCampaign",
            "mobiletargeting:CreateExportJob",
            "mobiletargeting:CreateImportJob",
            "mobiletargeting:CreateJourney",
            "mobiletargeting:CreateSegment",
            "mobiletargeting:DeleteAdmChannel",
            "mobiletargeting:DeleteApnsChannel",
            "mobiletargeting:DeleteApnsSandboxChannel",
            "mobiletargeting:DeleteApnsVoipChannel",
            "mobiletargeting:DeleteApnsVoipSandboxChannel",
            "mobiletargeting:DeleteApp",
            "mobiletargeting:DeleteBaiduChannel",
            "mobiletargeting:DeleteCampaign",
            "mobiletargeting:DeleteEmailChannel",
            "mobiletargeting:DeleteEmailTemplate",
            "mobiletargeting:DeleteEndpoint",
            "mobiletargeting:DeleteEventStream",
            "mobiletargeting:DeleteGcmChannel",
            "mobiletargeting:DeleteJourney",
            "mobiletargeting:DeletePushTemplate",
            "mobiletargeting:DeleteRecommenderConfiguration",
            "mobiletargeting:DeleteSegment",
            "mobiletargeting:DeleteSmsChannel",
            "mobiletargeting:DeleteSmsTemplate",
            "mobiletargeting:DeleteUserEndpoints",
            "mobiletargeting:DeleteVoiceChannel",
            "mobiletargeting:DeleteVoiceTemplate",
            "mobiletargeting:PutEventStream",
            "mobiletargeting:PutEvents",
            "mobiletargeting:RemoveAttributes",
            "mobiletargeting:SendMessages",
            "mobiletargeting:SendUsersMessages",
            "mobiletargeting:TagResource",
            "mobiletargeting:UntagResource",
            "mobiletargeting:UpdateAdmChannel",
            "mobiletargeting:UpdateApnsChannel",
            "mobiletargeting:UpdateApnsSandboxChannel",
            "mobiletargeting:UpdateApnsVoipChannel",
            "mobiletargeting:UpdateApnsVoipSandboxChannel",
            "mobiletargeting:UpdateApplicationSettings",
            "mobiletargeting:UpdateBaiduChannel",
            "mobiletargeting:UpdateCampaign",
            "mobiletargeting:UpdateEmailChannel",
            "mobiletargeting:UpdateEmailTemplate",
            "mobiletargeting:UpdateEndpoint",
            "mobiletargeting:UpdateEndpointsBatch",
            "mobiletargeting:UpdateGcmChannel",
            "mobiletargeting:UpdateJourney",
            "mobiletargeting:UpdateJourneyState",
            "mobiletargeting:UpdatePushTemplate",
            "mobiletargeting:UpdateRecommenderConfiguration",
            "mobiletargeting:UpdateSegment",
            "mobiletargeting:UpdateSmsChannel",
            "mobiletargeting:UpdateSmsTemplate",
            "mobiletargeting:UpdateTemplateActiveVersion",
            "mobiletargeting:UpdateVoiceChannel",
            "mobiletargeting:UpdateVoiceTemplate",
            "mq:CreateTags",
            "mq:CreateUser",
            "mq:DeleteBroker",
            "mq:DeleteTags",
            "mq:DeleteUser",
            "mq:RebootBroker",
            "mq:UpdateBroker",
            "mq:UpdateConfiguration",
            "mq:UpdateUser",
            "neptune-db:connect",
            "networkmanager:AssociateCustomerGateway",
            "networkmanager:AssociateLink",
            "networkmanager:CreateDevice",
            "networkmanager:CreateLink",
            "networkmanager:CreateSite",
            "networkmanager:DeleteDevice",
            "networkmanager:DeleteGlobalNetwork",
            "networkmanager:DeleteLink",
            "networkmanager:DeleteSite",
            "networkmanager:DeregisterTransitGateway",
            "networkmanager:DisassociateCustomerGateway",
            "networkmanager:DisassociateLink",
            "networkmanager:RegisterTransitGateway",
            "networkmanager:TagResource",
            "networkmanager:UntagResource",
            "networkmanager:UpdateDevice",
            "networkmanager:UpdateGlobalNetwork",
            "networkmanager:UpdateLink",
            "networkmanager:UpdateSite",
            "opsworks:AssignInstance",
            "opsworks:AssignVolume",
            "opsworks:AssociateElasticIp",
            "opsworks:AttachElasticLoadBalancer",
            "opsworks:CloneStack",
            "opsworks:CreateApp",
            "opsworks:CreateDeployment",
            "opsworks:CreateInstance",
            "opsworks:CreateLayer",
            "opsworks:DeleteApp",
            "opsworks:DeleteInstance",
            "opsworks:DeleteLayer",
            "opsworks:DeleteStack",
            "opsworks:DeregisterEcsCluster",
            "opsworks:DeregisterElasticIp",
            "opsworks:DeregisterInstance",
            "opsworks:DeregisterRdsDbInstance",
            "opsworks:DeregisterVolume",
            "opsworks:DetachElasticLoadBalancer",
            "opsworks:DisassociateElasticIp",
            "opsworks:GrantAccess",
            "opsworks:RebootInstance",
            "opsworks:RegisterEcsCluster",
            "opsworks:RegisterElasticIp",
            "opsworks:RegisterInstance",
            "opsworks:RegisterRdsDbInstance",
            "opsworks:RegisterVolume",
            "opsworks:SetLoadBasedAutoScaling",
            "opsworks:SetPermission",
            "opsworks:SetTimeBasedAutoScaling",
            "opsworks:StartInstance",
            "opsworks:StartStack",
            "opsworks:StopInstance",
            "opsworks:StopStack",
            "opsworks:TagResource",
            "opsworks:UnassignInstance",
            "opsworks:UnassignVolume",
            "opsworks:UntagResource",
            "opsworks:UpdateApp",
            "opsworks:UpdateElasticIp",
            "opsworks:UpdateInstance",
            "opsworks:UpdateLayer",
            "opsworks:UpdateRdsDbInstance",
            "opsworks:UpdateStack",
            "opsworks:UpdateVolume",
            "personalize:CreateCampaign",
            "personalize:CreateDataset",
            "personalize:CreateDatasetGroup",
            "personalize:CreateDatasetImportJob",
            "personalize:CreateEventTracker",
            "personalize:CreateSchema",
            "personalize:CreateSolution",
            "personalize:CreateSolutionVersion",
            "personalize:DeleteCampaign",
            "personalize:DeleteDataset",
            "personalize:DeleteDatasetGroup",
            "personalize:DeleteEventTracker",
            "personalize:DeleteSchema",
            "personalize:DeleteSolution",
            "personalize:GetPersonalizedRanking",
            "personalize:PutEvents",
            "personalize:UpdateCampaign",
            "polly:DeleteLexicon",
            "polly:StartSpeechSynthesisTask",
            "qldb:CreateLedger",
            "qldb:DeleteLedger",
            "qldb:ExecuteStatement",
            "qldb:ExportJournalToS3",
            "qldb:InsertSampleData",
            "qldb:SendCommand",
            "qldb:ShowCatalog",
            "qldb:TagResource",
            "qldb:UntagResource",
            "qldb:UpdateLedger",
            "quicksight:CreateAdmin",
            "quicksight:CreateDashboard",
            "quicksight:CreateGroup",
            "quicksight:CreateGroupMembership",
            "quicksight:CreateIAMPolicyAssignment",
            "quicksight:CreateReader",
            "quicksight:CreateTemplate",
            "quicksight:CreateTemplateAlias",
            "quicksight:CreateUser",
            "quicksight:DeleteDashboard",
            "quicksight:DeleteGroup",
            "quicksight:DeleteGroupMembership",
            "quicksight:DeleteIAMPolicyAssignment",
            "quicksight:DeleteTemplate",
            "quicksight:DeleteTemplateAlias",
            "quicksight:DeleteUser",
            "quicksight:DeleteUserByPrincipalId",
            "quicksight:RegisterUser",
            "quicksight:TagResource",
            "quicksight:UntagResource",
            "quicksight:UpdateDashboard",
            "quicksight:UpdateDashboardPermissions",
            "quicksight:UpdateDashboardPublishedVersion",
            "quicksight:UpdateGroup",
            "quicksight:UpdateIAMPolicyAssignment",
            "quicksight:UpdateTemplate",
            "quicksight:UpdateTemplateAlias",
            "quicksight:UpdateTemplatePermissions",
            "quicksight:UpdateUser",
            "ram:AcceptResourceShareInvitation",
            "ram:AssociateResourceShare",
            "ram:AssociateResourceSharePermission",
            "ram:DeleteResourceShare",
            "ram:DisassociateResourceShare",
            "ram:DisassociateResourceSharePermission",
            "ram:RejectResourceShareInvitation",
            "ram:TagResource",
            "ram:UntagResource",
            "ram:UpdateResourceShare",
            "rds-db:connect",
            "rds:AddRoleToDBCluster",
            "rds:AddRoleToDBInstance",
            "rds:AddSourceIdentifierToSubscription",
            "rds:AddTagsToResource",
            "rds:ApplyPendingMaintenanceAction",
            "rds:AuthorizeDBSecurityGroupIngress",
            "rds:BacktrackDBCluster",
            "rds:CopyDBClusterParameterGroup",
            "rds:CopyDBClusterSnapshot",
            "rds:CopyDBParameterGroup",
            "rds:CopyDBSnapshot",
            "rds:CopyOptionGroup",
            "rds:CreateDBCluster",
            "rds:CreateDBClusterEndpoint",
            "rds:CreateDBClusterParameterGroup",
            "rds:CreateDBClusterSnapshot",
            "rds:CreateDBInstance",
            "rds:CreateDBInstanceReadReplica",
            "rds:CreateDBParameterGroup",
            "rds:CreateDBSecurityGroup",
            "rds:CreateDBSnapshot",
            "rds:CreateDBSubnetGroup",
            "rds:CreateEventSubscription",
            "rds:CreateGlobalCluster",
            "rds:CreateOptionGroup",
            "rds:DeleteDBCluster",
            "rds:DeleteDBClusterEndpoint",
            "rds:DeleteDBClusterParameterGroup",
            "rds:DeleteDBClusterSnapshot",
            "rds:DeleteDBInstance",
            "rds:DeleteDBParameterGroup",
            "rds:DeleteDBProxy",
            "rds:DeleteDBSecurityGroup",
            "rds:DeleteDBSnapshot",
            "rds:DeleteDBSubnetGroup",
            "rds:DeleteEventSubscription",
            "rds:DeleteGlobalCluster",
            "rds:DeleteOptionGroup",
            "rds:DeregisterDBProxyTargets",
            "rds:FailoverDBCluster",
            "rds:ModifyCurrentDBClusterCapacity",
            "rds:ModifyDBCluster",
            "rds:ModifyDBClusterEndpoint",
            "rds:ModifyDBClusterParameterGroup",
            "rds:ModifyDBClusterSnapshotAttribute",
            "rds:ModifyDBInstance",
            "rds:ModifyDBParameterGroup",
            "rds:ModifyDBProxy",
            "rds:ModifyDBProxyTargetGroup",
            "rds:ModifyDBSnapshot",
            "rds:ModifyDBSnapshotAttribute",
            "rds:ModifyDBSubnetGroup",
            "rds:ModifyEventSubscription",
            "rds:ModifyGlobalCluster",
            "rds:ModifyOptionGroup",
            "rds:PromoteReadReplica",
            "rds:PromoteReadReplicaDBCluster",
            "rds:PurchaseReservedDBInstancesOffering",
            "rds:RebootDBInstance",
            "rds:RegisterDBProxyTargets",
            "rds:RemoveFromGlobalCluster",
            "rds:RemoveRoleFromDBCluster",
            "rds:RemoveRoleFromDBInstance",
            "rds:RemoveSourceIdentifierFromSubscription",
            "rds:RemoveTagsFromResource",
            "rds:ResetDBClusterParameterGroup",
            "rds:ResetDBParameterGroup",
            "rds:RestoreDBClusterFromS3",
            "rds:RestoreDBClusterFromSnapshot",
            "rds:RestoreDBClusterToPointInTime",
            "rds:RestoreDBInstanceFromDBSnapshot",
            "rds:RestoreDBInstanceFromS3",
            "rds:RestoreDBInstanceToPointInTime",
            "rds:RevokeDBSecurityGroupIngress",
            "rds:StartActivityStream",
            "rds:StartDBCluster",
            "rds:StartDBInstance",
            "rds:StopActivityStream",
            "rds:StopDBCluster",
            "rds:StopDBInstance",
            "redshift:AuthorizeClusterSecurityGroupIngress",
            "redshift:AuthorizeSnapshotAccess",
            "redshift:BatchDeleteClusterSnapshots",
            "redshift:BatchModifyClusterSnapshots",
            "redshift:CancelResize",
            "redshift:CopyClusterSnapshot",
            "redshift:CreateCluster",
            "redshift:CreateClusterParameterGroup",
            "redshift:CreateClusterSecurityGroup",
            "redshift:CreateClusterSnapshot",
            "redshift:CreateClusterSubnetGroup",
            "redshift:CreateClusterUser",
            "redshift:CreateEventSubscription",
            "redshift:CreateHsmClientCertificate",
            "redshift:CreateHsmConfiguration",
            "redshift:CreateSnapshotCopyGrant",
            "redshift:CreateSnapshotSchedule",
            "redshift:DeleteCluster",
            "redshift:DeleteClusterParameterGroup",
            "redshift:DeleteClusterSecurityGroup",
            "redshift:DeleteClusterSnapshot",
            "redshift:DeleteClusterSubnetGroup",
            "redshift:DeleteEventSubscription",
            "redshift:DeleteHsmClientCertificate",
            "redshift:DeleteHsmConfiguration",
            "redshift:DeleteSnapshotCopyGrant",
            "redshift:DeleteSnapshotSchedule",
            "redshift:DisableLogging",
            "redshift:DisableSnapshotCopy",
            "redshift:EnableLogging",
            "redshift:EnableSnapshotCopy",
            "redshift:GetClusterCredentials",
            "redshift:JoinGroup",
            "redshift:ModifyCluster",
            "redshift:ModifyClusterDbRevision",
            "redshift:ModifyClusterIamRoles",
            "redshift:ModifyClusterParameterGroup",
            "redshift:ModifyClusterSnapshot",
            "redshift:ModifyClusterSnapshotSchedule",
            "redshift:ModifyClusterSubnetGroup",
            "redshift:ModifyEventSubscription",
            "redshift:ModifySnapshotCopyRetentionPeriod",
            "redshift:ModifySnapshotSchedule",
            "redshift:PauseCluster",
            "redshift:RebootCluster",
            "redshift:ResetClusterParameterGroup",
            "redshift:ResizeCluster",
            "redshift:RestoreFromClusterSnapshot",
            "redshift:RestoreTableFromClusterSnapshot",
            "redshift:ResumeCluster",
            "redshift:RevokeClusterSecurityGroupIngress",
            "redshift:RevokeSnapshotAccess",
            "redshift:RotateEncryptionKey",
            "rekognition:CreateCollection",
            "rekognition:CreateProject",
            "rekognition:CreateProjectVersion",
            "rekognition:CreateStreamProcessor",
            "rekognition:DeleteCollection",
            "rekognition:DeleteFaces",
            "rekognition:DeleteProject",
            "rekognition:DeleteProjectVersion",
            "rekognition:DeleteStreamProcessor",
            "rekognition:IndexFaces",
            "rekognition:StartFaceSearch",
            "rekognition:StartProjectVersion",
            "rekognition:StartStreamProcessor",
            "rekognition:StopProjectVersion",
            "rekognition:StopStreamProcessor",
            "resource-groups:CreateGroup",
            "resource-groups:DeleteGroup",
            "resource-groups:Tag",
            "resource-groups:Untag",
            "resource-groups:UpdateGroup",
            "resource-groups:UpdateGroupQuery",
            "robomaker:CancelDeploymentJob",
            "robomaker:CancelSimulationJob",
            "robomaker:CancelSimulationJobBatch",
            "robomaker:CreateRobotApplicationVersion",
            "robomaker:CreateSimulationApplicationVersion",
            "robomaker:DeleteFleet",
            "robomaker:DeleteRobot",
            "robomaker:DeleteRobotApplication",
            "robomaker:DeleteSimulationApplication",
            "robomaker:DeregisterRobot",
            "robomaker:RegisterRobot",
            "robomaker:RestartSimulationJob",
            "robomaker:SyncDeploymentJob",
            "robomaker:TagResource",
            "robomaker:UntagResource",
            "robomaker:UpdateRobotApplication",
            "robomaker:UpdateSimulationApplication",
            "route53:AssociateVPCWithHostedZone",
            "route53:ChangeResourceRecordSets",
            "route53:ChangeTagsForResource",
            "route53:CreateQueryLoggingConfig",
            "route53:CreateTrafficPolicyInstance",
            "route53:CreateTrafficPolicyVersion",
            "route53:CreateVPCAssociationAuthorization",
            "route53:DeleteHealthCheck",
            "route53:DeleteHostedZone",
            "route53:DeleteQueryLoggingConfig",
            "route53:DeleteReusableDelegationSet",
            "route53:DeleteTrafficPolicy",
            "route53:DeleteTrafficPolicyInstance",
            "route53:DeleteVPCAssociationAuthorization",
            "route53:UpdateHealthCheck",
            "route53:UpdateHostedZoneComment",
            "route53:UpdateTrafficPolicyComment",
            "route53:UpdateTrafficPolicyInstance",
            "route53resolver:AssociateResolverEndpointIpAddress",
            "route53resolver:AssociateResolverRule",
            "route53resolver:CreateResolverEndpoint",
            "route53resolver:CreateResolverRule",
            "route53resolver:DeleteResolverEndpoint",
            "route53resolver:DeleteResolverRule",
            "route53resolver:DisassociateResolverEndpointIpAddress",
            "route53resolver:DisassociateResolverRule",
            "route53resolver:PutResolverRulePolicy",
            "route53resolver:TagResource",
            "route53resolver:UntagResource",
            "route53resolver:UpdateResolverEndpoint",
            "route53resolver:UpdateResolverRule",
            "s3:AbortMultipartUpload",
            "s3:BypassGovernanceRetention",
            "s3:CreateAccessPoint",
            "s3:CreateBucket",
            "s3:DeleteAccessPoint",
            "s3:DeleteAccessPointPolicy",
            "s3:DeleteBucket",
            "s3:DeleteBucketPolicy",
            "s3:DeleteBucketWebsite",
            "s3:DeleteObject",
            "s3:DeleteObjectTagging",
            "s3:DeleteObjectVersion",
            "s3:DeleteObjectVersionTagging",
            "s3:GetObject",
            "s3:ObjectOwnerOverrideToBucketOwner",
            "s3:PutAccelerateConfiguration",
            "s3:PutAccessPointPolicy",
            "s3:PutAnalyticsConfiguration",
            "s3:PutBucketAcl",
            "s3:PutBucketCORS",
            "s3:PutBucketLogging",
            "s3:PutBucketNotification",
            "s3:PutBucketObjectLockConfiguration",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutBucketRequestPayment",
            "s3:PutBucketTagging",
            "s3:PutBucketVersioning",
            "s3:PutBucketWebsite",
            "s3:PutEncryptionConfiguration",
            "s3:PutInventoryConfiguration",
            "s3:PutLifecycleConfiguration",
            "s3:PutMetricsConfiguration",
            "s3:PutObject",
            "s3:PutObjectAcl",
            "s3:PutObjectLegalHold",
            "s3:PutObjectRetention",
            "s3:PutObjectTagging",
            "s3:PutObjectVersionAcl",
            "s3:PutObjectVersionTagging",
            "s3:PutReplicationConfiguration",
            "s3:ReplicateDelete",
            "s3:ReplicateObject",
            "s3:ReplicateTags",
            "s3:RestoreObject",
            "s3:UpdateJobPriority",
            "s3:UpdateJobStatus",
            "sagemaker:AddTags",
            "sagemaker:AssociateTrialComponent",
            "sagemaker:BatchPutMetrics",
            "sagemaker:CreateAlgorithm",
            "sagemaker:CreateApp",
            "sagemaker:CreateAutoMLJob",
            "sagemaker:CreateCodeRepository",
            "sagemaker:CreateCompilationJob",
            "sagemaker:CreateDomain",
            "sagemaker:CreateEndpoint",
            "sagemaker:CreateEndpointConfig",
            "sagemaker:CreateExperiment",
            "sagemaker:CreateFlowDefinition",
            "sagemaker:CreateHumanTaskUi",
            "sagemaker:CreateHyperParameterTuningJob",
            "sagemaker:CreateLabelingJob",
            "sagemaker:CreateModel",
            "sagemaker:CreateModelPackage",
            "sagemaker:CreateMonitoringSchedule",
            "sagemaker:CreateNotebookInstance",
            "sagemaker:CreateNotebookInstanceLifecycleConfig",
            "sagemaker:CreatePresignedDomainUrl",
            "sagemaker:CreatePresignedNotebookInstanceUrl",
            "sagemaker:CreateProcessingJob",
            "sagemaker:CreateTrainingJob",
            "sagemaker:CreateTransformJob",
            "sagemaker:CreateTrial",
            "sagemaker:CreateTrialComponent",
            "sagemaker:CreateUserProfile",
            "sagemaker:CreateWorkteam",
            "sagemaker:DeleteAlgorithm",
            "sagemaker:DeleteApp",
            "sagemaker:DeleteCodeRepository",
            "sagemaker:DeleteDomain",
            "sagemaker:DeleteEndpoint",
            "sagemaker:DeleteEndpointConfig",
            "sagemaker:DeleteExperiment",
            "sagemaker:DeleteFlowDefinition",
            "sagemaker:DeleteHumanLoop",
            "sagemaker:DeleteModel",
            "sagemaker:DeleteModelPackage",
            "sagemaker:DeleteMonitoringSchedule",
            "sagemaker:DeleteNotebookInstance",
            "sagemaker:DeleteNotebookInstanceLifecycleConfig",
            "sagemaker:DeleteTags",
            "sagemaker:DeleteTrial",
            "sagemaker:DeleteTrialComponent",
            "sagemaker:DeleteUserProfile",
            "sagemaker:DeleteWorkteam",
            "sagemaker:DisassociateTrialComponent",
            "sagemaker:StartHumanLoop",
            "sagemaker:StartMonitoringSchedule",
            "sagemaker:StartNotebookInstance",
            "sagemaker:StopAutoMLJob",
            "sagemaker:StopCompilationJob",
            "sagemaker:StopHumanLoop",
            "sagemaker:StopHyperParameterTuningJob",
            "sagemaker:StopLabelingJob",
            "sagemaker:StopMonitoringSchedule",
            "sagemaker:StopNotebookInstance",
            "sagemaker:StopProcessingJob",
            "sagemaker:StopTrainingJob",
            "sagemaker:StopTransformJob",
            "sagemaker:UpdateCodeRepository",
            "sagemaker:UpdateDomain",
            "sagemaker:UpdateEndpoint",
            "sagemaker:UpdateEndpointWeightsAndCapacities",
            "sagemaker:UpdateExperiment",
            "sagemaker:UpdateMonitoringSchedule",
            "sagemaker:UpdateNotebookInstance",
            "sagemaker:UpdateNotebookInstanceLifecycleConfig",
            "sagemaker:UpdateTrial",
            "sagemaker:UpdateTrialComponent",
            "sagemaker:UpdateUserProfile",
            "sagemaker:UpdateWorkforce",
            "sagemaker:UpdateWorkteam",
            "savingsplans:TagResource",
            "savingsplans:UntagResource",
            "schemas:CreateDiscoverer",
            "schemas:CreateRegistry",
            "schemas:CreateSchema",
            "schemas:DeleteDiscoverer",
            "schemas:DeleteRegistry",
            "schemas:DeleteSchema",
            "schemas:DeleteSchemaVersion",
            "schemas:PutCodeBinding",
            "schemas:StartDiscoverer",
            "schemas:StopDiscoverer",
            "schemas:TagResource",
            "schemas:UntagResource",
            "schemas:UpdateDiscoverer",
            "schemas:UpdateRegistry",
            "schemas:UpdateSchema",
            "sdb:BatchDeleteAttributes",
            "sdb:BatchPutAttributes",
            "sdb:CreateDomain",
            "sdb:DeleteAttributes",
            "sdb:DeleteDomain",
            "sdb:PutAttributes",
            "secretsmanager:CancelRotateSecret",
            "secretsmanager:DeleteResourcePolicy",
            "secretsmanager:DeleteSecret",
            "secretsmanager:GetSecretValue",
            "secretsmanager:PutResourcePolicy",
            "secretsmanager:PutSecretValue",
            "secretsmanager:RestoreSecret",
            "secretsmanager:RotateSecret",
            "secretsmanager:TagResource",
            "secretsmanager:UntagResource",
            "secretsmanager:UpdateSecret",
            "secretsmanager:UpdateSecretVersionStage",
            "securityhub:BatchDisableStandards",
            "securityhub:BatchEnableStandards",
            "securityhub:DeleteActionTarget",
            "securityhub:DeleteInsight",
            "securityhub:DisableImportFindingsForProduct",
            "securityhub:EnableImportFindingsForProduct",
            "securityhub:TagResource",
            "securityhub:UntagResource",
            "securityhub:UpdateActionTarget",
            "securityhub:UpdateInsight",
            "securityhub:UpdateStandardsControl",
            "serverlessrepo:CreateApplicationVersion",
            "serverlessrepo:CreateCloudFormationChangeSet",
            "serverlessrepo:CreateCloudFormationTemplate",
            "serverlessrepo:DeleteApplication",
            "serverlessrepo:PutApplicationPolicy",
            "serverlessrepo:UnshareApplication",
            "serverlessrepo:UpdateApplication",
            "servicecatalog:AcceptPortfolioShare",
            "servicecatalog:AssociatePrincipalWithPortfolio",
            "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
            "servicecatalog:AssociateTagOptionWithResource",
            "servicecatalog:CreateConstraint",
            "servicecatalog:CreatePortfolio",
            "servicecatalog:CreatePortfolioShare",
            "servicecatalog:CreateProduct",
            "servicecatalog:CreateProvisioningArtifact",
            "servicecatalog:DeletePortfolio",
            "servicecatalog:DeletePortfolioShare",
            "servicecatalog:DeleteProduct",
            "servicecatalog:DeleteProvisioningArtifact",
            "servicecatalog:DisassociatePrincipalFromPortfolio",
            "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
            "servicecatalog:DisassociateTagOptionFromResource",
            "servicecatalog:ProvisionProduct",
            "servicecatalog:RejectPortfolioShare",
            "servicecatalog:UpdatePortfolio",
            "servicecatalog:UpdateProduct",
            "servicecatalog:UpdateProvisioningArtifact",
            "servicediscovery:DeleteNamespace",
            "servicediscovery:DeleteService",
            "servicediscovery:UpdateService",
            "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
            "servicequotas:RequestServiceQuotaIncrease",
            "ses:CreateConfigurationSet",
            "ses:CreateConfigurationSetEventDestination",
            "ses:CreateDedicatedIpPool",
            "ses:CreateDeliverabilityTestReport",
            "ses:CreateEmailIdentity",
            "ses:DeleteConfigurationSet",
            "ses:DeleteConfigurationSetEventDestination",
            "ses:DeleteDedicatedIpPool",
            "ses:DeleteEmailIdentity",
            "ses:PutConfigurationSetDeliveryOptions",
            "ses:PutConfigurationSetReputationOptions",
            "ses:PutConfigurationSetSendingOptions",
            "ses:PutConfigurationSetTrackingOptions",
            "ses:PutDedicatedIpInPool",
            "ses:PutEmailIdentityDkimAttributes",
            "ses:PutEmailIdentityFeedbackAttributes",
            "ses:PutEmailIdentityMailFromAttributes",
            "ses:SendEmail",
            "ses:TagResource",
            "ses:UntagResource",
            "ses:UpdateConfigurationSetEventDestination",
            "shield:CreateProtection",
            "shield:DeleteProtection",
            "signer:CancelSigningProfile",
            "signer:StartSigningJob",
            "signer:TagResource",
            "signer:UntagResource",
            "sns:AddPermission",
            "sns:ConfirmSubscription",
            "sns:CreateTopic",
            "sns:DeleteTopic",
            "sns:Publish",
            "sns:RemovePermission",
            "sns:SetTopicAttributes",
            "sns:Subscribe",
            "sns:TagResource",
            "sns:UntagResource",
            "sqs:AddPermission",
            "sqs:ChangeMessageVisibility",
            "sqs:ChangeMessageVisibilityBatch",
            "sqs:CreateQueue",
            "sqs:DeleteMessage",
            "sqs:DeleteMessageBatch",
            "sqs:DeleteQueue",
            "sqs:PurgeQueue",
            "sqs:RemovePermission",
            "sqs:SendMessage",
            "sqs:SendMessageBatch",
            "sqs:SetQueueAttributes",
            "sqs:TagQueue",
            "sqs:UntagQueue",
            "ssm:AddTagsToResource",
            "ssm:CreateAssociation",
            "ssm:CreateAssociationBatch",
            "ssm:CreateResourceDataSync",
            "ssm:DeleteAssociation",
            "ssm:DeleteDocument",
            "ssm:DeleteMaintenanceWindow",
            "ssm:DeleteParameter",
            "ssm:DeleteParameters",
            "ssm:DeletePatchBaseline",
            "ssm:DeleteResourceDataSync",
            "ssm:DeregisterManagedInstance",
            "ssm:DeregisterPatchBaselineForPatchGroup",
            "ssm:DeregisterTargetFromMaintenanceWindow",
            "ssm:DeregisterTaskFromMaintenanceWindow",
            "ssm:GetParameter",
            "ssm:GetParameters",
            "ssm:GetParametersByPath",
            "ssm:LabelParameterVersion",
            "ssm:ModifyDocumentPermission",
            "ssm:PutParameter",
            "ssm:RegisterDefaultPatchBaseline",
            "ssm:RegisterPatchBaselineForPatchGroup",
            "ssm:RegisterTargetWithMaintenanceWindow",
            "ssm:RegisterTaskWithMaintenanceWindow",
            "ssm:RemoveTagsFromResource",
            "ssm:ResetServiceSetting",
            "ssm:ResumeSession",
            "ssm:SendCommand",
            "ssm:StartAutomationExecution",
            "ssm:StartSession",
            "ssm:TerminateSession",
            "ssm:UpdateAssociationStatus",
            "ssm:UpdateMaintenanceWindow",
            "ssm:UpdateMaintenanceWindowTarget",
            "ssm:UpdateMaintenanceWindowTask",
            "ssm:UpdateManagedInstanceRole",
            "ssm:UpdatePatchBaseline",
            "ssm:UpdateResourceDataSync",
            "ssm:UpdateServiceSetting",
            "states:CreateActivity",
            "states:CreateStateMachine",
            "states:DeleteActivity",
            "states:DeleteStateMachine",
            "states:GetActivityTask",
            "states:StartExecution",
            "states:TagResource",
            "states:UntagResource",
            "states:UpdateStateMachine",
            "storagegateway:AddCache",
            "storagegateway:AddTagsToResource",
            "storagegateway:AddUploadBuffer",
            "storagegateway:AddWorkingStorage",
            "storagegateway:AttachVolume",
            "storagegateway:CancelArchival",
            "storagegateway:CancelRetrieval",
            "storagegateway:CreateCachediSCSIVolume",
            "storagegateway:CreateNFSFileShare",
            "storagegateway:CreateSMBFileShare",
            "storagegateway:CreateSnapshot",
            "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
            "storagegateway:CreateStorediSCSIVolume",
            "storagegateway:CreateTapeWithBarcode",
            "storagegateway:CreateTapes",
            "storagegateway:DeleteBandwidthRateLimit",
            "storagegateway:DeleteChapCredentials",
            "storagegateway:DeleteFileShare",
            "storagegateway:DeleteGateway",
            "storagegateway:DeleteSnapshotSchedule",
            "storagegateway:DeleteTape",
            "storagegateway:DeleteVolume",
            "storagegateway:DetachVolume",
            "storagegateway:DisableGateway",
            "storagegateway:JoinDomain",
            "storagegateway:NotifyWhenUploaded",
            "storagegateway:RefreshCache",
            "storagegateway:RemoveTagsFromResource",
            "storagegateway:ResetCache",
            "storagegateway:RetrieveTapeArchive",
            "storagegateway:RetrieveTapeRecoveryPoint",
            "storagegateway:SetLocalConsolePassword",
            "storagegateway:SetSMBGuestPassword",
            "storagegateway:ShutdownGateway",
            "storagegateway:StartGateway",
            "storagegateway:UpdateBandwidthRateLimit",
            "storagegateway:UpdateChapCredentials",
            "storagegateway:UpdateGatewayInformation",
            "storagegateway:UpdateGatewaySoftwareNow",
            "storagegateway:UpdateMaintenanceStartTime",
            "storagegateway:UpdateNFSFileShare",
            "storagegateway:UpdateSMBFileShare",
            "storagegateway:UpdateSnapshotSchedule",
            "storagegateway:UpdateVTLDeviceType",
            "sts:AssumeRole",
            "sts:AssumeRoleWithSAML",
            "sts:AssumeRoleWithWebIdentity",
            "sts:TagSession",
            "swf:CancelTimer",
            "swf:CancelWorkflowExecution",
            "swf:CompleteWorkflowExecution",
            "swf:ContinueAsNewWorkflowExecution",
            "swf:DeprecateActivityType",
            "swf:DeprecateDomain",
            "swf:DeprecateWorkflowType",
            "swf:FailWorkflowExecution",
            "swf:PollForActivityTask",
            "swf:PollForDecisionTask",
            "swf:RecordActivityTaskHeartbeat",
            "swf:RecordMarker",
            "swf:RegisterActivityType",
            "swf:RegisterWorkflowType",
            "swf:RequestCancelActivityTask",
            "swf:RequestCancelExternalWorkflowExecution",
            "swf:RequestCancelWorkflowExecution",
            "swf:RespondActivityTaskCanceled",
            "swf:RespondActivityTaskCompleted",
            "swf:RespondActivityTaskFailed",
            "swf:RespondDecisionTaskCompleted",
            "swf:ScheduleActivityTask",
            "swf:SignalExternalWorkflowExecution",
            "swf:SignalWorkflowExecution",
            "swf:StartChildWorkflowExecution",
            "swf:StartTimer",
            "swf:StartWorkflowExecution",
            "swf:TagResource",
            "swf:TerminateWorkflowExecution",
            "swf:UntagResource",
            "synthetics:DeleteCanary",
            "synthetics:StartCanary",
            "synthetics:StopCanary",
            "synthetics:TagResource",
            "synthetics:UntagResource",
            "synthetics:UpdateCanary",
            "transfer:CreateUser",
            "transfer:DeleteServer",
            "transfer:DeleteSshPublicKey",
            "transfer:DeleteUser",
            "transfer:ImportSshPublicKey",
            "transfer:StartServer",
            "transfer:StopServer",
            "transfer:TagResource",
            "transfer:UntagResource",
            "transfer:UpdateServer",
            "transfer:UpdateUser",
            "trustedadvisor:ExcludeCheckItems",
            "trustedadvisor:IncludeCheckItems",
            "trustedadvisor:RefreshCheck",
            "waf-regional:AssociateWebACL",
            "waf-regional:CreateByteMatchSet",
            "waf-regional:CreateGeoMatchSet",
            "waf-regional:CreateIPSet",
            "waf-regional:CreateRateBasedRule",
            "waf-regional:CreateRegexMatchSet",
            "waf-regional:CreateRegexPatternSet",
            "waf-regional:CreateRule",
            "waf-regional:CreateRuleGroup",
            "waf-regional:CreateSizeConstraintSet",
            "waf-regional:CreateSqlInjectionMatchSet",
            "waf-regional:CreateWebACL",
            "waf-regional:CreateXssMatchSet",
            "waf-regional:DeleteByteMatchSet",
            "waf-regional:DeleteGeoMatchSet",
            "waf-regional:DeleteIPSet",
            "waf-regional:DeleteLoggingConfiguration",
            "waf-regional:DeletePermissionPolicy",
            "waf-regional:DeleteRateBasedRule",
            "waf-regional:DeleteRegexMatchSet",
            "waf-regional:DeleteRegexPatternSet",
            "waf-regional:DeleteRule",
            "waf-regional:DeleteRuleGroup",
            "waf-regional:DeleteSizeConstraintSet",
            "waf-regional:DeleteSqlInjectionMatchSet",
            "waf-regional:DeleteWebACL",
            "waf-regional:DeleteXssMatchSet",
            "waf-regional:DisassociateWebACL",
            "waf-regional:PutLoggingConfiguration",
            "waf-regional:PutPermissionPolicy",
            "waf-regional:TagResource",
            "waf-regional:UntagResource",
            "waf-regional:UpdateByteMatchSet",
            "waf-regional:UpdateGeoMatchSet",
            "waf-regional:UpdateIPSet",
            "waf-regional:UpdateRateBasedRule",
            "waf-regional:UpdateRegexMatchSet",
            "waf-regional:UpdateRegexPatternSet",
            "waf-regional:UpdateRule",
            "waf-regional:UpdateRuleGroup",
            "waf-regional:UpdateSizeConstraintSet",
            "waf-regional:UpdateSqlInjectionMatchSet",
            "waf-regional:UpdateWebACL",
            "waf-regional:UpdateXssMatchSet",
            "waf:CreateByteMatchSet",
            "waf:CreateGeoMatchSet",
            "waf:CreateIPSet",
            "waf:CreateRateBasedRule",
            "waf:CreateRegexMatchSet",
            "waf:CreateRegexPatternSet",
            "waf:CreateRule",
            "waf:CreateRuleGroup",
            "waf:CreateSizeConstraintSet",
            "waf:CreateSqlInjectionMatchSet",
            "waf:CreateWebACL",
            "waf:CreateXssMatchSet",
            "waf:DeleteByteMatchSet",
            "waf:DeleteGeoMatchSet",
            "waf:DeleteIPSet",
            "waf:DeleteLoggingConfiguration",
            "waf:DeletePermissionPolicy",
            "waf:DeleteRateBasedRule",
            "waf:DeleteRegexMatchSet",
            "waf:DeleteRegexPatternSet",
            "waf:DeleteRule",
            "waf:DeleteRuleGroup",
            "waf:DeleteSizeConstraintSet",
            "waf:DeleteSqlInjectionMatchSet",
            "waf:DeleteWebACL",
            "waf:DeleteXssMatchSet",
            "waf:PutLoggingConfiguration",
            "waf:PutPermissionPolicy",
            "waf:TagResource",
            "waf:UntagResource",
            "waf:UpdateByteMatchSet",
            "waf:UpdateGeoMatchSet",
            "waf:UpdateIPSet",
            "waf:UpdateRateBasedRule",
            "waf:UpdateRegexMatchSet",
            "waf:UpdateRegexPatternSet",
            "waf:UpdateRule",
            "waf:UpdateRuleGroup",
            "waf:UpdateSizeConstraintSet",
            "waf:UpdateSqlInjectionMatchSet",
            "waf:UpdateWebACL",
            "waf:UpdateXssMatchSet",
            "wafv2:AssociateWebACL",
            "wafv2:CreateIPSet",
            "wafv2:CreateRegexPatternSet",
            "wafv2:CreateRuleGroup",
            "wafv2:CreateWebACL",
            "wafv2:DeleteIPSet",
            "wafv2:DeleteLoggingConfiguration",
            "wafv2:DeleteRegexPatternSet",
            "wafv2:DeleteRuleGroup",
            "wafv2:DeleteWebACL",
            "wafv2:DisassociateWebACL",
            "wafv2:PutLoggingConfiguration",
            "wafv2:TagResource",
            "wafv2:UntagResource",
            "wafv2:UpdateIPSet",
            "wafv2:UpdateRegexPatternSet",
            "wafv2:UpdateRuleGroup",
            "wafv2:UpdateWebACL",
            "wellarchitected:CreateWorkloadShare",
            "wellarchitected:DeleteWorkload",
            "worklink:AssociateDomain",
            "worklink:AssociateWebsiteAuthorizationProvider",
            "worklink:AssociateWebsiteCertificateAuthority",
            "worklink:DeleteFleet",
            "worklink:DisassociateDomain",
            "worklink:DisassociateWebsiteAuthorizationProvider",
            "worklink:DisassociateWebsiteCertificateAuthority",
            "worklink:RestoreDomainAccess",
            "worklink:RevokeDomainAccess",
            "worklink:SignOutUser",
            "worklink:UpdateAuditStreamConfiguration",
            "worklink:UpdateCompanyNetworkConfiguration",
            "worklink:UpdateDevicePolicyConfiguration",
            "worklink:UpdateDomainMetadata",
            "worklink:UpdateFleetMetadata",
            "worklink:UpdateIdentityProviderConfiguration",
            "workmail:AddMembersToGroup",
            "workmail:AssociateDelegateToResource",
            "workmail:AssociateMemberToGroup",
            "workmail:CreateAlias",
            "workmail:CreateGroup",
            "workmail:CreateInboundMailFlowRule",
            "workmail:CreateMailDomain",
            "workmail:CreateMailUser",
            "workmail:CreateOutboundMailFlowRule",
            "workmail:CreateResource",
            "workmail:CreateSmtpGateway",
            "workmail:CreateUser",
            "workmail:DeleteAccessControlRule",
            "workmail:DeleteAlias",
            "workmail:DeleteGroup",
            "workmail:DeleteInboundMailFlowRule",
            "workmail:DeleteMailDomain",
            "workmail:DeleteMailboxPermissions",
            "workmail:DeleteMobileDevice",
            "workmail:DeleteOrganization",
            "workmail:DeleteOutboundMailFlowRule",
            "workmail:DeleteResource",
            "workmail:DeleteSmtpGateway",
            "workmail:DeleteUser",
            "workmail:DeregisterFromWorkMail",
            "workmail:DisableMailGroups",
            "workmail:DisableMailUsers",
            "workmail:DisassociateDelegateFromResource",
            "workmail:DisassociateMemberFromGroup",
            "workmail:EnableMailDomain",
            "workmail:EnableMailGroups",
            "workmail:EnableMailUsers",
            "workmail:PutAccessControlRule",
            "workmail:PutMailboxPermissions",
            "workmail:RegisterToWorkMail",
            "workmail:RemoveMembersFromGroup",
            "workmail:ResetPassword",
            "workmail:ResetUserPassword",
            "workmail:SetAdmin",
            "workmail:SetDefaultMailDomain",
            "workmail:SetJournalingRules",
            "workmail:SetMailGroupDetails",
            "workmail:SetMailUserDetails",
            "workmail:SetMobilePolicyDetails",
            "workmail:TagResource",
            "workmail:TestInboundMailFlowRules",
            "workmail:TestOutboundMailFlowRules",
            "workmail:UntagResource",
            "workmail:UpdateInboundMailFlowRule",
            "workmail:UpdateMailboxQuota",
            "workmail:UpdateOutboundMailFlowRule",
            "workmail:UpdatePrimaryEmailAddress",
            "workmail:UpdateResource",
            "workmail:UpdateSmtpGateway",
            "workmail:WipeMobileDevice",
            "workspaces:AuthorizeIpRules",
            "workspaces:CreateWorkspaces",
            "workspaces:DeleteIpGroup",
            "workspaces:ModifyClientProperties",
            "workspaces:ModifyWorkspaceProperties",
            "workspaces:ModifyWorkspaceState",
            "workspaces:RebootWorkspaces",
            "workspaces:RebuildWorkspaces",
            "workspaces:RevokeIpRules",
            "workspaces:StartWorkspaces",
            "workspaces:StopWorkspaces",
            "workspaces:TerminateWorkspaces",
            "workspaces:UpdateRulesOfIpGroup",
            "xray:CreateGroup",
            "xray:CreateSamplingRule",
            "xray:DeleteGroup",
            "xray:DeleteSamplingRule",
            "xray:UpdateGroup",
            "xray:UpdateSamplingRule"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "NotAction": [
                        "iam:*",
                        "organizations:*",
                        "account:*"
                    ],
                    "Resource": "*"
                },
                {
                    "Effect": "Allow",
                    "Action": [
                        "iam:CreateServiceLinkedRole",
                        "iam:DeleteServiceLinkedRole",
                        "iam:ListRoles",
                        "organizations:DescribeOrganization",
                        "account:ListRegions"
                    ],
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [
            {
                "type": "UpdateExistingGlueDevEndpoint",
                "actions": [
                    "glue:updatedevendpoint"
                ]
            },
            {
                "type": "EditExistingLambdaFunctionWithRole",
                "actions": [
                    "lambda:updatefunctioncode"
                ]
            }
        ],
        "DataExfiltrationActions": [
            "s3:GetObject",
            "ssm:GetParameter",
            "ssm:GetParameters",
            "ssm:GetParametersByPath",
            "secretsmanager:GetSecretValue"
        ],
        "PermissionsManagementActions": [
            "acm-pca:CreatePermission",
            "acm-pca:DeletePermission",
            "apigateway:UpdateRestApiPolicy",
            "backup:DeleteBackupVaultAccessPolicy",
            "backup:PutBackupVaultAccessPolicy",
            "chime:DeleteVoiceConnectorTerminationCredentials",
            "chime:PutVoiceConnectorTerminationCredentials",
            "cloudformation:SetStackPolicy",
            "cloudsearch:UpdateServiceAccessPolicies",
            "codebuild:DeleteResourcePolicy",
            "codebuild:DeleteSourceCredentials",
            "codebuild:ImportSourceCredentials",
            "codebuild:PutResourcePolicy",
            "codeguru-profiler:PutPermission",
            "codeguru-profiler:RemovePermission",
            "codestar:AssociateTeamMember",
            "codestar:CreateProject",
            "codestar:DeleteProject",
            "codestar:DisassociateTeamMember",
            "codestar:UpdateTeamMember",
            "cognito-identity:CreateIdentityPool",
            "cognito-identity:DeleteIdentities",
            "cognito-identity:DeleteIdentityPool",
            "cognito-identity:GetId",
            "cognito-identity:MergeDeveloperIdentities",
            "cognito-identity:SetIdentityPoolRoles",
            "cognito-identity:UnlinkDeveloperIdentity",
            "cognito-identity:UnlinkIdentity",
            "cognito-identity:UpdateIdentityPool",
            "deeplens:AssociateServiceRoleToAccount",
            "ds:CreateConditionalForwarder",
            "ds:CreateDirectory",
            "ds:CreateMicrosoftAD",
            "ds:CreateTrust",
            "ds:ShareDirectory",
            "ec2:CreateNetworkInterfacePermission",
            "ec2:DeleteNetworkInterfacePermission",
            "ec2:ModifySnapshotAttribute",
            "ec2:ModifyVpcEndpointServicePermissions",
            "ec2:ResetSnapshotAttribute",
            "ecr:DeleteRepositoryPolicy",
            "ecr:SetRepositoryPolicy",
            "elasticfilesystem:DeleteFileSystemPolicy",
            "elasticfilesystem:PutFileSystemPolicy",
            "elasticmapreduce:PutBlockPublicAccessConfiguration",
            "es:CreateElasticsearchDomain",
            "es:UpdateElasticsearchDomainConfig",
            "glacier:AbortVaultLock",
            "glacier:CompleteVaultLock",
            "glacier:DeleteVaultAccessPolicy",
            "glacier:InitiateVaultLock",
            "glacier:SetDataRetrievalPolicy",
            "glacier:SetVaultAccessPolicy",
            "glue:DeleteResourcePolicy",
            "glue:PutResourcePolicy",
            "greengrass:AssociateServiceRoleToAccount",
            "health:DisableHealthServiceAccessForOrganization",
            "health:EnableHealthServiceAccessForOrganization",
            "imagebuilder:PutComponentPolicy",
            "imagebuilder:PutImagePolicy",
            "imagebuilder:PutImageRecipePolicy",
            "iot:AttachPolicy",
            "iot:AttachPrincipalPolicy",
            "iot:DetachPolicy",
            "iot:DetachPrincipalPolicy",
            "iot:SetDefaultAuthorizer",
            "iot:SetDefaultPolicyVersion",
            "iotsitewise:CreateAccessPolicy",
            "iotsitewise:DeleteAccessPolicy",
            "iotsitewise:UpdateAccessPolicy",
            "kms:CreateGrant",
            "kms:PutKeyPolicy",
            "kms:RetireGrant",
            "kms:RevokeGrant",
            "lakeformation:BatchGrantPermissions",
            "lakeformation:BatchRevokePermissions",
            "lakeformation:GrantPermissions",
            "lakeformation:PutDataLakeSettings",
            "lakeformation:RevokePermissions",
            "lambda:AddLayerVersionPermission",
            "lambda:AddPermission",
            "lambda:DisableReplication",
            "lambda:EnableReplication",
            "lambda:RemoveLayerVersionPermission",
            "lambda:RemovePermission",
            "license-manager:UpdateServiceSettings",
            "lightsail:GetRelationalDatabaseMasterUserPassword",
            "logs:DeleteResourcePolicy",
            "logs:PutResourcePolicy",
            "mediapackage:RotateIngestEndpointCredentials",
            "mediastore:DeleteContainerPolicy",
            "mediastore:PutContainerPolicy",
            "opsworks:SetPermission",
            "opsworks:UpdateUserProfile",
            "quicksight:CreateAdmin",
            "quicksight:CreateGroup",
            "quicksight:CreateGroupMembership",
            "quicksight:CreateIAMPolicyAssignment",
            "quicksight:CreateUser",
            "quicksight:DeleteGroup",
            "quicksight:DeleteGroupMembership",
            "quicksight:DeleteIAMPolicyAssignment",
            "quicksight:DeleteUser",
            "quicksight:DeleteUserByPrincipalId",
            "quicksight:RegisterUser",
            "quicksight:UpdateDashboardPermissions",
            "quicksight:UpdateGroup",
            "quicksight:UpdateIAMPolicyAssignment",
            "quicksight:UpdateTemplatePermissions",
            "quicksight:UpdateUser",
            "ram:AcceptResourceShareInvitation",
            "ram:AssociateResourceShare",
            "ram:CreateResourceShare",
            "ram:DeleteResourceShare",
            "ram:DisassociateResourceShare",
            "ram:EnableSharingWithAwsOrganization",
            "ram:RejectResourceShareInvitation",
            "ram:UpdateResourceShare",
            "rds-db:connect",
            "rds:AuthorizeDBSecurityGroupIngress",
            "redshift:AuthorizeSnapshotAccess",
            "redshift:CreateClusterUser",
            "redshift:CreateSnapshotCopyGrant",
            "redshift:JoinGroup",
            "redshift:ModifyClusterIamRoles",
            "redshift:RevokeSnapshotAccess",
            "route53resolver:PutResolverRulePolicy",
            "s3:BypassGovernanceRetention",
            "s3:DeleteAccessPointPolicy",
            "s3:DeleteBucketPolicy",
            "s3:ObjectOwnerOverrideToBucketOwner",
            "s3:PutAccessPointPolicy",
            "s3:PutAccountPublicAccessBlock",
            "s3:PutBucketAcl",
            "s3:PutBucketPolicy",
            "s3:PutBucketPublicAccessBlock",
            "s3:PutObjectAcl",
            "s3:PutObjectVersionAcl",
            "secretsmanager:DeleteResourcePolicy",
            "secretsmanager:PutResourcePolicy",
            "servicecatalog:CreatePortfolioShare",
            "servicecatalog:DeletePortfolioShare",
            "sns:AddPermission",
            "sns:CreateTopic",
            "sns:RemovePermission",
            "sns:SetTopicAttributes",
            "sqs:AddPermission",
            "sqs:CreateQueue",
            "sqs:RemovePermission",
            "sqs:SetQueueAttributes",
            "ssm:ModifyDocumentPermission",
            "sso-directory:AddMemberToGroup",
            "sso-directory:CreateAlias",
            "sso-directory:CreateGroup",
            "sso-directory:CreateUser",
            "sso-directory:DeleteGroup",
            "sso-directory:DeleteUser",
            "sso-directory:DisableUser",
            "sso-directory:EnableUser",
            "sso-directory:RemoveMemberFromGroup",
            "sso-directory:UpdateGroup",
            "sso-directory:UpdatePassword",
            "sso-directory:UpdateUser",
            "sso-directory:VerifyEmail",
            "sso:AssociateDirectory",
            "sso:AssociateProfile",
            "sso:CreateApplicationInstance",
            "sso:CreateApplicationInstanceCertificate",
            "sso:CreatePermissionSet",
            "sso:CreateProfile",
            "sso:CreateTrust",
            "sso:DeleteApplicationInstance",
            "sso:DeleteApplicationInstanceCertificate",
            "sso:DeletePermissionSet",
            "sso:DeletePermissionsPolicy",
            "sso:DeleteProfile",
            "sso:DisassociateDirectory",
            "sso:DisassociateProfile",
            "sso:ImportApplicationInstanceServiceProviderMetadata",
            "sso:PutPermissionsPolicy",
            "sso:StartSSO",
            "sso:UpdateApplicationInstanceActiveCertificate",
            "sso:UpdateApplicationInstanceDisplayData",
            "sso:UpdateApplicationInstanceResponseConfiguration",
            "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
            "sso:UpdateApplicationInstanceSecurityConfiguration",
            "sso:UpdateApplicationInstanceServiceProviderConfiguration",
            "sso:UpdateApplicationInstanceStatus",
            "sso:UpdateDirectoryAssociation",
            "sso:UpdatePermissionSet",
            "sso:UpdateProfile",
            "sso:UpdateSSOConfiguration",
            "sso:UpdateTrust",
            "storagegateway:DeleteChapCredentials",
            "storagegateway:SetLocalConsolePassword",
            "storagegateway:SetSMBGuestPassword",
            "storagegateway:UpdateChapCredentials",
            "waf-regional:DeletePermissionPolicy",
            "waf-regional:PutPermissionPolicy",
            "waf:DeletePermissionPolicy",
            "waf:PutPermissionPolicy",
            "wafv2:CreateWebACL",
            "wafv2:DeleteWebACL",
            "wafv2:UpdateWebACL",
            "worklink:UpdateDevicePolicyConfiguration",
            "workmail:ResetPassword",
            "workmail:ResetUserPassword",
            "xray:PutEncryptionConfig",
            "iam:CreateServiceLinkedRole",
            "iam:DeleteServiceLinkedRole"
        ]
    },
    {
        "AccountID": "N/A",
        "ManagedBy": "AWS",
        "PolicyName": "ReadOnlyAccess",
        "Type": "Policy",
        "Arn": "arn:aws:iam::aws:policy/ReadOnlyAccess",
        "ActionsCount": 7,
        "ServicesCount": 5,
        "Services": [
            "dataexchange",
            "mobilehub",
            "personalize",
            "s3",
            "ssm"
        ],
        "Actions": [
            "dataexchange:GetJob",
            "mobilehub:GenerateProjectParameters",
            "personalize:GetPersonalizedRanking",
            "s3:GetObject",
            "ssm:GetParameter",
            "ssm:GetParameters",
            "ssm:GetParametersByPath"
        ],
        "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": [
                        "a4b:Get*",
                        "a4b:List*",
                        "a4b:Search*",
                        "access-analyzer:GetAnalyzedResource",
                        "access-analyzer:GetAnalyzer",
                        "access-analyzer:GetArchiveRule",
                        "access-analyzer:GetFinding",
                        "access-analyzer:ListAnalyzedResources",
                        "access-analyzer:ListAnalyzers",
                        "access-analyzer:ListArchiveRules",
                        "access-analyzer:ListFindings",
                        "access-analyzer:ListTagsForResource",
                        "acm:Describe*",
                        "acm:Get*",
                        "acm:List*",
                        "acm-pca:Describe*",
                        "acm-pca:Get*",
                        "acm-pca:List*",
                        "amplify:GetApp",
                        "amplify:GetBranch",
                        "amplify:GetJob",
                        "amplify:GetDomainAssociation",
                        "amplify:ListApps",
                        "amplify:ListBranches",
                        "amplify:ListDomainAssociations",
                        "amplify:ListJobs",
                        "apigateway:GET",
                        "application-autoscaling:Describe*",
                        "applicationinsights:Describe*",
                        "applicationinsights:List*",
                        "appmesh:Describe*",
                        "appmesh:List*",
                        "appstream:Describe*",
                        "appstream:Get*",
                        "appstream:List*",
                        "appsync:Get*",
                        "appsync:List*",
                        "autoscaling:Describe*",
                        "autoscaling-plans:Describe*",
                        "autoscaling-plans:GetScalingPlanResourceForecastData",
                        "athena:List*",
                        "athena:Batch*",
                        "athena:Get*",
                        "backup:Describe*",
                        "backup:Get*",
                        "backup:List*",
                        "batch:List*",
                        "batch:Describe*",
                        "chatbot:Describe*",
                        "chatbot:Get*",
                        "chime:Get*",
                        "chime:List*",
                        "chime:Retrieve*",
                        "chime:Search*",
                        "chime:Validate*",
                        "cloud9:Describe*",
                        "cloud9:List*",
                        "clouddirectory:List*",
                        "clouddirectory:BatchRead",
                        "clouddirectory:Get*",
                        "clouddirectory:LookupPolicy",
                        "cloudformation:Describe*",
                        "cloudformation:Detect*",
                        "cloudformation:Get*",
                        "cloudformation:List*",
                        "cloudformation:Estimate*",
                        "cloudfront:Get*",
                        "cloudfront:List*",
                        "cloudhsm:List*",
                        "cloudhsm:Describe*",
                        "cloudhsm:Get*",
                        "cloudsearch:Describe*",
                        "cloudsearch:List*",
                        "cloudtrail:Describe*",
                        "cloudtrail:Get*",
                        "cloudtrail:List*",
                        "cloudtrail:LookupEvents",
                        "cloudwatch:Describe*",
                        "cloudwatch:Get*",
                        "cloudwatch:List*",
                        "codebuild:BatchGet*",
                        "codebuild:DescribeTestCases",
                        "codebuild:List*",
                        "codecommit:BatchGet*",
                        "codecommit:Describe*",
                        "codecommit:Get*",
                        "codecommit:GitPull",
                        "codecommit:List*",
                        "codedeploy:BatchGet*",
                        "codedeploy:Get*",
                        "codedeploy:List*",
                        "codeguru-profiler:Describe*",
                        "codeguru-profiler:Get*",
                        "codeguru-profiler:List*",
                        "codeguru-reviewer:Describe*",
                        "codeguru-reviewer:Get*",
                        "codeguru-reviewer:List*",
                        "codepipeline:List*",
                        "codepipeline:Get*",
                        "codestar:List*",
                        "codestar:Describe*",
                        "codestar:Get*",
                        "codestar:Verify*",
                        "codestar-notifications:describeNotificationRule",
                        "codestar-notifications:listEventTypes",
                        "codestar-notifications:listNotificationRules",
                        "codestar-notifications:listTagsForResource",
                        "codestar-notifications:ListTargets",
                        "compute-optimizer:GetAutoScalingGroupRecommendations",
                        "compute-optimizer:GetEC2InstanceRecommendations",
                        "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                        "compute-optimizer:GetEnrollmentStatus",
                        "compute-optimizer:GetRecommendationSummaries",
                        "cognito-identity:Describe*",
                        "cognito-identity:GetCredentialsForIdentity",
                        "cognito-identity:GetIdentityPoolRoles",
                        "cognito-identity:GetOpenIdToken",
                        "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                        "cognito-identity:List*",
                        "cognito-identity:Lookup*",
                        "cognito-sync:List*",
                        "cognito-sync:Describe*",
                        "cognito-sync:Get*",
                        "cognito-sync:QueryRecords",
                        "cognito-idp:AdminGet*",
                        "cognito-idp:AdminList*",
                        "cognito-idp:List*",
                        "cognito-idp:Describe*",
                        "cognito-idp:Get*",
                        "config:Deliver*",
                        "config:Describe*",
                        "config:Get*",
                        "config:List*",
                        "config:SelectResourceConfig",
                        "connect:List*",
                        "connect:Describe*",
                        "connect:GetFederationToken",
                        "dataexchange:Get*",
                        "dataexchange:List*",
                        "datasync:Describe*",
                        "datasync:List*",
                        "datapipeline:Describe*",
                        "datapipeline:EvaluateExpression",
                        "datapipeline:Get*",
                        "datapipeline:List*",
                        "datapipeline:QueryObjects",
                        "datapipeline:Validate*",
                        "dax:BatchGetItem",
                        "dax:Describe*",
                        "dax:GetItem",
                        "dax:ListTags",
                        "dax:Query",
                        "dax:Scan",
                        "directconnect:Describe*",
                        "detective:Get*",
                        "detective:List*",
                        "devicefarm:List*",
                        "devicefarm:Get*",
                        "discovery:Describe*",
                        "discovery:List*",
                        "discovery:Get*",
                        "dlm:Get*",
                        "dms:Describe*",
                        "dms:List*",
                        "dms:Test*",
                        "ds:Check*",
                        "ds:Describe*",
                        "ds:Get*",
                        "ds:List*",
                        "ds:Verify*",
                        "dynamodb:BatchGet*",
                        "dynamodb:Describe*",
                        "dynamodb:Get*",
                        "dynamodb:List*",
                        "dynamodb:Query",
                        "dynamodb:Scan",
                        "ec2:Describe*",
                        "ec2:Get*",
                        "ec2:SearchTransitGatewayRoutes",
                        "ec2messages:Get*",
                        "ecr:BatchCheck*",
                        "ecr:BatchGet*",
                        "ecr:Describe*",
                        "ecr:Get*",
                        "ecr:List*",
                        "ecs:Describe*",
                        "ecs:List*",
                        "eks:DescribeCluster",
                        "eks:DescribeUpdate",
                        "eks:Describe*",
                        "eks:ListClusters",
                        "eks:ListUpdates",
                        "eks:List*",
                        "elasticache:Describe*",
                        "elasticache:List*",
                        "elasticbeanstalk:Check*",
                        "elasticbeanstalk:Describe*",
                        "elasticbeanstalk:List*",
                        "elasticbeanstalk:Request*",
                        "elasticbeanstalk:Retrieve*",
                        "elasticbeanstalk:Validate*",
                        "elasticfilesystem:Describe*",
                        "elasticloadbalancing:Describe*",
                        "elasticmapreduce:Describe*",
                        "elasticmapreduce:List*",
                        "elasticmapreduce:View*",
                        "elastictranscoder:List*",
                        "elastictranscoder:Read*",
                        "elemental-appliances-software:Get*",
                        "elemental-appliances-software:List*",
                        "es:Describe*",
                        "es:List*",
                        "es:Get*",
                        "es:ESHttpGet",
                        "es:ESHttpHead",
                        "events:Describe*",
                        "events:List*",
                        "events:Test*",
                        "firehose:Describe*",
                        "firehose:List*",
                        "fsx:Describe*",
                        "fsx:List*",
                        "gamelift:List*",
                        "gamelift:Get*",
                        "gamelift:Describe*",
                        "gamelift:RequestUploadCredentials",
                        "gamelift:ResolveAlias",
                        "gamelift:Search*",
                        "glacier:List*",
                        "glacier:Describe*",
                        "glacier:Get*",
                        "globalaccelerator:Describe*",
                        "globalaccelerator:List*",
                        "glue:BatchGetPartition",
                        "glue:GetCatalogImportStatus",
                        "glue:GetClassifier",
                        "glue:GetClassifiers",
                        "glue:GetCrawler",
                        "glue:GetCrawlers",
                        "glue:GetCrawlerMetrics",
                        "glue:GetDatabase",
                        "glue:GetDatabases",
                        "glue:GetDataCatalogEncryptionSettings",
                        "glue:GetDataflowGraph",
                        "glue:GetDevEndpoint",
                        "glue:GetDevEndpoints",
                        "glue:GetJob",
                        "glue:GetJobs",
                        "glue:GetJobRun",
                        "glue:GetJobRuns",
                        "glue:GetPartition",
                        "glue:GetPartitions",
                        "glue:GetPlan",
                        "glue:GetResourcePolicy",
                        "glue:GetSecurityConfiguration",
                        "glue:GetSecurityConfigurations",
                        "glue:GetTable",
                        "glue:GetTables",
                        "glue:GetTableVersion",
                        "glue:GetTableVersions",
                        "glue:GetTags",
                        "glue:GetTrigger",
                        "glue:GetTriggers",
                        "glue:GetUserDefinedFunction",
                        "glue:GetUserDefinedFunctions",
                        "greengrass:Get*",
                        "greengrass:List*",
                        "guardduty:Get*",
                        "guardduty:List*",
                        "health:Describe*",
                        "health:List*",
                        "iam:Generate*",
                        "iam:Get*",
                        "iam:List*",
                        "iam:Simulate*",
                        "imagebuilder:Get*",
                        "imagebuilder:List*",
                        "importexport:Get*",
                        "importexport:List*",
                        "inspector:Describe*",
                        "inspector:Get*",
                        "inspector:List*",
                        "inspector:Preview*",
                        "iot:Describe*",
                        "iot:Get*",
                        "iot:List*",
                        "iotanalytics:Describe*",
                        "iotanalytics:List*",
                        "iotanalytics:Get*",
                        "iotanalytics:SampleChannelData",
                        "kafka:Describe*",
                        "kafka:List*",
                        "kafka:Get*",
                        "kinesisanalytics:Describe*",
                        "kinesisanalytics:Discover*",
                        "kinesisanalytics:Get*",
                        "kinesisanalytics:List*",
                        "kinesisvideo:Describe*",
                        "kinesisvideo:Get*",
                        "kinesisvideo:List*",
                        "kinesis:Describe*",
                        "kinesis:Get*",
                        "kinesis:List*",
                        "kms:Describe*",
                        "kms:Get*",
                        "kms:List*",
                        "lambda:List*",
                        "lambda:Get*",
                        "lex:Get*",
                        "lightsail:GetActiveNames",
                        "lightsail:GetBlueprints",
                        "lightsail:GetBundles",
                        "lightsail:GetCloudFormationStackRecords",
                        "lightsail:GetDisk",
                        "lightsail:GetDisks",
                        "lightsail:GetDiskSnapshot",
                        "lightsail:GetDiskSnapshots",
                        "lightsail:GetDomain",
                        "lightsail:GetDomains",
                        "lightsail:GetExportSnapshotRecords",
                        "lightsail:GetInstance",
                        "lightsail:GetInstanceMetricData",
                        "lightsail:GetInstancePortStates",
                        "lightsail:GetInstances",
                        "lightsail:GetInstanceSnapshot",
                        "lightsail:GetInstanceSnapshots",
                        "lightsail:GetInstanceState",
                        "lightsail:GetKeyPair",
                        "lightsail:GetKeyPairs",
                        "lightsail:GetLoadBalancer",
                        "lightsail:GetLoadBalancerMetricData",
                        "lightsail:GetLoadBalancers",
                        "lightsail:GetLoadBalancerTlsCertificates",
                        "lightsail:GetOperation",
                        "lightsail:GetOperations",
                        "lightsail:GetOperationsForResource",
                        "lightsail:GetRegions",
                        "lightsail:GetRelationalDatabase",
                        "lightsail:GetRelationalDatabaseBlueprints",
                        "lightsail:GetRelationalDatabaseBundles",
                        "lightsail:GetRelationalDatabaseEvents",
                        "lightsail:GetRelationalDatabaseLogEvents",
                        "lightsail:GetRelationalDatabaseLogStreams",
                        "lightsail:GetRelationalDatabaseMetricData",
                        "lightsail:GetRelationalDatabaseParameters",
                        "lightsail:GetRelationalDatabases",
                        "lightsail:GetRelationalDatabaseSnapshot",
                        "lightsail:GetRelationalDatabaseSnapshots",
                        "lightsail:GetStaticIp",
                        "lightsail:GetStaticIps",
                        "lightsail:Is*",
                        "logs:Describe*",
                        "logs:Get*",
                        "logs:FilterLogEvents",
                        "logs:ListTagsLogGroup",
                        "logs:StartQuery",
                        "logs:TestMetricFilter",
                        "machinelearning:Describe*",
                        "machinelearning:Get*",
                        "mediaconvert:DescribeEndpoints",
                        "mediaconvert:Get*",
                        "mediaconvert:List*",
                        "mediapackage:List*",
                        "mediapackage:Describe*",
                        "mgh:Describe*",
                        "mgh:GetHomeRegion",
                        "mgh:List*",
                        "mobileanalytics:Get*",
                        "mobilehub:Describe*",
                        "mobilehub:Export*",
                        "mobilehub:Generate*",
                        "mobilehub:Get*",
                        "mobilehub:List*",
                        "mobilehub:Validate*",
                        "mobilehub:Verify*",
                        "mobiletargeting:Get*",
                        "mobiletargeting:List*",
                        "mq:Describe*",
                        "mq:List*",
                        "opsworks:Describe*",
                        "opsworks:Get*",
                        "opsworks-cm:Describe*",
                        "organizations:Describe*",
                        "organizations:List*",
                        "outposts:Get*",
                        "outposts:List*",
                        "personalize:Describe*",
                        "personalize:Get*",
                        "personalize:List*",
                        "pi:DescribeDimensionKeys",
                        "pi:GetResourceMetrics",
                        "polly:Describe*",
                        "polly:Get*",
                        "polly:List*",
                        "polly:SynthesizeSpeech",
                        "qldb:ListLedgers",
                        "qldb:DescribeLedger",
                        "qldb:ListJournalS3Exports",
                        "qldb:ListJournalS3ExportsForLedger",
                        "qldb:DescribeJournalS3Export",
                        "qldb:GetBlock",
                        "qldb:GetDigest",
                        "qldb:GetRevision",
                        "qldb:GetBlock",
                        "qldb:ListTagsForResource",
                        "ram:Get*",
                        "ram:List*",
                        "rekognition:CompareFaces",
                        "rekognition:Detect*",
                        "rekognition:List*",
                        "rekognition:Search*",
                        "rds:Describe*",
                        "rds:List*",
                        "rds:Download*",
                        "redshift:Describe*",
                        "redshift:GetReservedNodeExchangeOfferings",
                        "redshift:View*",
                        "resource-groups:Get*",
                        "resource-groups:List*",
                        "resource-groups:Search*",
                        "robomaker:BatchDescribe*",
                        "robomaker:Describe*",
                        "robomaker:List*",
                        "route53:Get*",
                        "route53:List*",
                        "route53:Test*",
                        "route53domains:Check*",
                        "route53domains:Get*",
                        "route53domains:List*",
                        "route53domains:View*",
                        "route53resolver:Get*",
                        "route53resolver:List*",
                        "s3:Get*",
                        "s3:List*",
                        "sagemaker:Describe*",
                        "sagemaker:GetSearchSuggestions",
                        "sagemaker:List*",
                        "sagemaker:Search",
                        "schemas:Describe*",
                        "schemas:Get*",
                        "schemas:List*",
                        "schemas:Search*",
                        "sdb:Get*",
                        "sdb:List*",
                        "sdb:Select*",
                        "secretsmanager:List*",
                        "secretsmanager:Describe*",
                        "secretsmanager:GetResourcePolicy",
                        "securityhub:Describe*",
                        "securityhub:Get*",
                        "securityhub:List*",
                        "serverlessrepo:List*",
                        "serverlessrepo:Get*",
                        "serverlessrepo:SearchApplications",
                        "servicecatalog:List*",
                        "servicecatalog:Scan*",
                        "servicecatalog:Search*",
                        "servicecatalog:Describe*",
                        "servicediscovery:Get*",
                        "servicediscovery:List*",
                        "servicequotas:GetAssociationForServiceQuotaTemplate",
                        "servicequotas:GetAWSDefaultServiceQuota",
                        "servicequotas:GetRequestedServiceQuotaChange",
                        "servicequotas:GetServiceQuota",
                        "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                        "servicequotas:ListAWSDefaultServiceQuotas",
                        "servicequotas:ListRequestedServiceQuotaChangeHistory",
                        "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                        "servicequotas:ListServices",
                        "servicequotas:ListServiceQuotas",
                        "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                        "ses:Get*",
                        "ses:List*",
                        "ses:Describe*",
                        "shield:Describe*",
                        "shield:Get*",
                        "shield:List*",
                        "snowball:Get*",
                        "snowball:Describe*",
                        "snowball:List*",
                        "sns:Get*",
                        "sns:List*",
                        "sns:Check*",
                        "sqs:Get*",
                        "sqs:List*",
                        "sqs:Receive*",
                        "ssm:Describe*",
                        "ssm:Get*",
                        "ssm:List*",
                        "states:List*",
                        "states:Describe*",
                        "states:GetExecutionHistory",
                        "storagegateway:Describe*",
                        "storagegateway:List*",
                        "sts:Get*",
                        "swf:Count*",
                        "swf:Describe*",
                        "swf:Get*",
                        "swf:List*",
                        "synthetics:Describe*",
                        "synthetics:Get*",
                        "tag:Get*",
                        "transfer:Describe*",
                        "transfer:List*",
                        "transfer:TestIdentityProvider",
                        "transcribe:Get*",
                        "transcribe:List*",
                        "trustedadvisor:Describe*",
                        "waf:Get*",
                        "waf:List*",
                        "wafv2:Describe*",
                        "wafv2:Get*",
                        "wafv2:List*",
                        "waf-regional:List*",
                        "waf-regional:Get*",
                        "workdocs:Describe*",
                        "workdocs:Get*",
                        "workdocs:CheckAlias",
                        "worklink:Describe*",
                        "worklink:List*",
                        "workmail:Describe*",
                        "workmail:Get*",
                        "workmail:List*",
                        "workmail:Search*",
                        "workspaces:Describe*",
                        "xray:BatchGet*",
                        "xray:Get*"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                }
            ]
        },
        "AssumeRolePolicyDocument": null,
        "AssumableByComputeService": [],
        "PrivilegeEscalation": [],
        "DataExfiltrationActions": [
            "s3:GetObject",
            "ssm:GetParameter",
            "ssm:GetParameters",
            "ssm:GetParametersByPath"
        ],
        "PermissionsManagementActions": []
    }
]