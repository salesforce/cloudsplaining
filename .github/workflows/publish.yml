# .github/workflows/publish.yml

name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

env:
  MIN_PYTHON_VERSION: "3.9"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          make setup-dev

      - name: Install the package to make sure nothing is randomly broken
        run: |
          make install

      - name: Run pytest (unit tests)
        run: |
          make test


  publish-package:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: create python package
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --tags
          git pull origin master
          pip install setuptools wheel twine
          python -m setup sdist bdist_wheel
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          password: ${{ secrets.PYPI_PASSWORD }}

# New job to build and push the Docker image to Docker Hub
  publish-docker:
    needs: test # Ensure the package tests pass first
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all tags for versioning

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: salesforce/cloudsplaining
          # Create tags like 'v0.9.1' and 'latest' for the primary version
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          # Use the secrets that maintainers must create
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true # Push the image to Docker Hub
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64 # Publish multi-arch images (recommended)
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-brew:
    needs: 
      - publish-package
      - publish-docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - name: publish brew
        run: |
          sleep 5m
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          pip install homebrew-pypi-poet
          pip install cloudsplaining -U
          git fetch origin
          git checkout --track origin/master
          latest_tag=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          echo "latest tag: $latest_tag"
          git pull origin "$latest_tag"
          poet -f cloudsplaining > HomebrewFormula/cloudsplaining.rb
          git add .
          git commit -m "update brew formula" cloudsplaining/bin/version.py HomebrewFormula/cloudsplaining.rb || echo "No brew changes to commit"
          git push -u origin master

  bump-version:
    runs-on: ubuntu-latest
    needs: update-brew
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          ref: master

      - name: Bump version
        run: |
          version_file="cloudsplaining/bin/version.py"

          # https://github.com/bridgecrewio/checkov/blob/master/.github/workflows/build.yml#L87-L132
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --tags
          git pull origin master
          latest_tag=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          echo "latest tag: $latest_tag"
          new_tag=$(echo "$latest_tag" | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
          echo "new tag: $new_tag"

          printf "# pylint: disable=missing-module-docstring\n__version__ = \"%s\"\n""" "$new_tag" > $version_file
          git commit -m "Bump to ${new_tag}"  $version_file || echo "No changes to commit"
          git push origin
