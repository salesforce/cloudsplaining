{
  "NotYourPolicy": {
    "PolicyName": "NotYourPolicy",
    "PolicyId": "NotYourPolicy",
    "Arn": "arn:aws:iam::012345678901:policy/NotYourPolicy",
    "Path": "/",
    "DefaultVersionId": "v9",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2020-01-29 21:24:20+00:00",
    "UpdateDate": "2020-01-29 23:23:12+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "VisualEditor0",
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl"
              ],
              "Resource": [
                "arn:aws:s3:::mybucket/*",
                "arn:aws:s3:::mybucket"
              ]
            }
          ]
        },
        "VersionId": "v9",
        "IsDefaultVersion": true,
        "CreateDate": "2020-01-29 23:23:12+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "InsecurePolicy": {
    "PolicyName": "InsecurePolicy",
    "PolicyId": "InsecurePolicy",
    "Arn": "arn:aws:iam::012345678901:policy/InsecurePolicy",
    "Path": "/",
    "DefaultVersionId": "v9",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2020-01-29 21:24:20+00:00",
    "UpdateDate": "2020-01-29 23:23:12+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "VisualEditor0",
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "VersionId": "v9",
        "IsDefaultVersion": true,
        "CreateDate": "2020-01-29 23:23:12+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [
      "s3:PutObjectAcl"
    ],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAI4UIINUVGB5SEC57G": {
    "PolicyName": "AWSCodeCommitPowerUser",
    "PolicyId": "ANPAI4UIINUVGB5SEC57G",
    "Arn": "arn:aws:iam::aws:policy/AWSCodeCommitPowerUser",
    "Path": "/",
    "DefaultVersionId": "v11",
    "AttachmentCount": 2,
    "IsAttachable": true,
    "CreateDate": "2015-07-09 17:06:49+00:00",
    "UpdateDate": "2019-12-03 08:15:40+00:00",
    "PolicyVersionList": [
      {
        "CreateDate": "2019-12-03 08:15:40+00:00",
        "Document": {
          "Statement": [
            {
              "Action": [
                "codecommit:AssociateApprovalRuleTemplateWithRepository",
                "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                "codecommit:BatchGet*",
                "codecommit:BatchDescribe*",
                "codecommit:Create*",
                "codecommit:DeleteBranch",
                "codecommit:DeleteFile",
                "codecommit:Describe*",
                "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                "codecommit:EvaluatePullRequestApprovalRules",
                "codecommit:Get*",
                "codecommit:List*",
                "codecommit:Merge*",
                "codecommit:OverridePullRequestApprovalRules",
                "codecommit:Put*",
                "codecommit:Post*",
                "codecommit:TagResource",
                "codecommit:Test*",
                "codecommit:UntagResource",
                "codecommit:Update*",
                "codecommit:GitPull",
                "codecommit:GitPush"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "events:DeleteRule",
                "events:DescribeRule",
                "events:DisableRule",
                "events:EnableRule",
                "events:PutRule",
                "events:PutTargets",
                "events:RemoveTargets",
                "events:ListTargetsByRule"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:events:*:*:rule/codecommit*",
              "Sid": "CloudWatchEventsCodeCommitRulesAccess"
            },
            {
              "Action": [
                "sns:Subscribe",
                "sns:Unsubscribe"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:sns:*:*:codecommit*",
              "Sid": "SNSTopicAndSubscriptionAccess"
            },
            {
              "Action": [
                "sns:ListTopics",
                "sns:ListSubscriptionsByTopic",
                "sns:GetTopicAttributes"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SNSTopicAndSubscriptionReadAccess"
            },
            {
              "Action": [
                "lambda:ListFunctions"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "LambdaReadOnlyListAccess"
            },
            {
              "Action": [
                "iam:ListUsers"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "IAMReadOnlyListAccess"
            },
            {
              "Action": [
                "iam:ListAccessKeys",
                "iam:ListSSHPublicKeys",
                "iam:ListServiceSpecificCredentials"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:user/${aws:username}",
              "Sid": "IAMReadOnlyConsoleAccess"
            },
            {
              "Action": [
                "iam:DeleteSSHPublicKey",
                "iam:GetSSHPublicKey",
                "iam:ListSSHPublicKeys",
                "iam:UpdateSSHPublicKey",
                "iam:UploadSSHPublicKey"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:user/${aws:username}",
              "Sid": "IAMUserSSHKeys"
            },
            {
              "Action": [
                "iam:CreateServiceSpecificCredential",
                "iam:UpdateServiceSpecificCredential",
                "iam:DeleteServiceSpecificCredential",
                "iam:ResetServiceSpecificCredential"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:user/${aws:username}",
              "Sid": "IAMSelfManageServiceSpecificCredentials"
            },
            {
              "Action": [
                "codestar-notifications:CreateNotificationRule",
                "codestar-notifications:DescribeNotificationRule",
                "codestar-notifications:UpdateNotificationRule",
                "codestar-notifications:Subscribe",
                "codestar-notifications:Unsubscribe"
              ],
              "Condition": {
                "StringLike": {
                  "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CodeStarNotificationsReadWriteAccess"
            },
            {
              "Action": [
                "codestar-notifications:ListNotificationRules",
                "codestar-notifications:ListTargets",
                "codestar-notifications:ListTagsforResource",
                "codestar-notifications:ListEventTypes"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CodeStarNotificationsListAccess"
            },
            {
              "Action": [
                "codeguru-reviewer:AssociateRepository",
                "codeguru-reviewer:DescribeRepositoryAssociation",
                "codeguru-reviewer:ListRepositoryAssociations",
                "codeguru-reviewer:DisassociateRepository"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "AmazonCodeGuruReviewerFullAccess"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Condition": {
                "StringLike": {
                  "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
              "Sid": "AmazonCodeGuruReviewerSLRCreation"
            },
            {
              "Action": [
                "events:PutRule",
                "events:PutTargets",
                "events:DeleteRule",
                "events:RemoveTargets"
              ],
              "Condition": {
                "StringEquals": {
                  "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CloudWatchEventsManagedRules"
            }
          ],
          "Version": "2012-10-17"
        },
        "IsDefaultVersion": true,
        "VersionId": "v11"
      },
      {
        "CreateDate": "2019-11-20 17:12:55+00:00",
        "Document": {
          "Statement": [
            {
              "Action": [
                "codecommit:AssociateApprovalRuleTemplateWithRepository",
                "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                "codecommit:BatchGet*",
                "codecommit:BatchDescribe*",
                "codecommit:Create*",
                "codecommit:DeleteBranch",
                "codecommit:DeleteFile",
                "codecommit:Describe*",
                "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                "codecommit:EvaluatePullRequestApprovalRules",
                "codecommit:Get*",
                "codecommit:List*",
                "codecommit:Merge*",
                "codecommit:OverridePullRequestApprovalRules",
                "codecommit:Put*",
                "codecommit:Post*",
                "codecommit:TagResource",
                "codecommit:Test*",
                "codecommit:UntagResource",
                "codecommit:Update*",
                "codecommit:GitPull",
                "codecommit:GitPush"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "events:DeleteRule",
                "events:DescribeRule",
                "events:DisableRule",
                "events:EnableRule",
                "events:PutRule",
                "events:PutTargets",
                "events:RemoveTargets",
                "events:ListTargetsByRule"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:events:*:*:rule/codecommit*",
              "Sid": "CloudWatchEventsCodeCommitRulesAccess"
            },
            {
              "Action": [
                "sns:Subscribe",
                "sns:Unsubscribe"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:sns:*:*:codecommit*",
              "Sid": "SNSTopicAndSubscriptionAccess"
            },
            {
              "Action": [
                "sns:ListTopics",
                "sns:ListSubscriptionsByTopic",
                "sns:GetTopicAttributes"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "SNSTopicAndSubscriptionReadAccess"
            },
            {
              "Action": [
                "lambda:ListFunctions"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "LambdaReadOnlyListAccess"
            },
            {
              "Action": [
                "iam:ListUsers"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "IAMReadOnlyListAccess"
            },
            {
              "Action": [
                "iam:ListAccessKeys",
                "iam:ListSSHPublicKeys",
                "iam:ListServiceSpecificCredentials"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:user/${aws:username}",
              "Sid": "IAMReadOnlyConsoleAccess"
            },
            {
              "Action": [
                "iam:DeleteSSHPublicKey",
                "iam:GetSSHPublicKey",
                "iam:ListSSHPublicKeys",
                "iam:UpdateSSHPublicKey",
                "iam:UploadSSHPublicKey"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:user/${aws:username}",
              "Sid": "IAMUserSSHKeys"
            },
            {
              "Action": [
                "iam:CreateServiceSpecificCredential",
                "iam:UpdateServiceSpecificCredential",
                "iam:DeleteServiceSpecificCredential",
                "iam:ResetServiceSpecificCredential"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:user/${aws:username}",
              "Sid": "IAMSelfManageServiceSpecificCredentials"
            },
            {
              "Action": [
                "codestar-notifications:CreateNotificationRule",
                "codestar-notifications:DescribeNotificationRule",
                "codestar-notifications:UpdateNotificationRule",
                "codestar-notifications:Subscribe",
                "codestar-notifications:Unsubscribe"
              ],
              "Condition": {
                "StringLike": {
                  "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                }
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CodeStarNotificationsReadWriteAccess"
            },
            {
              "Action": [
                "codestar-notifications:ListNotificationRules",
                "codestar-notifications:ListTargets",
                "codestar-notifications:ListTagsforResource",
                "codestar-notifications:ListEventTypes"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "CodeStarNotificationsListAccess"
            }
          ],
          "Version": "2012-10-17"
        },
        "IsDefaultVersion": false,
        "VersionId": "v10"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAI3R4QMOG6Q5A4VWVG": {
    "PolicyName": "AmazonRDSFullAccess",
    "PolicyId": "ANPAI3R4QMOG6Q5A4VWVG",
    "Arn": "arn:aws:iam::aws:policy/AmazonRDSFullAccess",
    "Path": "/",
    "DefaultVersionId": "v6",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:52+00:00",
    "UpdateDate": "2018-04-09 17:42:48+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "rds:*",
                "application-autoscaling:DeleteScalingPolicy",
                "application-autoscaling:DeregisterScalableTarget",
                "application-autoscaling:DescribeScalableTargets",
                "application-autoscaling:DescribeScalingActivities",
                "application-autoscaling:DescribeScalingPolicies",
                "application-autoscaling:PutScalingPolicy",
                "application-autoscaling:RegisterScalableTarget",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:PutMetricAlarm",
                "cloudwatch:DeleteAlarms",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcs",
                "sns:ListSubscriptions",
                "sns:ListTopics",
                "sns:Publish",
                "logs:DescribeLogStreams",
                "logs:GetLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "pi:*",
              "Effect": "Allow",
              "Resource": "arn:aws:pi:*:*:metrics/rds/*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
              "Condition": {
                "StringLike": {
                  "iam:AWSServiceName": [
                    "rds.amazonaws.com",
                    "rds.application-autoscaling.amazonaws.com"
                  ]
                }
              }
            }
          ]
        },
        "VersionId": "v6",
        "IsDefaultVersion": true,
        "CreateDate": "2018-04-09 17:42:48+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [
      "rds:AuthorizeDBSecurityGroupIngress",
      "iam:CreateServiceLinkedRole"
    ],
    "ServiceWildcard": [
      "pi",
      "rds"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAI3VAJF5ZCRZ7MCQE6": {
    "PolicyName": "AmazonEC2FullAccess",
    "PolicyId": "ANPAI3VAJF5ZCRZ7MCQE6",
    "Arn": "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
    "Path": "/",
    "DefaultVersionId": "v5",
    "AttachmentCount": 3,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:15+00:00",
    "UpdateDate": "2018-11-27 02:16:56+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "ec2:*",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "elasticloadbalancing:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "cloudwatch:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "autoscaling:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "iam:CreateServiceLinkedRole",
              "Resource": "*",
              "Condition": {
                "StringEquals": {
                  "iam:AWSServiceName": [
                    "autoscaling.amazonaws.com",
                    "ec2scheduled.amazonaws.com",
                    "elasticloadbalancing.amazonaws.com",
                    "spot.amazonaws.com",
                    "spotfleet.amazonaws.com",
                    "transitgateway.amazonaws.com"
                  ]
                }
              }
            }
          ]
        },
        "VersionId": "v5",
        "IsDefaultVersion": true,
        "CreateDate": "2018-11-27 02:16:56+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [
      "ec2:CreateNetworkInterfacePermission",
      "ec2:DeleteNetworkInterfacePermission",
      "ec2:ModifySnapshotAttribute",
      "ec2:ModifyVpcEndpointServicePermissions",
      "ec2:ResetSnapshotAttribute",
      "iam:CreateServiceLinkedRole"
    ],
    "ServiceWildcard": [
      "autoscaling",
      "cloudwatch",
      "ec2",
      "elasticloadbalancing"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAI4VCZ3XPIZLQ5NZV2": {
    "PolicyName": "AWSCodeCommitFullAccess",
    "PolicyId": "ANPAI4VCZ3XPIZLQ5NZV2",
    "Arn": "arn:aws:iam::aws:policy/AWSCodeCommitFullAccess",
    "Path": "/",
    "DefaultVersionId": "v7",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-07-09 17:02:19+00:00",
    "UpdateDate": "2020-03-26 16:23:20+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "codecommit:*"
              ],
              "Resource": "*"
            },
            {
              "Sid": "CloudWatchEventsCodeCommitRulesAccess",
              "Effect": "Allow",
              "Action": [
                "events:DeleteRule",
                "events:DescribeRule",
                "events:DisableRule",
                "events:EnableRule",
                "events:PutRule",
                "events:PutTargets",
                "events:RemoveTargets",
                "events:ListTargetsByRule"
              ],
              "Resource": "arn:aws:events:*:*:rule/codecommit*"
            },
            {
              "Sid": "SNSTopicAndSubscriptionAccess",
              "Effect": "Allow",
              "Action": [
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sns:SetTopicAttributes"
              ],
              "Resource": "arn:aws:sns:*:*:codecommit*"
            },
            {
              "Sid": "SNSTopicAndSubscriptionReadAccess",
              "Effect": "Allow",
              "Action": [
                "sns:ListTopics",
                "sns:ListSubscriptionsByTopic",
                "sns:GetTopicAttributes"
              ],
              "Resource": "*"
            },
            {
              "Sid": "LambdaReadOnlyListAccess",
              "Effect": "Allow",
              "Action": [
                "lambda:ListFunctions"
              ],
              "Resource": "*"
            },
            {
              "Sid": "IAMReadOnlyListAccess",
              "Effect": "Allow",
              "Action": [
                "iam:ListUsers"
              ],
              "Resource": "*"
            },
            {
              "Sid": "IAMReadOnlyConsoleAccess",
              "Effect": "Allow",
              "Action": [
                "iam:ListAccessKeys",
                "iam:ListSSHPublicKeys",
                "iam:ListServiceSpecificCredentials"
              ],
              "Resource": "arn:aws:iam::*:user/${aws:username}"
            },
            {
              "Sid": "IAMUserSSHKeys",
              "Effect": "Allow",
              "Action": [
                "iam:DeleteSSHPublicKey",
                "iam:GetSSHPublicKey",
                "iam:ListSSHPublicKeys",
                "iam:UpdateSSHPublicKey",
                "iam:UploadSSHPublicKey"
              ],
              "Resource": "arn:aws:iam::*:user/${aws:username}"
            },
            {
              "Sid": "IAMSelfManageServiceSpecificCredentials",
              "Effect": "Allow",
              "Action": [
                "iam:CreateServiceSpecificCredential",
                "iam:UpdateServiceSpecificCredential",
                "iam:DeleteServiceSpecificCredential",
                "iam:ResetServiceSpecificCredential"
              ],
              "Resource": "arn:aws:iam::*:user/${aws:username}"
            },
            {
              "Sid": "CodeStarNotificationsReadWriteAccess",
              "Effect": "Allow",
              "Action": [
                "codestar-notifications:CreateNotificationRule",
                "codestar-notifications:DescribeNotificationRule",
                "codestar-notifications:UpdateNotificationRule",
                "codestar-notifications:DeleteNotificationRule",
                "codestar-notifications:Subscribe",
                "codestar-notifications:Unsubscribe"
              ],
              "Resource": "*",
              "Condition": {
                "StringLike": {
                  "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                }
              }
            },
            {
              "Sid": "CodeStarNotificationsListAccess",
              "Effect": "Allow",
              "Action": [
                "codestar-notifications:ListNotificationRules",
                "codestar-notifications:ListTargets",
                "codestar-notifications:ListTagsforResource",
                "codestar-notifications:ListEventTypes"
              ],
              "Resource": "*"
            },
            {
              "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
              "Effect": "Allow",
              "Action": [
                "sns:CreateTopic",
                "sns:SetTopicAttributes"
              ],
              "Resource": "arn:aws:sns:*:*:codestar-notifications*"
            },
            {
              "Sid": "AmazonCodeGuruReviewerFullAccess",
              "Effect": "Allow",
              "Action": [
                "codeguru-reviewer:AssociateRepository",
                "codeguru-reviewer:DescribeRepositoryAssociation",
                "codeguru-reviewer:ListRepositoryAssociations",
                "codeguru-reviewer:DisassociateRepository"
              ],
              "Resource": "*"
            },
            {
              "Sid": "AmazonCodeGuruReviewerSLRCreation",
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
              "Condition": {
                "StringLike": {
                  "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                }
              }
            },
            {
              "Sid": "CloudWatchEventsManagedRules",
              "Effect": "Allow",
              "Action": [
                "events:PutRule",
                "events:PutTargets",
                "events:DeleteRule",
                "events:RemoveTargets"
              ],
              "Resource": "*",
              "Condition": {
                "StringEquals": {
                  "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                }
              }
            },
            {
              "Sid": "CodeStarNotificationsChatbotAccess",
              "Effect": "Allow",
              "Action": [
                "chatbot:DescribeSlackChannelConfigurations"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v7",
        "IsDefaultVersion": true,
        "CreateDate": "2020-03-26 16:23:20+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [
      "codecommit"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAI65L554VRJ33ECQS6": {
    "PolicyName": "AmazonSQSFullAccess",
    "PolicyId": "ANPAI65L554VRJ33ECQS6",
    "Arn": "arn:aws:iam::aws:policy/AmazonSQSFullAccess",
    "Path": "/",
    "DefaultVersionId": "v1",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:41:07+00:00",
    "UpdateDate": "2015-02-06 18:41:07+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sqs:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v1",
        "IsDefaultVersion": true,
        "CreateDate": "2015-02-06 18:41:07+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [
      "sqs:AddPermission",
      "sqs:CreateQueue",
      "sqs:RemovePermission",
      "sqs:SetQueueAttributes"
    ],
    "ServiceWildcard": [
      "sqs"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAI6E2CYYMI4XI7AA5K": {
    "PolicyName": "AWSLambdaFullAccess",
    "PolicyId": "ANPAI6E2CYYMI4XI7AA5K",
    "Arn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
    "Path": "/",
    "DefaultVersionId": "v8",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:45+00:00",
    "UpdateDate": "2017-11-27 23:22:38+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeChangeSet",
                "cloudformation:DescribeStackResources",
                "cloudformation:DescribeStacks",
                "cloudformation:GetTemplate",
                "cloudformation:ListStackResources",
                "cloudwatch:*",
                "cognito-identity:ListIdentityPools",
                "cognito-sync:GetCognitoEvents",
                "cognito-sync:SetCognitoEvents",
                "dynamodb:*",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "events:*",
                "iam:GetPolicy",
                "iam:GetPolicyVersion",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:ListAttachedRolePolicies",
                "iam:ListRolePolicies",
                "iam:ListRoles",
                "iam:PassRole",
                "iot:AttachPrincipalPolicy",
                "iot:AttachThingPrincipal",
                "iot:CreateKeysAndCertificate",
                "iot:CreatePolicy",
                "iot:CreateThing",
                "iot:CreateTopicRule",
                "iot:DescribeEndpoint",
                "iot:GetTopicRule",
                "iot:ListPolicies",
                "iot:ListThings",
                "iot:ListTopicRules",
                "iot:ReplaceTopicRule",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:PutRecord",
                "kms:ListAliases",
                "lambda:*",
                "logs:*",
                "s3:*",
                "sns:ListSubscriptions",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "sns:Publish",
                "sns:Subscribe",
                "sns:Unsubscribe",
                "sqs:ListQueues",
                "sqs:SendMessage",
                "tag:GetResources",
                "xray:PutTelemetryRecords",
                "xray:PutTraceSegments"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v8",
        "IsDefaultVersion": true,
        "CreateDate": "2017-11-27 23:22:38+00:00"
      }
    ],
    "PrivilegeEscalation": [
      {
        "type": "PassExistingRoleToNewLambdaThenInvoke",
        "actions": [
          "iam:passrole",
          "lambda:createfunction",
          "lambda:invokefunction"
        ]
      },
      {
        "type": "PassExistingRoleToNewLambdaThenTriggerWithNewDynamo",
        "actions": [
          "iam:passrole",
          "lambda:createfunction",
          "lambda:createeventsourcemapping",
          "dynamodb:createtable",
          "dynamodb:putitem"
        ]
      },
      {
        "type": "PassExistingRoleToNewLambdaThenTriggerWithExistingDynamo",
        "actions": [
          "iam:passrole",
          "lambda:createfunction",
          "lambda:createeventsourcemapping"
        ]
      },
      {
        "type": "EditExistingLambdaFunctionWithRole",
        "actions": [
          "lambda:updatefunctioncode"
        ]
      }
    ],
    "DataExfiltration": [
      "s3:GetObject"
    ],
    "ResourceExposure": [
      "iam:PassRole",
      "iot:AttachPrincipalPolicy",
      "lambda:AddLayerVersionPermission",
      "lambda:AddPermission",
      "lambda:DisableReplication",
      "lambda:EnableReplication",
      "lambda:RemoveLayerVersionPermission",
      "lambda:RemovePermission",
      "logs:DeleteResourcePolicy",
      "logs:PutResourcePolicy",
      "s3:BypassGovernanceRetention",
      "s3:DeleteAccessPointPolicy",
      "s3:DeleteBucketPolicy",
      "s3:ObjectOwnerOverrideToBucketOwner",
      "s3:PutAccessPointPolicy",
      "s3:PutAccountPublicAccessBlock",
      "s3:PutBucketAcl",
      "s3:PutBucketPolicy",
      "s3:PutBucketPublicAccessBlock",
      "s3:PutObjectAcl",
      "s3:PutObjectVersionAcl"
    ],
    "ServiceWildcard": [
      "cloudwatch",
      "dynamodb",
      "events",
      "lambda",
      "logs",
      "s3"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAI7XKCFMBPM3QQRRVQ": {
    "PolicyName": "IAMFullAccess",
    "PolicyId": "ANPAI7XKCFMBPM3QQRRVQ",
    "Arn": "arn:aws:iam::aws:policy/IAMFullAccess",
    "Path": "/",
    "DefaultVersionId": "v2",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:38+00:00",
    "UpdateDate": "2019-06-21 19:40:00+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "iam:*",
                "organizations:DescribeAccount",
                "organizations:DescribeOrganization",
                "organizations:DescribeOrganizationalUnit",
                "organizations:DescribePolicy",
                "organizations:ListChildren",
                "organizations:ListParents",
                "organizations:ListPoliciesForTarget",
                "organizations:ListRoots",
                "organizations:ListPolicies",
                "organizations:ListTargetsForPolicy"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v2",
        "IsDefaultVersion": true,
        "CreateDate": "2019-06-21 19:40:00+00:00"
      }
    ],
    "PrivilegeEscalation": [
      {
        "type": "CreateAccessKey",
        "actions": [
          "iam:createaccesskey"
        ]
      },
      {
        "type": "CreateLoginProfile",
        "actions": [
          "iam:createloginprofile"
        ]
      },
      {
        "type": "UpdateLoginProfile",
        "actions": [
          "iam:updateloginprofile"
        ]
      },
      {
        "type": "CreateNewPolicyVersion",
        "actions": [
          "iam:createpolicyversion"
        ]
      },
      {
        "type": "SetExistingDefaultPolicyVersion",
        "actions": [
          "iam:setdefaultpolicyversion"
        ]
      },
      {
        "type": "AttachUserPolicy",
        "actions": [
          "iam:attachuserpolicy"
        ]
      },
      {
        "type": "AttachGroupPolicy",
        "actions": [
          "iam:attachgrouppolicy"
        ]
      },
      {
        "type": "PutUserPolicy",
        "actions": [
          "iam:putuserpolicy"
        ]
      },
      {
        "type": "PutGroupPolicy",
        "actions": [
          "iam:putgrouppolicy"
        ]
      },
      {
        "type": "AddUserToGroup",
        "actions": [
          "iam:addusertogroup"
        ]
      }
    ],
    "DataExfiltration": [],
    "ResourceExposure": [
      "iam:AddClientIDToOpenIDConnectProvider",
      "iam:AddRoleToInstanceProfile",
      "iam:AddUserToGroup",
      "iam:AttachGroupPolicy",
      "iam:AttachRolePolicy",
      "iam:AttachUserPolicy",
      "iam:ChangePassword",
      "iam:CreateAccessKey",
      "iam:CreateAccountAlias",
      "iam:CreateGroup",
      "iam:CreateInstanceProfile",
      "iam:CreateLoginProfile",
      "iam:CreateOpenIDConnectProvider",
      "iam:CreatePolicy",
      "iam:CreatePolicyVersion",
      "iam:CreateRole",
      "iam:CreateSAMLProvider",
      "iam:CreateServiceLinkedRole",
      "iam:CreateServiceSpecificCredential",
      "iam:CreateUser",
      "iam:CreateVirtualMFADevice",
      "iam:DeactivateMFADevice",
      "iam:DeleteAccessKey",
      "iam:DeleteAccountAlias",
      "iam:DeleteAccountPasswordPolicy",
      "iam:DeleteGroup",
      "iam:DeleteGroupPolicy",
      "iam:DeleteInstanceProfile",
      "iam:DeleteLoginProfile",
      "iam:DeleteOpenIDConnectProvider",
      "iam:DeletePolicy",
      "iam:DeletePolicyVersion",
      "iam:DeleteRole",
      "iam:DeleteRolePermissionsBoundary",
      "iam:DeleteRolePolicy",
      "iam:DeleteSAMLProvider",
      "iam:DeleteSSHPublicKey",
      "iam:DeleteServerCertificate",
      "iam:DeleteServiceLinkedRole",
      "iam:DeleteServiceSpecificCredential",
      "iam:DeleteSigningCertificate",
      "iam:DeleteUser",
      "iam:DeleteUserPermissionsBoundary",
      "iam:DeleteUserPolicy",
      "iam:DeleteVirtualMFADevice",
      "iam:DetachGroupPolicy",
      "iam:DetachRolePolicy",
      "iam:DetachUserPolicy",
      "iam:EnableMFADevice",
      "iam:PassRole",
      "iam:PutGroupPolicy",
      "iam:PutRolePermissionsBoundary",
      "iam:PutRolePolicy",
      "iam:PutUserPermissionsBoundary",
      "iam:PutUserPolicy",
      "iam:RemoveClientIDFromOpenIDConnectProvider",
      "iam:RemoveRoleFromInstanceProfile",
      "iam:RemoveUserFromGroup",
      "iam:ResetServiceSpecificCredential",
      "iam:ResyncMFADevice",
      "iam:SetDefaultPolicyVersion",
      "iam:SetSecurityTokenServicePreferences",
      "iam:UpdateAccessKey",
      "iam:UpdateAccountPasswordPolicy",
      "iam:UpdateAssumeRolePolicy",
      "iam:UpdateGroup",
      "iam:UpdateLoginProfile",
      "iam:UpdateOpenIDConnectProviderThumbprint",
      "iam:UpdateRole",
      "iam:UpdateRoleDescription",
      "iam:UpdateSAMLProvider",
      "iam:UpdateSSHPublicKey",
      "iam:UpdateServerCertificate",
      "iam:UpdateServiceSpecificCredential",
      "iam:UpdateSigningCertificate",
      "iam:UpdateUser",
      "iam:UploadSSHPublicKey",
      "iam:UploadServerCertificate",
      "iam:UploadSigningCertificate"
    ],
    "ServiceWildcard": [
      "iam"
    ],
    "CredentialsExposure": [
      "iam:CreateAccessKey",
      "iam:CreateLoginProfile",
      "iam:CreateServiceSpecificCredential",
      "iam:ResetServiceSpecificCredential",
      "iam:UpdateAccessKey"
    ],
    "is_excluded": false
  },
  "ANPAIFIR6V6BVTRAHWINE": {
    "PolicyName": "AmazonS3FullAccess",
    "PolicyId": "ANPAIFIR6V6BVTRAHWINE",
    "Arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
    "Path": "/",
    "DefaultVersionId": "v1",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:58+00:00",
    "UpdateDate": "2015-02-06 18:40:58+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "s3:*",
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v1",
        "IsDefaultVersion": true,
        "CreateDate": "2015-02-06 18:40:58+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [
      "s3:GetObject"
    ],
    "ResourceExposure": [
      "s3:BypassGovernanceRetention",
      "s3:DeleteAccessPointPolicy",
      "s3:DeleteBucketPolicy",
      "s3:ObjectOwnerOverrideToBucketOwner",
      "s3:PutAccessPointPolicy",
      "s3:PutAccountPublicAccessBlock",
      "s3:PutBucketAcl",
      "s3:PutBucketPolicy",
      "s3:PutBucketPublicAccessBlock",
      "s3:PutObjectAcl",
      "s3:PutObjectVersionAcl"
    ],
    "ServiceWildcard": [
      "s3"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAIICZJNOJN36GTG6CM": {
    "PolicyName": "AmazonVPCReadOnlyAccess",
    "PolicyId": "ANPAIICZJNOJN36GTG6CM",
    "Arn": "arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess",
    "Path": "/",
    "DefaultVersionId": "v6",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:41:17+00:00",
    "UpdateDate": "2018-03-07 18:34:42+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeClassicLinkInstances",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeEgressOnlyInternetGateways",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeMovingAddresses",
                "ec2:DescribeNatGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeNetworkInterfaceAttribute",
                "ec2:DescribeNetworkInterfacePermissions",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribePrefixLists",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroupReferences",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeStaleSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcClassicLink",
                "ec2:DescribeVpcClassicLinkDnsSupport",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeVpcEndpointConnectionNotifications",
                "ec2:DescribeVpcEndpointConnections",
                "ec2:DescribeVpcEndpointServiceConfigurations",
                "ec2:DescribeVpcEndpointServicePermissions",
                "ec2:DescribeVpcEndpointServices",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v6",
        "IsDefaultVersion": true,
        "CreateDate": "2018-03-07 18:34:42+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAIKEABORKUXN6DEAZU": {
    "PolicyName": "CloudWatchFullAccess",
    "PolicyId": "ANPAIKEABORKUXN6DEAZU",
    "Arn": "arn:aws:iam::aws:policy/CloudWatchFullAccess",
    "Path": "/",
    "DefaultVersionId": "v3",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:00+00:00",
    "UpdateDate": "2018-08-09 19:10:43+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "autoscaling:Describe*",
                "cloudwatch:*",
                "logs:*",
                "sns:*",
                "iam:GetPolicy",
                "iam:GetPolicyVersion",
                "iam:GetRole"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "iam:CreateServiceLinkedRole",
              "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
              "Condition": {
                "StringLike": {
                  "iam:AWSServiceName": "events.amazonaws.com"
                }
              }
            }
          ]
        },
        "VersionId": "v3",
        "IsDefaultVersion": true,
        "CreateDate": "2018-08-09 19:10:43+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [
      "logs:DeleteResourcePolicy",
      "logs:PutResourcePolicy",
      "sns:AddPermission",
      "sns:CreateTopic",
      "sns:RemovePermission",
      "sns:SetTopicAttributes"
    ],
    "ServiceWildcard": [
      "cloudwatch",
      "logs",
      "sns"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAILL3HVNFSB6DCOWYQ": {
    "PolicyName": "ReadOnlyAccess",
    "PolicyId": "ANPAILL3HVNFSB6DCOWYQ",
    "Arn": "arn:aws:iam::aws:policy/ReadOnlyAccess",
    "Path": "/",
    "DefaultVersionId": "v63",
    "AttachmentCount": 4,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:39:48+00:00",
    "UpdateDate": "2020-03-09 23:45:01+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "a4b:Get*",
                "a4b:List*",
                "a4b:Search*",
                "access-analyzer:GetAnalyzedResource",
                "access-analyzer:GetAnalyzer",
                "access-analyzer:GetArchiveRule",
                "access-analyzer:GetFinding",
                "access-analyzer:ListAnalyzedResources",
                "access-analyzer:ListAnalyzers",
                "access-analyzer:ListArchiveRules",
                "access-analyzer:ListFindings",
                "access-analyzer:ListTagsForResource",
                "acm:Describe*",
                "acm:Get*",
                "acm:List*",
                "acm-pca:Describe*",
                "acm-pca:Get*",
                "acm-pca:List*",
                "amplify:GetApp",
                "amplify:GetBranch",
                "amplify:GetJob",
                "amplify:GetDomainAssociation",
                "amplify:ListApps",
                "amplify:ListBranches",
                "amplify:ListDomainAssociations",
                "amplify:ListJobs",
                "apigateway:GET",
                "application-autoscaling:Describe*",
                "applicationinsights:Describe*",
                "applicationinsights:List*",
                "appmesh:Describe*",
                "appmesh:List*",
                "appstream:Describe*",
                "appstream:Get*",
                "appstream:List*",
                "appsync:Get*",
                "appsync:List*",
                "autoscaling:Describe*",
                "autoscaling-plans:Describe*",
                "autoscaling-plans:GetScalingPlanResourceForecastData",
                "athena:List*",
                "athena:Batch*",
                "athena:Get*",
                "backup:Describe*",
                "backup:Get*",
                "backup:List*",
                "batch:List*",
                "batch:Describe*",
                "chatbot:Describe*",
                "chatbot:Get*",
                "chime:Get*",
                "chime:List*",
                "chime:Retrieve*",
                "chime:Search*",
                "chime:Validate*",
                "cloud9:Describe*",
                "cloud9:List*",
                "clouddirectory:List*",
                "clouddirectory:BatchRead",
                "clouddirectory:Get*",
                "clouddirectory:LookupPolicy",
                "cloudformation:Describe*",
                "cloudformation:Detect*",
                "cloudformation:Get*",
                "cloudformation:List*",
                "cloudformation:Estimate*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudhsm:List*",
                "cloudhsm:Describe*",
                "cloudhsm:Get*",
                "cloudsearch:Describe*",
                "cloudsearch:List*",
                "cloudtrail:Describe*",
                "cloudtrail:Get*",
                "cloudtrail:List*",
                "cloudtrail:LookupEvents",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "codebuild:BatchGet*",
                "codebuild:DescribeTestCases",
                "codebuild:List*",
                "codecommit:BatchGet*",
                "codecommit:Describe*",
                "codecommit:Get*",
                "codecommit:GitPull",
                "codecommit:List*",
                "codedeploy:BatchGet*",
                "codedeploy:Get*",
                "codedeploy:List*",
                "codeguru-profiler:Describe*",
                "codeguru-profiler:Get*",
                "codeguru-profiler:List*",
                "codeguru-reviewer:Describe*",
                "codeguru-reviewer:Get*",
                "codeguru-reviewer:List*",
                "codepipeline:List*",
                "codepipeline:Get*",
                "codestar:List*",
                "codestar:Describe*",
                "codestar:Get*",
                "codestar:Verify*",
                "codestar-notifications:describeNotificationRule",
                "codestar-notifications:listEventTypes",
                "codestar-notifications:listNotificationRules",
                "codestar-notifications:listTagsForResource",
                "codestar-notifications:ListTargets",
                "compute-optimizer:GetAutoScalingGroupRecommendations",
                "compute-optimizer:GetEC2InstanceRecommendations",
                "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                "compute-optimizer:GetEnrollmentStatus",
                "compute-optimizer:GetRecommendationSummaries",
                "cognito-identity:Describe*",
                "cognito-identity:GetCredentialsForIdentity",
                "cognito-identity:GetIdentityPoolRoles",
                "cognito-identity:GetOpenIdToken",
                "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                "cognito-identity:List*",
                "cognito-identity:Lookup*",
                "cognito-sync:List*",
                "cognito-sync:Describe*",
                "cognito-sync:Get*",
                "cognito-sync:QueryRecords",
                "cognito-idp:AdminGet*",
                "cognito-idp:AdminList*",
                "cognito-idp:List*",
                "cognito-idp:Describe*",
                "cognito-idp:Get*",
                "config:Deliver*",
                "config:Describe*",
                "config:Get*",
                "config:List*",
                "config:SelectResourceConfig",
                "connect:List*",
                "connect:Describe*",
                "connect:GetFederationToken",
                "dataexchange:Get*",
                "dataexchange:List*",
                "datasync:Describe*",
                "datasync:List*",
                "datapipeline:Describe*",
                "datapipeline:EvaluateExpression",
                "datapipeline:Get*",
                "datapipeline:List*",
                "datapipeline:QueryObjects",
                "datapipeline:Validate*",
                "dax:BatchGetItem",
                "dax:Describe*",
                "dax:GetItem",
                "dax:ListTags",
                "dax:Query",
                "dax:Scan",
                "directconnect:Describe*",
                "detective:Get*",
                "detective:List*",
                "devicefarm:List*",
                "devicefarm:Get*",
                "discovery:Describe*",
                "discovery:List*",
                "discovery:Get*",
                "dlm:Get*",
                "dms:Describe*",
                "dms:List*",
                "dms:Test*",
                "ds:Check*",
                "ds:Describe*",
                "ds:Get*",
                "ds:List*",
                "ds:Verify*",
                "dynamodb:BatchGet*",
                "dynamodb:Describe*",
                "dynamodb:Get*",
                "dynamodb:List*",
                "dynamodb:Query",
                "dynamodb:Scan",
                "ec2:Describe*",
                "ec2:Get*",
                "ec2:SearchTransitGatewayRoutes",
                "ec2messages:Get*",
                "ecr:BatchCheck*",
                "ecr:BatchGet*",
                "ecr:Describe*",
                "ecr:Get*",
                "ecr:List*",
                "ecs:Describe*",
                "ecs:List*",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:Describe*",
                "eks:ListClusters",
                "eks:ListUpdates",
                "eks:List*",
                "elasticache:Describe*",
                "elasticache:List*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:Request*",
                "elasticbeanstalk:Retrieve*",
                "elasticbeanstalk:Validate*",
                "elasticfilesystem:Describe*",
                "elasticloadbalancing:Describe*",
                "elasticmapreduce:Describe*",
                "elasticmapreduce:List*",
                "elasticmapreduce:View*",
                "elastictranscoder:List*",
                "elastictranscoder:Read*",
                "elemental-appliances-software:Get*",
                "elemental-appliances-software:List*",
                "es:Describe*",
                "es:List*",
                "es:Get*",
                "es:ESHttpGet",
                "es:ESHttpHead",
                "events:Describe*",
                "events:List*",
                "events:Test*",
                "firehose:Describe*",
                "firehose:List*",
                "fsx:Describe*",
                "fsx:List*",
                "gamelift:List*",
                "gamelift:Get*",
                "gamelift:Describe*",
                "gamelift:RequestUploadCredentials",
                "gamelift:ResolveAlias",
                "gamelift:Search*",
                "glacier:List*",
                "glacier:Describe*",
                "glacier:Get*",
                "globalaccelerator:Describe*",
                "globalaccelerator:List*",
                "glue:BatchGetPartition",
                "glue:GetCatalogImportStatus",
                "glue:GetClassifier",
                "glue:GetClassifiers",
                "glue:GetCrawler",
                "glue:GetCrawlers",
                "glue:GetCrawlerMetrics",
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetDataCatalogEncryptionSettings",
                "glue:GetDataflowGraph",
                "glue:GetDevEndpoint",
                "glue:GetDevEndpoints",
                "glue:GetJob",
                "glue:GetJobs",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:GetPartition",
                "glue:GetPartitions",
                "glue:GetPlan",
                "glue:GetResourcePolicy",
                "glue:GetSecurityConfiguration",
                "glue:GetSecurityConfigurations",
                "glue:GetTable",
                "glue:GetTables",
                "glue:GetTableVersion",
                "glue:GetTableVersions",
                "glue:GetTags",
                "glue:GetTrigger",
                "glue:GetTriggers",
                "glue:GetUserDefinedFunction",
                "glue:GetUserDefinedFunctions",
                "greengrass:Get*",
                "greengrass:List*",
                "guardduty:Get*",
                "guardduty:List*",
                "health:Describe*",
                "health:List*",
                "iam:Generate*",
                "iam:Get*",
                "iam:List*",
                "iam:Simulate*",
                "imagebuilder:Get*",
                "imagebuilder:List*",
                "importexport:Get*",
                "importexport:List*",
                "inspector:Describe*",
                "inspector:Get*",
                "inspector:List*",
                "inspector:Preview*",
                "iot:Describe*",
                "iot:Get*",
                "iot:List*",
                "iotanalytics:Describe*",
                "iotanalytics:List*",
                "iotanalytics:Get*",
                "iotanalytics:SampleChannelData",
                "kafka:Describe*",
                "kafka:List*",
                "kafka:Get*",
                "kinesisanalytics:Describe*",
                "kinesisanalytics:Discover*",
                "kinesisanalytics:Get*",
                "kinesisanalytics:List*",
                "kinesisvideo:Describe*",
                "kinesisvideo:Get*",
                "kinesisvideo:List*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "kms:Describe*",
                "kms:Get*",
                "kms:List*",
                "lambda:List*",
                "lambda:Get*",
                "lex:Get*",
                "lightsail:GetActiveNames",
                "lightsail:GetBlueprints",
                "lightsail:GetBundles",
                "lightsail:GetCloudFormationStackRecords",
                "lightsail:GetDisk",
                "lightsail:GetDisks",
                "lightsail:GetDiskSnapshot",
                "lightsail:GetDiskSnapshots",
                "lightsail:GetDomain",
                "lightsail:GetDomains",
                "lightsail:GetExportSnapshotRecords",
                "lightsail:GetInstance",
                "lightsail:GetInstanceMetricData",
                "lightsail:GetInstancePortStates",
                "lightsail:GetInstances",
                "lightsail:GetInstanceSnapshot",
                "lightsail:GetInstanceSnapshots",
                "lightsail:GetInstanceState",
                "lightsail:GetKeyPair",
                "lightsail:GetKeyPairs",
                "lightsail:GetLoadBalancer",
                "lightsail:GetLoadBalancerMetricData",
                "lightsail:GetLoadBalancers",
                "lightsail:GetLoadBalancerTlsCertificates",
                "lightsail:GetOperation",
                "lightsail:GetOperations",
                "lightsail:GetOperationsForResource",
                "lightsail:GetRegions",
                "lightsail:GetRelationalDatabase",
                "lightsail:GetRelationalDatabaseBlueprints",
                "lightsail:GetRelationalDatabaseBundles",
                "lightsail:GetRelationalDatabaseEvents",
                "lightsail:GetRelationalDatabaseLogEvents",
                "lightsail:GetRelationalDatabaseLogStreams",
                "lightsail:GetRelationalDatabaseMetricData",
                "lightsail:GetRelationalDatabaseParameters",
                "lightsail:GetRelationalDatabases",
                "lightsail:GetRelationalDatabaseSnapshot",
                "lightsail:GetRelationalDatabaseSnapshots",
                "lightsail:GetStaticIp",
                "lightsail:GetStaticIps",
                "lightsail:Is*",
                "logs:Describe*",
                "logs:Get*",
                "logs:FilterLogEvents",
                "logs:ListTagsLogGroup",
                "logs:StartQuery",
                "logs:TestMetricFilter",
                "machinelearning:Describe*",
                "machinelearning:Get*",
                "mediaconvert:DescribeEndpoints",
                "mediaconvert:Get*",
                "mediaconvert:List*",
                "mediapackage:List*",
                "mediapackage:Describe*",
                "mgh:Describe*",
                "mgh:GetHomeRegion",
                "mgh:List*",
                "mobileanalytics:Get*",
                "mobilehub:Describe*",
                "mobilehub:Export*",
                "mobilehub:Generate*",
                "mobilehub:Get*",
                "mobilehub:List*",
                "mobilehub:Validate*",
                "mobilehub:Verify*",
                "mobiletargeting:Get*",
                "mobiletargeting:List*",
                "mq:Describe*",
                "mq:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "opsworks-cm:Describe*",
                "organizations:Describe*",
                "organizations:List*",
                "outposts:Get*",
                "outposts:List*",
                "personalize:Describe*",
                "personalize:Get*",
                "personalize:List*",
                "pi:DescribeDimensionKeys",
                "pi:GetResourceMetrics",
                "polly:Describe*",
                "polly:Get*",
                "polly:List*",
                "polly:SynthesizeSpeech",
                "qldb:ListLedgers",
                "qldb:DescribeLedger",
                "qldb:ListJournalS3Exports",
                "qldb:ListJournalS3ExportsForLedger",
                "qldb:DescribeJournalS3Export",
                "qldb:GetBlock",
                "qldb:GetDigest",
                "qldb:GetRevision",
                "qldb:GetBlock",
                "qldb:ListTagsForResource",
                "ram:Get*",
                "ram:List*",
                "rekognition:CompareFaces",
                "rekognition:Detect*",
                "rekognition:List*",
                "rekognition:Search*",
                "rds:Describe*",
                "rds:List*",
                "rds:Download*",
                "redshift:Describe*",
                "redshift:GetReservedNodeExchangeOfferings",
                "redshift:View*",
                "resource-groups:Get*",
                "resource-groups:List*",
                "resource-groups:Search*",
                "robomaker:BatchDescribe*",
                "robomaker:Describe*",
                "robomaker:List*",
                "route53:Get*",
                "route53:List*",
                "route53:Test*",
                "route53domains:Check*",
                "route53domains:Get*",
                "route53domains:List*",
                "route53domains:View*",
                "route53resolver:Get*",
                "route53resolver:List*",
                "s3:Get*",
                "s3:List*",
                "sagemaker:Describe*",
                "sagemaker:GetSearchSuggestions",
                "sagemaker:List*",
                "sagemaker:Search",
                "schemas:Describe*",
                "schemas:Get*",
                "schemas:List*",
                "schemas:Search*",
                "sdb:Get*",
                "sdb:List*",
                "sdb:Select*",
                "secretsmanager:List*",
                "secretsmanager:Describe*",
                "secretsmanager:GetResourcePolicy",
                "securityhub:Describe*",
                "securityhub:Get*",
                "securityhub:List*",
                "serverlessrepo:List*",
                "serverlessrepo:Get*",
                "serverlessrepo:SearchApplications",
                "servicecatalog:List*",
                "servicecatalog:Scan*",
                "servicecatalog:Search*",
                "servicecatalog:Describe*",
                "servicediscovery:Get*",
                "servicediscovery:List*",
                "servicequotas:GetAssociationForServiceQuotaTemplate",
                "servicequotas:GetAWSDefaultServiceQuota",
                "servicequotas:GetRequestedServiceQuotaChange",
                "servicequotas:GetServiceQuota",
                "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                "servicequotas:ListAWSDefaultServiceQuotas",
                "servicequotas:ListRequestedServiceQuotaChangeHistory",
                "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                "servicequotas:ListServices",
                "servicequotas:ListServiceQuotas",
                "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                "ses:Get*",
                "ses:List*",
                "ses:Describe*",
                "shield:Describe*",
                "shield:Get*",
                "shield:List*",
                "snowball:Get*",
                "snowball:Describe*",
                "snowball:List*",
                "sns:Get*",
                "sns:List*",
                "sns:Check*",
                "sqs:Get*",
                "sqs:List*",
                "sqs:Receive*",
                "ssm:Describe*",
                "ssm:Get*",
                "ssm:List*",
                "states:List*",
                "states:Describe*",
                "states:GetExecutionHistory",
                "storagegateway:Describe*",
                "storagegateway:List*",
                "sts:Get*",
                "swf:Count*",
                "swf:Describe*",
                "swf:Get*",
                "swf:List*",
                "synthetics:Describe*",
                "synthetics:Get*",
                "tag:Get*",
                "transfer:Describe*",
                "transfer:List*",
                "transfer:TestIdentityProvider",
                "transcribe:Get*",
                "transcribe:List*",
                "trustedadvisor:Describe*",
                "waf:Get*",
                "waf:List*",
                "wafv2:Describe*",
                "wafv2:Get*",
                "wafv2:List*",
                "waf-regional:List*",
                "waf-regional:Get*",
                "workdocs:Describe*",
                "workdocs:Get*",
                "workdocs:CheckAlias",
                "worklink:Describe*",
                "worklink:List*",
                "workmail:Describe*",
                "workmail:Get*",
                "workmail:List*",
                "workmail:Search*",
                "workspaces:Describe*",
                "xray:BatchGet*",
                "xray:Get*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v63",
        "IsDefaultVersion": true,
        "CreateDate": "2020-03-09 23:45:01+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [
      "s3:GetObject",
      "ssm:GetParameter",
      "ssm:GetParameters",
      "ssm:GetParametersByPath"
    ],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [
      "cognito-identity:GetOpenIdToken",
      "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
      "cognito-identity:GetCredentialsForIdentity",
      "connect:GetFederationToken",
      "ecr:GetAuthorizationToken",
      "gamelift:RequestUploadCredentials",
      "sts:GetFederationToken",
      "sts:GetSessionToken"
    ],
    "is_excluded": false
  },
  "ANPAINAW5ANUWTH3R4ANI": {
    "PolicyName": "AWSDirectoryServiceFullAccess",
    "PolicyId": "ANPAINAW5ANUWTH3R4ANI",
    "Arn": "arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess",
    "Path": "/",
    "DefaultVersionId": "v4",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:41:11+00:00",
    "UpdateDate": "2019-02-05 20:29:43+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "ds:*",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateNetworkInterface",
                "ec2:CreateSecurityGroup",
                "ec2:DeleteNetworkInterface",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcs",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:DescribeSecurityGroups",
                "sns:GetTopicAttributes",
                "sns:ListSubscriptions",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "iam:ListRoles",
                "organizations:ListAccountsForParent",
                "organizations:ListRoots",
                "organizations:ListAccounts",
                "organizations:DescribeOrganization",
                "organizations:DescribeAccount",
                "organizations:ListOrganizationalUnitsForParent",
                "organizations:ListAWSServiceAccessForOrganization"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:SetTopicAttributes",
                "sns:Subscribe",
                "sns:Unsubscribe"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:sns:*:*:DirectoryMonitoring*"
            },
            {
              "Action": [
                "organizations:EnableAWSServiceAccess",
                "organizations:DisableAWSServiceAccess"
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Condition": {
                "ForAllValues:StringLike": {
                  "organizations:ServicePrincipal": [
                    "ds.amazonaws.com"
                  ]
                }
              }
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DeleteTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:ec2:*:*:network-interface/*",
                "arn:aws:ec2:*:*:security-group/*"
              ]
            }
          ]
        },
        "VersionId": "v4",
        "IsDefaultVersion": true,
        "CreateDate": "2019-02-05 20:29:43+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [
      "ds:CreateConditionalForwarder",
      "ds:CreateDirectory",
      "ds:CreateMicrosoftAD",
      "ds:CreateTrust",
      "ds:ShareDirectory"
    ],
    "ServiceWildcard": [
      "ds"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAIONKN3TJZUKXCHXWC": {
    "PolicyName": "AWSCodeDeployFullAccess",
    "PolicyId": "ANPAIONKN3TJZUKXCHXWC",
    "Arn": "arn:aws:iam::aws:policy/AWSCodeDeployFullAccess",
    "Path": "/",
    "DefaultVersionId": "v3",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-05-19 18:13:23+00:00",
    "UpdateDate": "2020-04-02 16:14:47+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "codedeploy:*",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Sid": "CodeStarNotificationsReadWriteAccess",
              "Effect": "Allow",
              "Action": [
                "codestar-notifications:CreateNotificationRule",
                "codestar-notifications:DescribeNotificationRule",
                "codestar-notifications:UpdateNotificationRule",
                "codestar-notifications:DeleteNotificationRule",
                "codestar-notifications:Subscribe",
                "codestar-notifications:Unsubscribe"
              ],
              "Resource": "*",
              "Condition": {
                "StringLike": {
                  "codestar-notifications:NotificationsForResource": "arn:aws:codedeploy:*"
                }
              }
            },
            {
              "Sid": "CodeStarNotificationsListAccess",
              "Effect": "Allow",
              "Action": [
                "codestar-notifications:ListNotificationRules",
                "codestar-notifications:ListTargets",
                "codestar-notifications:ListTagsforResource",
                "codestar-notifications:ListEventTypes"
              ],
              "Resource": "*"
            },
            {
              "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
              "Effect": "Allow",
              "Action": [
                "sns:CreateTopic",
                "sns:SetTopicAttributes"
              ],
              "Resource": "arn:aws:sns:*:*:codestar-notifications*"
            },
            {
              "Sid": "CodeStarNotificationsChatbotAccess",
              "Effect": "Allow",
              "Action": [
                "chatbot:DescribeSlackChannelConfigurations"
              ],
              "Resource": "*"
            },
            {
              "Sid": "SNSTopicListAccess",
              "Effect": "Allow",
              "Action": [
                "sns:ListTopics"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v3",
        "IsDefaultVersion": true,
        "CreateDate": "2020-04-02 16:14:47+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [
      "codedeploy"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAIQNUJTQYDRJPC3BNK": {
    "PolicyName": "AWSCloudTrailFullAccess",
    "PolicyId": "ANPAIQNUJTQYDRJPC3BNK",
    "Arn": "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess",
    "Path": "/",
    "DefaultVersionId": "v8",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:39:58+00:00",
    "UpdateDate": "2019-09-12 23:08:46+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sns:AddPermission",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:ListTopics",
                "sns:SetTopicAttributes",
                "sns:GetTopicAttributes"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:CreateBucket",
                "s3:DeleteBucket",
                "s3:ListAllMyBuckets",
                "s3:PutBucketPolicy",
                "s3:ListBucket",
                "s3:GetObject",
                "s3:GetBucketLocation",
                "s3:GetBucketPolicy"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "cloudtrail:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:ListRoles",
                "iam:GetRolePolicy",
                "iam:GetUser"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:PassRole"
              ],
              "Resource": "*",
              "Condition": {
                "StringEquals": {
                  "iam:PassedToService": "cloudtrail.amazonaws.com"
                }
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "kms:ListKeys",
                "kms:ListAliases"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:ListFunctions"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v8",
        "IsDefaultVersion": true,
        "CreateDate": "2019-09-12 23:08:46+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [
      "s3:GetObject"
    ],
    "ResourceExposure": [
      "sns:AddPermission",
      "sns:CreateTopic",
      "sns:SetTopicAttributes",
      "s3:PutBucketPolicy",
      "iam:PassRole"
    ],
    "ServiceWildcard": [
      "cloudtrail"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAIX2T3QCXHR2OGGCTO": {
    "PolicyName": "SecurityAudit",
    "PolicyId": "ANPAIX2T3QCXHR2OGGCTO",
    "Arn": "arn:aws:iam::aws:policy/SecurityAudit",
    "Path": "/",
    "DefaultVersionId": "v32",
    "AttachmentCount": 2,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:41:01+00:00",
    "UpdateDate": "2020-02-25 16:08:50+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": "*",
              "Action": [
                "access-analyzer:GetAnalyzedResource",
                "access-analyzer:GetAnalyzer",
                "access-analyzer:GetArchiveRule",
                "access-analyzer:GetFinding",
                "access-analyzer:ListAnalyzedResources",
                "access-analyzer:ListAnalyzers",
                "access-analyzer:ListArchiveRules",
                "access-analyzer:ListFindings",
                "access-analyzer:ListTagsForResource",
                "acm:Describe*",
                "acm:List*",
                "application-autoscaling:Describe*",
                "appmesh:Describe*",
                "appmesh:List*",
                "appsync:List*",
                "athena:GetWorkGroup",
                "athena:List*",
                "autoscaling:Describe*",
                "batch:DescribeComputeEnvironments",
                "batch:DescribeJobDefinitions",
                "chime:List*",
                "cloud9:Describe*",
                "cloud9:ListEnvironments",
                "clouddirectory:ListDirectories",
                "cloudformation:DescribeStack*",
                "cloudformation:GetTemplate",
                "cloudformation:ListStack*",
                "cloudformation:GetStackPolicy",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudhsm:ListHapgs",
                "cloudhsm:ListHsms",
                "cloudhsm:ListLunaClients",
                "cloudsearch:DescribeDomains",
                "cloudsearch:DescribeServiceAccessPolicies",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetEventSelectors",
                "cloudtrail:GetTrailStatus",
                "cloudtrail:ListTags",
                "cloudtrail:LookupEvents",
                "cloudwatch:Describe*",
                "codebuild:ListProjects",
                "codecommit:BatchGetRepositories",
                "codecommit:GetBranch",
                "codecommit:GetObjectIdentifier",
                "codecommit:GetRepository",
                "codecommit:List*",
                "codedeploy:Batch*",
                "codedeploy:Get*",
                "codedeploy:List*",
                "codepipeline:ListPipelines",
                "codestar:Describe*",
                "codestar:List*",
                "cognito-identity:ListIdentityPools",
                "cognito-idp:ListUserPools",
                "cognito-sync:Describe*",
                "cognito-sync:List*",
                "comprehend:Describe*",
                "comprehend:List*",
                "config:BatchGetAggregateResourceConfig",
                "config:BatchGetResourceConfig",
                "config:Deliver*",
                "config:Describe*",
                "config:Get*",
                "config:List*",
                "datapipeline:DescribeObjects",
                "datapipeline:DescribePipelines",
                "datapipeline:EvaluateExpression",
                "datapipeline:GetPipelineDefinition",
                "datapipeline:ListPipelines",
                "datapipeline:QueryObjects",
                "datapipeline:ValidatePipelineDefinition",
                "datasync:Describe*",
                "datasync:List*",
                "dax:Describe*",
                "dax:ListTags",
                "directconnect:Describe*",
                "dms:Describe*",
                "dms:ListTagsForResource",
                "ds:DescribeDirectories",
                "dynamodb:DescribeContinuousBackups",
                "dynamodb:DescribeGlobalTable",
                "dynamodb:DescribeTable",
                "dynamodb:DescribeTimeToLive",
                "dynamodb:ListBackups",
                "dynamodb:ListGlobalTables",
                "dynamodb:ListStreams",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "ecr:DescribeRepositories",
                "ecr:GetRepositoryPolicy",
                "ecs:Describe*",
                "ecs:List*",
                "eks:DescribeCluster",
                "eks:ListClusters",
                "elasticache:Describe*",
                "elasticbeanstalk:Describe*",
                "elasticfilesystem:DescribeFileSystems",
                "elasticfilesystem:DescribeMountTargetSecurityGroups",
                "elasticfilesystem:DescribeMountTargets",
                "elasticloadbalancing:Describe*",
                "elasticmapreduce:Describe*",
                "elasticmapreduce:ListClusters",
                "elasticmapreduce:ListInstances",
                "es:Describe*",
                "es:ListDomainNames",
                "events:Describe*",
                "events:List*",
                "firehose:Describe*",
                "firehose:List*",
                "fms:ListComplianceStatus",
                "fms:ListPolicies",
                "fsx:Describe*",
                "fsx:List*",
                "gamelift:ListBuilds",
                "gamelift:ListFleets",
                "glacier:DescribeVault",
                "glacier:GetVaultAccessPolicy",
                "glacier:ListVaults",
                "globalaccelerator:Describe*",
                "globalaccelerator:List*",
                "greengrass:List*",
                "guardduty:Get*",
                "guardduty:List*",
                "iam:GenerateCredentialReport",
                "iam:GenerateServiceLastAccessedDetails",
                "iam:Get*",
                "iam:List*",
                "iam:SimulateCustomPolicy",
                "iam:SimulatePrincipalPolicy",
                "inspector:Describe*",
                "inspector:Get*",
                "inspector:List*",
                "inspector:Preview*",
                "iot:Describe*",
                "iot:GetPolicy",
                "iot:GetPolicyVersion",
                "iot:List*",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:ListTagsForStream",
                "kinesisanalytics:ListApplications",
                "kms:Describe*",
                "kms:Get*",
                "kms:List*",
                "lambda:GetAccountSettings",
                "lambda:GetFunctionConfiguration",
                "lambda:GetLayerVersionPolicy",
                "lambda:GetPolicy",
                "lambda:List*",
                "license-manager:List*",
                "lightsail:GetInstances",
                "lightsail:GetLoadBalancers",
                "logs:Describe*",
                "logs:ListTagsLogGroup",
                "machinelearning:DescribeMLModels",
                "mediaconnect:Describe*",
                "mediaconnect:List*",
                "mediastore:GetContainerPolicy",
                "mediastore:ListContainers",
                "opsworks:DescribeStacks",
                "opsworks-cm:DescribeServers",
                "organizations:List*",
                "organizations:Describe*",
                "quicksight:Describe*",
                "quicksight:List*",
                "ram:List*",
                "rds:Describe*",
                "rds:DownloadDBLogFilePortion",
                "rds:ListTagsForResource",
                "redshift:Describe*",
                "rekognition:Describe*",
                "rekognition:List*",
                "robomaker:Describe*",
                "robomaker:List*",
                "route53:Get*",
                "route53:List*",
                "route53domains:GetDomainDetail",
                "route53domains:GetOperationDetail",
                "route53domains:ListDomains",
                "route53domains:ListOperations",
                "route53domains:ListTagsForDomain",
                "route53resolver:List*",
                "route53resolver:Get*",
                "s3:GetAccelerateConfiguration",
                "s3:GetAccessPoint",
                "s3:GetAccessPointPolicy",
                "s3:GetAccessPointPolicyStatus",
                "s3:GetAccountPublicAccessBlock",
                "s3:GetAnalyticsConfiguration",
                "s3:GetBucket*",
                "s3:GetEncryptionConfiguration",
                "s3:GetInventoryConfiguration",
                "s3:GetLifecycleConfiguration",
                "s3:GetMetricsConfiguration",
                "s3:GetObjectAcl",
                "s3:GetObjectVersionAcl",
                "s3:GetReplicationConfiguration",
                "s3:ListAccessPoints",
                "s3:ListAllMyBuckets",
                "sagemaker:Describe*",
                "sagemaker:List*",
                "sdb:DomainMetadata",
                "sdb:ListDomains",
                "secretsmanager:GetResourcePolicy",
                "secretsmanager:ListSecrets",
                "secretsmanager:ListSecretVersionIds",
                "securityhub:Describe*",
                "securityhub:Get*",
                "securityhub:List*",
                "serverlessrepo:GetApplicationPolicy",
                "serverlessrepo:List*",
                "ses:GetIdentityDkimAttributes",
                "ses:GetIdentityPolicies",
                "ses:GetIdentityVerificationAttributes",
                "ses:ListIdentities",
                "ses:ListIdentityPolicies",
                "ses:ListVerifiedEmailAddresses",
                "shield:Describe*",
                "shield:List*",
                "snowball:ListClusters",
                "snowball:ListJobs",
                "sns:GetTopicAttributes",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "sqs:GetQueueAttributes",
                "sqs:ListDeadLetterSourceQueues",
                "sqs:ListQueues",
                "sqs:ListQueueTags",
                "ssm:Describe*",
                "ssm:GetAutomationExecution",
                "ssm:ListDocuments",
                "sso:DescribePermissionsPolicies",
                "sso:List*",
                "states:ListStateMachines",
                "storagegateway:DescribeBandwidthRateLimit",
                "storagegateway:DescribeCache",
                "storagegateway:DescribeCachediSCSIVolumes",
                "storagegateway:DescribeGatewayInformation",
                "storagegateway:DescribeMaintenanceStartTime",
                "storagegateway:DescribeNFSFileShares",
                "storagegateway:DescribeSnapshotSchedule",
                "storagegateway:DescribeStorediSCSIVolumes",
                "storagegateway:DescribeTapeArchives",
                "storagegateway:DescribeTapeRecoveryPoints",
                "storagegateway:DescribeTapes",
                "storagegateway:DescribeUploadBuffer",
                "storagegateway:DescribeVTLDevices",
                "storagegateway:DescribeWorkingStorage",
                "storagegateway:List*",
                "tag:GetResources",
                "tag:GetTagKeys",
                "transfer:Describe*",
                "transfer:List*",
                "translate:List*",
                "trustedadvisor:Describe*",
                "waf:ListWebACLs",
                "waf-regional:ListWebACLs",
                "workspaces:Describe*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "apigateway:GET"
              ],
              "Resource": [
                "arn:aws:apigateway:*::/apis",
                "arn:aws:apigateway:*::/apis/*/stages",
                "arn:aws:apigateway:*::/apis/*/stages/*",
                "arn:aws:apigateway:*::/apis/*/routes",
                "arn:aws:apigateway:*::/restapis",
                "arn:aws:apigateway:*::/restapis/*/authorizers",
                "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                "arn:aws:apigateway:*::/restapis/*/documentation/versions",
                "arn:aws:apigateway:*::/restapis/*/resources",
                "arn:aws:apigateway:*::/restapis/*/resources/*",
                "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                "arn:aws:apigateway:*::/restapis/*/stages",
                "arn:aws:apigateway:*::/restapis/*/stages/*",
                "arn:aws:apigateway:*::/vpclinks"
              ]
            }
          ]
        },
        "VersionId": "v32",
        "IsDefaultVersion": true,
        "CreateDate": "2020-02-25 16:08:50+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAIZTJ4DXE7G6AGAE6M": {
    "PolicyName": "AmazonS3ReadOnlyAccess",
    "PolicyId": "ANPAIZTJ4DXE7G6AGAE6M",
    "Arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
    "Path": "/",
    "DefaultVersionId": "v1",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:59+00:00",
    "UpdateDate": "2015-02-06 18:40:59+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v1",
        "IsDefaultVersion": true,
        "CreateDate": "2015-02-06 18:40:59+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [
      "s3:GetObject"
    ],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAJ2P4NXCHAT7NDPNR4": {
    "PolicyName": "AmazonSESFullAccess",
    "PolicyId": "ANPAJ2P4NXCHAT7NDPNR4",
    "Arn": "arn:aws:iam::aws:policy/AmazonSESFullAccess",
    "Path": "/",
    "DefaultVersionId": "v1",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:41:02+00:00",
    "UpdateDate": "2015-02-06 18:41:02+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ses:*"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v1",
        "IsDefaultVersion": true,
        "CreateDate": "2015-02-06 18:41:02+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [
      "ses"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAJBWPGNOVKZD3JI2P2": {
    "PolicyName": "AmazonVPCFullAccess",
    "PolicyId": "ANPAJBWPGNOVKZD3JI2P2",
    "Arn": "arn:aws:iam::aws:policy/AmazonVPCFullAccess",
    "Path": "/",
    "DefaultVersionId": "v7",
    "AttachmentCount": 2,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:41:16+00:00",
    "UpdateDate": "2018-03-15 18:30:25+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:AcceptVpcPeeringConnection",
                "ec2:AcceptVpcEndpointConnections",
                "ec2:AllocateAddress",
                "ec2:AssignIpv6Addresses",
                "ec2:AssignPrivateIpAddresses",
                "ec2:AssociateAddress",
                "ec2:AssociateDhcpOptions",
                "ec2:AssociateRouteTable",
                "ec2:AssociateSubnetCidrBlock",
                "ec2:AssociateVpcCidrBlock",
                "ec2:AttachClassicLinkVpc",
                "ec2:AttachInternetGateway",
                "ec2:AttachNetworkInterface",
                "ec2:AttachVpnGateway",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateCustomerGateway",
                "ec2:CreateDefaultSubnet",
                "ec2:CreateDefaultVpc",
                "ec2:CreateDhcpOptions",
                "ec2:CreateEgressOnlyInternetGateway",
                "ec2:CreateFlowLogs",
                "ec2:CreateInternetGateway",
                "ec2:CreateNatGateway",
                "ec2:CreateNetworkAcl",
                "ec2:CreateNetworkAcl",
                "ec2:CreateNetworkAclEntry",
                "ec2:CreateNetworkInterface",
                "ec2:CreateNetworkInterfacePermission",
                "ec2:CreateRoute",
                "ec2:CreateRouteTable",
                "ec2:CreateSecurityGroup",
                "ec2:CreateSubnet",
                "ec2:CreateTags",
                "ec2:CreateVpc",
                "ec2:CreateVpcEndpoint",
                "ec2:CreateVpcEndpointConnectionNotification",
                "ec2:CreateVpcEndpointServiceConfiguration",
                "ec2:CreateVpcPeeringConnection",
                "ec2:CreateVpnConnection",
                "ec2:CreateVpnConnectionRoute",
                "ec2:CreateVpnGateway",
                "ec2:DeleteCustomerGateway",
                "ec2:DeleteDhcpOptions",
                "ec2:DeleteEgressOnlyInternetGateway",
                "ec2:DeleteFlowLogs",
                "ec2:DeleteInternetGateway",
                "ec2:DeleteNatGateway",
                "ec2:DeleteNetworkAcl",
                "ec2:DeleteNetworkAclEntry",
                "ec2:DeleteNetworkInterface",
                "ec2:DeleteNetworkInterfacePermission",
                "ec2:DeleteRoute",
                "ec2:DeleteRouteTable",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteSubnet",
                "ec2:DeleteTags",
                "ec2:DeleteVpc",
                "ec2:DeleteVpcEndpoints",
                "ec2:DeleteVpcEndpointConnectionNotifications",
                "ec2:DeleteVpcEndpointServiceConfigurations",
                "ec2:DeleteVpcPeeringConnection",
                "ec2:DeleteVpnConnection",
                "ec2:DeleteVpnConnectionRoute",
                "ec2:DeleteVpnGateway",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeClassicLinkInstances",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeEgressOnlyInternetGateways",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeInstances",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeMovingAddresses",
                "ec2:DescribeNatGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeNetworkInterfaceAttribute",
                "ec2:DescribeNetworkInterfacePermissions",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribePrefixLists",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroupReferences",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeStaleSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcClassicLink",
                "ec2:DescribeVpcClassicLinkDnsSupport",
                "ec2:DescribeVpcEndpointConnectionNotifications",
                "ec2:DescribeVpcEndpointConnections",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeVpcEndpointServiceConfigurations",
                "ec2:DescribeVpcEndpointServicePermissions",
                "ec2:DescribeVpcEndpointServices",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways",
                "ec2:DetachClassicLinkVpc",
                "ec2:DetachInternetGateway",
                "ec2:DetachNetworkInterface",
                "ec2:DetachVpnGateway",
                "ec2:DisableVgwRoutePropagation",
                "ec2:DisableVpcClassicLink",
                "ec2:DisableVpcClassicLinkDnsSupport",
                "ec2:DisassociateAddress",
                "ec2:DisassociateRouteTable",
                "ec2:DisassociateSubnetCidrBlock",
                "ec2:DisassociateVpcCidrBlock",
                "ec2:EnableVgwRoutePropagation",
                "ec2:EnableVpcClassicLink",
                "ec2:EnableVpcClassicLinkDnsSupport",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:ModifySubnetAttribute",
                "ec2:ModifyVpcAttribute",
                "ec2:ModifyVpcEndpoint",
                "ec2:ModifyVpcEndpointConnectionNotification",
                "ec2:ModifyVpcEndpointServiceConfiguration",
                "ec2:ModifyVpcEndpointServicePermissions",
                "ec2:ModifyVpcPeeringConnectionOptions",
                "ec2:ModifyVpcTenancy",
                "ec2:MoveAddressToVpc",
                "ec2:RejectVpcEndpointConnections",
                "ec2:RejectVpcPeeringConnection",
                "ec2:ReleaseAddress",
                "ec2:ReplaceNetworkAclAssociation",
                "ec2:ReplaceNetworkAclEntry",
                "ec2:ReplaceRoute",
                "ec2:ReplaceRouteTableAssociation",
                "ec2:ResetNetworkInterfaceAttribute",
                "ec2:RestoreAddressToClassic",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:UnassignIpv6Addresses",
                "ec2:UnassignPrivateIpAddresses",
                "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v7",
        "IsDefaultVersion": true,
        "CreateDate": "2018-03-15 18:30:25+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [
      "ec2:CreateNetworkInterfacePermission",
      "ec2:DeleteNetworkInterfacePermission",
      "ec2:ModifyVpcEndpointServicePermissions"
    ],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAJKSO7NDY4T57MWDSQ": {
    "PolicyName": "IAMReadOnlyAccess",
    "PolicyId": "ANPAJKSO7NDY4T57MWDSQ",
    "Arn": "arn:aws:iam::aws:policy/IAMReadOnlyAccess",
    "Path": "/",
    "DefaultVersionId": "v4",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:39+00:00",
    "UpdateDate": "2018-01-25 19:11:27+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "iam:GenerateCredentialReport",
                "iam:GenerateServiceLastAccessedDetails",
                "iam:Get*",
                "iam:List*",
                "iam:SimulateCustomPolicy",
                "iam:SimulatePrincipalPolicy"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v4",
        "IsDefaultVersion": true,
        "CreateDate": "2018-01-25 19:11:27+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAJLIB4VSBVO47ZSBB6": {
    "PolicyName": "AWSAccountUsageReportAccess",
    "PolicyId": "ANPAJLIB4VSBVO47ZSBB6",
    "Arn": "arn:aws:iam::aws:policy/AWSAccountUsageReportAccess",
    "Path": "/",
    "DefaultVersionId": "v1",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:41:19+00:00",
    "UpdateDate": "2015-02-06 18:41:19+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "aws-portal:ViewUsage"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v1",
        "IsDefaultVersion": true,
        "CreateDate": "2015-02-06 18:41:19+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAJNPP7PPPPMJRV2SA4": {
    "PolicyName": "AWSKeyManagementServicePowerUser",
    "PolicyId": "ANPAJNPP7PPPPMJRV2SA4",
    "Arn": "arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser",
    "Path": "/",
    "DefaultVersionId": "v2",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:40+00:00",
    "UpdateDate": "2017-03-07 00:55:11+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "kms:CreateAlias",
                "kms:CreateKey",
                "kms:DeleteAlias",
                "kms:Describe*",
                "kms:GenerateRandom",
                "kms:Get*",
                "kms:List*",
                "kms:TagResource",
                "kms:UntagResource",
                "iam:ListGroups",
                "iam:ListRoles",
                "iam:ListUsers"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v2",
        "IsDefaultVersion": true,
        "CreateDate": "2017-03-07 00:55:11+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAJWVDLG5RPST6PHQ3A": {
    "PolicyName": "AmazonRoute53FullAccess",
    "PolicyId": "ANPAJWVDLG5RPST6PHQ3A",
    "Arn": "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
    "Path": "/",
    "DefaultVersionId": "v4",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:40:54+00:00",
    "UpdateDate": "2018-12-20 21:42:00+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "route53:*",
                "route53domains:*",
                "cloudfront:ListDistributions",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticbeanstalk:DescribeEnvironments",
                "s3:ListBucket",
                "s3:GetBucketLocation",
                "s3:GetBucketWebsite",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeRegions",
                "sns:ListTopics",
                "sns:ListSubscriptionsByTopic",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:GetMetricStatistics"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "apigateway:GET",
              "Resource": "arn:aws:apigateway:*::/domainnames"
            }
          ]
        },
        "VersionId": "v4",
        "IsDefaultVersion": true,
        "CreateDate": "2018-12-20 21:42:00+00:00"
      }
    ],
    "PrivilegeEscalation": [],
    "DataExfiltration": [],
    "ResourceExposure": [],
    "ServiceWildcard": [
      "route53",
      "route53domains"
    ],
    "CredentialsExposure": [],
    "is_excluded": false
  },
  "ANPAJYRXTHIB4FOVS3ZXS": {
    "PolicyName": "PowerUserAccess",
    "PolicyId": "ANPAJYRXTHIB4FOVS3ZXS",
    "Arn": "arn:aws:iam::aws:policy/PowerUserAccess",
    "Path": "/",
    "DefaultVersionId": "v4",
    "AttachmentCount": 1,
    "IsAttachable": true,
    "CreateDate": "2015-02-06 18:39:47+00:00",
    "UpdateDate": "2019-03-20 22:19:03+00:00",
    "PolicyVersionList": [
      {
        "Document": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "NotAction": [
                "iam:*",
                "organizations:*",
                "account:*"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:CreateServiceLinkedRole",
                "iam:DeleteServiceLinkedRole",
                "iam:ListRoles",
                "organizations:DescribeOrganization",
                "account:ListRegions"
              ],
              "Resource": "*"
            }
          ]
        },
        "VersionId": "v4",
        "IsDefaultVersion": true,
        "CreateDate": "2019-03-20 22:19:03+00:00"
      }
    ],
    "PrivilegeEscalation": [
      {
        "type": "UpdateExistingGlueDevEndpoint",
        "actions": [
          "glue:updatedevendpoint"
        ]
      },
      {
        "type": "EditExistingLambdaFunctionWithRole",
        "actions": [
          "lambda:updatefunctioncode"
        ]
      }
    ],
    "DataExfiltration": [
      "s3:GetObject",
      "ssm:GetParameter",
      "ssm:GetParameters",
      "ssm:GetParametersByPath",
      "secretsmanager:GetSecretValue"
    ],
    "ResourceExposure": [
      "acm-pca:CreatePermission",
      "acm-pca:DeletePermission",
      "apigateway:UpdateRestApiPolicy",
      "backup:DeleteBackupVaultAccessPolicy",
      "backup:PutBackupVaultAccessPolicy",
      "chime:DeleteVoiceConnectorTerminationCredentials",
      "chime:PutVoiceConnectorTerminationCredentials",
      "cloudformation:SetStackPolicy",
      "cloudsearch:UpdateServiceAccessPolicies",
      "codeartifact:DeleteDomainPermissionsPolicy",
      "codeartifact:DeleteRepositoryPermissionsPolicy",
      "codebuild:DeleteResourcePolicy",
      "codebuild:DeleteSourceCredentials",
      "codebuild:ImportSourceCredentials",
      "codebuild:PutResourcePolicy",
      "codeguru-profiler:PutPermission",
      "codeguru-profiler:RemovePermission",
      "codestar:AssociateTeamMember",
      "codestar:CreateProject",
      "codestar:DeleteProject",
      "codestar:DisassociateTeamMember",
      "codestar:UpdateTeamMember",
      "cognito-identity:CreateIdentityPool",
      "cognito-identity:DeleteIdentities",
      "cognito-identity:DeleteIdentityPool",
      "cognito-identity:GetId",
      "cognito-identity:MergeDeveloperIdentities",
      "cognito-identity:SetIdentityPoolRoles",
      "cognito-identity:UnlinkDeveloperIdentity",
      "cognito-identity:UnlinkIdentity",
      "cognito-identity:UpdateIdentityPool",
      "deeplens:AssociateServiceRoleToAccount",
      "ds:CreateConditionalForwarder",
      "ds:CreateDirectory",
      "ds:CreateMicrosoftAD",
      "ds:CreateTrust",
      "ds:ShareDirectory",
      "ec2:CreateNetworkInterfacePermission",
      "ec2:DeleteNetworkInterfacePermission",
      "ec2:ModifySnapshotAttribute",
      "ec2:ModifyVpcEndpointServicePermissions",
      "ec2:ResetSnapshotAttribute",
      "ecr:DeleteRepositoryPolicy",
      "ecr:SetRepositoryPolicy",
      "elasticfilesystem:DeleteFileSystemPolicy",
      "elasticfilesystem:PutFileSystemPolicy",
      "elasticmapreduce:PutBlockPublicAccessConfiguration",
      "es:CreateElasticsearchDomain",
      "es:UpdateElasticsearchDomainConfig",
      "glacier:AbortVaultLock",
      "glacier:CompleteVaultLock",
      "glacier:DeleteVaultAccessPolicy",
      "glacier:InitiateVaultLock",
      "glacier:SetDataRetrievalPolicy",
      "glacier:SetVaultAccessPolicy",
      "glue:DeleteResourcePolicy",
      "glue:PutResourcePolicy",
      "greengrass:AssociateServiceRoleToAccount",
      "health:DisableHealthServiceAccessForOrganization",
      "health:EnableHealthServiceAccessForOrganization",
      "imagebuilder:PutComponentPolicy",
      "imagebuilder:PutImagePolicy",
      "imagebuilder:PutImageRecipePolicy",
      "iot:AttachPolicy",
      "iot:AttachPrincipalPolicy",
      "iot:DetachPolicy",
      "iot:DetachPrincipalPolicy",
      "iot:SetDefaultAuthorizer",
      "iot:SetDefaultPolicyVersion",
      "iotsitewise:CreateAccessPolicy",
      "iotsitewise:DeleteAccessPolicy",
      "iotsitewise:UpdateAccessPolicy",
      "kms:CreateGrant",
      "kms:PutKeyPolicy",
      "kms:RetireGrant",
      "kms:RevokeGrant",
      "lakeformation:BatchGrantPermissions",
      "lakeformation:BatchRevokePermissions",
      "lakeformation:GrantPermissions",
      "lakeformation:PutDataLakeSettings",
      "lakeformation:RevokePermissions",
      "lambda:AddLayerVersionPermission",
      "lambda:AddPermission",
      "lambda:DisableReplication",
      "lambda:EnableReplication",
      "lambda:RemoveLayerVersionPermission",
      "lambda:RemovePermission",
      "license-manager:UpdateServiceSettings",
      "lightsail:GetRelationalDatabaseMasterUserPassword",
      "logs:DeleteResourcePolicy",
      "logs:PutResourcePolicy",
      "mediapackage:RotateIngestEndpointCredentials",
      "mediastore:DeleteContainerPolicy",
      "mediastore:PutContainerPolicy",
      "opsworks:SetPermission",
      "opsworks:UpdateUserProfile",
      "quicksight:CreateAdmin",
      "quicksight:CreateGroup",
      "quicksight:CreateGroupMembership",
      "quicksight:CreateIAMPolicyAssignment",
      "quicksight:CreateUser",
      "quicksight:DeleteGroup",
      "quicksight:DeleteGroupMembership",
      "quicksight:DeleteIAMPolicyAssignment",
      "quicksight:DeleteUser",
      "quicksight:DeleteUserByPrincipalId",
      "quicksight:RegisterUser",
      "quicksight:UpdateDashboardPermissions",
      "quicksight:UpdateGroup",
      "quicksight:UpdateIAMPolicyAssignment",
      "quicksight:UpdateTemplatePermissions",
      "quicksight:UpdateUser",
      "ram:AcceptResourceShareInvitation",
      "ram:AssociateResourceShare",
      "ram:CreateResourceShare",
      "ram:DeleteResourceShare",
      "ram:DisassociateResourceShare",
      "ram:EnableSharingWithAwsOrganization",
      "ram:RejectResourceShareInvitation",
      "ram:UpdateResourceShare",
      "rds-db:connect",
      "rds:AuthorizeDBSecurityGroupIngress",
      "redshift:AuthorizeSnapshotAccess",
      "redshift:CreateClusterUser",
      "redshift:CreateSnapshotCopyGrant",
      "redshift:JoinGroup",
      "redshift:ModifyClusterIamRoles",
      "redshift:RevokeSnapshotAccess",
      "route53resolver:PutResolverRulePolicy",
      "s3:BypassGovernanceRetention",
      "s3:DeleteAccessPointPolicy",
      "s3:DeleteBucketPolicy",
      "s3:ObjectOwnerOverrideToBucketOwner",
      "s3:PutAccessPointPolicy",
      "s3:PutAccountPublicAccessBlock",
      "s3:PutBucketAcl",
      "s3:PutBucketPolicy",
      "s3:PutBucketPublicAccessBlock",
      "s3:PutObjectAcl",
      "s3:PutObjectVersionAcl",
      "secretsmanager:DeleteResourcePolicy",
      "secretsmanager:PutResourcePolicy",
      "servicecatalog:CreatePortfolioShare",
      "servicecatalog:DeletePortfolioShare",
      "sns:AddPermission",
      "sns:CreateTopic",
      "sns:RemovePermission",
      "sns:SetTopicAttributes",
      "sqs:AddPermission",
      "sqs:CreateQueue",
      "sqs:RemovePermission",
      "sqs:SetQueueAttributes",
      "ssm:ModifyDocumentPermission",
      "sso-directory:AddMemberToGroup",
      "sso-directory:CreateAlias",
      "sso-directory:CreateGroup",
      "sso-directory:CreateUser",
      "sso-directory:DeleteGroup",
      "sso-directory:DeleteUser",
      "sso-directory:DisableUser",
      "sso-directory:EnableUser",
      "sso-directory:RemoveMemberFromGroup",
      "sso-directory:UpdateGroup",
      "sso-directory:UpdatePassword",
      "sso-directory:UpdateUser",
      "sso-directory:VerifyEmail",
      "sso:AssociateDirectory",
      "sso:AssociateProfile",
      "sso:CreateApplicationInstance",
      "sso:CreateApplicationInstanceCertificate",
      "sso:CreatePermissionSet",
      "sso:CreateProfile",
      "sso:CreateTrust",
      "sso:DeleteApplicationInstance",
      "sso:DeleteApplicationInstanceCertificate",
      "sso:DeletePermissionSet",
      "sso:DeletePermissionsPolicy",
      "sso:DeleteProfile",
      "sso:DisassociateDirectory",
      "sso:DisassociateProfile",
      "sso:ImportApplicationInstanceServiceProviderMetadata",
      "sso:PutPermissionsPolicy",
      "sso:StartSSO",
      "sso:UpdateApplicationInstanceActiveCertificate",
      "sso:UpdateApplicationInstanceDisplayData",
      "sso:UpdateApplicationInstanceResponseConfiguration",
      "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
      "sso:UpdateApplicationInstanceSecurityConfiguration",
      "sso:UpdateApplicationInstanceServiceProviderConfiguration",
      "sso:UpdateApplicationInstanceStatus",
      "sso:UpdateDirectoryAssociation",
      "sso:UpdatePermissionSet",
      "sso:UpdateProfile",
      "sso:UpdateSSOConfiguration",
      "sso:UpdateTrust",
      "storagegateway:DeleteChapCredentials",
      "storagegateway:SetLocalConsolePassword",
      "storagegateway:SetSMBGuestPassword",
      "storagegateway:UpdateChapCredentials",
      "waf-regional:DeletePermissionPolicy",
      "waf-regional:PutPermissionPolicy",
      "waf:DeletePermissionPolicy",
      "waf:PutPermissionPolicy",
      "wafv2:CreateWebACL",
      "wafv2:DeletePermissionPolicy",
      "wafv2:DeleteWebACL",
      "wafv2:PutPermissionPolicy",
      "wafv2:UpdateWebACL",
      "worklink:UpdateDevicePolicyConfiguration",
      "workmail:ResetPassword",
      "workmail:ResetUserPassword",
      "xray:PutEncryptionConfig",
      "iam:CreateServiceLinkedRole",
      "iam:DeleteServiceLinkedRole"
    ],
    "ServiceWildcard": [],
    "CredentialsExposure": [
      "chime:CreateApiKey",
      "codepipeline:PollForJobs",
      "cognito-identity:GetOpenIdToken",
      "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
      "cognito-identity:GetCredentialsForIdentity",
      "connect:GetFederationToken",
      "connect:GetFederationTokens",
      "ecr:GetAuthorizationToken",
      "gamelift:RequestUploadCredentials",
      "lightsail:GetInstanceAccessDetails",
      "lightsail:GetRelationalDatabaseMasterUserPassword",
      "rds-db:connect",
      "redshift:GetClusterCredentials",
      "mediapackage:RotateIngestEndpointCredentials",
      "sts:AssumeRole",
      "sts:AssumeRoleWithSAML",
      "sts:AssumeRoleWithWebIdentity",
      "sts:GetFederationToken",
      "sts:GetSessionToken"
    ],
    "is_excluded": false
  }
}
