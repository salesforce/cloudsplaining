{
  "groups": {
    "admin": {
      "arn": "arn:aws:iam::012345678901:group/admin",
      "create_date": "2017-05-15 17:33:36+00:00",
      "id": "admin",
      "inline_policies": {},
      "path": "/",
      "managed_policies": {
        "ANPAIWMBCKSKIEE64ZLYK": "AdministratorAccess"
      }
    },
    "aaaaaaaaabbbbbbbccccccc": {
      "arn": "arn:aws:iam::012345678901:group/biden",
      "create_date": "2017-05-15 17:33:36+00:00",
      "id": "aaaaaaaaabbbbbbbccccccc",
      "inline_policies": {
        "9dfb8b36ce6c68a741355e7a2ab5ee62a47755f8f25d68e4fa6f87dabc036986": "InlinePolicyForBidenGroup"
      },
      "path": "/",
      "managed_policies": {
        "ANPAI3R4QMOG6Q5A4VWVG": "AmazonRDSFullAccess"
      }
    }
  },
  "users": {
    "obama": {
      "arn": "arn:aws:iam::012345678901:user/obama",
      "create_date": "2019-12-18 19:10:08+00:00",
      "id": "obama",
      "inline_policies": {},
      "groups": {
        "admin": {
          "arn": "arn:aws:iam::012345678901:group/admin",
          "create_date": "2017-05-15 17:33:36+00:00",
          "id": "admin",
          "inline_policies": {},
          "path": "/",
          "managed_policies": {
            "ANPAIWMBCKSKIEE64ZLYK": "AdministratorAccess"
          }
        }
      },
      "path": "/",
      "managed_policies": {
        "ANPAIWMBCKSKIEE64ZLYK": "AdministratorAccess"
      }
    },
    "userwithlotsofpermissions": {
      "arn": "arn:aws:iam::012345678901:user/userwithlotsofpermissions",
      "create_date": "2019-12-18 19:10:08+00:00",
      "id": "userwithlotsofpermissions",
      "inline_policies": {
        "4d5d2bf1baaf66fd24b21397410fd0eb30ab5758d69fc365b1862dd9a5be5eb8": "InsecureUserPolicy"
      },
      "groups": {
        "admin": {
          "arn": "arn:aws:iam::012345678901:group/admin",
          "create_date": "2017-05-15 17:33:36+00:00",
          "id": "admin",
          "inline_policies": {},
          "path": "/",
          "managed_policies": {
            "ANPAIWMBCKSKIEE64ZLYK": "AdministratorAccess"
          }
        }
      },
      "path": "/",
      "managed_policies": {}
    },
    "biden": {
      "arn": "arn:aws:iam::012345678901:user/biden",
      "create_date": "2019-12-18 19:10:08+00:00",
      "id": "biden",
      "inline_policies": {
        "4d5d2bf1baaf66fd24b21397410fd0eb30ab5758d69fc365b1862dd9a5be5eb8": "InsecureUserPolicy"
      },
      "groups": {
        "biden": {
          "arn": "arn:aws:iam::012345678901:group/biden",
          "create_date": "2017-05-15 17:33:36+00:00",
          "id": "aaaaaaaaabbbbbbbccccccc",
          "inline_policies": {
            "9dfb8b36ce6c68a741355e7a2ab5ee62a47755f8f25d68e4fa6f87dabc036986": "InlinePolicyForBidenGroup"
          },
          "path": "/",
          "managed_policies": {
            "ANPAI3R4QMOG6Q5A4VWVG": "AmazonRDSFullAccess"
          }
        }
      },
      "path": "/",
      "managed_policies": {
        "ANPAI6E2CYYMI4XI7AA5K": "AWSLambdaFullAccess"
      }
    }
  },
  "roles": {
    "MyRole": {
      "arn": "arn:aws:iam::012345678901:role/MyRole",
      "assume_role_policy": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      },
      "create_date": "2019-08-16 17:27:59+00:00",
      "id": "MyRole",
      "inline_policies": {
        "aad4a5d1e0cd67fb99c658e1d326f16afd2f6857804f6ffd547c9c13ef508540": "EC2-IAM-example"
      },
      "instance_profiles": [],
      "instances_count": 0,
      "path": "/",
      "managed_policies": {}
    },
    "MyOtherRole": {
      "arn": "arn:aws:iam::012345678901:role/MyOtherRole",
      "assume_role_policy": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      },
      "create_date": "2019-08-16 17:27:59+00:00",
      "id": "MyOtherRole",
      "inline_policies": {
        "946be6acd0316408ed304d2dcd5147aa2f2a4d2634c6121f841615e75b95cc8d": "SupYo"
      },
      "instance_profiles": [],
      "instances_count": 0,
      "path": "/",
      "managed_policies": {}
    },
    "OverprivilegedEC2": {
      "arn": "arn:aws:iam::012345678901:role/OverprivilegedEC2",
      "assume_role_policy": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      },
      "create_date": "2018-08-20 18:48:00+00:00",
      "id": "OverprivilegedEC2",
      "inline_policies": {
        "946be6acd0316408ed304d2dcd5147aa2f2a4d2634c6121f841615e75b95cc8d": "SupYo"
      },
      "instance_profiles": [
        {
          "Path": "/",
          "InstanceProfileName": "OverprivilegedEC2",
          "InstanceProfileId": "OverprivilegedEC2",
          "Arn": "arn:aws:iam::012345678901:instance-profile/OverprivilegedEC2",
          "CreateDate": "2018-08-20 18:48:00+00:00",
          "Roles": [
            {
              "Path": "/",
              "RoleName": "OverprivilegedEC2",
              "RoleId": "OverprivilegedEC2",
              "Arn": "arn:aws:iam::012345678901:role/OverprivilegedEC2",
              "CreateDate": "2018-08-20 18:48:00+00:00",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "ec2.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
            }
          ]
        }
      ],
      "instances_count": 1,
      "path": "/",
      "managed_policies": {
        "InsecurePolicy": "InsecurePolicy"
      }
    }
  },
  "managed-policies": {
    "NotYourPolicy": {
      "PolicyName": "NotYourPolicy",
      "PolicyId": "NotYourPolicy",
      "Arn": "arn:aws:iam::012345678901:policy/NotYourPolicy",
      "Path": "/",
      "DefaultVersionId": "v9",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2020-01-29 21:24:20+00:00",
      "UpdateDate": "2020-01-29 23:23:12+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "VisualEditor0",
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:PutObjectAcl"
                ],
                "Resource": [
                  "arn:aws:s3:::mybucket/*",
                  "arn:aws:s3:::mybucket"
                ]
              }
            ]
          },
          "VersionId": "v9",
          "IsDefaultVersion": true,
          "CreateDate": "2020-01-29 23:23:12+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": []
    },
    "InsecurePolicy": {
      "PolicyName": "InsecurePolicy",
      "PolicyId": "InsecurePolicy",
      "Arn": "arn:aws:iam::012345678901:policy/InsecurePolicy",
      "Path": "/",
      "DefaultVersionId": "v9",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2020-01-29 21:24:20+00:00",
      "UpdateDate": "2020-01-29 23:23:12+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "VisualEditor0",
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:PutObjectAcl"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          },
          "VersionId": "v9",
          "IsDefaultVersion": true,
          "CreateDate": "2020-01-29 23:23:12+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "s3:PutObjectAcl"
      ],
      "InfrastructureModification": [
        "s3:PutObject",
        "s3:PutObjectAcl"
      ]
    },
    "ANPAI4UIINUVGB5SEC57G": {
      "PolicyName": "AWSCodeCommitPowerUser",
      "PolicyId": "ANPAI4UIINUVGB5SEC57G",
      "Arn": "arn:aws:iam::aws:policy/AWSCodeCommitPowerUser",
      "Path": "/",
      "DefaultVersionId": "v11",
      "AttachmentCount": 2,
      "IsAttachable": true,
      "CreateDate": "2015-07-09 17:06:49+00:00",
      "UpdateDate": "2019-12-03 08:15:40+00:00",
      "PolicyVersionList": [
        {
          "CreateDate": "2019-12-03 08:15:40+00:00",
          "Document": {
            "Statement": [
              {
                "Action": [
                  "codecommit:AssociateApprovalRuleTemplateWithRepository",
                  "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                  "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                  "codecommit:BatchGet*",
                  "codecommit:BatchDescribe*",
                  "codecommit:Create*",
                  "codecommit:DeleteBranch",
                  "codecommit:DeleteFile",
                  "codecommit:Describe*",
                  "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                  "codecommit:EvaluatePullRequestApprovalRules",
                  "codecommit:Get*",
                  "codecommit:List*",
                  "codecommit:Merge*",
                  "codecommit:OverridePullRequestApprovalRules",
                  "codecommit:Put*",
                  "codecommit:Post*",
                  "codecommit:TagResource",
                  "codecommit:Test*",
                  "codecommit:UntagResource",
                  "codecommit:Update*",
                  "codecommit:GitPull",
                  "codecommit:GitPush"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "events:DeleteRule",
                  "events:DescribeRule",
                  "events:DisableRule",
                  "events:EnableRule",
                  "events:PutRule",
                  "events:PutTargets",
                  "events:RemoveTargets",
                  "events:ListTargetsByRule"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:events:*:*:rule/codecommit*",
                "Sid": "CloudWatchEventsCodeCommitRulesAccess"
              },
              {
                "Action": [
                  "sns:Subscribe",
                  "sns:Unsubscribe"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:sns:*:*:codecommit*",
                "Sid": "SNSTopicAndSubscriptionAccess"
              },
              {
                "Action": [
                  "sns:ListTopics",
                  "sns:ListSubscriptionsByTopic",
                  "sns:GetTopicAttributes"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SNSTopicAndSubscriptionReadAccess"
              },
              {
                "Action": [
                  "lambda:ListFunctions"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "LambdaReadOnlyListAccess"
              },
              {
                "Action": [
                  "iam:ListUsers"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "IAMReadOnlyListAccess"
              },
              {
                "Action": [
                  "iam:ListAccessKeys",
                  "iam:ListSSHPublicKeys",
                  "iam:ListServiceSpecificCredentials"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:user/${aws:username}",
                "Sid": "IAMReadOnlyConsoleAccess"
              },
              {
                "Action": [
                  "iam:DeleteSSHPublicKey",
                  "iam:GetSSHPublicKey",
                  "iam:ListSSHPublicKeys",
                  "iam:UpdateSSHPublicKey",
                  "iam:UploadSSHPublicKey"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:user/${aws:username}",
                "Sid": "IAMUserSSHKeys"
              },
              {
                "Action": [
                  "iam:CreateServiceSpecificCredential",
                  "iam:UpdateServiceSpecificCredential",
                  "iam:DeleteServiceSpecificCredential",
                  "iam:ResetServiceSpecificCredential"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:user/${aws:username}",
                "Sid": "IAMSelfManageServiceSpecificCredentials"
              },
              {
                "Action": [
                  "codestar-notifications:CreateNotificationRule",
                  "codestar-notifications:DescribeNotificationRule",
                  "codestar-notifications:UpdateNotificationRule",
                  "codestar-notifications:Subscribe",
                  "codestar-notifications:Unsubscribe"
                ],
                "Condition": {
                  "StringLike": {
                    "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                  }
                },
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CodeStarNotificationsReadWriteAccess"
              },
              {
                "Action": [
                  "codestar-notifications:ListNotificationRules",
                  "codestar-notifications:ListTargets",
                  "codestar-notifications:ListTagsforResource",
                  "codestar-notifications:ListEventTypes"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CodeStarNotificationsListAccess"
              },
              {
                "Action": [
                  "codeguru-reviewer:AssociateRepository",
                  "codeguru-reviewer:DescribeRepositoryAssociation",
                  "codeguru-reviewer:ListRepositoryAssociations",
                  "codeguru-reviewer:DisassociateRepository"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "AmazonCodeGuruReviewerFullAccess"
              },
              {
                "Action": "iam:CreateServiceLinkedRole",
                "Condition": {
                  "StringLike": {
                    "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                  }
                },
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                "Sid": "AmazonCodeGuruReviewerSLRCreation"
              },
              {
                "Action": [
                  "events:PutRule",
                  "events:PutTargets",
                  "events:DeleteRule",
                  "events:RemoveTargets"
                ],
                "Condition": {
                  "StringEquals": {
                    "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                  }
                },
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CloudWatchEventsManagedRules"
              }
            ],
            "Version": "2012-10-17"
          },
          "IsDefaultVersion": true,
          "VersionId": "v11"
        },
        {
          "CreateDate": "2019-11-20 17:12:55+00:00",
          "Document": {
            "Statement": [
              {
                "Action": [
                  "codecommit:AssociateApprovalRuleTemplateWithRepository",
                  "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
                  "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
                  "codecommit:BatchGet*",
                  "codecommit:BatchDescribe*",
                  "codecommit:Create*",
                  "codecommit:DeleteBranch",
                  "codecommit:DeleteFile",
                  "codecommit:Describe*",
                  "codecommit:DisassociateApprovalRuleTemplateFromRepository",
                  "codecommit:EvaluatePullRequestApprovalRules",
                  "codecommit:Get*",
                  "codecommit:List*",
                  "codecommit:Merge*",
                  "codecommit:OverridePullRequestApprovalRules",
                  "codecommit:Put*",
                  "codecommit:Post*",
                  "codecommit:TagResource",
                  "codecommit:Test*",
                  "codecommit:UntagResource",
                  "codecommit:Update*",
                  "codecommit:GitPull",
                  "codecommit:GitPush"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "events:DeleteRule",
                  "events:DescribeRule",
                  "events:DisableRule",
                  "events:EnableRule",
                  "events:PutRule",
                  "events:PutTargets",
                  "events:RemoveTargets",
                  "events:ListTargetsByRule"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:events:*:*:rule/codecommit*",
                "Sid": "CloudWatchEventsCodeCommitRulesAccess"
              },
              {
                "Action": [
                  "sns:Subscribe",
                  "sns:Unsubscribe"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:sns:*:*:codecommit*",
                "Sid": "SNSTopicAndSubscriptionAccess"
              },
              {
                "Action": [
                  "sns:ListTopics",
                  "sns:ListSubscriptionsByTopic",
                  "sns:GetTopicAttributes"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "SNSTopicAndSubscriptionReadAccess"
              },
              {
                "Action": [
                  "lambda:ListFunctions"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "LambdaReadOnlyListAccess"
              },
              {
                "Action": [
                  "iam:ListUsers"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "IAMReadOnlyListAccess"
              },
              {
                "Action": [
                  "iam:ListAccessKeys",
                  "iam:ListSSHPublicKeys",
                  "iam:ListServiceSpecificCredentials"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:user/${aws:username}",
                "Sid": "IAMReadOnlyConsoleAccess"
              },
              {
                "Action": [
                  "iam:DeleteSSHPublicKey",
                  "iam:GetSSHPublicKey",
                  "iam:ListSSHPublicKeys",
                  "iam:UpdateSSHPublicKey",
                  "iam:UploadSSHPublicKey"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:user/${aws:username}",
                "Sid": "IAMUserSSHKeys"
              },
              {
                "Action": [
                  "iam:CreateServiceSpecificCredential",
                  "iam:UpdateServiceSpecificCredential",
                  "iam:DeleteServiceSpecificCredential",
                  "iam:ResetServiceSpecificCredential"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:user/${aws:username}",
                "Sid": "IAMSelfManageServiceSpecificCredentials"
              },
              {
                "Action": [
                  "codestar-notifications:CreateNotificationRule",
                  "codestar-notifications:DescribeNotificationRule",
                  "codestar-notifications:UpdateNotificationRule",
                  "codestar-notifications:Subscribe",
                  "codestar-notifications:Unsubscribe"
                ],
                "Condition": {
                  "StringLike": {
                    "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                  }
                },
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CodeStarNotificationsReadWriteAccess"
              },
              {
                "Action": [
                  "codestar-notifications:ListNotificationRules",
                  "codestar-notifications:ListTargets",
                  "codestar-notifications:ListTagsforResource",
                  "codestar-notifications:ListEventTypes"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Sid": "CodeStarNotificationsListAccess"
              }
            ],
            "Version": "2012-10-17"
          },
          "IsDefaultVersion": false,
          "VersionId": "v10"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "codecommit:AssociateApprovalRuleTemplateWithRepository",
        "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
        "codecommit:BatchDescribeMergeConflicts",
        "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
        "codecommit:BatchGetCommits",
        "codecommit:BatchGetPullRequests",
        "codecommit:BatchGetRepositories",
        "codecommit:CreateApprovalRuleTemplate",
        "codecommit:CreateBranch",
        "codecommit:CreateCommit",
        "codecommit:CreatePullRequest",
        "codecommit:CreatePullRequestApprovalRule",
        "codecommit:CreateRepository",
        "codecommit:CreateUnreferencedMergeCommit",
        "codecommit:DeleteBranch",
        "codecommit:DeleteFile",
        "codecommit:DescribeMergeConflicts",
        "codecommit:DescribePullRequestEvents",
        "codecommit:DisassociateApprovalRuleTemplateFromRepository",
        "codecommit:EvaluatePullRequestApprovalRules",
        "codecommit:GetApprovalRuleTemplate",
        "codecommit:GetBlob",
        "codecommit:GetBranch",
        "codecommit:GetComment",
        "codecommit:GetCommentsForComparedCommit",
        "codecommit:GetCommentsForPullRequest",
        "codecommit:GetCommit",
        "codecommit:GetCommitHistory",
        "codecommit:GetCommitsFromMergeBase",
        "codecommit:GetDifferences",
        "codecommit:GetFile",
        "codecommit:GetFolder",
        "codecommit:GetMergeCommit",
        "codecommit:GetMergeConflicts",
        "codecommit:GetMergeOptions",
        "codecommit:GetObjectIdentifier",
        "codecommit:GetPullRequest",
        "codecommit:GetPullRequestApprovalStates",
        "codecommit:GetPullRequestOverrideState",
        "codecommit:GetReferences",
        "codecommit:GetRepository",
        "codecommit:GetRepositoryTriggers",
        "codecommit:GetTree",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:GitPull",
        "codecommit:GitPush",
        "codecommit:ListApprovalRuleTemplates",
        "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
        "codecommit:ListBranches",
        "codecommit:ListPullRequests",
        "codecommit:ListRepositories",
        "codecommit:ListRepositoriesForApprovalRuleTemplate",
        "codecommit:ListTagsForResource",
        "codecommit:MergeBranchesByFastForward",
        "codecommit:MergeBranchesBySquash",
        "codecommit:MergeBranchesByThreeWay",
        "codecommit:MergePullRequestByFastForward",
        "codecommit:MergePullRequestBySquash",
        "codecommit:MergePullRequestByThreeWay",
        "codecommit:OverridePullRequestApprovalRules",
        "codecommit:PostCommentForComparedCommit",
        "codecommit:PostCommentForPullRequest",
        "codecommit:PostCommentReply",
        "codecommit:PutFile",
        "codecommit:PutRepositoryTriggers",
        "codecommit:TagResource",
        "codecommit:TestRepositoryTriggers",
        "codecommit:UntagResource",
        "codecommit:UpdateApprovalRuleTemplateContent",
        "codecommit:UpdateApprovalRuleTemplateDescription",
        "codecommit:UpdateApprovalRuleTemplateName",
        "codecommit:UpdateComment",
        "codecommit:UpdateDefaultBranch",
        "codecommit:UpdatePullRequestApprovalRuleContent",
        "codecommit:UpdatePullRequestApprovalState",
        "codecommit:UpdatePullRequestDescription",
        "codecommit:UpdatePullRequestStatus",
        "codecommit:UpdatePullRequestTitle",
        "codecommit:UpdateRepositoryDescription",
        "codecommit:UpdateRepositoryName",
        "sns:GetTopicAttributes",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTopics",
        "lambda:ListFunctions",
        "iam:ListUsers",
        "codestar-notifications:CreateNotificationRule",
        "codestar-notifications:DescribeNotificationRule",
        "codestar-notifications:Subscribe",
        "codestar-notifications:Unsubscribe",
        "codestar-notifications:UpdateNotificationRule",
        "codestar-notifications:ListEventTypes",
        "codestar-notifications:ListNotificationRules",
        "codestar-notifications:ListTagsforResource",
        "codestar-notifications:ListTargets",
        "codeguru-reviewer:AssociateRepository",
        "codeguru-reviewer:DescribeRepositoryAssociation",
        "codeguru-reviewer:DisassociateRepository",
        "codeguru-reviewer:ListRepositoryAssociations",
        "events:DeleteRule",
        "events:PutRule",
        "events:PutTargets",
        "events:RemoveTargets"
      ]
    },
    "ANPAI3R4QMOG6Q5A4VWVG": {
      "PolicyName": "AmazonRDSFullAccess",
      "PolicyId": "ANPAI3R4QMOG6Q5A4VWVG",
      "Arn": "arn:aws:iam::aws:policy/AmazonRDSFullAccess",
      "Path": "/",
      "DefaultVersionId": "v6",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:52+00:00",
      "UpdateDate": "2018-04-09 17:42:48+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "rds:*",
                  "application-autoscaling:DeleteScalingPolicy",
                  "application-autoscaling:DeregisterScalableTarget",
                  "application-autoscaling:DescribeScalableTargets",
                  "application-autoscaling:DescribeScalingActivities",
                  "application-autoscaling:DescribeScalingPolicies",
                  "application-autoscaling:PutScalingPolicy",
                  "application-autoscaling:RegisterScalableTarget",
                  "cloudwatch:DescribeAlarms",
                  "cloudwatch:GetMetricStatistics",
                  "cloudwatch:PutMetricAlarm",
                  "cloudwatch:DeleteAlarms",
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcAttribute",
                  "ec2:DescribeVpcs",
                  "sns:ListSubscriptions",
                  "sns:ListTopics",
                  "sns:Publish",
                  "logs:DescribeLogStreams",
                  "logs:GetLogEvents"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": "pi:*",
                "Effect": "Allow",
                "Resource": "arn:aws:pi:*:*:metrics/rds/*"
              },
              {
                "Action": "iam:CreateServiceLinkedRole",
                "Effect": "Allow",
                "Resource": "*",
                "Condition": {
                  "StringLike": {
                    "iam:AWSServiceName": [
                      "rds.amazonaws.com",
                      "rds.application-autoscaling.amazonaws.com"
                    ]
                  }
                }
              }
            ]
          },
          "VersionId": "v6",
          "IsDefaultVersion": true,
          "CreateDate": "2018-04-09 17:42:48+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "rds:AuthorizeDBSecurityGroupIngress",
        "iam:CreateServiceLinkedRole"
      ],
      "InfrastructureModification": [
        "application-autoscaling:DeleteScalingPolicy",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingActivities",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:PutScalingPolicy",
        "application-autoscaling:RegisterScalableTarget",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:PutMetricAlarm",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcs",
        "logs:DescribeLogStreams",
        "logs:GetLogEvents",
        "rds:AddRoleToDBCluster",
        "rds:AddRoleToDBInstance",
        "rds:AddSourceIdentifierToSubscription",
        "rds:AddTagsToResource",
        "rds:ApplyPendingMaintenanceAction",
        "rds:AuthorizeDBSecurityGroupIngress",
        "rds:BacktrackDBCluster",
        "rds:CancelExportTask",
        "rds:CopyDBClusterParameterGroup",
        "rds:CopyDBClusterSnapshot",
        "rds:CopyDBParameterGroup",
        "rds:CopyDBSnapshot",
        "rds:CopyOptionGroup",
        "rds:CreateDBCluster",
        "rds:CreateDBClusterEndpoint",
        "rds:CreateDBClusterParameterGroup",
        "rds:CreateDBClusterSnapshot",
        "rds:CreateDBInstance",
        "rds:CreateDBInstanceReadReplica",
        "rds:CreateDBParameterGroup",
        "rds:CreateDBProxy",
        "rds:CreateDBSecurityGroup",
        "rds:CreateDBSnapshot",
        "rds:CreateDBSubnetGroup",
        "rds:CreateEventSubscription",
        "rds:CreateGlobalCluster",
        "rds:CreateOptionGroup",
        "rds:DeleteDBCluster",
        "rds:DeleteDBClusterEndpoint",
        "rds:DeleteDBClusterParameterGroup",
        "rds:DeleteDBClusterSnapshot",
        "rds:DeleteDBInstance",
        "rds:DeleteDBInstanceAutomatedBackup",
        "rds:DeleteDBParameterGroup",
        "rds:DeleteDBProxy",
        "rds:DeleteDBSecurityGroup",
        "rds:DeleteDBSnapshot",
        "rds:DeleteDBSubnetGroup",
        "rds:DeleteEventSubscription",
        "rds:DeleteGlobalCluster",
        "rds:DeleteOptionGroup",
        "rds:DeregisterDBProxyTargets",
        "rds:DescribeAccountAttributes",
        "rds:DescribeCertificates",
        "rds:DescribeDBClusterBacktracks",
        "rds:DescribeDBClusterEndpoints",
        "rds:DescribeDBClusterParameterGroups",
        "rds:DescribeDBClusterParameters",
        "rds:DescribeDBClusterSnapshotAttributes",
        "rds:DescribeDBClusterSnapshots",
        "rds:DescribeDBClusters",
        "rds:DescribeDBEngineVersions",
        "rds:DescribeDBInstanceAutomatedBackups",
        "rds:DescribeDBInstances",
        "rds:DescribeDBLogFiles",
        "rds:DescribeDBParameterGroups",
        "rds:DescribeDBParameters",
        "rds:DescribeDBProxies",
        "rds:DescribeDBProxyTargetGroups",
        "rds:DescribeDBProxyTargets",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshotAttributes",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEngineDefaultClusterParameters",
        "rds:DescribeEngineDefaultParameters",
        "rds:DescribeEventCategories",
        "rds:DescribeEventSubscriptions",
        "rds:DescribeEvents",
        "rds:DescribeExportTasks",
        "rds:DescribeGlobalClusters",
        "rds:DescribeOptionGroupOptions",
        "rds:DescribeOptionGroups",
        "rds:DescribeOrderableDBInstanceOptions",
        "rds:DescribePendingMaintenanceActions",
        "rds:DescribeReservedDBInstances",
        "rds:DescribeReservedDBInstancesOfferings",
        "rds:DescribeSourceRegions",
        "rds:DescribeValidDBInstanceModifications",
        "rds:DownloadCompleteDBLogFile",
        "rds:DownloadDBLogFilePortion",
        "rds:FailoverDBCluster",
        "rds:ListTagsForResource",
        "rds:ModifyCurrentDBClusterCapacity",
        "rds:ModifyDBCluster",
        "rds:ModifyDBClusterEndpoint",
        "rds:ModifyDBClusterParameterGroup",
        "rds:ModifyDBClusterSnapshotAttribute",
        "rds:ModifyDBInstance",
        "rds:ModifyDBParameterGroup",
        "rds:ModifyDBProxy",
        "rds:ModifyDBProxyTargetGroup",
        "rds:ModifyDBSnapshot",
        "rds:ModifyDBSnapshotAttribute",
        "rds:ModifyDBSubnetGroup",
        "rds:ModifyEventSubscription",
        "rds:ModifyGlobalCluster",
        "rds:ModifyOptionGroup",
        "rds:PromoteReadReplica",
        "rds:PromoteReadReplicaDBCluster",
        "rds:PurchaseReservedDBInstancesOffering",
        "rds:RebootDBInstance",
        "rds:RegisterDBProxyTargets",
        "rds:RemoveFromGlobalCluster",
        "rds:RemoveRoleFromDBCluster",
        "rds:RemoveRoleFromDBInstance",
        "rds:RemoveSourceIdentifierFromSubscription",
        "rds:RemoveTagsFromResource",
        "rds:ResetDBClusterParameterGroup",
        "rds:ResetDBParameterGroup",
        "rds:RestoreDBClusterFromS3",
        "rds:RestoreDBClusterFromSnapshot",
        "rds:RestoreDBClusterToPointInTime",
        "rds:RestoreDBInstanceFromDBSnapshot",
        "rds:RestoreDBInstanceFromS3",
        "rds:RestoreDBInstanceToPointInTime",
        "rds:RevokeDBSecurityGroupIngress",
        "rds:StartActivityStream",
        "rds:StartDBCluster",
        "rds:StartDBInstance",
        "rds:StartExportTask",
        "rds:StopActivityStream",
        "rds:StopDBCluster",
        "rds:StopDBInstance",
        "sns:ListSubscriptions",
        "sns:ListTopics",
        "sns:Publish",
        "iam:CreateServiceLinkedRole"
      ]
    },
    "ANPAI3VAJF5ZCRZ7MCQE6": {
      "PolicyName": "AmazonEC2FullAccess",
      "PolicyId": "ANPAI3VAJF5ZCRZ7MCQE6",
      "Arn": "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
      "Path": "/",
      "DefaultVersionId": "v5",
      "AttachmentCount": 3,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:15+00:00",
      "UpdateDate": "2018-11-27 02:16:56+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": "ec2:*",
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "elasticloadbalancing:*",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "cloudwatch:*",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "autoscaling:*",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "iam:CreateServiceLinkedRole",
                "Resource": "*",
                "Condition": {
                  "StringEquals": {
                    "iam:AWSServiceName": [
                      "autoscaling.amazonaws.com",
                      "ec2scheduled.amazonaws.com",
                      "elasticloadbalancing.amazonaws.com",
                      "spot.amazonaws.com",
                      "spotfleet.amazonaws.com",
                      "transitgateway.amazonaws.com"
                    ]
                  }
                }
              }
            ]
          },
          "VersionId": "v5",
          "IsDefaultVersion": true,
          "CreateDate": "2018-11-27 02:16:56+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ResetSnapshotAttribute",
        "iam:CreateServiceLinkedRole"
      ],
      "InfrastructureModification": [
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AdvertiseByoipCidr",
        "ec2:AllocateAddress",
        "ec2:AllocateHosts",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssociateAddress",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVolume",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelCapacityReservation",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CancelSpotFleetRequests",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyFpgaImage",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateCapacityReservation",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFleet",
        "ec2:CreateFlowLogs",
        "ec2:CreateFpgaImage",
        "ec2:CreateImage",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateInternetGateway",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreatePlacementGroup",
        "ec2:CreateReservedInstancesListing",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot",
        "ec2:CreateSnapshots",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateSubnet",
        "ec2:CreateTags",
        "ec2:CreateTrafficMirrorFilter",
        "ec2:CreateTrafficMirrorFilterRule",
        "ec2:CreateTrafficMirrorSession",
        "ec2:CreateTrafficMirrorTarget",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVolume",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteClientVpnEndpoint",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFleets",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteFpgaImage",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeletePlacementGroup",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteTags",
        "ec2:DeleteTrafficMirrorFilter",
        "ec2:DeleteTrafficMirrorFilterRule",
        "ec2:DeleteTrafficMirrorSession",
        "ec2:DeleteTrafficMirrorTarget",
        "ec2:DeleteTransitGateway",
        "ec2:DeleteTransitGatewayMulticastDomain",
        "ec2:DeleteTransitGatewayPeeringAttachment",
        "ec2:DeleteTransitGatewayRoute",
        "ec2:DeleteTransitGatewayRouteTable",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "ec2:DeleteVolume",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DeprovisionByoipCidr",
        "ec2:DeregisterImage",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVolume",
        "ec2:DetachVpnGateway",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableFastSnapshotRestores",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateTransitGatewayMulticastDomain",
        "ec2:DisassociateTransitGatewayRouteTable",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableFastSnapshotRestores",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVolumeIO",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetLaunchTemplateData",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot",
        "ec2:ImportVolume",
        "ec2:ModifyCapacityReservation",
        "ec2:ModifyClientVpnEndpoint",
        "ec2:ModifyDefaultCreditSpecification",
        "ec2:ModifyEbsDefaultKmsKeyId",
        "ec2:ModifyFleet",
        "ec2:ModifyFpgaImageAttribute",
        "ec2:ModifyHosts",
        "ec2:ModifyIdFormat",
        "ec2:ModifyIdentityIdFormat",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyInstanceCapacityReservationAttributes",
        "ec2:ModifyInstanceCreditSpecification",
        "ec2:ModifyInstanceEventStartTime",
        "ec2:ModifyInstanceMetadataOptions",
        "ec2:ModifyInstancePlacement",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifyReservedInstances",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySpotFleetRequest",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "ec2:ModifyTrafficMirrorFilterRule",
        "ec2:ModifyTrafficMirrorSession",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:ModifyVolume",
        "ec2:ModifyVolumeAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:ModifyVpnConnection",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:MonitorInstances",
        "ec2:MoveAddressToVpc",
        "ec2:ProvisionByoipCidr",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:RegisterInstanceEventNotificationAttributes",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RejectTransitGatewayPeeringAttachment",
        "ec2:RejectTransitGatewayVpcAttachment",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReleaseHosts",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ReplaceTransitGatewayRoute",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotFleet",
        "ec2:RequestSpotInstances",
        "ec2:ResetEbsDefaultKmsKeyId",
        "ec2:ResetFpgaImageAttribute",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RevokeClientVpnIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:RunScheduledInstances",
        "ec2:SearchLocalGatewayRoutes",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:SendDiagnosticInterrupt",
        "ec2:StartInstances",
        "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "ec2:StopInstances",
        "ec2:TerminateClientVpnConnections",
        "ec2:TerminateInstances",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnmonitorInstances",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:WithdrawByoipCidr",
        "elasticloadbalancing:AddListenerCertificates",
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
        "elasticloadbalancing:AttachLoadBalancerToSubnets",
        "elasticloadbalancing:ConfigureHealthCheck",
        "elasticloadbalancing:CreateAppCookieStickinessPolicy",
        "elasticloadbalancing:CreateLBCookieStickinessPolicy",
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateLoadBalancerListeners",
        "elasticloadbalancing:CreateLoadBalancerPolicy",
        "elasticloadbalancing:CreateRule",
        "elasticloadbalancing:CreateTargetGroup",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:DeleteLoadBalancerListeners",
        "elasticloadbalancing:DeleteLoadBalancerPolicy",
        "elasticloadbalancing:DeleteRule",
        "elasticloadbalancing:DeleteTargetGroup",
        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
        "elasticloadbalancing:DeregisterTargets",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeInstanceHealth",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticloadbalancing:DetachLoadBalancerFromSubnets",
        "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
        "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "elasticloadbalancing:ModifyRule",
        "elasticloadbalancing:ModifyTargetGroup",
        "elasticloadbalancing:ModifyTargetGroupAttributes",
        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
        "elasticloadbalancing:RegisterTargets",
        "elasticloadbalancing:RemoveListenerCertificates",
        "elasticloadbalancing:RemoveTags",
        "elasticloadbalancing:SetIpAddressType",
        "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
        "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
        "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
        "elasticloadbalancing:SetRulePriorities",
        "elasticloadbalancing:SetSecurityGroups",
        "elasticloadbalancing:SetSubnets",
        "elasticloadbalancing:SetWebAcl",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DeleteAnomalyDetector",
        "cloudwatch:DeleteDashboards",
        "cloudwatch:DeleteInsightRules",
        "cloudwatch:DescribeAlarmHistory",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:DescribeAlarmsForMetric",
        "cloudwatch:DescribeAnomalyDetectors",
        "cloudwatch:DescribeInsightRules",
        "cloudwatch:DisableAlarmActions",
        "cloudwatch:DisableInsightRules",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:EnableInsightRules",
        "cloudwatch:GetDashboard",
        "cloudwatch:GetInsightRuleReport",
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:GetMetricWidgetImage",
        "cloudwatch:ListDashboards",
        "cloudwatch:ListMetrics",
        "cloudwatch:ListTagsForResource",
        "cloudwatch:PutAnomalyDetector",
        "cloudwatch:PutDashboard",
        "cloudwatch:PutInsightRule",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:PutMetricData",
        "cloudwatch:SetAlarmState",
        "cloudwatch:TagResource",
        "cloudwatch:UntagResource",
        "autoscaling:AttachInstances",
        "autoscaling:AttachLoadBalancerTargetGroups",
        "autoscaling:AttachLoadBalancers",
        "autoscaling:BatchDeleteScheduledAction",
        "autoscaling:BatchPutScheduledUpdateGroupAction",
        "autoscaling:CompleteLifecycleAction",
        "autoscaling:CreateAutoScalingGroup",
        "autoscaling:CreateLaunchConfiguration",
        "autoscaling:CreateOrUpdateTags",
        "autoscaling:DeleteAutoScalingGroup",
        "autoscaling:DeleteLaunchConfiguration",
        "autoscaling:DeleteLifecycleHook",
        "autoscaling:DeleteNotificationConfiguration",
        "autoscaling:DeletePolicy",
        "autoscaling:DeleteScheduledAction",
        "autoscaling:DeleteTags",
        "autoscaling:DescribeAccountLimits",
        "autoscaling:DescribeAdjustmentTypes",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeAutoScalingNotificationTypes",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeLifecycleHookTypes",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeLoadBalancerTargetGroups",
        "autoscaling:DescribeLoadBalancers",
        "autoscaling:DescribeMetricCollectionTypes",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:DescribePolicies",
        "autoscaling:DescribeScalingActivities",
        "autoscaling:DescribeScalingProcessTypes",
        "autoscaling:DescribeScheduledActions",
        "autoscaling:DescribeTags",
        "autoscaling:DescribeTerminationPolicyTypes",
        "autoscaling:DetachInstances",
        "autoscaling:DetachLoadBalancerTargetGroups",
        "autoscaling:DetachLoadBalancers",
        "autoscaling:DisableMetricsCollection",
        "autoscaling:EnableMetricsCollection",
        "autoscaling:EnterStandby",
        "autoscaling:ExecutePolicy",
        "autoscaling:ExitStandby",
        "autoscaling:PutLifecycleHook",
        "autoscaling:PutNotificationConfiguration",
        "autoscaling:PutScalingPolicy",
        "autoscaling:PutScheduledUpdateGroupAction",
        "autoscaling:RecordLifecycleActionHeartbeat",
        "autoscaling:ResumeProcesses",
        "autoscaling:SetDesiredCapacity",
        "autoscaling:SetInstanceHealth",
        "autoscaling:SetInstanceProtection",
        "autoscaling:SuspendProcesses",
        "autoscaling:TerminateInstanceInAutoScalingGroup",
        "autoscaling:UpdateAutoScalingGroup",
        "iam:CreateServiceLinkedRole"
      ]
    },
    "ANPAI4VCZ3XPIZLQ5NZV2": {
      "PolicyName": "AWSCodeCommitFullAccess",
      "PolicyId": "ANPAI4VCZ3XPIZLQ5NZV2",
      "Arn": "arn:aws:iam::aws:policy/AWSCodeCommitFullAccess",
      "Path": "/",
      "DefaultVersionId": "v7",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-07-09 17:02:19+00:00",
      "UpdateDate": "2020-03-26 16:23:20+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "codecommit:*"
                ],
                "Resource": "*"
              },
              {
                "Sid": "CloudWatchEventsCodeCommitRulesAccess",
                "Effect": "Allow",
                "Action": [
                  "events:DeleteRule",
                  "events:DescribeRule",
                  "events:DisableRule",
                  "events:EnableRule",
                  "events:PutRule",
                  "events:PutTargets",
                  "events:RemoveTargets",
                  "events:ListTargetsByRule"
                ],
                "Resource": "arn:aws:events:*:*:rule/codecommit*"
              },
              {
                "Sid": "SNSTopicAndSubscriptionAccess",
                "Effect": "Allow",
                "Action": [
                  "sns:CreateTopic",
                  "sns:DeleteTopic",
                  "sns:Subscribe",
                  "sns:Unsubscribe",
                  "sns:SetTopicAttributes"
                ],
                "Resource": "arn:aws:sns:*:*:codecommit*"
              },
              {
                "Sid": "SNSTopicAndSubscriptionReadAccess",
                "Effect": "Allow",
                "Action": [
                  "sns:ListTopics",
                  "sns:ListSubscriptionsByTopic",
                  "sns:GetTopicAttributes"
                ],
                "Resource": "*"
              },
              {
                "Sid": "LambdaReadOnlyListAccess",
                "Effect": "Allow",
                "Action": [
                  "lambda:ListFunctions"
                ],
                "Resource": "*"
              },
              {
                "Sid": "IAMReadOnlyListAccess",
                "Effect": "Allow",
                "Action": [
                  "iam:ListUsers"
                ],
                "Resource": "*"
              },
              {
                "Sid": "IAMReadOnlyConsoleAccess",
                "Effect": "Allow",
                "Action": [
                  "iam:ListAccessKeys",
                  "iam:ListSSHPublicKeys",
                  "iam:ListServiceSpecificCredentials"
                ],
                "Resource": "arn:aws:iam::*:user/${aws:username}"
              },
              {
                "Sid": "IAMUserSSHKeys",
                "Effect": "Allow",
                "Action": [
                  "iam:DeleteSSHPublicKey",
                  "iam:GetSSHPublicKey",
                  "iam:ListSSHPublicKeys",
                  "iam:UpdateSSHPublicKey",
                  "iam:UploadSSHPublicKey"
                ],
                "Resource": "arn:aws:iam::*:user/${aws:username}"
              },
              {
                "Sid": "IAMSelfManageServiceSpecificCredentials",
                "Effect": "Allow",
                "Action": [
                  "iam:CreateServiceSpecificCredential",
                  "iam:UpdateServiceSpecificCredential",
                  "iam:DeleteServiceSpecificCredential",
                  "iam:ResetServiceSpecificCredential"
                ],
                "Resource": "arn:aws:iam::*:user/${aws:username}"
              },
              {
                "Sid": "CodeStarNotificationsReadWriteAccess",
                "Effect": "Allow",
                "Action": [
                  "codestar-notifications:CreateNotificationRule",
                  "codestar-notifications:DescribeNotificationRule",
                  "codestar-notifications:UpdateNotificationRule",
                  "codestar-notifications:DeleteNotificationRule",
                  "codestar-notifications:Subscribe",
                  "codestar-notifications:Unsubscribe"
                ],
                "Resource": "*",
                "Condition": {
                  "StringLike": {
                    "codestar-notifications:NotificationsForResource": "arn:aws:codecommit:*"
                  }
                }
              },
              {
                "Sid": "CodeStarNotificationsListAccess",
                "Effect": "Allow",
                "Action": [
                  "codestar-notifications:ListNotificationRules",
                  "codestar-notifications:ListTargets",
                  "codestar-notifications:ListTagsforResource",
                  "codestar-notifications:ListEventTypes"
                ],
                "Resource": "*"
              },
              {
                "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
                "Effect": "Allow",
                "Action": [
                  "sns:CreateTopic",
                  "sns:SetTopicAttributes"
                ],
                "Resource": "arn:aws:sns:*:*:codestar-notifications*"
              },
              {
                "Sid": "AmazonCodeGuruReviewerFullAccess",
                "Effect": "Allow",
                "Action": [
                  "codeguru-reviewer:AssociateRepository",
                  "codeguru-reviewer:DescribeRepositoryAssociation",
                  "codeguru-reviewer:ListRepositoryAssociations",
                  "codeguru-reviewer:DisassociateRepository"
                ],
                "Resource": "*"
              },
              {
                "Sid": "AmazonCodeGuruReviewerSLRCreation",
                "Action": "iam:CreateServiceLinkedRole",
                "Effect": "Allow",
                "Resource": "arn:aws:iam::*:role/aws-service-role/codeguru-reviewer.amazonaws.com/AWSServiceRoleForAmazonCodeGuruReviewer",
                "Condition": {
                  "StringLike": {
                    "iam:AWSServiceName": "codeguru-reviewer.amazonaws.com"
                  }
                }
              },
              {
                "Sid": "CloudWatchEventsManagedRules",
                "Effect": "Allow",
                "Action": [
                  "events:PutRule",
                  "events:PutTargets",
                  "events:DeleteRule",
                  "events:RemoveTargets"
                ],
                "Resource": "*",
                "Condition": {
                  "StringEquals": {
                    "events:ManagedBy": "codeguru-reviewer.amazonaws.com"
                  }
                }
              },
              {
                "Sid": "CodeStarNotificationsChatbotAccess",
                "Effect": "Allow",
                "Action": [
                  "chatbot:DescribeSlackChannelConfigurations"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v7",
          "IsDefaultVersion": true,
          "CreateDate": "2020-03-26 16:23:20+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "codecommit:AssociateApprovalRuleTemplateWithRepository",
        "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
        "codecommit:BatchDescribeMergeConflicts",
        "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
        "codecommit:BatchGetCommits",
        "codecommit:BatchGetPullRequests",
        "codecommit:BatchGetRepositories",
        "codecommit:CancelUploadArchive",
        "codecommit:CreateApprovalRuleTemplate",
        "codecommit:CreateBranch",
        "codecommit:CreateCommit",
        "codecommit:CreatePullRequest",
        "codecommit:CreatePullRequestApprovalRule",
        "codecommit:CreateRepository",
        "codecommit:CreateUnreferencedMergeCommit",
        "codecommit:DeleteApprovalRuleTemplate",
        "codecommit:DeleteBranch",
        "codecommit:DeleteCommentContent",
        "codecommit:DeleteFile",
        "codecommit:DeletePullRequestApprovalRule",
        "codecommit:DeleteRepository",
        "codecommit:DescribeMergeConflicts",
        "codecommit:DescribePullRequestEvents",
        "codecommit:DisassociateApprovalRuleTemplateFromRepository",
        "codecommit:EvaluatePullRequestApprovalRules",
        "codecommit:GetApprovalRuleTemplate",
        "codecommit:GetBlob",
        "codecommit:GetBranch",
        "codecommit:GetComment",
        "codecommit:GetCommentsForComparedCommit",
        "codecommit:GetCommentsForPullRequest",
        "codecommit:GetCommit",
        "codecommit:GetCommitHistory",
        "codecommit:GetCommitsFromMergeBase",
        "codecommit:GetDifferences",
        "codecommit:GetFile",
        "codecommit:GetFolder",
        "codecommit:GetMergeCommit",
        "codecommit:GetMergeConflicts",
        "codecommit:GetMergeOptions",
        "codecommit:GetObjectIdentifier",
        "codecommit:GetPullRequest",
        "codecommit:GetPullRequestApprovalStates",
        "codecommit:GetPullRequestOverrideState",
        "codecommit:GetReferences",
        "codecommit:GetRepository",
        "codecommit:GetRepositoryTriggers",
        "codecommit:GetTree",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:GitPull",
        "codecommit:GitPush",
        "codecommit:ListApprovalRuleTemplates",
        "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
        "codecommit:ListBranches",
        "codecommit:ListPullRequests",
        "codecommit:ListRepositories",
        "codecommit:ListRepositoriesForApprovalRuleTemplate",
        "codecommit:ListTagsForResource",
        "codecommit:MergeBranchesByFastForward",
        "codecommit:MergeBranchesBySquash",
        "codecommit:MergeBranchesByThreeWay",
        "codecommit:MergePullRequestByFastForward",
        "codecommit:MergePullRequestBySquash",
        "codecommit:MergePullRequestByThreeWay",
        "codecommit:OverridePullRequestApprovalRules",
        "codecommit:PostCommentForComparedCommit",
        "codecommit:PostCommentForPullRequest",
        "codecommit:PostCommentReply",
        "codecommit:PutFile",
        "codecommit:PutRepositoryTriggers",
        "codecommit:TagResource",
        "codecommit:TestRepositoryTriggers",
        "codecommit:UntagResource",
        "codecommit:UpdateApprovalRuleTemplateContent",
        "codecommit:UpdateApprovalRuleTemplateDescription",
        "codecommit:UpdateApprovalRuleTemplateName",
        "codecommit:UpdateComment",
        "codecommit:UpdateDefaultBranch",
        "codecommit:UpdatePullRequestApprovalRuleContent",
        "codecommit:UpdatePullRequestApprovalState",
        "codecommit:UpdatePullRequestDescription",
        "codecommit:UpdatePullRequestStatus",
        "codecommit:UpdatePullRequestTitle",
        "codecommit:UpdateRepositoryDescription",
        "codecommit:UpdateRepositoryName",
        "codecommit:UploadArchive",
        "sns:GetTopicAttributes",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTopics",
        "lambda:ListFunctions",
        "iam:ListUsers",
        "codestar-notifications:CreateNotificationRule",
        "codestar-notifications:DeleteNotificationRule",
        "codestar-notifications:DescribeNotificationRule",
        "codestar-notifications:Subscribe",
        "codestar-notifications:Unsubscribe",
        "codestar-notifications:UpdateNotificationRule",
        "codestar-notifications:ListEventTypes",
        "codestar-notifications:ListNotificationRules",
        "codestar-notifications:ListTagsforResource",
        "codestar-notifications:ListTargets",
        "codeguru-reviewer:AssociateRepository",
        "codeguru-reviewer:DescribeRepositoryAssociation",
        "codeguru-reviewer:DisassociateRepository",
        "codeguru-reviewer:ListRepositoryAssociations",
        "events:DeleteRule",
        "events:PutRule",
        "events:PutTargets",
        "events:RemoveTargets",
        "chatbot:DescribeSlackChannelConfigurations"
      ]
    },
    "ANPAI65L554VRJ33ECQS6": {
      "PolicyName": "AmazonSQSFullAccess",
      "PolicyId": "ANPAI65L554VRJ33ECQS6",
      "Arn": "arn:aws:iam::aws:policy/AmazonSQSFullAccess",
      "Path": "/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:41:07+00:00",
      "UpdateDate": "2015-02-06 18:41:07+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "sqs:*"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2015-02-06 18:41:07+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "sqs:AddPermission",
        "sqs:CreateQueue",
        "sqs:RemovePermission",
        "sqs:SetQueueAttributes"
      ],
      "InfrastructureModification": [
        "sqs:AddPermission",
        "sqs:ChangeMessageVisibility",
        "sqs:ChangeMessageVisibilityBatch",
        "sqs:CreateQueue",
        "sqs:DeleteMessage",
        "sqs:DeleteMessageBatch",
        "sqs:DeleteQueue",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ListDeadLetterSourceQueues",
        "sqs:ListQueueTags",
        "sqs:ListQueues",
        "sqs:PurgeQueue",
        "sqs:ReceiveMessage",
        "sqs:RemovePermission",
        "sqs:SendMessage",
        "sqs:SendMessageBatch",
        "sqs:SetQueueAttributes",
        "sqs:TagQueue",
        "sqs:UntagQueue"
      ]
    },
    "ANPAI6E2CYYMI4XI7AA5K": {
      "PolicyName": "AWSLambdaFullAccess",
      "PolicyId": "ANPAI6E2CYYMI4XI7AA5K",
      "Arn": "arn:aws:iam::aws:policy/AWSLambdaFullAccess",
      "Path": "/",
      "DefaultVersionId": "v8",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:45+00:00",
      "UpdateDate": "2017-11-27 23:22:38+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "cloudformation:DescribeChangeSet",
                  "cloudformation:DescribeStackResources",
                  "cloudformation:DescribeStacks",
                  "cloudformation:GetTemplate",
                  "cloudformation:ListStackResources",
                  "cloudwatch:*",
                  "cognito-identity:ListIdentityPools",
                  "cognito-sync:GetCognitoEvents",
                  "cognito-sync:SetCognitoEvents",
                  "dynamodb:*",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcs",
                  "events:*",
                  "iam:GetPolicy",
                  "iam:GetPolicyVersion",
                  "iam:GetRole",
                  "iam:GetRolePolicy",
                  "iam:ListAttachedRolePolicies",
                  "iam:ListRolePolicies",
                  "iam:ListRoles",
                  "iam:PassRole",
                  "iot:AttachPrincipalPolicy",
                  "iot:AttachThingPrincipal",
                  "iot:CreateKeysAndCertificate",
                  "iot:CreatePolicy",
                  "iot:CreateThing",
                  "iot:CreateTopicRule",
                  "iot:DescribeEndpoint",
                  "iot:GetTopicRule",
                  "iot:ListPolicies",
                  "iot:ListThings",
                  "iot:ListTopicRules",
                  "iot:ReplaceTopicRule",
                  "kinesis:DescribeStream",
                  "kinesis:ListStreams",
                  "kinesis:PutRecord",
                  "kms:ListAliases",
                  "lambda:*",
                  "logs:*",
                  "s3:*",
                  "sns:ListSubscriptions",
                  "sns:ListSubscriptionsByTopic",
                  "sns:ListTopics",
                  "sns:Publish",
                  "sns:Subscribe",
                  "sns:Unsubscribe",
                  "sqs:ListQueues",
                  "sqs:SendMessage",
                  "tag:GetResources",
                  "xray:PutTelemetryRecords",
                  "xray:PutTraceSegments"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v8",
          "IsDefaultVersion": true,
          "CreateDate": "2017-11-27 23:22:38+00:00"
        }
      ],
      "PrivilegeEscalation": [
        {
          "type": "PassExistingRoleToNewLambdaThenInvoke",
          "actions": [
            "iam:passrole",
            "lambda:createfunction",
            "lambda:invokefunction"
          ]
        },
        {
          "type": "PassExistingRoleToNewLambdaThenTriggerWithNewDynamo",
          "actions": [
            "iam:passrole",
            "lambda:createfunction",
            "lambda:createeventsourcemapping",
            "dynamodb:createtable",
            "dynamodb:putitem"
          ]
        },
        {
          "type": "PassExistingRoleToNewLambdaThenTriggerWithExistingDynamo",
          "actions": [
            "iam:passrole",
            "lambda:createfunction",
            "lambda:createeventsourcemapping"
          ]
        },
        {
          "type": "EditExistingLambdaFunctionWithRole",
          "actions": [
            "lambda:updatefunctioncode"
          ]
        }
      ],
      "DataExfiltration": [
        "s3:GetObject"
      ],
      "ResourceExposure": [
        "iam:PassRole",
        "iot:AttachPrincipalPolicy",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "logs:DeleteResourcePolicy",
        "logs:PutResourcePolicy",
        "s3:BypassGovernanceRetention",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucketPolicy",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutBucketAcl",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
      ],
      "InfrastructureModification": [
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStackResources",
        "cloudformation:DescribeStacks",
        "cloudformation:GetTemplate",
        "cloudformation:ListStackResources",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DeleteAnomalyDetector",
        "cloudwatch:DeleteDashboards",
        "cloudwatch:DeleteInsightRules",
        "cloudwatch:DescribeAlarmHistory",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:DescribeAlarmsForMetric",
        "cloudwatch:DescribeAnomalyDetectors",
        "cloudwatch:DescribeInsightRules",
        "cloudwatch:DisableAlarmActions",
        "cloudwatch:DisableInsightRules",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:EnableInsightRules",
        "cloudwatch:GetDashboard",
        "cloudwatch:GetInsightRuleReport",
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:GetMetricWidgetImage",
        "cloudwatch:ListDashboards",
        "cloudwatch:ListMetrics",
        "cloudwatch:ListTagsForResource",
        "cloudwatch:PutAnomalyDetector",
        "cloudwatch:PutDashboard",
        "cloudwatch:PutInsightRule",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:PutMetricData",
        "cloudwatch:SetAlarmState",
        "cloudwatch:TagResource",
        "cloudwatch:UntagResource",
        "cognito-identity:ListIdentityPools",
        "cognito-sync:GetCognitoEvents",
        "cognito-sync:SetCognitoEvents",
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:CreateBackup",
        "dynamodb:CreateGlobalTable",
        "dynamodb:CreateTable",
        "dynamodb:CreateTableReplica",
        "dynamodb:DeleteBackup",
        "dynamodb:DeleteItem",
        "dynamodb:DeleteTable",
        "dynamodb:DeleteTableReplica",
        "dynamodb:DescribeBackup",
        "dynamodb:DescribeContinuousBackups",
        "dynamodb:DescribeContributorInsights",
        "dynamodb:DescribeGlobalTable",
        "dynamodb:DescribeGlobalTableSettings",
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeReservedCapacity",
        "dynamodb:DescribeReservedCapacityOfferings",
        "dynamodb:DescribeStream",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeTableReplicaAutoScaling",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListBackups",
        "dynamodb:ListContributorInsights",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListStreams",
        "dynamodb:ListTables",
        "dynamodb:ListTagsOfResource",
        "dynamodb:PurchaseReservedCapacityOfferings",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:RestoreTableFromBackup",
        "dynamodb:RestoreTableToPointInTime",
        "dynamodb:Scan",
        "dynamodb:TagResource",
        "dynamodb:UntagResource",
        "dynamodb:UpdateContinuousBackups",
        "dynamodb:UpdateContributorInsights",
        "dynamodb:UpdateGlobalTable",
        "dynamodb:UpdateGlobalTableSettings",
        "dynamodb:UpdateItem",
        "dynamodb:UpdateTable",
        "dynamodb:UpdateTableReplicaAutoScaling",
        "dynamodb:UpdateTimeToLive",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "events:ActivateEventSource",
        "events:CreateEventBus",
        "events:CreatePartnerEventSource",
        "events:DeactivateEventSource",
        "events:DeleteEventBus",
        "events:DeletePartnerEventSource",
        "events:DeleteRule",
        "events:DescribeEventBus",
        "events:DescribeEventSource",
        "events:DescribePartnerEventSource",
        "events:DescribeRule",
        "events:DisableRule",
        "events:EnableRule",
        "events:ListEventBuses",
        "events:ListEventSources",
        "events:ListPartnerEventSourceAccounts",
        "events:ListPartnerEventSources",
        "events:ListRuleNamesByTarget",
        "events:ListRules",
        "events:ListTagsForResource",
        "events:ListTargetsByRule",
        "events:PutEvents",
        "events:PutPartnerEvents",
        "events:PutPermission",
        "events:PutRule",
        "events:PutTargets",
        "events:RemovePermission",
        "events:RemoveTargets",
        "events:TagResource",
        "events:TestEventPattern",
        "events:UntagResource",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:ListAttachedRolePolicies",
        "iam:ListRolePolicies",
        "iam:ListRoles",
        "iam:PassRole",
        "iot:AttachPrincipalPolicy",
        "iot:AttachThingPrincipal",
        "iot:CreateKeysAndCertificate",
        "iot:CreatePolicy",
        "iot:CreateThing",
        "iot:CreateTopicRule",
        "iot:DescribeEndpoint",
        "iot:GetTopicRule",
        "iot:ListPolicies",
        "iot:ListThings",
        "iot:ListTopicRules",
        "iot:ReplaceTopicRule",
        "kinesis:DescribeStream",
        "kinesis:ListStreams",
        "kinesis:PutRecord",
        "kms:ListAliases",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:CreateAlias",
        "lambda:CreateEventSourceMapping",
        "lambda:CreateFunction",
        "lambda:DeleteAlias",
        "lambda:DeleteEventSourceMapping",
        "lambda:DeleteFunction",
        "lambda:DeleteFunctionConcurrency",
        "lambda:DeleteFunctionEventInvokeConfig",
        "lambda:DeleteLayerVersion",
        "lambda:DeleteProvisionedConcurrencyConfig",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:GetAccountSettings",
        "lambda:GetAlias",
        "lambda:GetEventSourceMapping",
        "lambda:GetFunction",
        "lambda:GetFunctionConcurrency",
        "lambda:GetFunctionConfiguration",
        "lambda:GetFunctionEventInvokeConfig",
        "lambda:GetLayerVersion",
        "lambda:GetLayerVersionByArn",
        "lambda:GetLayerVersionPolicy",
        "lambda:GetPolicy",
        "lambda:GetProvisionedConcurrencyConfig",
        "lambda:InvokeAsync",
        "lambda:InvokeFunction",
        "lambda:ListAliases",
        "lambda:ListEventSourceMappings",
        "lambda:ListFunctionEventInvokeConfigs",
        "lambda:ListFunctions",
        "lambda:ListLayerVersions",
        "lambda:ListLayers",
        "lambda:ListProvisionedConcurrencyConfigs",
        "lambda:ListTags",
        "lambda:ListVersionsByFunction",
        "lambda:PublishLayerVersion",
        "lambda:PublishVersion",
        "lambda:PutFunctionConcurrency",
        "lambda:PutFunctionEventInvokeConfig",
        "lambda:PutProvisionedConcurrencyConfig",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:UpdateAlias",
        "lambda:UpdateEventSourceMapping",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateFunctionEventInvokeConfig",
        "logs:AssociateKmsKey",
        "logs:CancelExportTask",
        "logs:CreateExportTask",
        "logs:CreateLogDelivery",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DeleteDestination",
        "logs:DeleteLogDelivery",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream",
        "logs:DeleteMetricFilter",
        "logs:DeleteResourcePolicy",
        "logs:DeleteRetentionPolicy",
        "logs:DeleteSubscriptionFilter",
        "logs:DescribeDestinations",
        "logs:DescribeExportTasks",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeMetricFilters",
        "logs:DescribeQueries",
        "logs:DescribeResourcePolicies",
        "logs:DescribeSubscriptionFilters",
        "logs:DisassociateKmsKey",
        "logs:FilterLogEvents",
        "logs:GetLogDelivery",
        "logs:GetLogEvents",
        "logs:GetLogGroupFields",
        "logs:GetLogRecord",
        "logs:GetQueryResults",
        "logs:ListLogDeliveries",
        "logs:ListTagsLogGroup",
        "logs:PutDestination",
        "logs:PutDestinationPolicy",
        "logs:PutLogEvents",
        "logs:PutMetricFilter",
        "logs:PutResourcePolicy",
        "logs:PutRetentionPolicy",
        "logs:PutSubscriptionFilter",
        "logs:StartQuery",
        "logs:StopQuery",
        "logs:TagLogGroup",
        "logs:TestMetricFilter",
        "logs:UntagLogGroup",
        "logs:UpdateLogDelivery",
        "s3:AbortMultipartUpload",
        "s3:BypassGovernanceRetention",
        "s3:CreateAccessPoint",
        "s3:CreateBucket",
        "s3:CreateJob",
        "s3:DeleteAccessPoint",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:DeleteBucketWebsite",
        "s3:DeleteObject",
        "s3:DeleteObjectTagging",
        "s3:DeleteObjectVersion",
        "s3:DeleteObjectVersionTagging",
        "s3:DescribeJob",
        "s3:GetAccelerateConfiguration",
        "s3:GetAccessPoint",
        "s3:GetAccessPointPolicy",
        "s3:GetAccessPointPolicyStatus",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectLegalHold",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetObjectTorrent",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionForReplication",
        "s3:GetObjectVersionTagging",
        "s3:GetObjectVersionTorrent",
        "s3:GetReplicationConfiguration",
        "s3:ListAccessPoints",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:ListBucketMultipartUploads",
        "s3:ListBucketVersions",
        "s3:ListJobs",
        "s3:ListMultipartUploadParts",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccelerateConfiguration",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutAnalyticsConfiguration",
        "s3:PutBucketAcl",
        "s3:PutBucketCORS",
        "s3:PutBucketLogging",
        "s3:PutBucketNotification",
        "s3:PutBucketObjectLockConfiguration",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketRequestPayment",
        "s3:PutBucketTagging",
        "s3:PutBucketVersioning",
        "s3:PutBucketWebsite",
        "s3:PutEncryptionConfiguration",
        "s3:PutInventoryConfiguration",
        "s3:PutLifecycleConfiguration",
        "s3:PutMetricsConfiguration",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionAcl",
        "s3:PutObjectVersionTagging",
        "s3:PutReplicationConfiguration",
        "s3:ReplicateDelete",
        "s3:ReplicateObject",
        "s3:ReplicateTags",
        "s3:RestoreObject",
        "s3:UpdateJobPriority",
        "s3:UpdateJobStatus",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTopics",
        "sns:Publish",
        "sns:Subscribe",
        "sns:Unsubscribe",
        "sqs:ListQueues",
        "sqs:SendMessage",
        "tag:GetResources",
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
      ]
    },
    "ANPAI7XKCFMBPM3QQRRVQ": {
      "PolicyName": "IAMFullAccess",
      "PolicyId": "ANPAI7XKCFMBPM3QQRRVQ",
      "Arn": "arn:aws:iam::aws:policy/IAMFullAccess",
      "Path": "/",
      "DefaultVersionId": "v2",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:38+00:00",
      "UpdateDate": "2019-06-21 19:40:00+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "iam:*",
                  "organizations:DescribeAccount",
                  "organizations:DescribeOrganization",
                  "organizations:DescribeOrganizationalUnit",
                  "organizations:DescribePolicy",
                  "organizations:ListChildren",
                  "organizations:ListParents",
                  "organizations:ListPoliciesForTarget",
                  "organizations:ListRoots",
                  "organizations:ListPolicies",
                  "organizations:ListTargetsForPolicy"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v2",
          "IsDefaultVersion": true,
          "CreateDate": "2019-06-21 19:40:00+00:00"
        }
      ],
      "PrivilegeEscalation": [
        {
          "type": "CreateAccessKey",
          "actions": [
            "iam:createaccesskey"
          ]
        },
        {
          "type": "CreateLoginProfile",
          "actions": [
            "iam:createloginprofile"
          ]
        },
        {
          "type": "UpdateLoginProfile",
          "actions": [
            "iam:updateloginprofile"
          ]
        },
        {
          "type": "CreateNewPolicyVersion",
          "actions": [
            "iam:createpolicyversion"
          ]
        },
        {
          "type": "SetExistingDefaultPolicyVersion",
          "actions": [
            "iam:setdefaultpolicyversion"
          ]
        },
        {
          "type": "AttachUserPolicy",
          "actions": [
            "iam:attachuserpolicy"
          ]
        },
        {
          "type": "AttachGroupPolicy",
          "actions": [
            "iam:attachgrouppolicy"
          ]
        },
        {
          "type": "PutUserPolicy",
          "actions": [
            "iam:putuserpolicy"
          ]
        },
        {
          "type": "PutGroupPolicy",
          "actions": [
            "iam:putgrouppolicy"
          ]
        },
        {
          "type": "AddUserToGroup",
          "actions": [
            "iam:addusertogroup"
          ]
        }
      ],
      "DataExfiltration": [],
      "ResourceExposure": [
        "iam:AddClientIDToOpenIDConnectProvider",
        "iam:AddRoleToInstanceProfile",
        "iam:AddUserToGroup",
        "iam:AttachGroupPolicy",
        "iam:AttachRolePolicy",
        "iam:AttachUserPolicy",
        "iam:ChangePassword",
        "iam:CreateAccessKey",
        "iam:CreateAccountAlias",
        "iam:CreateGroup",
        "iam:CreateInstanceProfile",
        "iam:CreateLoginProfile",
        "iam:CreateOpenIDConnectProvider",
        "iam:CreatePolicy",
        "iam:CreatePolicyVersion",
        "iam:CreateRole",
        "iam:CreateSAMLProvider",
        "iam:CreateServiceLinkedRole",
        "iam:CreateServiceSpecificCredential",
        "iam:CreateUser",
        "iam:CreateVirtualMFADevice",
        "iam:DeactivateMFADevice",
        "iam:DeleteAccessKey",
        "iam:DeleteAccountAlias",
        "iam:DeleteAccountPasswordPolicy",
        "iam:DeleteGroup",
        "iam:DeleteGroupPolicy",
        "iam:DeleteInstanceProfile",
        "iam:DeleteLoginProfile",
        "iam:DeleteOpenIDConnectProvider",
        "iam:DeletePolicy",
        "iam:DeletePolicyVersion",
        "iam:DeleteRole",
        "iam:DeleteRolePermissionsBoundary",
        "iam:DeleteRolePolicy",
        "iam:DeleteSAMLProvider",
        "iam:DeleteSSHPublicKey",
        "iam:DeleteServerCertificate",
        "iam:DeleteServiceLinkedRole",
        "iam:DeleteServiceSpecificCredential",
        "iam:DeleteSigningCertificate",
        "iam:DeleteUser",
        "iam:DeleteUserPermissionsBoundary",
        "iam:DeleteUserPolicy",
        "iam:DeleteVirtualMFADevice",
        "iam:DetachGroupPolicy",
        "iam:DetachRolePolicy",
        "iam:DetachUserPolicy",
        "iam:EnableMFADevice",
        "iam:PassRole",
        "iam:PutGroupPolicy",
        "iam:PutRolePermissionsBoundary",
        "iam:PutRolePolicy",
        "iam:PutUserPermissionsBoundary",
        "iam:PutUserPolicy",
        "iam:RemoveClientIDFromOpenIDConnectProvider",
        "iam:RemoveRoleFromInstanceProfile",
        "iam:RemoveUserFromGroup",
        "iam:ResetServiceSpecificCredential",
        "iam:ResyncMFADevice",
        "iam:SetDefaultPolicyVersion",
        "iam:SetSecurityTokenServicePreferences",
        "iam:UpdateAccessKey",
        "iam:UpdateAccountPasswordPolicy",
        "iam:UpdateAssumeRolePolicy",
        "iam:UpdateGroup",
        "iam:UpdateLoginProfile",
        "iam:UpdateOpenIDConnectProviderThumbprint",
        "iam:UpdateRole",
        "iam:UpdateRoleDescription",
        "iam:UpdateSAMLProvider",
        "iam:UpdateSSHPublicKey",
        "iam:UpdateServerCertificate",
        "iam:UpdateServiceSpecificCredential",
        "iam:UpdateSigningCertificate",
        "iam:UpdateUser",
        "iam:UploadSSHPublicKey",
        "iam:UploadServerCertificate",
        "iam:UploadSigningCertificate"
      ],
      "InfrastructureModification": [
        "iam:AddClientIDToOpenIDConnectProvider",
        "iam:AddRoleToInstanceProfile",
        "iam:AddUserToGroup",
        "iam:AttachGroupPolicy",
        "iam:AttachRolePolicy",
        "iam:AttachUserPolicy",
        "iam:ChangePassword",
        "iam:CreateAccessKey",
        "iam:CreateAccountAlias",
        "iam:CreateGroup",
        "iam:CreateInstanceProfile",
        "iam:CreateLoginProfile",
        "iam:CreateOpenIDConnectProvider",
        "iam:CreatePolicy",
        "iam:CreatePolicyVersion",
        "iam:CreateRole",
        "iam:CreateSAMLProvider",
        "iam:CreateServiceLinkedRole",
        "iam:CreateServiceSpecificCredential",
        "iam:CreateUser",
        "iam:CreateVirtualMFADevice",
        "iam:DeactivateMFADevice",
        "iam:DeleteAccessKey",
        "iam:DeleteAccountAlias",
        "iam:DeleteAccountPasswordPolicy",
        "iam:DeleteGroup",
        "iam:DeleteGroupPolicy",
        "iam:DeleteInstanceProfile",
        "iam:DeleteLoginProfile",
        "iam:DeleteOpenIDConnectProvider",
        "iam:DeletePolicy",
        "iam:DeletePolicyVersion",
        "iam:DeleteRole",
        "iam:DeleteRolePermissionsBoundary",
        "iam:DeleteRolePolicy",
        "iam:DeleteSAMLProvider",
        "iam:DeleteSSHPublicKey",
        "iam:DeleteServerCertificate",
        "iam:DeleteServiceLinkedRole",
        "iam:DeleteServiceSpecificCredential",
        "iam:DeleteSigningCertificate",
        "iam:DeleteUser",
        "iam:DeleteUserPermissionsBoundary",
        "iam:DeleteUserPolicy",
        "iam:DeleteVirtualMFADevice",
        "iam:DetachGroupPolicy",
        "iam:DetachRolePolicy",
        "iam:DetachUserPolicy",
        "iam:EnableMFADevice",
        "iam:GenerateCredentialReport",
        "iam:GenerateOrganizationsAccessReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetContextKeysForCustomPolicy",
        "iam:GetContextKeysForPrincipalPolicy",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetInstanceProfile",
        "iam:GetLoginProfile",
        "iam:GetOpenIDConnectProvider",
        "iam:GetOrganizationsAccessReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:GetServerCertificate",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetServiceLinkedRoleDeletionStatus",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfiles",
        "iam:ListInstanceProfilesForRole",
        "iam:ListMFADevices",
        "iam:ListOpenIDConnectProviders",
        "iam:ListPolicies",
        "iam:ListPoliciesGrantingServiceAccess",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoleTags",
        "iam:ListRoles",
        "iam:ListSAMLProviders",
        "iam:ListSSHPublicKeys",
        "iam:ListServerCertificates",
        "iam:ListServiceSpecificCredentials",
        "iam:ListSigningCertificates",
        "iam:ListUserPolicies",
        "iam:ListUserTags",
        "iam:ListUsers",
        "iam:ListVirtualMFADevices",
        "iam:PassRole",
        "iam:PutGroupPolicy",
        "iam:PutRolePermissionsBoundary",
        "iam:PutRolePolicy",
        "iam:PutUserPermissionsBoundary",
        "iam:PutUserPolicy",
        "iam:RemoveClientIDFromOpenIDConnectProvider",
        "iam:RemoveRoleFromInstanceProfile",
        "iam:RemoveUserFromGroup",
        "iam:ResetServiceSpecificCredential",
        "iam:ResyncMFADevice",
        "iam:SetDefaultPolicyVersion",
        "iam:SetSecurityTokenServicePreferences",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy",
        "iam:TagRole",
        "iam:TagUser",
        "iam:UntagRole",
        "iam:UntagUser",
        "iam:UpdateAccessKey",
        "iam:UpdateAccountPasswordPolicy",
        "iam:UpdateAssumeRolePolicy",
        "iam:UpdateGroup",
        "iam:UpdateLoginProfile",
        "iam:UpdateOpenIDConnectProviderThumbprint",
        "iam:UpdateRole",
        "iam:UpdateRoleDescription",
        "iam:UpdateSAMLProvider",
        "iam:UpdateSSHPublicKey",
        "iam:UpdateServerCertificate",
        "iam:UpdateServiceSpecificCredential",
        "iam:UpdateSigningCertificate",
        "iam:UpdateUser",
        "iam:UploadSSHPublicKey",
        "iam:UploadServerCertificate",
        "iam:UploadSigningCertificate",
        "organizations:DescribeAccount",
        "organizations:DescribeOrganization",
        "organizations:DescribeOrganizationalUnit",
        "organizations:DescribePolicy",
        "organizations:ListChildren",
        "organizations:ListParents",
        "organizations:ListPolicies",
        "organizations:ListPoliciesForTarget",
        "organizations:ListRoots",
        "organizations:ListTargetsForPolicy"
      ]
    },
    "ANPAIFIR6V6BVTRAHWINE": {
      "PolicyName": "AmazonS3FullAccess",
      "PolicyId": "ANPAIFIR6V6BVTRAHWINE",
      "Arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
      "Path": "/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:58+00:00",
      "UpdateDate": "2015-02-06 18:40:58+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": "s3:*",
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2015-02-06 18:40:58+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [
        "s3:GetObject"
      ],
      "ResourceExposure": [
        "s3:BypassGovernanceRetention",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucketPolicy",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutBucketAcl",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl"
      ],
      "InfrastructureModification": [
        "s3:AbortMultipartUpload",
        "s3:BypassGovernanceRetention",
        "s3:CreateAccessPoint",
        "s3:CreateBucket",
        "s3:CreateJob",
        "s3:DeleteAccessPoint",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:DeleteBucketWebsite",
        "s3:DeleteObject",
        "s3:DeleteObjectTagging",
        "s3:DeleteObjectVersion",
        "s3:DeleteObjectVersionTagging",
        "s3:DescribeJob",
        "s3:GetAccelerateConfiguration",
        "s3:GetAccessPoint",
        "s3:GetAccessPointPolicy",
        "s3:GetAccessPointPolicyStatus",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectLegalHold",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetObjectTorrent",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionForReplication",
        "s3:GetObjectVersionTagging",
        "s3:GetObjectVersionTorrent",
        "s3:GetReplicationConfiguration",
        "s3:ListAccessPoints",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:ListBucketMultipartUploads",
        "s3:ListBucketVersions",
        "s3:ListJobs",
        "s3:ListMultipartUploadParts",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccelerateConfiguration",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutAnalyticsConfiguration",
        "s3:PutBucketAcl",
        "s3:PutBucketCORS",
        "s3:PutBucketLogging",
        "s3:PutBucketNotification",
        "s3:PutBucketObjectLockConfiguration",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketRequestPayment",
        "s3:PutBucketTagging",
        "s3:PutBucketVersioning",
        "s3:PutBucketWebsite",
        "s3:PutEncryptionConfiguration",
        "s3:PutInventoryConfiguration",
        "s3:PutLifecycleConfiguration",
        "s3:PutMetricsConfiguration",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionAcl",
        "s3:PutObjectVersionTagging",
        "s3:PutReplicationConfiguration",
        "s3:ReplicateDelete",
        "s3:ReplicateObject",
        "s3:ReplicateTags",
        "s3:RestoreObject",
        "s3:UpdateJobPriority",
        "s3:UpdateJobStatus"
      ]
    },
    "ANPAIICZJNOJN36GTG6CM": {
      "PolicyName": "AmazonVPCReadOnlyAccess",
      "PolicyId": "ANPAIICZJNOJN36GTG6CM",
      "Arn": "arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess",
      "Path": "/",
      "DefaultVersionId": "v6",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:41:17+00:00",
      "UpdateDate": "2018-03-07 18:34:42+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeClassicLinkInstances",
                  "ec2:DescribeCustomerGateways",
                  "ec2:DescribeDhcpOptions",
                  "ec2:DescribeEgressOnlyInternetGateways",
                  "ec2:DescribeFlowLogs",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeMovingAddresses",
                  "ec2:DescribeNatGateways",
                  "ec2:DescribeNetworkAcls",
                  "ec2:DescribeNetworkInterfaceAttribute",
                  "ec2:DescribeNetworkInterfacePermissions",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribePrefixLists",
                  "ec2:DescribeRouteTables",
                  "ec2:DescribeSecurityGroupReferences",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeStaleSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcAttribute",
                  "ec2:DescribeVpcClassicLink",
                  "ec2:DescribeVpcClassicLinkDnsSupport",
                  "ec2:DescribeVpcEndpoints",
                  "ec2:DescribeVpcEndpointConnectionNotifications",
                  "ec2:DescribeVpcEndpointConnections",
                  "ec2:DescribeVpcEndpointServiceConfigurations",
                  "ec2:DescribeVpcEndpointServicePermissions",
                  "ec2:DescribeVpcEndpointServices",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeVpnConnections",
                  "ec2:DescribeVpnGateways"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v6",
          "IsDefaultVersion": true,
          "CreateDate": "2018-03-07 18:34:42+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePrefixLists",
        "ec2:DescribeRouteTables",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways"
      ]
    },
    "ANPAIKEABORKUXN6DEAZU": {
      "PolicyName": "CloudWatchFullAccess",
      "PolicyId": "ANPAIKEABORKUXN6DEAZU",
      "Arn": "arn:aws:iam::aws:policy/CloudWatchFullAccess",
      "Path": "/",
      "DefaultVersionId": "v3",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:00+00:00",
      "UpdateDate": "2018-08-09 19:10:43+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "autoscaling:Describe*",
                  "cloudwatch:*",
                  "logs:*",
                  "sns:*",
                  "iam:GetPolicy",
                  "iam:GetPolicyVersion",
                  "iam:GetRole"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "iam:CreateServiceLinkedRole",
                "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                "Condition": {
                  "StringLike": {
                    "iam:AWSServiceName": "events.amazonaws.com"
                  }
                }
              }
            ]
          },
          "VersionId": "v3",
          "IsDefaultVersion": true,
          "CreateDate": "2018-08-09 19:10:43+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "logs:DeleteResourcePolicy",
        "logs:PutResourcePolicy",
        "sns:AddPermission",
        "sns:CreateTopic",
        "sns:RemovePermission",
        "sns:SetTopicAttributes"
      ],
      "InfrastructureModification": [
        "autoscaling:DescribeAccountLimits",
        "autoscaling:DescribeAdjustmentTypes",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeAutoScalingNotificationTypes",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeLifecycleHookTypes",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeLoadBalancerTargetGroups",
        "autoscaling:DescribeLoadBalancers",
        "autoscaling:DescribeMetricCollectionTypes",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:DescribePolicies",
        "autoscaling:DescribeScalingActivities",
        "autoscaling:DescribeScalingProcessTypes",
        "autoscaling:DescribeScheduledActions",
        "autoscaling:DescribeTags",
        "autoscaling:DescribeTerminationPolicyTypes",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DeleteAnomalyDetector",
        "cloudwatch:DeleteDashboards",
        "cloudwatch:DeleteInsightRules",
        "cloudwatch:DescribeAlarmHistory",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:DescribeAlarmsForMetric",
        "cloudwatch:DescribeAnomalyDetectors",
        "cloudwatch:DescribeInsightRules",
        "cloudwatch:DisableAlarmActions",
        "cloudwatch:DisableInsightRules",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:EnableInsightRules",
        "cloudwatch:GetDashboard",
        "cloudwatch:GetInsightRuleReport",
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:GetMetricWidgetImage",
        "cloudwatch:ListDashboards",
        "cloudwatch:ListMetrics",
        "cloudwatch:ListTagsForResource",
        "cloudwatch:PutAnomalyDetector",
        "cloudwatch:PutDashboard",
        "cloudwatch:PutInsightRule",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:PutMetricData",
        "cloudwatch:SetAlarmState",
        "cloudwatch:TagResource",
        "cloudwatch:UntagResource",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "logs:AssociateKmsKey",
        "logs:CancelExportTask",
        "logs:CreateExportTask",
        "logs:CreateLogDelivery",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DeleteDestination",
        "logs:DeleteLogDelivery",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream",
        "logs:DeleteMetricFilter",
        "logs:DeleteResourcePolicy",
        "logs:DeleteRetentionPolicy",
        "logs:DeleteSubscriptionFilter",
        "logs:DescribeDestinations",
        "logs:DescribeExportTasks",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeMetricFilters",
        "logs:DescribeQueries",
        "logs:DescribeResourcePolicies",
        "logs:DescribeSubscriptionFilters",
        "logs:DisassociateKmsKey",
        "logs:FilterLogEvents",
        "logs:GetLogDelivery",
        "logs:GetLogEvents",
        "logs:GetLogGroupFields",
        "logs:GetLogRecord",
        "logs:GetQueryResults",
        "logs:ListLogDeliveries",
        "logs:ListTagsLogGroup",
        "logs:PutDestination",
        "logs:PutDestinationPolicy",
        "logs:PutLogEvents",
        "logs:PutMetricFilter",
        "logs:PutResourcePolicy",
        "logs:PutRetentionPolicy",
        "logs:PutSubscriptionFilter",
        "logs:StartQuery",
        "logs:StopQuery",
        "logs:TagLogGroup",
        "logs:TestMetricFilter",
        "logs:UntagLogGroup",
        "logs:UpdateLogDelivery",
        "sns:AddPermission",
        "sns:CheckIfPhoneNumberIsOptedOut",
        "sns:ConfirmSubscription",
        "sns:CreatePlatformApplication",
        "sns:CreatePlatformEndpoint",
        "sns:CreateTopic",
        "sns:DeleteEndpoint",
        "sns:DeletePlatformApplication",
        "sns:DeleteTopic",
        "sns:GetEndpointAttributes",
        "sns:GetPlatformApplicationAttributes",
        "sns:GetSMSAttributes",
        "sns:GetSubscriptionAttributes",
        "sns:GetTopicAttributes",
        "sns:ListEndpointsByPlatformApplication",
        "sns:ListPhoneNumbersOptedOut",
        "sns:ListPlatformApplications",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTagsForResource",
        "sns:ListTopics",
        "sns:OptInPhoneNumber",
        "sns:Publish",
        "sns:RemovePermission",
        "sns:SetEndpointAttributes",
        "sns:SetPlatformApplicationAttributes",
        "sns:SetSubscriptionAttributes",
        "sns:SetTopicAttributes",
        "sns:Subscribe",
        "sns:TagResource",
        "sns:Unsubscribe",
        "sns:UntagResource"
      ]
    },
    "ANPAILL3HVNFSB6DCOWYQ": {
      "PolicyName": "ReadOnlyAccess",
      "PolicyId": "ANPAILL3HVNFSB6DCOWYQ",
      "Arn": "arn:aws:iam::aws:policy/ReadOnlyAccess",
      "Path": "/",
      "DefaultVersionId": "v63",
      "AttachmentCount": 4,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:39:48+00:00",
      "UpdateDate": "2020-03-09 23:45:01+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "a4b:Get*",
                  "a4b:List*",
                  "a4b:Search*",
                  "access-analyzer:GetAnalyzedResource",
                  "access-analyzer:GetAnalyzer",
                  "access-analyzer:GetArchiveRule",
                  "access-analyzer:GetFinding",
                  "access-analyzer:ListAnalyzedResources",
                  "access-analyzer:ListAnalyzers",
                  "access-analyzer:ListArchiveRules",
                  "access-analyzer:ListFindings",
                  "access-analyzer:ListTagsForResource",
                  "acm:Describe*",
                  "acm:Get*",
                  "acm:List*",
                  "acm-pca:Describe*",
                  "acm-pca:Get*",
                  "acm-pca:List*",
                  "amplify:GetApp",
                  "amplify:GetBranch",
                  "amplify:GetJob",
                  "amplify:GetDomainAssociation",
                  "amplify:ListApps",
                  "amplify:ListBranches",
                  "amplify:ListDomainAssociations",
                  "amplify:ListJobs",
                  "apigateway:GET",
                  "application-autoscaling:Describe*",
                  "applicationinsights:Describe*",
                  "applicationinsights:List*",
                  "appmesh:Describe*",
                  "appmesh:List*",
                  "appstream:Describe*",
                  "appstream:Get*",
                  "appstream:List*",
                  "appsync:Get*",
                  "appsync:List*",
                  "autoscaling:Describe*",
                  "autoscaling-plans:Describe*",
                  "autoscaling-plans:GetScalingPlanResourceForecastData",
                  "athena:List*",
                  "athena:Batch*",
                  "athena:Get*",
                  "backup:Describe*",
                  "backup:Get*",
                  "backup:List*",
                  "batch:List*",
                  "batch:Describe*",
                  "chatbot:Describe*",
                  "chatbot:Get*",
                  "chime:Get*",
                  "chime:List*",
                  "chime:Retrieve*",
                  "chime:Search*",
                  "chime:Validate*",
                  "cloud9:Describe*",
                  "cloud9:List*",
                  "clouddirectory:List*",
                  "clouddirectory:BatchRead",
                  "clouddirectory:Get*",
                  "clouddirectory:LookupPolicy",
                  "cloudformation:Describe*",
                  "cloudformation:Detect*",
                  "cloudformation:Get*",
                  "cloudformation:List*",
                  "cloudformation:Estimate*",
                  "cloudfront:Get*",
                  "cloudfront:List*",
                  "cloudhsm:List*",
                  "cloudhsm:Describe*",
                  "cloudhsm:Get*",
                  "cloudsearch:Describe*",
                  "cloudsearch:List*",
                  "cloudtrail:Describe*",
                  "cloudtrail:Get*",
                  "cloudtrail:List*",
                  "cloudtrail:LookupEvents",
                  "cloudwatch:Describe*",
                  "cloudwatch:Get*",
                  "cloudwatch:List*",
                  "codebuild:BatchGet*",
                  "codebuild:DescribeTestCases",
                  "codebuild:List*",
                  "codecommit:BatchGet*",
                  "codecommit:Describe*",
                  "codecommit:Get*",
                  "codecommit:GitPull",
                  "codecommit:List*",
                  "codedeploy:BatchGet*",
                  "codedeploy:Get*",
                  "codedeploy:List*",
                  "codeguru-profiler:Describe*",
                  "codeguru-profiler:Get*",
                  "codeguru-profiler:List*",
                  "codeguru-reviewer:Describe*",
                  "codeguru-reviewer:Get*",
                  "codeguru-reviewer:List*",
                  "codepipeline:List*",
                  "codepipeline:Get*",
                  "codestar:List*",
                  "codestar:Describe*",
                  "codestar:Get*",
                  "codestar:Verify*",
                  "codestar-notifications:describeNotificationRule",
                  "codestar-notifications:listEventTypes",
                  "codestar-notifications:listNotificationRules",
                  "codestar-notifications:listTagsForResource",
                  "codestar-notifications:ListTargets",
                  "compute-optimizer:GetAutoScalingGroupRecommendations",
                  "compute-optimizer:GetEC2InstanceRecommendations",
                  "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                  "compute-optimizer:GetEnrollmentStatus",
                  "compute-optimizer:GetRecommendationSummaries",
                  "cognito-identity:Describe*",
                  "cognito-identity:GetCredentialsForIdentity",
                  "cognito-identity:GetIdentityPoolRoles",
                  "cognito-identity:GetOpenIdToken",
                  "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                  "cognito-identity:List*",
                  "cognito-identity:Lookup*",
                  "cognito-sync:List*",
                  "cognito-sync:Describe*",
                  "cognito-sync:Get*",
                  "cognito-sync:QueryRecords",
                  "cognito-idp:AdminGet*",
                  "cognito-idp:AdminList*",
                  "cognito-idp:List*",
                  "cognito-idp:Describe*",
                  "cognito-idp:Get*",
                  "config:Deliver*",
                  "config:Describe*",
                  "config:Get*",
                  "config:List*",
                  "config:SelectResourceConfig",
                  "connect:List*",
                  "connect:Describe*",
                  "connect:GetFederationToken",
                  "dataexchange:Get*",
                  "dataexchange:List*",
                  "datasync:Describe*",
                  "datasync:List*",
                  "datapipeline:Describe*",
                  "datapipeline:EvaluateExpression",
                  "datapipeline:Get*",
                  "datapipeline:List*",
                  "datapipeline:QueryObjects",
                  "datapipeline:Validate*",
                  "dax:BatchGetItem",
                  "dax:Describe*",
                  "dax:GetItem",
                  "dax:ListTags",
                  "dax:Query",
                  "dax:Scan",
                  "directconnect:Describe*",
                  "detective:Get*",
                  "detective:List*",
                  "devicefarm:List*",
                  "devicefarm:Get*",
                  "discovery:Describe*",
                  "discovery:List*",
                  "discovery:Get*",
                  "dlm:Get*",
                  "dms:Describe*",
                  "dms:List*",
                  "dms:Test*",
                  "ds:Check*",
                  "ds:Describe*",
                  "ds:Get*",
                  "ds:List*",
                  "ds:Verify*",
                  "dynamodb:BatchGet*",
                  "dynamodb:Describe*",
                  "dynamodb:Get*",
                  "dynamodb:List*",
                  "dynamodb:Query",
                  "dynamodb:Scan",
                  "ec2:Describe*",
                  "ec2:Get*",
                  "ec2:SearchTransitGatewayRoutes",
                  "ec2messages:Get*",
                  "ecr:BatchCheck*",
                  "ecr:BatchGet*",
                  "ecr:Describe*",
                  "ecr:Get*",
                  "ecr:List*",
                  "ecs:Describe*",
                  "ecs:List*",
                  "eks:DescribeCluster",
                  "eks:DescribeUpdate",
                  "eks:Describe*",
                  "eks:ListClusters",
                  "eks:ListUpdates",
                  "eks:List*",
                  "elasticache:Describe*",
                  "elasticache:List*",
                  "elasticbeanstalk:Check*",
                  "elasticbeanstalk:Describe*",
                  "elasticbeanstalk:List*",
                  "elasticbeanstalk:Request*",
                  "elasticbeanstalk:Retrieve*",
                  "elasticbeanstalk:Validate*",
                  "elasticfilesystem:Describe*",
                  "elasticloadbalancing:Describe*",
                  "elasticmapreduce:Describe*",
                  "elasticmapreduce:List*",
                  "elasticmapreduce:View*",
                  "elastictranscoder:List*",
                  "elastictranscoder:Read*",
                  "elemental-appliances-software:Get*",
                  "elemental-appliances-software:List*",
                  "es:Describe*",
                  "es:List*",
                  "es:Get*",
                  "es:ESHttpGet",
                  "es:ESHttpHead",
                  "events:Describe*",
                  "events:List*",
                  "events:Test*",
                  "firehose:Describe*",
                  "firehose:List*",
                  "fsx:Describe*",
                  "fsx:List*",
                  "gamelift:List*",
                  "gamelift:Get*",
                  "gamelift:Describe*",
                  "gamelift:RequestUploadCredentials",
                  "gamelift:ResolveAlias",
                  "gamelift:Search*",
                  "glacier:List*",
                  "glacier:Describe*",
                  "glacier:Get*",
                  "globalaccelerator:Describe*",
                  "globalaccelerator:List*",
                  "glue:BatchGetPartition",
                  "glue:GetCatalogImportStatus",
                  "glue:GetClassifier",
                  "glue:GetClassifiers",
                  "glue:GetCrawler",
                  "glue:GetCrawlers",
                  "glue:GetCrawlerMetrics",
                  "glue:GetDatabase",
                  "glue:GetDatabases",
                  "glue:GetDataCatalogEncryptionSettings",
                  "glue:GetDataflowGraph",
                  "glue:GetDevEndpoint",
                  "glue:GetDevEndpoints",
                  "glue:GetJob",
                  "glue:GetJobs",
                  "glue:GetJobRun",
                  "glue:GetJobRuns",
                  "glue:GetPartition",
                  "glue:GetPartitions",
                  "glue:GetPlan",
                  "glue:GetResourcePolicy",
                  "glue:GetSecurityConfiguration",
                  "glue:GetSecurityConfigurations",
                  "glue:GetTable",
                  "glue:GetTables",
                  "glue:GetTableVersion",
                  "glue:GetTableVersions",
                  "glue:GetTags",
                  "glue:GetTrigger",
                  "glue:GetTriggers",
                  "glue:GetUserDefinedFunction",
                  "glue:GetUserDefinedFunctions",
                  "greengrass:Get*",
                  "greengrass:List*",
                  "guardduty:Get*",
                  "guardduty:List*",
                  "health:Describe*",
                  "health:List*",
                  "iam:Generate*",
                  "iam:Get*",
                  "iam:List*",
                  "iam:Simulate*",
                  "imagebuilder:Get*",
                  "imagebuilder:List*",
                  "importexport:Get*",
                  "importexport:List*",
                  "inspector:Describe*",
                  "inspector:Get*",
                  "inspector:List*",
                  "inspector:Preview*",
                  "iot:Describe*",
                  "iot:Get*",
                  "iot:List*",
                  "iotanalytics:Describe*",
                  "iotanalytics:List*",
                  "iotanalytics:Get*",
                  "iotanalytics:SampleChannelData",
                  "kafka:Describe*",
                  "kafka:List*",
                  "kafka:Get*",
                  "kinesisanalytics:Describe*",
                  "kinesisanalytics:Discover*",
                  "kinesisanalytics:Get*",
                  "kinesisanalytics:List*",
                  "kinesisvideo:Describe*",
                  "kinesisvideo:Get*",
                  "kinesisvideo:List*",
                  "kinesis:Describe*",
                  "kinesis:Get*",
                  "kinesis:List*",
                  "kms:Describe*",
                  "kms:Get*",
                  "kms:List*",
                  "lambda:List*",
                  "lambda:Get*",
                  "lex:Get*",
                  "lightsail:GetActiveNames",
                  "lightsail:GetBlueprints",
                  "lightsail:GetBundles",
                  "lightsail:GetCloudFormationStackRecords",
                  "lightsail:GetDisk",
                  "lightsail:GetDisks",
                  "lightsail:GetDiskSnapshot",
                  "lightsail:GetDiskSnapshots",
                  "lightsail:GetDomain",
                  "lightsail:GetDomains",
                  "lightsail:GetExportSnapshotRecords",
                  "lightsail:GetInstance",
                  "lightsail:GetInstanceMetricData",
                  "lightsail:GetInstancePortStates",
                  "lightsail:GetInstances",
                  "lightsail:GetInstanceSnapshot",
                  "lightsail:GetInstanceSnapshots",
                  "lightsail:GetInstanceState",
                  "lightsail:GetKeyPair",
                  "lightsail:GetKeyPairs",
                  "lightsail:GetLoadBalancer",
                  "lightsail:GetLoadBalancerMetricData",
                  "lightsail:GetLoadBalancers",
                  "lightsail:GetLoadBalancerTlsCertificates",
                  "lightsail:GetOperation",
                  "lightsail:GetOperations",
                  "lightsail:GetOperationsForResource",
                  "lightsail:GetRegions",
                  "lightsail:GetRelationalDatabase",
                  "lightsail:GetRelationalDatabaseBlueprints",
                  "lightsail:GetRelationalDatabaseBundles",
                  "lightsail:GetRelationalDatabaseEvents",
                  "lightsail:GetRelationalDatabaseLogEvents",
                  "lightsail:GetRelationalDatabaseLogStreams",
                  "lightsail:GetRelationalDatabaseMetricData",
                  "lightsail:GetRelationalDatabaseParameters",
                  "lightsail:GetRelationalDatabases",
                  "lightsail:GetRelationalDatabaseSnapshot",
                  "lightsail:GetRelationalDatabaseSnapshots",
                  "lightsail:GetStaticIp",
                  "lightsail:GetStaticIps",
                  "lightsail:Is*",
                  "logs:Describe*",
                  "logs:Get*",
                  "logs:FilterLogEvents",
                  "logs:ListTagsLogGroup",
                  "logs:StartQuery",
                  "logs:TestMetricFilter",
                  "machinelearning:Describe*",
                  "machinelearning:Get*",
                  "mediaconvert:DescribeEndpoints",
                  "mediaconvert:Get*",
                  "mediaconvert:List*",
                  "mediapackage:List*",
                  "mediapackage:Describe*",
                  "mgh:Describe*",
                  "mgh:GetHomeRegion",
                  "mgh:List*",
                  "mobileanalytics:Get*",
                  "mobilehub:Describe*",
                  "mobilehub:Export*",
                  "mobilehub:Generate*",
                  "mobilehub:Get*",
                  "mobilehub:List*",
                  "mobilehub:Validate*",
                  "mobilehub:Verify*",
                  "mobiletargeting:Get*",
                  "mobiletargeting:List*",
                  "mq:Describe*",
                  "mq:List*",
                  "opsworks:Describe*",
                  "opsworks:Get*",
                  "opsworks-cm:Describe*",
                  "organizations:Describe*",
                  "organizations:List*",
                  "outposts:Get*",
                  "outposts:List*",
                  "personalize:Describe*",
                  "personalize:Get*",
                  "personalize:List*",
                  "pi:DescribeDimensionKeys",
                  "pi:GetResourceMetrics",
                  "polly:Describe*",
                  "polly:Get*",
                  "polly:List*",
                  "polly:SynthesizeSpeech",
                  "qldb:ListLedgers",
                  "qldb:DescribeLedger",
                  "qldb:ListJournalS3Exports",
                  "qldb:ListJournalS3ExportsForLedger",
                  "qldb:DescribeJournalS3Export",
                  "qldb:GetBlock",
                  "qldb:GetDigest",
                  "qldb:GetRevision",
                  "qldb:GetBlock",
                  "qldb:ListTagsForResource",
                  "ram:Get*",
                  "ram:List*",
                  "rekognition:CompareFaces",
                  "rekognition:Detect*",
                  "rekognition:List*",
                  "rekognition:Search*",
                  "rds:Describe*",
                  "rds:List*",
                  "rds:Download*",
                  "redshift:Describe*",
                  "redshift:GetReservedNodeExchangeOfferings",
                  "redshift:View*",
                  "resource-groups:Get*",
                  "resource-groups:List*",
                  "resource-groups:Search*",
                  "robomaker:BatchDescribe*",
                  "robomaker:Describe*",
                  "robomaker:List*",
                  "route53:Get*",
                  "route53:List*",
                  "route53:Test*",
                  "route53domains:Check*",
                  "route53domains:Get*",
                  "route53domains:List*",
                  "route53domains:View*",
                  "route53resolver:Get*",
                  "route53resolver:List*",
                  "s3:Get*",
                  "s3:List*",
                  "sagemaker:Describe*",
                  "sagemaker:GetSearchSuggestions",
                  "sagemaker:List*",
                  "sagemaker:Search",
                  "schemas:Describe*",
                  "schemas:Get*",
                  "schemas:List*",
                  "schemas:Search*",
                  "sdb:Get*",
                  "sdb:List*",
                  "sdb:Select*",
                  "secretsmanager:List*",
                  "secretsmanager:Describe*",
                  "secretsmanager:GetResourcePolicy",
                  "securityhub:Describe*",
                  "securityhub:Get*",
                  "securityhub:List*",
                  "serverlessrepo:List*",
                  "serverlessrepo:Get*",
                  "serverlessrepo:SearchApplications",
                  "servicecatalog:List*",
                  "servicecatalog:Scan*",
                  "servicecatalog:Search*",
                  "servicecatalog:Describe*",
                  "servicediscovery:Get*",
                  "servicediscovery:List*",
                  "servicequotas:GetAssociationForServiceQuotaTemplate",
                  "servicequotas:GetAWSDefaultServiceQuota",
                  "servicequotas:GetRequestedServiceQuotaChange",
                  "servicequotas:GetServiceQuota",
                  "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                  "servicequotas:ListAWSDefaultServiceQuotas",
                  "servicequotas:ListRequestedServiceQuotaChangeHistory",
                  "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                  "servicequotas:ListServices",
                  "servicequotas:ListServiceQuotas",
                  "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                  "ses:Get*",
                  "ses:List*",
                  "ses:Describe*",
                  "shield:Describe*",
                  "shield:Get*",
                  "shield:List*",
                  "snowball:Get*",
                  "snowball:Describe*",
                  "snowball:List*",
                  "sns:Get*",
                  "sns:List*",
                  "sns:Check*",
                  "sqs:Get*",
                  "sqs:List*",
                  "sqs:Receive*",
                  "ssm:Describe*",
                  "ssm:Get*",
                  "ssm:List*",
                  "states:List*",
                  "states:Describe*",
                  "states:GetExecutionHistory",
                  "storagegateway:Describe*",
                  "storagegateway:List*",
                  "sts:Get*",
                  "swf:Count*",
                  "swf:Describe*",
                  "swf:Get*",
                  "swf:List*",
                  "synthetics:Describe*",
                  "synthetics:Get*",
                  "tag:Get*",
                  "transfer:Describe*",
                  "transfer:List*",
                  "transfer:TestIdentityProvider",
                  "transcribe:Get*",
                  "transcribe:List*",
                  "trustedadvisor:Describe*",
                  "waf:Get*",
                  "waf:List*",
                  "wafv2:Describe*",
                  "wafv2:Get*",
                  "wafv2:List*",
                  "waf-regional:List*",
                  "waf-regional:Get*",
                  "workdocs:Describe*",
                  "workdocs:Get*",
                  "workdocs:CheckAlias",
                  "worklink:Describe*",
                  "worklink:List*",
                  "workmail:Describe*",
                  "workmail:Get*",
                  "workmail:List*",
                  "workmail:Search*",
                  "workspaces:Describe*",
                  "xray:BatchGet*",
                  "xray:Get*"
                ],
                "Effect": "Allow",
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v63",
          "IsDefaultVersion": true,
          "CreateDate": "2020-03-09 23:45:01+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [
        "s3:GetObject",
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParametersByPath"
      ],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "a4b:GetAddressBook",
        "a4b:GetConferencePreference",
        "a4b:GetConferenceProvider",
        "a4b:GetContact",
        "a4b:GetDevice",
        "a4b:GetNetworkProfile",
        "a4b:GetProfile",
        "a4b:GetRoom",
        "a4b:GetRoomSkillParameter",
        "a4b:GetSkillGroup",
        "a4b:ListBusinessReportSchedules",
        "a4b:ListConferenceProviders",
        "a4b:ListDeviceEvents",
        "a4b:ListSkills",
        "a4b:ListSkillsStoreCategories",
        "a4b:ListSkillsStoreSkillsByCategory",
        "a4b:ListSmartHomeAppliances",
        "a4b:ListTags",
        "a4b:SearchAddressBooks",
        "a4b:SearchContacts",
        "a4b:SearchDevices",
        "a4b:SearchNetworkProfiles",
        "a4b:SearchProfiles",
        "a4b:SearchRooms",
        "a4b:SearchSkillGroups",
        "a4b:SearchUsers",
        "access-analyzer:GetAnalyzedResource",
        "access-analyzer:GetAnalyzer",
        "access-analyzer:GetArchiveRule",
        "access-analyzer:GetFinding",
        "access-analyzer:ListAnalyzedResources",
        "access-analyzer:ListAnalyzers",
        "access-analyzer:ListArchiveRules",
        "access-analyzer:ListFindings",
        "access-analyzer:ListTagsForResource",
        "acm-pca:DescribeCertificateAuthority",
        "acm-pca:DescribeCertificateAuthorityAuditReport",
        "acm-pca:GetCertificate",
        "acm-pca:GetCertificateAuthorityCertificate",
        "acm-pca:GetCertificateAuthorityCsr",
        "acm-pca:ListCertificateAuthorities",
        "acm-pca:ListPermissions",
        "acm-pca:ListTags",
        "acm:DescribeCertificate",
        "acm:GetCertificate",
        "acm:ListCertificates",
        "acm:ListTagsForCertificate",
        "amplify:GetApp",
        "amplify:GetBranch",
        "amplify:GetDomainAssociation",
        "amplify:GetJob",
        "amplify:ListApps",
        "amplify:ListBranches",
        "amplify:ListDomainAssociations",
        "amplify:ListJobs",
        "apigateway:GET",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingActivities",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DescribeScheduledActions",
        "applicationinsights:DescribeApplication",
        "applicationinsights:DescribeComponent",
        "applicationinsights:DescribeComponentConfiguration",
        "applicationinsights:DescribeComponentConfigurationRecommendation",
        "applicationinsights:DescribeObservation",
        "applicationinsights:DescribeProblem",
        "applicationinsights:DescribeProblemObservations",
        "applicationinsights:ListApplications",
        "applicationinsights:ListComponents",
        "applicationinsights:ListProblems",
        "appmesh:DescribeMesh",
        "appmesh:DescribeRoute",
        "appmesh:DescribeVirtualNode",
        "appmesh:DescribeVirtualRouter",
        "appmesh:DescribeVirtualService",
        "appmesh:ListMeshes",
        "appmesh:ListRoutes",
        "appmesh:ListTagsForResource",
        "appmesh:ListVirtualNodes",
        "appmesh:ListVirtualRouters",
        "appmesh:ListVirtualServices",
        "appstream:DescribeDirectoryConfigs",
        "appstream:DescribeFleets",
        "appstream:DescribeImageBuilders",
        "appstream:DescribeImagePermissions",
        "appstream:DescribeImages",
        "appstream:DescribeSessions",
        "appstream:DescribeStacks",
        "appstream:DescribeUsageReportSubscriptions",
        "appstream:DescribeUserStackAssociations",
        "appstream:DescribeUsers",
        "appstream:GetImageBuilders",
        "appstream:GetParametersForThemeAssetUpload",
        "appstream:ListAssociatedFleets",
        "appstream:ListAssociatedStacks",
        "appstream:ListTagsForResource",
        "appsync:GetDataSource",
        "appsync:GetFunction",
        "appsync:GetGraphqlApi",
        "appsync:GetIntrospectionSchema",
        "appsync:GetResolver",
        "appsync:GetSchemaCreationStatus",
        "appsync:GetType",
        "appsync:ListApiKeys",
        "appsync:ListDataSources",
        "appsync:ListFunctions",
        "appsync:ListGraphqlApis",
        "appsync:ListResolvers",
        "appsync:ListResolversByFunction",
        "appsync:ListTagsForResource",
        "appsync:ListTypes",
        "athena:BatchGetNamedQuery",
        "athena:BatchGetQueryExecution",
        "athena:GetDataCatalog",
        "athena:GetDatabase",
        "athena:GetNamedQuery",
        "athena:GetQueryExecution",
        "athena:GetQueryResults",
        "athena:GetQueryResultsStream",
        "athena:GetTableMetadata",
        "athena:GetWorkGroup",
        "athena:ListDataCatalogs",
        "athena:ListDatabases",
        "athena:ListNamedQueries",
        "athena:ListQueryExecutions",
        "athena:ListTableMetadata",
        "athena:ListTagsForResource",
        "athena:ListWorkGroups",
        "autoscaling-plans:DescribeScalingPlanResources",
        "autoscaling-plans:DescribeScalingPlans",
        "autoscaling-plans:GetScalingPlanResourceForecastData",
        "autoscaling:DescribeAccountLimits",
        "autoscaling:DescribeAdjustmentTypes",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeAutoScalingNotificationTypes",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeLifecycleHookTypes",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeLoadBalancerTargetGroups",
        "autoscaling:DescribeLoadBalancers",
        "autoscaling:DescribeMetricCollectionTypes",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:DescribePolicies",
        "autoscaling:DescribeScalingActivities",
        "autoscaling:DescribeScalingProcessTypes",
        "autoscaling:DescribeScheduledActions",
        "autoscaling:DescribeTags",
        "autoscaling:DescribeTerminationPolicyTypes",
        "backup:DescribeBackupJob",
        "backup:DescribeBackupVault",
        "backup:DescribeCopyJob",
        "backup:DescribeProtectedResource",
        "backup:DescribeRecoveryPoint",
        "backup:DescribeRestoreJob",
        "backup:GetBackupPlan",
        "backup:GetBackupPlanFromJSON",
        "backup:GetBackupPlanFromTemplate",
        "backup:GetBackupSelection",
        "backup:GetBackupVaultAccessPolicy",
        "backup:GetBackupVaultNotifications",
        "backup:GetRecoveryPointRestoreMetadata",
        "backup:GetSupportedResourceTypes",
        "backup:ListBackupJobs",
        "backup:ListBackupPlanTemplates",
        "backup:ListBackupPlanVersions",
        "backup:ListBackupPlans",
        "backup:ListBackupSelections",
        "backup:ListBackupVaults",
        "backup:ListCopyJobs",
        "backup:ListProtectedResources",
        "backup:ListRecoveryPointsByBackupVault",
        "backup:ListRecoveryPointsByResource",
        "backup:ListRestoreJobs",
        "backup:ListTags",
        "batch:DescribeComputeEnvironments",
        "batch:DescribeJobDefinitions",
        "batch:DescribeJobQueues",
        "batch:DescribeJobs",
        "batch:ListJobs",
        "chatbot:DescribeChimeWebhookConfigurations",
        "chatbot:DescribeSlackChannelConfigurations",
        "chatbot:DescribeSlackChannels",
        "chatbot:DescribeSlackWorkspaces",
        "chatbot:GetSlackOauthParameters",
        "chime:GetAccount",
        "chime:GetAccountResource",
        "chime:GetAccountSettings",
        "chime:GetAccountWithOpenIdConfig",
        "chime:GetAttendee",
        "chime:GetBot",
        "chime:GetCDRBucket",
        "chime:GetDomain",
        "chime:GetEventsConfiguration",
        "chime:GetGlobalSettings",
        "chime:GetMeeting",
        "chime:GetMeetingDetail",
        "chime:GetPhoneNumber",
        "chime:GetPhoneNumberOrder",
        "chime:GetPhoneNumberSettings",
        "chime:GetProxySession",
        "chime:GetRetentionSettings",
        "chime:GetRoom",
        "chime:GetTelephonyLimits",
        "chime:GetUser",
        "chime:GetUserActivityReportData",
        "chime:GetUserByEmail",
        "chime:GetUserSettings",
        "chime:GetVoiceConnector",
        "chime:GetVoiceConnectorGroup",
        "chime:GetVoiceConnectorLoggingConfiguration",
        "chime:GetVoiceConnectorOrigination",
        "chime:GetVoiceConnectorProxy",
        "chime:GetVoiceConnectorStreamingConfiguration",
        "chime:GetVoiceConnectorTermination",
        "chime:GetVoiceConnectorTerminationHealth",
        "chime:ListAccountUsageReportData",
        "chime:ListAccounts",
        "chime:ListApiKeys",
        "chime:ListAttendeeTags",
        "chime:ListAttendees",
        "chime:ListBots",
        "chime:ListCDRBucket",
        "chime:ListCallingRegions",
        "chime:ListDelegates",
        "chime:ListDirectories",
        "chime:ListDomains",
        "chime:ListGroups",
        "chime:ListMeetingEvents",
        "chime:ListMeetingTags",
        "chime:ListMeetings",
        "chime:ListMeetingsReportData",
        "chime:ListPhoneNumberOrders",
        "chime:ListPhoneNumbers",
        "chime:ListProxySessions",
        "chime:ListRoomMemberships",
        "chime:ListRooms",
        "chime:ListTagsForResource",
        "chime:ListUsers",
        "chime:ListVoiceConnectorGroups",
        "chime:ListVoiceConnectorTerminationCredentials",
        "chime:ListVoiceConnectors",
        "chime:RetrieveDataExports",
        "chime:SearchAvailablePhoneNumbers",
        "chime:ValidateAccountResource",
        "cloud9:DescribeEnvironmentMemberships",
        "cloud9:DescribeEnvironmentStatus",
        "cloud9:DescribeEnvironments",
        "cloud9:ListEnvironments",
        "cloud9:ListTagsForResource",
        "clouddirectory:BatchRead",
        "clouddirectory:GetDirectory",
        "clouddirectory:GetFacet",
        "clouddirectory:GetLinkAttributes",
        "clouddirectory:GetObjectAttributes",
        "clouddirectory:GetObjectInformation",
        "clouddirectory:GetSchemaAsJson",
        "clouddirectory:GetTypedLinkFacetInformation",
        "clouddirectory:ListAppliedSchemaArns",
        "clouddirectory:ListAttachedIndices",
        "clouddirectory:ListDevelopmentSchemaArns",
        "clouddirectory:ListDirectories",
        "clouddirectory:ListFacetAttributes",
        "clouddirectory:ListFacetNames",
        "clouddirectory:ListIncomingTypedLinks",
        "clouddirectory:ListIndex",
        "clouddirectory:ListObjectAttributes",
        "clouddirectory:ListObjectChildren",
        "clouddirectory:ListObjectParentPaths",
        "clouddirectory:ListObjectParents",
        "clouddirectory:ListObjectPolicies",
        "clouddirectory:ListOutgoingTypedLinks",
        "clouddirectory:ListPolicyAttachments",
        "clouddirectory:ListPublishedSchemaArns",
        "clouddirectory:ListTagsForResource",
        "clouddirectory:ListTypedLinkFacetAttributes",
        "clouddirectory:ListTypedLinkFacetNames",
        "clouddirectory:LookupPolicy",
        "cloudformation:DescribeAccountLimits",
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStackDriftDetectionStatus",
        "cloudformation:DescribeStackEvents",
        "cloudformation:DescribeStackInstance",
        "cloudformation:DescribeStackResource",
        "cloudformation:DescribeStackResourceDrifts",
        "cloudformation:DescribeStackResources",
        "cloudformation:DescribeStackSet",
        "cloudformation:DescribeStackSetOperation",
        "cloudformation:DescribeStacks",
        "cloudformation:DescribeType",
        "cloudformation:DescribeTypeRegistration",
        "cloudformation:DetectStackDrift",
        "cloudformation:DetectStackResourceDrift",
        "cloudformation:DetectStackSetDrift",
        "cloudformation:EstimateTemplateCost",
        "cloudformation:GetStackPolicy",
        "cloudformation:GetTemplate",
        "cloudformation:GetTemplateSummary",
        "cloudformation:ListChangeSets",
        "cloudformation:ListExports",
        "cloudformation:ListImports",
        "cloudformation:ListStackInstances",
        "cloudformation:ListStackResources",
        "cloudformation:ListStackSetOperationResults",
        "cloudformation:ListStackSetOperations",
        "cloudformation:ListStackSets",
        "cloudformation:ListStacks",
        "cloudformation:ListTypeRegistrations",
        "cloudformation:ListTypeVersions",
        "cloudformation:ListTypes",
        "cloudfront:GetCloudFrontOriginAccessIdentity",
        "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
        "cloudfront:GetDistribution",
        "cloudfront:GetDistributionConfig",
        "cloudfront:GetFieldLevelEncryption",
        "cloudfront:GetFieldLevelEncryptionConfig",
        "cloudfront:GetFieldLevelEncryptionProfile",
        "cloudfront:GetFieldLevelEncryptionProfileConfig",
        "cloudfront:GetInvalidation",
        "cloudfront:GetPublicKey",
        "cloudfront:GetPublicKeyConfig",
        "cloudfront:GetStreamingDistribution",
        "cloudfront:GetStreamingDistributionConfig",
        "cloudfront:ListCloudFrontOriginAccessIdentities",
        "cloudfront:ListDistributions",
        "cloudfront:ListDistributionsByLambdaFunction",
        "cloudfront:ListDistributionsByWebACLId",
        "cloudfront:ListFieldLevelEncryptionConfigs",
        "cloudfront:ListFieldLevelEncryptionProfiles",
        "cloudfront:ListInvalidations",
        "cloudfront:ListPublicKeys",
        "cloudfront:ListStreamingDistributions",
        "cloudfront:ListTagsForResource",
        "cloudhsm:DescribeBackups",
        "cloudhsm:DescribeClusters",
        "cloudhsm:DescribeHapg",
        "cloudhsm:DescribeHsm",
        "cloudhsm:DescribeLunaClient",
        "cloudhsm:GetConfig",
        "cloudhsm:ListAvailableZones",
        "cloudhsm:ListHapgs",
        "cloudhsm:ListHsms",
        "cloudhsm:ListLunaClients",
        "cloudhsm:ListTags",
        "cloudhsm:ListTagsForResource",
        "cloudsearch:DescribeAnalysisSchemes",
        "cloudsearch:DescribeAvailabilityOptions",
        "cloudsearch:DescribeDomainEndpointOptions",
        "cloudsearch:DescribeDomains",
        "cloudsearch:DescribeExpressions",
        "cloudsearch:DescribeIndexFields",
        "cloudsearch:DescribeScalingParameters",
        "cloudsearch:DescribeServiceAccessPolicies",
        "cloudsearch:DescribeSuggesters",
        "cloudsearch:ListDomainNames",
        "cloudsearch:ListTags",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:GetInsightSelectors",
        "cloudtrail:GetTrail",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:ListPublicKeys",
        "cloudtrail:ListTags",
        "cloudtrail:ListTrails",
        "cloudtrail:LookupEvents",
        "cloudwatch:DescribeAlarmHistory",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:DescribeAlarmsForMetric",
        "cloudwatch:DescribeAnomalyDetectors",
        "cloudwatch:DescribeInsightRules",
        "cloudwatch:GetDashboard",
        "cloudwatch:GetInsightRuleReport",
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:GetMetricWidgetImage",
        "cloudwatch:ListDashboards",
        "cloudwatch:ListMetrics",
        "cloudwatch:ListTagsForResource",
        "codebuild:BatchGetBuilds",
        "codebuild:BatchGetProjects",
        "codebuild:BatchGetReportGroups",
        "codebuild:BatchGetReports",
        "codebuild:DescribeTestCases",
        "codebuild:ListBuilds",
        "codebuild:ListBuildsForProject",
        "codebuild:ListConnectedOAuthAccounts",
        "codebuild:ListCuratedEnvironmentImages",
        "codebuild:ListProjects",
        "codebuild:ListReportGroups",
        "codebuild:ListReports",
        "codebuild:ListReportsForReportGroup",
        "codebuild:ListRepositories",
        "codebuild:ListSharedProjects",
        "codebuild:ListSharedReportGroups",
        "codebuild:ListSourceCredentials",
        "codecommit:BatchGetCommits",
        "codecommit:BatchGetPullRequests",
        "codecommit:BatchGetRepositories",
        "codecommit:DescribeMergeConflicts",
        "codecommit:DescribePullRequestEvents",
        "codecommit:GetApprovalRuleTemplate",
        "codecommit:GetBlob",
        "codecommit:GetBranch",
        "codecommit:GetComment",
        "codecommit:GetCommentsForComparedCommit",
        "codecommit:GetCommentsForPullRequest",
        "codecommit:GetCommit",
        "codecommit:GetCommitHistory",
        "codecommit:GetCommitsFromMergeBase",
        "codecommit:GetDifferences",
        "codecommit:GetFile",
        "codecommit:GetFolder",
        "codecommit:GetMergeCommit",
        "codecommit:GetMergeConflicts",
        "codecommit:GetMergeOptions",
        "codecommit:GetObjectIdentifier",
        "codecommit:GetPullRequest",
        "codecommit:GetPullRequestApprovalStates",
        "codecommit:GetPullRequestOverrideState",
        "codecommit:GetReferences",
        "codecommit:GetRepository",
        "codecommit:GetRepositoryTriggers",
        "codecommit:GetTree",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:GitPull",
        "codecommit:ListApprovalRuleTemplates",
        "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
        "codecommit:ListBranches",
        "codecommit:ListPullRequests",
        "codecommit:ListRepositories",
        "codecommit:ListRepositoriesForApprovalRuleTemplate",
        "codecommit:ListTagsForResource",
        "codedeploy:BatchGetApplicationRevisions",
        "codedeploy:BatchGetApplications",
        "codedeploy:BatchGetDeploymentGroups",
        "codedeploy:BatchGetDeploymentInstances",
        "codedeploy:BatchGetDeploymentTargets",
        "codedeploy:BatchGetDeployments",
        "codedeploy:BatchGetOnPremisesInstances",
        "codedeploy:GetApplication",
        "codedeploy:GetApplicationRevision",
        "codedeploy:GetDeployment",
        "codedeploy:GetDeploymentConfig",
        "codedeploy:GetDeploymentGroup",
        "codedeploy:GetDeploymentInstance",
        "codedeploy:GetDeploymentTarget",
        "codedeploy:GetOnPremisesInstance",
        "codedeploy:ListApplicationRevisions",
        "codedeploy:ListApplications",
        "codedeploy:ListDeploymentConfigs",
        "codedeploy:ListDeploymentGroups",
        "codedeploy:ListDeploymentInstances",
        "codedeploy:ListDeploymentTargets",
        "codedeploy:ListDeployments",
        "codedeploy:ListGitHubAccountTokenNames",
        "codedeploy:ListOnPremisesInstances",
        "codedeploy:ListTagsForResource",
        "codeguru-profiler:DescribeProfilingGroup",
        "codeguru-profiler:GetFindingsReport",
        "codeguru-profiler:GetFindingsReportAccountSummary",
        "codeguru-profiler:GetPolicy",
        "codeguru-profiler:GetProfile",
        "codeguru-profiler:GetRecommendations",
        "codeguru-profiler:ListFindingsReports",
        "codeguru-profiler:ListProfileTimes",
        "codeguru-profiler:ListProfilingGroups",
        "codeguru-reviewer:DescribeCodeReview",
        "codeguru-reviewer:DescribeRecommendationFeedback",
        "codeguru-reviewer:DescribeRepositoryAssociation",
        "codeguru-reviewer:GetMetricsData",
        "codeguru-reviewer:ListCodeReviews",
        "codeguru-reviewer:ListRecommendationFeedback",
        "codeguru-reviewer:ListRecommendations",
        "codeguru-reviewer:ListRepositoryAssociations",
        "codeguru-reviewer:ListThirdPartyRepositories",
        "codepipeline:GetJobDetails",
        "codepipeline:GetPipeline",
        "codepipeline:GetPipelineExecution",
        "codepipeline:GetPipelineState",
        "codepipeline:GetThirdPartyJobDetails",
        "codepipeline:ListActionExecutions",
        "codepipeline:ListActionTypes",
        "codepipeline:ListPipelineExecutions",
        "codepipeline:ListPipelines",
        "codepipeline:ListTagsForResource",
        "codepipeline:ListWebhooks",
        "codestar-notifications:ListTargets",
        "codestar-notifications:describeNotificationRule",
        "codestar-notifications:listEventTypes",
        "codestar-notifications:listNotificationRules",
        "codestar-notifications:listTagsForResource",
        "codestar:DescribeProject",
        "codestar:DescribeUserProfile",
        "codestar:GetExtendedAccess",
        "codestar:ListProjects",
        "codestar:ListResources",
        "codestar:ListTagsForProject",
        "codestar:ListTeamMembers",
        "codestar:ListUserProfiles",
        "codestar:Verify*",
        "cognito-identity:DescribeIdentity",
        "cognito-identity:DescribeIdentityPool",
        "cognito-identity:GetCredentialsForIdentity",
        "cognito-identity:GetIdentityPoolRoles",
        "cognito-identity:GetOpenIdToken",
        "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
        "cognito-identity:ListIdentities",
        "cognito-identity:ListIdentityPools",
        "cognito-identity:ListTagsForResource",
        "cognito-identity:LookupDeveloperIdentity",
        "cognito-idp:AdminGetDevice",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminListDevices",
        "cognito-idp:AdminListGroupsForUser",
        "cognito-idp:AdminListUserAuthEvents",
        "cognito-idp:DescribeIdentityProvider",
        "cognito-idp:DescribeResourceServer",
        "cognito-idp:DescribeRiskConfiguration",
        "cognito-idp:DescribeUserImportJob",
        "cognito-idp:DescribeUserPool",
        "cognito-idp:DescribeUserPoolClient",
        "cognito-idp:DescribeUserPoolDomain",
        "cognito-idp:GetCSVHeader",
        "cognito-idp:GetDevice",
        "cognito-idp:GetGroup",
        "cognito-idp:GetIdentityProviderByIdentifier",
        "cognito-idp:GetSigningCertificate",
        "cognito-idp:GetUICustomization",
        "cognito-idp:GetUser",
        "cognito-idp:GetUserAttributeVerificationCode",
        "cognito-idp:GetUserPoolMfaConfig",
        "cognito-idp:ListDevices",
        "cognito-idp:ListGroups",
        "cognito-idp:ListIdentityProviders",
        "cognito-idp:ListResourceServers",
        "cognito-idp:ListTagsForResource",
        "cognito-idp:ListUserImportJobs",
        "cognito-idp:ListUserPoolClients",
        "cognito-idp:ListUserPools",
        "cognito-idp:ListUsers",
        "cognito-idp:ListUsersInGroup",
        "cognito-sync:DescribeDataset",
        "cognito-sync:DescribeIdentityPoolUsage",
        "cognito-sync:DescribeIdentityUsage",
        "cognito-sync:GetBulkPublishDetails",
        "cognito-sync:GetCognitoEvents",
        "cognito-sync:GetIdentityPoolConfiguration",
        "cognito-sync:ListDatasets",
        "cognito-sync:ListIdentityPoolUsage",
        "cognito-sync:ListRecords",
        "cognito-sync:QueryRecords",
        "compute-optimizer:GetAutoScalingGroupRecommendations",
        "compute-optimizer:GetEC2InstanceRecommendations",
        "compute-optimizer:GetEC2RecommendationProjectedMetrics",
        "compute-optimizer:GetEnrollmentStatus",
        "compute-optimizer:GetRecommendationSummaries",
        "config:DeliverConfigSnapshot",
        "config:DescribeAggregateComplianceByConfigRules",
        "config:DescribeAggregationAuthorizations",
        "config:DescribeComplianceByConfigRule",
        "config:DescribeComplianceByResource",
        "config:DescribeConfigRuleEvaluationStatus",
        "config:DescribeConfigRules",
        "config:DescribeConfigurationAggregatorSourcesStatus",
        "config:DescribeConfigurationAggregators",
        "config:DescribeConfigurationRecorderStatus",
        "config:DescribeConfigurationRecorders",
        "config:DescribeConformancePackCompliance",
        "config:DescribeConformancePackStatus",
        "config:DescribeConformancePacks",
        "config:DescribeDeliveryChannelStatus",
        "config:DescribeDeliveryChannels",
        "config:DescribeOrganizationConfigRuleStatuses",
        "config:DescribeOrganizationConfigRules",
        "config:DescribeOrganizationConformancePackStatuses",
        "config:DescribeOrganizationConformancePacks",
        "config:DescribePendingAggregationRequests",
        "config:DescribeRemediationConfigurations",
        "config:DescribeRemediationExceptions",
        "config:DescribeRemediationExecutionStatus",
        "config:DescribeRetentionConfigurations",
        "config:GetAggregateComplianceDetailsByConfigRule",
        "config:GetAggregateConfigRuleComplianceSummary",
        "config:GetAggregateDiscoveredResourceCounts",
        "config:GetAggregateResourceConfig",
        "config:GetComplianceDetailsByConfigRule",
        "config:GetComplianceDetailsByResource",
        "config:GetComplianceSummaryByConfigRule",
        "config:GetComplianceSummaryByResourceType",
        "config:GetConformancePackComplianceDetails",
        "config:GetConformancePackComplianceSummary",
        "config:GetDiscoveredResourceCounts",
        "config:GetOrganizationConfigRuleDetailedStatus",
        "config:GetOrganizationConformancePackDetailedStatus",
        "config:GetResourceConfigHistory",
        "config:ListAggregateDiscoveredResources",
        "config:ListDiscoveredResources",
        "config:ListTagsForResource",
        "config:SelectResourceConfig",
        "connect:DescribeInstance",
        "connect:DescribeUser",
        "connect:DescribeUserHierarchyGroup",
        "connect:DescribeUserHierarchyStructure",
        "connect:GetFederationToken",
        "connect:ListContactFlows",
        "connect:ListHoursOfOperations",
        "connect:ListInstances",
        "connect:ListPhoneNumbers",
        "connect:ListQueues",
        "connect:ListRoutingProfiles",
        "connect:ListSecurityProfiles",
        "connect:ListTagsForResource",
        "connect:ListUserHierarchyGroups",
        "connect:ListUsers",
        "dataexchange:GetAsset",
        "dataexchange:GetDataSet",
        "dataexchange:GetJob",
        "dataexchange:GetRevision",
        "dataexchange:ListDataSetRevisions",
        "dataexchange:ListDataSets",
        "dataexchange:ListJobs",
        "dataexchange:ListRevisionAssets",
        "dataexchange:ListTagsForResource",
        "datapipeline:DescribeObjects",
        "datapipeline:DescribePipelines",
        "datapipeline:EvaluateExpression",
        "datapipeline:GetAccountLimits",
        "datapipeline:GetPipelineDefinition",
        "datapipeline:ListPipelines",
        "datapipeline:QueryObjects",
        "datapipeline:ValidatePipelineDefinition",
        "datasync:DescribeAgent",
        "datasync:DescribeLocationEfs",
        "datasync:DescribeLocationNfs",
        "datasync:DescribeLocationS3",
        "datasync:DescribeLocationSmb",
        "datasync:DescribeTask",
        "datasync:DescribeTaskExecution",
        "datasync:ListAgents",
        "datasync:ListLocations",
        "datasync:ListTagsForResource",
        "datasync:ListTaskExecutions",
        "datasync:ListTasks",
        "dax:BatchGetItem",
        "dax:DescribeClusters",
        "dax:DescribeDefaultParameters",
        "dax:DescribeEvents",
        "dax:DescribeParameterGroups",
        "dax:DescribeParameters",
        "dax:DescribeSubnetGroups",
        "dax:GetItem",
        "dax:ListTags",
        "dax:Query",
        "dax:Scan",
        "detective:GetFreeTrialEligibility",
        "detective:GetGraphIngestState",
        "detective:GetMembers",
        "detective:GetPricingInformation",
        "detective:GetUsageInformation",
        "detective:ListGraphs",
        "detective:ListInvitations",
        "detective:ListMembers",
        "devicefarm:GetAccountSettings",
        "devicefarm:GetDevice",
        "devicefarm:GetDeviceInstance",
        "devicefarm:GetDevicePool",
        "devicefarm:GetDevicePoolCompatibility",
        "devicefarm:GetInstanceProfile",
        "devicefarm:GetJob",
        "devicefarm:GetNetworkProfile",
        "devicefarm:GetOfferingStatus",
        "devicefarm:GetProject",
        "devicefarm:GetRemoteAccessSession",
        "devicefarm:GetRun",
        "devicefarm:GetSuite",
        "devicefarm:GetTest",
        "devicefarm:GetTestGridProject",
        "devicefarm:GetTestGridSession",
        "devicefarm:GetUpload",
        "devicefarm:GetVPCEConfiguration",
        "devicefarm:ListArtifacts",
        "devicefarm:ListDeviceInstances",
        "devicefarm:ListDevicePools",
        "devicefarm:ListDevices",
        "devicefarm:ListInstanceProfiles",
        "devicefarm:ListJobs",
        "devicefarm:ListNetworkProfiles",
        "devicefarm:ListOfferingPromotions",
        "devicefarm:ListOfferingTransactions",
        "devicefarm:ListOfferings",
        "devicefarm:ListProjects",
        "devicefarm:ListRemoteAccessSessions",
        "devicefarm:ListRuns",
        "devicefarm:ListSamples",
        "devicefarm:ListSuites",
        "devicefarm:ListTagsForResource",
        "devicefarm:ListTestGridProjects",
        "devicefarm:ListTestGridSessionActions",
        "devicefarm:ListTestGridSessionArtifacts",
        "devicefarm:ListTestGridSessions",
        "devicefarm:ListTests",
        "devicefarm:ListUniqueProblems",
        "devicefarm:ListUploads",
        "devicefarm:ListVPCEConfigurations",
        "directconnect:DescribeConnectionLoa",
        "directconnect:DescribeConnections",
        "directconnect:DescribeConnectionsOnInterconnect",
        "directconnect:DescribeDirectConnectGatewayAssociationProposals",
        "directconnect:DescribeDirectConnectGatewayAssociations",
        "directconnect:DescribeDirectConnectGatewayAttachments",
        "directconnect:DescribeDirectConnectGateways",
        "directconnect:DescribeHostedConnections",
        "directconnect:DescribeInterconnectLoa",
        "directconnect:DescribeInterconnects",
        "directconnect:DescribeLags",
        "directconnect:DescribeLoa",
        "directconnect:DescribeLocations",
        "directconnect:DescribeTags",
        "directconnect:DescribeVirtualGateways",
        "directconnect:DescribeVirtualInterfaces",
        "discovery:DescribeAgents",
        "discovery:DescribeConfigurations",
        "discovery:DescribeContinuousExports",
        "discovery:DescribeExportConfigurations",
        "discovery:DescribeExportTasks",
        "discovery:DescribeImportTasks",
        "discovery:DescribeTags",
        "discovery:GetDiscoverySummary",
        "discovery:ListConfigurations",
        "discovery:ListServerNeighbors",
        "dlm:GetLifecyclePolicies",
        "dlm:GetLifecyclePolicy",
        "dms:DescribeAccountAttributes",
        "dms:DescribeCertificates",
        "dms:DescribeConnections",
        "dms:DescribeEndpointTypes",
        "dms:DescribeEndpoints",
        "dms:DescribeEventCategories",
        "dms:DescribeEventSubscriptions",
        "dms:DescribeEvents",
        "dms:DescribeOrderableReplicationInstances",
        "dms:DescribeRefreshSchemasStatus",
        "dms:DescribeReplicationInstanceTaskLogs",
        "dms:DescribeReplicationInstances",
        "dms:DescribeReplicationSubnetGroups",
        "dms:DescribeReplicationTaskAssessmentResults",
        "dms:DescribeReplicationTasks",
        "dms:DescribeSchemas",
        "dms:DescribeTableStatistics",
        "dms:ListTagsForResource",
        "dms:TestConnection",
        "ds:CheckAlias",
        "ds:DescribeCertificate",
        "ds:DescribeConditionalForwarders",
        "ds:DescribeDirectories",
        "ds:DescribeDomainControllers",
        "ds:DescribeEventTopics",
        "ds:DescribeLDAPSSettings",
        "ds:DescribeSharedDirectories",
        "ds:DescribeSnapshots",
        "ds:DescribeTrusts",
        "ds:GetAuthorizedApplicationDetails",
        "ds:GetDirectoryLimits",
        "ds:GetSnapshotLimits",
        "ds:ListAuthorizedApplications",
        "ds:ListCertificates",
        "ds:ListIpRoutes",
        "ds:ListLogSubscriptions",
        "ds:ListSchemaExtensions",
        "ds:ListTagsForResource",
        "ds:VerifyTrust",
        "dynamodb:BatchGetItem",
        "dynamodb:DescribeBackup",
        "dynamodb:DescribeContinuousBackups",
        "dynamodb:DescribeContributorInsights",
        "dynamodb:DescribeGlobalTable",
        "dynamodb:DescribeGlobalTableSettings",
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeReservedCapacity",
        "dynamodb:DescribeReservedCapacityOfferings",
        "dynamodb:DescribeStream",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeTableReplicaAutoScaling",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListBackups",
        "dynamodb:ListContributorInsights",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListStreams",
        "dynamodb:ListTables",
        "dynamodb:ListTagsOfResource",
        "dynamodb:Query",
        "dynamodb:Scan",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetLaunchTemplateData",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:SearchTransitGatewayRoutes",
        "ec2messages:GetEndpoint",
        "ec2messages:GetMessages",
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:DescribeImageScanFindings",
        "ecr:DescribeImages",
        "ecr:DescribeRepositories",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer",
        "ecr:GetLifecyclePolicy",
        "ecr:GetLifecyclePolicyPreview",
        "ecr:GetRepositoryPolicy",
        "ecr:ListImages",
        "ecr:ListTagsForResource",
        "ecs:DescribeClusters",
        "ecs:DescribeContainerInstances",
        "ecs:DescribeServices",
        "ecs:DescribeTaskDefinition",
        "ecs:DescribeTaskSets",
        "ecs:DescribeTasks",
        "ecs:ListAccountSettings",
        "ecs:ListAttributes",
        "ecs:ListClusters",
        "ecs:ListContainerInstances",
        "ecs:ListServices",
        "ecs:ListTagsForResource",
        "ecs:ListTaskDefinitionFamilies",
        "ecs:ListTaskDefinitions",
        "ecs:ListTasks",
        "eks:DescribeCluster",
        "eks:DescribeFargateProfile",
        "eks:DescribeNodegroup",
        "eks:DescribeUpdate",
        "eks:ListClusters",
        "eks:ListFargateProfiles",
        "eks:ListNodegroups",
        "eks:ListTagsForResource",
        "eks:ListUpdates",
        "elasticache:DescribeCacheClusters",
        "elasticache:DescribeCacheEngineVersions",
        "elasticache:DescribeCacheParameterGroups",
        "elasticache:DescribeCacheParameters",
        "elasticache:DescribeCacheSecurityGroups",
        "elasticache:DescribeCacheSubnetGroups",
        "elasticache:DescribeEngineDefaultParameters",
        "elasticache:DescribeEvents",
        "elasticache:DescribeReplicationGroups",
        "elasticache:DescribeReservedCacheNodes",
        "elasticache:DescribeReservedCacheNodesOfferings",
        "elasticache:DescribeSnapshots",
        "elasticache:ListAllowedNodeTypeModifications",
        "elasticache:ListTagsForResource",
        "elasticbeanstalk:CheckDNSAvailability",
        "elasticbeanstalk:DescribeAccountAttributes",
        "elasticbeanstalk:DescribeApplicationVersions",
        "elasticbeanstalk:DescribeApplications",
        "elasticbeanstalk:DescribeConfigurationOptions",
        "elasticbeanstalk:DescribeConfigurationSettings",
        "elasticbeanstalk:DescribeEnvironmentHealth",
        "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
        "elasticbeanstalk:DescribeEnvironmentManagedActions",
        "elasticbeanstalk:DescribeEnvironmentResources",
        "elasticbeanstalk:DescribeEnvironments",
        "elasticbeanstalk:DescribeEvents",
        "elasticbeanstalk:DescribeInstancesHealth",
        "elasticbeanstalk:DescribePlatformVersion",
        "elasticbeanstalk:ListAvailableSolutionStacks",
        "elasticbeanstalk:ListPlatformBranches",
        "elasticbeanstalk:ListPlatformVersions",
        "elasticbeanstalk:ListTagsForResource",
        "elasticbeanstalk:RequestEnvironmentInfo",
        "elasticbeanstalk:RetrieveEnvironmentInfo",
        "elasticbeanstalk:ValidateConfigurationSettings",
        "elasticfilesystem:DescribeAccessPoints",
        "elasticfilesystem:DescribeFileSystemPolicy",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeLifecycleConfiguration",
        "elasticfilesystem:DescribeMountTargetSecurityGroups",
        "elasticfilesystem:DescribeMountTargets",
        "elasticfilesystem:DescribeTags",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeInstanceHealth",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticmapreduce:DescribeCluster",
        "elasticmapreduce:DescribeEditor",
        "elasticmapreduce:DescribeJobFlows",
        "elasticmapreduce:DescribeSecurityConfiguration",
        "elasticmapreduce:DescribeStep",
        "elasticmapreduce:ListBootstrapActions",
        "elasticmapreduce:ListClusters",
        "elasticmapreduce:ListEditors",
        "elasticmapreduce:ListInstanceFleets",
        "elasticmapreduce:ListInstanceGroups",
        "elasticmapreduce:ListInstances",
        "elasticmapreduce:ListSecurityConfigurations",
        "elasticmapreduce:ListSteps",
        "elasticmapreduce:ViewEventsFromAllClustersInConsole",
        "elastictranscoder:ListJobsByPipeline",
        "elastictranscoder:ListJobsByStatus",
        "elastictranscoder:ListPipelines",
        "elastictranscoder:ListPresets",
        "elastictranscoder:ReadJob",
        "elastictranscoder:ReadPipeline",
        "elastictranscoder:ReadPreset",
        "elemental-appliances-software:Get*",
        "elemental-appliances-software:List*",
        "es:DescribeElasticsearchDomain",
        "es:DescribeElasticsearchDomainConfig",
        "es:DescribeElasticsearchDomains",
        "es:DescribeElasticsearchInstanceTypeLimits",
        "es:DescribeInboundCrossClusterSearchConnections",
        "es:DescribeOutboundCrossClusterSearchConnections",
        "es:DescribeReservedElasticsearchInstanceOfferings",
        "es:DescribeReservedElasticsearchInstances",
        "es:ESHttpGet",
        "es:ESHttpHead",
        "es:GetCompatibleElasticsearchVersions",
        "es:GetUpgradeHistory",
        "es:GetUpgradeStatus",
        "es:ListDomainNames",
        "es:ListElasticsearchInstanceTypeDetails",
        "es:ListElasticsearchInstanceTypes",
        "es:ListElasticsearchVersions",
        "es:ListTags",
        "events:DescribeEventBus",
        "events:DescribeEventSource",
        "events:DescribePartnerEventSource",
        "events:DescribeRule",
        "events:ListEventBuses",
        "events:ListEventSources",
        "events:ListPartnerEventSourceAccounts",
        "events:ListPartnerEventSources",
        "events:ListRuleNamesByTarget",
        "events:ListRules",
        "events:ListTagsForResource",
        "events:ListTargetsByRule",
        "events:TestEventPattern",
        "firehose:DescribeDeliveryStream",
        "firehose:ListDeliveryStreams",
        "firehose:ListTagsForDeliveryStream",
        "fsx:DescribeBackups",
        "fsx:DescribeDataRepositoryTasks",
        "fsx:DescribeFileSystems",
        "fsx:ListTagsForResource",
        "gamelift:DescribeAlias",
        "gamelift:DescribeBuild",
        "gamelift:DescribeEC2InstanceLimits",
        "gamelift:DescribeFleetAttributes",
        "gamelift:DescribeFleetCapacity",
        "gamelift:DescribeFleetEvents",
        "gamelift:DescribeFleetPortSettings",
        "gamelift:DescribeFleetUtilization",
        "gamelift:DescribeGameSessionDetails",
        "gamelift:DescribeGameSessionPlacement",
        "gamelift:DescribeGameSessionQueues",
        "gamelift:DescribeGameSessions",
        "gamelift:DescribeInstances",
        "gamelift:DescribeMatchmaking",
        "gamelift:DescribeMatchmakingConfigurations",
        "gamelift:DescribeMatchmakingRuleSets",
        "gamelift:DescribePlayerSessions",
        "gamelift:DescribeRuntimeConfiguration",
        "gamelift:DescribeScalingPolicies",
        "gamelift:DescribeScript",
        "gamelift:DescribeVpcPeeringAuthorizations",
        "gamelift:DescribeVpcPeeringConnections",
        "gamelift:GetGameSessionLogUrl",
        "gamelift:GetInstanceAccess",
        "gamelift:ListAliases",
        "gamelift:ListBuilds",
        "gamelift:ListFleets",
        "gamelift:ListScripts",
        "gamelift:ListTagsForResource",
        "gamelift:RequestUploadCredentials",
        "gamelift:ResolveAlias",
        "gamelift:SearchGameSessions",
        "glacier:DescribeJob",
        "glacier:DescribeVault",
        "glacier:GetDataRetrievalPolicy",
        "glacier:GetJobOutput",
        "glacier:GetVaultAccessPolicy",
        "glacier:GetVaultLock",
        "glacier:GetVaultNotifications",
        "glacier:ListJobs",
        "glacier:ListMultipartUploads",
        "glacier:ListParts",
        "glacier:ListProvisionedCapacity",
        "glacier:ListTagsForVault",
        "glacier:ListVaults",
        "globalaccelerator:DescribeAccelerator",
        "globalaccelerator:DescribeAcceleratorAttributes",
        "globalaccelerator:DescribeEndpointGroup",
        "globalaccelerator:DescribeListener",
        "globalaccelerator:ListAccelerators",
        "globalaccelerator:ListByoipCidrs",
        "globalaccelerator:ListEndpointGroups",
        "globalaccelerator:ListListeners",
        "globalaccelerator:ListTagsForResource",
        "glue:BatchGetPartition",
        "glue:GetCatalogImportStatus",
        "glue:GetClassifier",
        "glue:GetClassifiers",
        "glue:GetCrawler",
        "glue:GetCrawlerMetrics",
        "glue:GetCrawlers",
        "glue:GetDataCatalogEncryptionSettings",
        "glue:GetDatabase",
        "glue:GetDatabases",
        "glue:GetDataflowGraph",
        "glue:GetDevEndpoint",
        "glue:GetDevEndpoints",
        "glue:GetJob",
        "glue:GetJobRun",
        "glue:GetJobRuns",
        "glue:GetJobs",
        "glue:GetPartition",
        "glue:GetPartitions",
        "glue:GetPlan",
        "glue:GetResourcePolicy",
        "glue:GetSecurityConfiguration",
        "glue:GetSecurityConfigurations",
        "glue:GetTable",
        "glue:GetTableVersion",
        "glue:GetTableVersions",
        "glue:GetTables",
        "glue:GetTags",
        "glue:GetTrigger",
        "glue:GetTriggers",
        "glue:GetUserDefinedFunction",
        "glue:GetUserDefinedFunctions",
        "greengrass:GetAssociatedRole",
        "greengrass:GetBulkDeploymentStatus",
        "greengrass:GetConnectivityInfo",
        "greengrass:GetConnectorDefinition",
        "greengrass:GetConnectorDefinitionVersion",
        "greengrass:GetCoreDefinition",
        "greengrass:GetCoreDefinitionVersion",
        "greengrass:GetDeploymentStatus",
        "greengrass:GetDeviceDefinition",
        "greengrass:GetDeviceDefinitionVersion",
        "greengrass:GetFunctionDefinition",
        "greengrass:GetFunctionDefinitionVersion",
        "greengrass:GetGroup",
        "greengrass:GetGroupCertificateAuthority",
        "greengrass:GetGroupCertificateConfiguration",
        "greengrass:GetGroupVersion",
        "greengrass:GetLoggerDefinition",
        "greengrass:GetLoggerDefinitionVersion",
        "greengrass:GetResourceDefinition",
        "greengrass:GetResourceDefinitionVersion",
        "greengrass:GetServiceRoleForAccount",
        "greengrass:GetSubscriptionDefinition",
        "greengrass:GetSubscriptionDefinitionVersion",
        "greengrass:ListBulkDeploymentDetailedReports",
        "greengrass:ListBulkDeployments",
        "greengrass:ListConnectorDefinitionVersions",
        "greengrass:ListConnectorDefinitions",
        "greengrass:ListCoreDefinitionVersions",
        "greengrass:ListCoreDefinitions",
        "greengrass:ListDeployments",
        "greengrass:ListDeviceDefinitionVersions",
        "greengrass:ListDeviceDefinitions",
        "greengrass:ListFunctionDefinitionVersions",
        "greengrass:ListFunctionDefinitions",
        "greengrass:ListGroupCertificateAuthorities",
        "greengrass:ListGroupVersions",
        "greengrass:ListGroups",
        "greengrass:ListLoggerDefinitionVersions",
        "greengrass:ListLoggerDefinitions",
        "greengrass:ListResourceDefinitionVersions",
        "greengrass:ListResourceDefinitions",
        "greengrass:ListSubscriptionDefinitionVersions",
        "greengrass:ListSubscriptionDefinitions",
        "greengrass:ListTagsForResource",
        "guardduty:GetDetector",
        "guardduty:GetFilter",
        "guardduty:GetFindings",
        "guardduty:GetFindingsStatistics",
        "guardduty:GetIPSet",
        "guardduty:GetInvitationsCount",
        "guardduty:GetMasterAccount",
        "guardduty:GetMembers",
        "guardduty:GetThreatIntelSet",
        "guardduty:ListDetectors",
        "guardduty:ListFilters",
        "guardduty:ListFindings",
        "guardduty:ListInvitations",
        "guardduty:ListMembers",
        "guardduty:ListOrganizationAdminAccounts",
        "guardduty:ListPublishingDestinations",
        "guardduty:ListTagsForResource",
        "guardduty:ListThreatIntelSets",
        "health:DescribeAffectedAccountsForOrganization",
        "health:DescribeAffectedEntities",
        "health:DescribeAffectedEntitiesForOrganization",
        "health:DescribeEntityAggregates",
        "health:DescribeEventAggregates",
        "health:DescribeEventDetails",
        "health:DescribeEventDetailsForOrganization",
        "health:DescribeEventTypes",
        "health:DescribeEvents",
        "health:DescribeEventsForOrganization",
        "health:DescribeHealthServiceStatusForOrganization",
        "health:List*",
        "iam:GenerateCredentialReport",
        "iam:GenerateOrganizationsAccessReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetContextKeysForCustomPolicy",
        "iam:GetContextKeysForPrincipalPolicy",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetInstanceProfile",
        "iam:GetLoginProfile",
        "iam:GetOpenIDConnectProvider",
        "iam:GetOrganizationsAccessReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:GetServerCertificate",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetServiceLinkedRoleDeletionStatus",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfiles",
        "iam:ListInstanceProfilesForRole",
        "iam:ListMFADevices",
        "iam:ListOpenIDConnectProviders",
        "iam:ListPolicies",
        "iam:ListPoliciesGrantingServiceAccess",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoleTags",
        "iam:ListRoles",
        "iam:ListSAMLProviders",
        "iam:ListSSHPublicKeys",
        "iam:ListServerCertificates",
        "iam:ListServiceSpecificCredentials",
        "iam:ListSigningCertificates",
        "iam:ListUserPolicies",
        "iam:ListUserTags",
        "iam:ListUsers",
        "iam:ListVirtualMFADevices",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy",
        "imagebuilder:GetComponent",
        "imagebuilder:GetComponentPolicy",
        "imagebuilder:GetDistributionConfiguration",
        "imagebuilder:GetImage",
        "imagebuilder:GetImagePipeline",
        "imagebuilder:GetImagePolicy",
        "imagebuilder:GetImageRecipe",
        "imagebuilder:GetImageRecipePolicy",
        "imagebuilder:GetInfrastructureConfiguration",
        "imagebuilder:ListComponentBuildVersions",
        "imagebuilder:ListComponents",
        "imagebuilder:ListDistributionConfigurations",
        "imagebuilder:ListImageBuildVersions",
        "imagebuilder:ListImagePipelines",
        "imagebuilder:ListImageRecipes",
        "imagebuilder:ListImages",
        "imagebuilder:ListInfrastructureConfigurations",
        "imagebuilder:ListTagsForResource",
        "importexport:GetShippingLabel",
        "importexport:GetStatus",
        "importexport:ListJobs",
        "inspector:DescribeAssessmentRuns",
        "inspector:DescribeAssessmentTargets",
        "inspector:DescribeAssessmentTemplates",
        "inspector:DescribeCrossAccountAccessRole",
        "inspector:DescribeFindings",
        "inspector:DescribeResourceGroups",
        "inspector:DescribeRulesPackages",
        "inspector:GetTelemetryMetadata",
        "inspector:ListAssessmentRunAgents",
        "inspector:ListAssessmentRuns",
        "inspector:ListAssessmentTargets",
        "inspector:ListAssessmentTemplates",
        "inspector:ListEventSubscriptions",
        "inspector:ListFindings",
        "inspector:ListRulesPackages",
        "inspector:ListTagsForResource",
        "inspector:PreviewAgents",
        "iot:DescribeAccountAuditConfiguration",
        "iot:DescribeAuditMitigationActionsTask",
        "iot:DescribeAuditTask",
        "iot:DescribeAuthorizer",
        "iot:DescribeBillingGroup",
        "iot:DescribeCACertificate",
        "iot:DescribeCertificate",
        "iot:DescribeDefaultAuthorizer",
        "iot:DescribeDimension",
        "iot:DescribeEndpoint",
        "iot:DescribeEventConfigurations",
        "iot:DescribeIndex",
        "iot:DescribeJob",
        "iot:DescribeJobExecution",
        "iot:DescribeMitigationAction",
        "iot:DescribeProvisioningTemplate",
        "iot:DescribeProvisioningTemplateVersion",
        "iot:DescribeRoleAlias",
        "iot:DescribeScheduledAudit",
        "iot:DescribeSecurityProfile",
        "iot:DescribeStream",
        "iot:DescribeThing",
        "iot:DescribeThingGroup",
        "iot:DescribeThingRegistrationTask",
        "iot:DescribeThingType",
        "iot:DescribeTunnel",
        "iot:GetCardinality",
        "iot:GetEffectivePolicies",
        "iot:GetIndexingConfiguration",
        "iot:GetJobDocument",
        "iot:GetLoggingOptions",
        "iot:GetOTAUpdate",
        "iot:GetPendingJobExecutions",
        "iot:GetPercentiles",
        "iot:GetPolicy",
        "iot:GetPolicyVersion",
        "iot:GetRegistrationCode",
        "iot:GetStatistics",
        "iot:GetThingShadow",
        "iot:GetTopicRule",
        "iot:GetV2LoggingOptions",
        "iot:ListActiveViolations",
        "iot:ListAttachedPolicies",
        "iot:ListAuditFindings",
        "iot:ListAuditMitigationActionsExecutions",
        "iot:ListAuditMitigationActionsTasks",
        "iot:ListAuditTasks",
        "iot:ListAuthorizers",
        "iot:ListBillingGroups",
        "iot:ListCACertificates",
        "iot:ListCertificates",
        "iot:ListCertificatesByCA",
        "iot:ListDimensions",
        "iot:ListIndices",
        "iot:ListJobExecutionsForJob",
        "iot:ListJobExecutionsForThing",
        "iot:ListJobs",
        "iot:ListMitigationActions",
        "iot:ListNamedShadowsForThing",
        "iot:ListOTAUpdates",
        "iot:ListOutgoingCertificates",
        "iot:ListPolicies",
        "iot:ListPolicyPrincipals",
        "iot:ListPolicyVersions",
        "iot:ListPrincipalPolicies",
        "iot:ListPrincipalThings",
        "iot:ListProvisioningTemplateVersions",
        "iot:ListProvisioningTemplates",
        "iot:ListRoleAliases",
        "iot:ListScheduledAudits",
        "iot:ListSecurityProfiles",
        "iot:ListSecurityProfilesForTarget",
        "iot:ListStreams",
        "iot:ListTagsForResource",
        "iot:ListTargetsForPolicy",
        "iot:ListTargetsForSecurityProfile",
        "iot:ListThingGroups",
        "iot:ListThingGroupsForThing",
        "iot:ListThingPrincipals",
        "iot:ListThingRegistrationTaskReports",
        "iot:ListThingRegistrationTasks",
        "iot:ListThingTypes",
        "iot:ListThings",
        "iot:ListThingsInBillingGroup",
        "iot:ListThingsInThingGroup",
        "iot:ListTopicRules",
        "iot:ListTunnels",
        "iot:ListV2LoggingLevels",
        "iot:ListViolationEvents",
        "iotanalytics:DescribeChannel",
        "iotanalytics:DescribeDataset",
        "iotanalytics:DescribeDatastore",
        "iotanalytics:DescribeLoggingOptions",
        "iotanalytics:DescribePipeline",
        "iotanalytics:GetDatasetContent",
        "iotanalytics:ListChannels",
        "iotanalytics:ListDatasets",
        "iotanalytics:ListDatastores",
        "iotanalytics:ListPipelines",
        "iotanalytics:ListTagsForResource",
        "iotanalytics:SampleChannelData",
        "kafka:DescribeCluster",
        "kafka:DescribeClusterOperation",
        "kafka:DescribeConfiguration",
        "kafka:DescribeConfigurationRevision",
        "kafka:GetBootstrapBrokers",
        "kafka:GetCompatibleKafkaVersions",
        "kafka:ListClusterOperations",
        "kafka:ListClusters",
        "kafka:ListConfigurations",
        "kafka:ListNodes",
        "kafka:ListTagsForResource",
        "kinesis:DescribeLimits",
        "kinesis:DescribeStream",
        "kinesis:DescribeStreamConsumer",
        "kinesis:DescribeStreamSummary",
        "kinesis:GetRecords",
        "kinesis:GetShardIterator",
        "kinesis:ListShards",
        "kinesis:ListStreamConsumers",
        "kinesis:ListStreams",
        "kinesis:ListTagsForStream",
        "kinesisanalytics:DescribeApplication",
        "kinesisanalytics:DescribeApplicationSnapshot",
        "kinesisanalytics:DiscoverInputSchema",
        "kinesisanalytics:GetApplicationState",
        "kinesisanalytics:ListApplicationSnapshots",
        "kinesisanalytics:ListApplications",
        "kinesisanalytics:ListTagsForResource",
        "kinesisvideo:DescribeSignalingChannel",
        "kinesisvideo:DescribeStream",
        "kinesisvideo:GetClip",
        "kinesisvideo:GetDASHStreamingSessionURL",
        "kinesisvideo:GetDataEndpoint",
        "kinesisvideo:GetHLSStreamingSessionURL",
        "kinesisvideo:GetIceServerConfig",
        "kinesisvideo:GetMedia",
        "kinesisvideo:GetMediaForFragmentList",
        "kinesisvideo:GetSignalingChannelEndpoint",
        "kinesisvideo:ListFragments",
        "kinesisvideo:ListSignalingChannels",
        "kinesisvideo:ListStreams",
        "kinesisvideo:ListTagsForResource",
        "kinesisvideo:ListTagsForStream",
        "kms:DescribeCustomKeyStores",
        "kms:DescribeKey",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:GetParametersForImport",
        "kms:GetPublicKey",
        "kms:ListAliases",
        "kms:ListGrants",
        "kms:ListKeyPolicies",
        "kms:ListKeys",
        "kms:ListResourceTags",
        "kms:ListRetirableGrants",
        "lambda:GetAccountSettings",
        "lambda:GetAlias",
        "lambda:GetEventSourceMapping",
        "lambda:GetFunction",
        "lambda:GetFunctionConcurrency",
        "lambda:GetFunctionConfiguration",
        "lambda:GetFunctionEventInvokeConfig",
        "lambda:GetLayerVersion",
        "lambda:GetLayerVersionByArn",
        "lambda:GetLayerVersionPolicy",
        "lambda:GetPolicy",
        "lambda:GetProvisionedConcurrencyConfig",
        "lambda:ListAliases",
        "lambda:ListEventSourceMappings",
        "lambda:ListFunctionEventInvokeConfigs",
        "lambda:ListFunctions",
        "lambda:ListLayerVersions",
        "lambda:ListLayers",
        "lambda:ListProvisionedConcurrencyConfigs",
        "lambda:ListTags",
        "lambda:ListVersionsByFunction",
        "lex:GetBot",
        "lex:GetBotAlias",
        "lex:GetBotAliases",
        "lex:GetBotChannelAssociation",
        "lex:GetBotChannelAssociations",
        "lex:GetBotVersions",
        "lex:GetBots",
        "lex:GetBuiltinIntent",
        "lex:GetBuiltinIntents",
        "lex:GetBuiltinSlotTypes",
        "lex:GetExport",
        "lex:GetImport",
        "lex:GetIntent",
        "lex:GetIntentVersions",
        "lex:GetIntents",
        "lex:GetSession",
        "lex:GetSlotType",
        "lex:GetSlotTypeVersions",
        "lex:GetSlotTypes",
        "lex:GetUtterancesView",
        "lightsail:GetActiveNames",
        "lightsail:GetBlueprints",
        "lightsail:GetBundles",
        "lightsail:GetCloudFormationStackRecords",
        "lightsail:GetDisk",
        "lightsail:GetDiskSnapshot",
        "lightsail:GetDiskSnapshots",
        "lightsail:GetDisks",
        "lightsail:GetDomain",
        "lightsail:GetDomains",
        "lightsail:GetExportSnapshotRecords",
        "lightsail:GetInstance",
        "lightsail:GetInstanceMetricData",
        "lightsail:GetInstancePortStates",
        "lightsail:GetInstanceSnapshot",
        "lightsail:GetInstanceSnapshots",
        "lightsail:GetInstanceState",
        "lightsail:GetInstances",
        "lightsail:GetKeyPair",
        "lightsail:GetKeyPairs",
        "lightsail:GetLoadBalancer",
        "lightsail:GetLoadBalancerMetricData",
        "lightsail:GetLoadBalancerTlsCertificates",
        "lightsail:GetLoadBalancers",
        "lightsail:GetOperation",
        "lightsail:GetOperations",
        "lightsail:GetOperationsForResource",
        "lightsail:GetRegions",
        "lightsail:GetRelationalDatabase",
        "lightsail:GetRelationalDatabaseBlueprints",
        "lightsail:GetRelationalDatabaseBundles",
        "lightsail:GetRelationalDatabaseEvents",
        "lightsail:GetRelationalDatabaseLogEvents",
        "lightsail:GetRelationalDatabaseLogStreams",
        "lightsail:GetRelationalDatabaseMetricData",
        "lightsail:GetRelationalDatabaseParameters",
        "lightsail:GetRelationalDatabaseSnapshot",
        "lightsail:GetRelationalDatabaseSnapshots",
        "lightsail:GetRelationalDatabases",
        "lightsail:GetStaticIp",
        "lightsail:GetStaticIps",
        "lightsail:IsVpcPeered",
        "logs:DescribeDestinations",
        "logs:DescribeExportTasks",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeMetricFilters",
        "logs:DescribeQueries",
        "logs:DescribeResourcePolicies",
        "logs:DescribeSubscriptionFilters",
        "logs:FilterLogEvents",
        "logs:GetLogDelivery",
        "logs:GetLogEvents",
        "logs:GetLogGroupFields",
        "logs:GetLogRecord",
        "logs:GetQueryResults",
        "logs:ListTagsLogGroup",
        "logs:StartQuery",
        "logs:TestMetricFilter",
        "machinelearning:DescribeBatchPredictions",
        "machinelearning:DescribeDataSources",
        "machinelearning:DescribeEvaluations",
        "machinelearning:DescribeMLModels",
        "machinelearning:DescribeTags",
        "machinelearning:GetBatchPrediction",
        "machinelearning:GetDataSource",
        "machinelearning:GetEvaluation",
        "machinelearning:GetMLModel",
        "mediaconvert:DescribeEndpoints",
        "mediaconvert:GetJob",
        "mediaconvert:GetJobTemplate",
        "mediaconvert:GetPreset",
        "mediaconvert:GetQueue",
        "mediaconvert:ListJobTemplates",
        "mediaconvert:ListJobs",
        "mediaconvert:ListPresets",
        "mediaconvert:ListQueues",
        "mediaconvert:ListTagsForResource",
        "mediapackage:DescribeChannel",
        "mediapackage:DescribeOriginEndpoint",
        "mediapackage:ListChannels",
        "mediapackage:ListOriginEndpoints",
        "mediapackage:ListTagsForResource",
        "mgh:DescribeApplicationState",
        "mgh:DescribeHomeRegionControls",
        "mgh:DescribeMigrationTask",
        "mgh:GetHomeRegion",
        "mgh:ListCreatedArtifacts",
        "mgh:ListDiscoveredResources",
        "mgh:ListMigrationTasks",
        "mgh:ListProgressUpdateStreams",
        "mobileanalytics:GetFinancialReports",
        "mobileanalytics:GetReports",
        "mobilehub:DescribeBundle",
        "mobilehub:ExportBundle",
        "mobilehub:ExportProject",
        "mobilehub:GenerateProjectParameters",
        "mobilehub:GetProject",
        "mobilehub:GetProjectSnapshot",
        "mobilehub:ListAvailableConnectors",
        "mobilehub:ListAvailableFeatures",
        "mobilehub:ListAvailableRegions",
        "mobilehub:ListBundles",
        "mobilehub:ListProjectSnapshots",
        "mobilehub:ListProjects",
        "mobilehub:ValidateProject",
        "mobilehub:VerifyServiceRole",
        "mobiletargeting:GetAdmChannel",
        "mobiletargeting:GetApnsChannel",
        "mobiletargeting:GetApnsSandboxChannel",
        "mobiletargeting:GetApnsVoipChannel",
        "mobiletargeting:GetApnsVoipSandboxChannel",
        "mobiletargeting:GetApp",
        "mobiletargeting:GetApplicationSettings",
        "mobiletargeting:GetApps",
        "mobiletargeting:GetBaiduChannel",
        "mobiletargeting:GetCampaign",
        "mobiletargeting:GetCampaignActivities",
        "mobiletargeting:GetCampaignVersion",
        "mobiletargeting:GetCampaignVersions",
        "mobiletargeting:GetCampaigns",
        "mobiletargeting:GetChannels",
        "mobiletargeting:GetEmailChannel",
        "mobiletargeting:GetEmailTemplate",
        "mobiletargeting:GetEndpoint",
        "mobiletargeting:GetEventStream",
        "mobiletargeting:GetExportJob",
        "mobiletargeting:GetExportJobs",
        "mobiletargeting:GetGcmChannel",
        "mobiletargeting:GetImportJob",
        "mobiletargeting:GetImportJobs",
        "mobiletargeting:GetJourney",
        "mobiletargeting:GetPushTemplate",
        "mobiletargeting:GetRecommenderConfiguration",
        "mobiletargeting:GetRecommenderConfigurations",
        "mobiletargeting:GetSegment",
        "mobiletargeting:GetSegmentExportJobs",
        "mobiletargeting:GetSegmentImportJobs",
        "mobiletargeting:GetSegmentVersion",
        "mobiletargeting:GetSegmentVersions",
        "mobiletargeting:GetSegments",
        "mobiletargeting:GetSmsChannel",
        "mobiletargeting:GetSmsTemplate",
        "mobiletargeting:GetUserEndpoints",
        "mobiletargeting:GetVoiceChannel",
        "mobiletargeting:GetVoiceTemplate",
        "mobiletargeting:ListJourneys",
        "mobiletargeting:ListTagsForResource",
        "mobiletargeting:ListTemplateVersions",
        "mobiletargeting:ListTemplates",
        "mq:DescribeBroker",
        "mq:DescribeBrokerEngineTypes",
        "mq:DescribeBrokerInstanceOptions",
        "mq:DescribeConfiguration",
        "mq:DescribeConfigurationRevision",
        "mq:DescribeUser",
        "mq:ListBrokers",
        "mq:ListConfigurationRevisions",
        "mq:ListConfigurations",
        "mq:ListTags",
        "mq:ListUsers",
        "opsworks-cm:DescribeAccountAttributes",
        "opsworks-cm:DescribeBackups",
        "opsworks-cm:DescribeEvents",
        "opsworks-cm:DescribeNodeAssociationStatus",
        "opsworks-cm:DescribeServers",
        "opsworks:DescribeAgentVersions",
        "opsworks:DescribeApps",
        "opsworks:DescribeCommands",
        "opsworks:DescribeDeployments",
        "opsworks:DescribeEcsClusters",
        "opsworks:DescribeElasticIps",
        "opsworks:DescribeElasticLoadBalancers",
        "opsworks:DescribeInstances",
        "opsworks:DescribeLayers",
        "opsworks:DescribeLoadBasedAutoScaling",
        "opsworks:DescribeMyUserProfile",
        "opsworks:DescribePermissions",
        "opsworks:DescribeRaidArrays",
        "opsworks:DescribeRdsDbInstances",
        "opsworks:DescribeServiceErrors",
        "opsworks:DescribeStackProvisioningParameters",
        "opsworks:DescribeStackSummary",
        "opsworks:DescribeStacks",
        "opsworks:DescribeTimeBasedAutoScaling",
        "opsworks:DescribeUserProfiles",
        "opsworks:DescribeVolumes",
        "opsworks:GetHostnameSuggestion",
        "organizations:DescribeAccount",
        "organizations:DescribeCreateAccountStatus",
        "organizations:DescribeEffectivePolicy",
        "organizations:DescribeHandshake",
        "organizations:DescribeOrganization",
        "organizations:DescribeOrganizationalUnit",
        "organizations:DescribePolicy",
        "organizations:ListAWSServiceAccessForOrganization",
        "organizations:ListAccounts",
        "organizations:ListAccountsForParent",
        "organizations:ListChildren",
        "organizations:ListCreateAccountStatus",
        "organizations:ListDelegatedAdministrators",
        "organizations:ListDelegatedServicesForAccount",
        "organizations:ListHandshakesForAccount",
        "organizations:ListHandshakesForOrganization",
        "organizations:ListOrganizationalUnitsForParent",
        "organizations:ListParents",
        "organizations:ListPolicies",
        "organizations:ListPoliciesForTarget",
        "organizations:ListRoots",
        "organizations:ListTagsForResource",
        "organizations:ListTargetsForPolicy",
        "outposts:GetOutpost",
        "outposts:GetOutpostInstanceTypes",
        "outposts:ListOutposts",
        "outposts:ListSites",
        "personalize:DescribeAlgorithm",
        "personalize:DescribeCampaign",
        "personalize:DescribeDataset",
        "personalize:DescribeDatasetGroup",
        "personalize:DescribeDatasetImportJob",
        "personalize:DescribeEventTracker",
        "personalize:DescribeFeatureTransformation",
        "personalize:DescribeRecipe",
        "personalize:DescribeSchema",
        "personalize:DescribeSolution",
        "personalize:DescribeSolutionVersion",
        "personalize:GetPersonalizedRanking",
        "personalize:GetRecommendations",
        "personalize:GetSolutionMetrics",
        "personalize:ListCampaigns",
        "personalize:ListDatasetGroups",
        "personalize:ListDatasetImportJobs",
        "personalize:ListDatasets",
        "personalize:ListEventTrackers",
        "personalize:ListRecipes",
        "personalize:ListSchemas",
        "personalize:ListSolutionVersions",
        "personalize:ListSolutions",
        "pi:DescribeDimensionKeys",
        "pi:GetResourceMetrics",
        "polly:DescribeVoices",
        "polly:GetLexicon",
        "polly:GetSpeechSynthesisTask",
        "polly:ListLexicons",
        "polly:ListSpeechSynthesisTasks",
        "polly:SynthesizeSpeech",
        "qldb:DescribeJournalS3Export",
        "qldb:DescribeLedger",
        "qldb:GetBlock",
        "qldb:GetDigest",
        "qldb:GetRevision",
        "qldb:ListJournalS3Exports",
        "qldb:ListJournalS3ExportsForLedger",
        "qldb:ListLedgers",
        "qldb:ListTagsForResource",
        "ram:GetPermission",
        "ram:GetResourcePolicies",
        "ram:GetResourceShareAssociations",
        "ram:GetResourceShareInvitations",
        "ram:GetResourceShares",
        "ram:ListPendingInvitationResources",
        "ram:ListPermissions",
        "ram:ListPrincipals",
        "ram:ListResourceSharePermissions",
        "ram:ListResources",
        "rds:DescribeAccountAttributes",
        "rds:DescribeCertificates",
        "rds:DescribeDBClusterBacktracks",
        "rds:DescribeDBClusterEndpoints",
        "rds:DescribeDBClusterParameterGroups",
        "rds:DescribeDBClusterParameters",
        "rds:DescribeDBClusterSnapshotAttributes",
        "rds:DescribeDBClusterSnapshots",
        "rds:DescribeDBClusters",
        "rds:DescribeDBEngineVersions",
        "rds:DescribeDBInstanceAutomatedBackups",
        "rds:DescribeDBInstances",
        "rds:DescribeDBLogFiles",
        "rds:DescribeDBParameterGroups",
        "rds:DescribeDBParameters",
        "rds:DescribeDBProxies",
        "rds:DescribeDBProxyTargetGroups",
        "rds:DescribeDBProxyTargets",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshotAttributes",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEngineDefaultClusterParameters",
        "rds:DescribeEngineDefaultParameters",
        "rds:DescribeEventCategories",
        "rds:DescribeEventSubscriptions",
        "rds:DescribeEvents",
        "rds:DescribeExportTasks",
        "rds:DescribeGlobalClusters",
        "rds:DescribeOptionGroupOptions",
        "rds:DescribeOptionGroups",
        "rds:DescribeOrderableDBInstanceOptions",
        "rds:DescribePendingMaintenanceActions",
        "rds:DescribeReservedDBInstances",
        "rds:DescribeReservedDBInstancesOfferings",
        "rds:DescribeSourceRegions",
        "rds:DescribeValidDBInstanceModifications",
        "rds:DownloadCompleteDBLogFile",
        "rds:DownloadDBLogFilePortion",
        "rds:ListTagsForResource",
        "redshift:DescribeAccountAttributes",
        "redshift:DescribeClusterDbRevisions",
        "redshift:DescribeClusterParameterGroups",
        "redshift:DescribeClusterParameters",
        "redshift:DescribeClusterSecurityGroups",
        "redshift:DescribeClusterSnapshots",
        "redshift:DescribeClusterSubnetGroups",
        "redshift:DescribeClusterTracks",
        "redshift:DescribeClusterVersions",
        "redshift:DescribeClusters",
        "redshift:DescribeDefaultClusterParameters",
        "redshift:DescribeEventCategories",
        "redshift:DescribeEventSubscriptions",
        "redshift:DescribeEvents",
        "redshift:DescribeHsmClientCertificates",
        "redshift:DescribeHsmConfigurations",
        "redshift:DescribeLoggingStatus",
        "redshift:DescribeNodeConfigurationOptions",
        "redshift:DescribeOrderableClusterOptions",
        "redshift:DescribeQuery",
        "redshift:DescribeReservedNodeOfferings",
        "redshift:DescribeReservedNodes",
        "redshift:DescribeResize",
        "redshift:DescribeSavedQueries",
        "redshift:DescribeScheduledActions",
        "redshift:DescribeSnapshotCopyGrants",
        "redshift:DescribeSnapshotSchedules",
        "redshift:DescribeStorage",
        "redshift:DescribeTable",
        "redshift:DescribeTableRestoreStatus",
        "redshift:DescribeTags",
        "redshift:GetReservedNodeExchangeOfferings",
        "redshift:ViewQueriesFromConsole",
        "redshift:ViewQueriesInConsole",
        "rekognition:CompareFaces",
        "rekognition:DetectCustomLabels",
        "rekognition:DetectFaces",
        "rekognition:DetectLabels",
        "rekognition:DetectModerationLabels",
        "rekognition:DetectText",
        "rekognition:ListCollections",
        "rekognition:ListFaces",
        "rekognition:ListStreamProcessors",
        "rekognition:SearchFaces",
        "rekognition:SearchFacesByImage",
        "resource-groups:GetGroup",
        "resource-groups:GetGroupQuery",
        "resource-groups:GetTags",
        "resource-groups:ListGroupResources",
        "resource-groups:ListGroups",
        "resource-groups:SearchResources",
        "robomaker:BatchDescribeSimulationJob",
        "robomaker:DescribeDeploymentJob",
        "robomaker:DescribeFleet",
        "robomaker:DescribeRobot",
        "robomaker:DescribeRobotApplication",
        "robomaker:DescribeSimulationApplication",
        "robomaker:DescribeSimulationJob",
        "robomaker:DescribeSimulationJobBatch",
        "robomaker:ListDeploymentJobs",
        "robomaker:ListFleets",
        "robomaker:ListRobotApplications",
        "robomaker:ListRobots",
        "robomaker:ListSimulationApplications",
        "robomaker:ListSimulationJobBatches",
        "robomaker:ListSimulationJobs",
        "robomaker:ListTagsForResource",
        "route53:GetAccountLimit",
        "route53:GetChange",
        "route53:GetCheckerIpRanges",
        "route53:GetGeoLocation",
        "route53:GetHealthCheck",
        "route53:GetHealthCheckCount",
        "route53:GetHealthCheckLastFailureReason",
        "route53:GetHealthCheckStatus",
        "route53:GetHostedZone",
        "route53:GetHostedZoneCount",
        "route53:GetHostedZoneLimit",
        "route53:GetQueryLoggingConfig",
        "route53:GetReusableDelegationSet",
        "route53:GetReusableDelegationSetLimit",
        "route53:GetTrafficPolicy",
        "route53:GetTrafficPolicyInstance",
        "route53:GetTrafficPolicyInstanceCount",
        "route53:ListGeoLocations",
        "route53:ListHealthChecks",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ListQueryLoggingConfigs",
        "route53:ListResourceRecordSets",
        "route53:ListReusableDelegationSets",
        "route53:ListTagsForResource",
        "route53:ListTagsForResources",
        "route53:ListTrafficPolicies",
        "route53:ListTrafficPolicyInstances",
        "route53:ListTrafficPolicyInstancesByHostedZone",
        "route53:ListTrafficPolicyInstancesByPolicy",
        "route53:ListTrafficPolicyVersions",
        "route53:ListVPCAssociationAuthorizations",
        "route53:TestDNSAnswer",
        "route53domains:CheckDomainAvailability",
        "route53domains:GetContactReachabilityStatus",
        "route53domains:GetDomainDetail",
        "route53domains:GetDomainSuggestions",
        "route53domains:GetOperationDetail",
        "route53domains:ListDomains",
        "route53domains:ListOperations",
        "route53domains:ListTagsForDomain",
        "route53domains:ViewBilling",
        "route53resolver:GetResolverEndpoint",
        "route53resolver:GetResolverRule",
        "route53resolver:GetResolverRuleAssociation",
        "route53resolver:GetResolverRulePolicy",
        "route53resolver:ListResolverEndpointIpAddresses",
        "route53resolver:ListResolverEndpoints",
        "route53resolver:ListResolverRuleAssociations",
        "route53resolver:ListResolverRules",
        "route53resolver:ListTagsForResource",
        "s3:GetAccelerateConfiguration",
        "s3:GetAccessPoint",
        "s3:GetAccessPointPolicy",
        "s3:GetAccessPointPolicyStatus",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectLegalHold",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetObjectTorrent",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionForReplication",
        "s3:GetObjectVersionTagging",
        "s3:GetObjectVersionTorrent",
        "s3:GetReplicationConfiguration",
        "s3:ListAccessPoints",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:ListBucketMultipartUploads",
        "s3:ListBucketVersions",
        "s3:ListJobs",
        "s3:ListMultipartUploadParts",
        "sagemaker:DescribeAlgorithm",
        "sagemaker:DescribeApp",
        "sagemaker:DescribeAutoMLJob",
        "sagemaker:DescribeCodeRepository",
        "sagemaker:DescribeCompilationJob",
        "sagemaker:DescribeDomain",
        "sagemaker:DescribeEndpoint",
        "sagemaker:DescribeEndpointConfig",
        "sagemaker:DescribeExperiment",
        "sagemaker:DescribeFlowDefinition",
        "sagemaker:DescribeHumanLoop",
        "sagemaker:DescribeHumanTaskUi",
        "sagemaker:DescribeHyperParameterTuningJob",
        "sagemaker:DescribeLabelingJob",
        "sagemaker:DescribeModel",
        "sagemaker:DescribeModelPackage",
        "sagemaker:DescribeMonitoringSchedule",
        "sagemaker:DescribeNotebookInstance",
        "sagemaker:DescribeNotebookInstanceLifecycleConfig",
        "sagemaker:DescribeProcessingJob",
        "sagemaker:DescribeSubscribedWorkteam",
        "sagemaker:DescribeTrainingJob",
        "sagemaker:DescribeTransformJob",
        "sagemaker:DescribeTrial",
        "sagemaker:DescribeTrialComponent",
        "sagemaker:DescribeUserProfile",
        "sagemaker:DescribeWorkforce",
        "sagemaker:DescribeWorkteam",
        "sagemaker:GetSearchSuggestions",
        "sagemaker:ListAlgorithms",
        "sagemaker:ListApps",
        "sagemaker:ListAutoMLJobs",
        "sagemaker:ListCandidatesForAutoMLJob",
        "sagemaker:ListCodeRepositories",
        "sagemaker:ListCompilationJobs",
        "sagemaker:ListDomains",
        "sagemaker:ListEndpointConfigs",
        "sagemaker:ListEndpoints",
        "sagemaker:ListExperiments",
        "sagemaker:ListFlowDefinitions",
        "sagemaker:ListHumanLoops",
        "sagemaker:ListHumanTaskUis",
        "sagemaker:ListHyperParameterTuningJobs",
        "sagemaker:ListLabelingJobs",
        "sagemaker:ListLabelingJobsForWorkteam",
        "sagemaker:ListModelPackages",
        "sagemaker:ListModels",
        "sagemaker:ListMonitoringExecutions",
        "sagemaker:ListMonitoringSchedules",
        "sagemaker:ListNotebookInstanceLifecycleConfigs",
        "sagemaker:ListNotebookInstances",
        "sagemaker:ListProcessingJobs",
        "sagemaker:ListSubscribedWorkteams",
        "sagemaker:ListTags",
        "sagemaker:ListTrainingJobs",
        "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
        "sagemaker:ListTransformJobs",
        "sagemaker:ListTrialComponents",
        "sagemaker:ListTrials",
        "sagemaker:ListUserProfiles",
        "sagemaker:ListWorkteams",
        "sagemaker:Search",
        "schemas:DescribeCodeBinding",
        "schemas:DescribeDiscoverer",
        "schemas:DescribeRegistry",
        "schemas:DescribeSchema",
        "schemas:GetCodeBindingSource",
        "schemas:GetDiscoveredSchema",
        "schemas:GetResourcePolicy",
        "schemas:ListDiscoverers",
        "schemas:ListRegistries",
        "schemas:ListSchemaVersions",
        "schemas:ListSchemas",
        "schemas:ListTagsForResource",
        "schemas:SearchSchemas",
        "sdb:GetAttributes",
        "sdb:ListDomains",
        "sdb:Select",
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetResourcePolicy",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:ListSecrets",
        "securityhub:DescribeActionTargets",
        "securityhub:DescribeHub",
        "securityhub:DescribeProducts",
        "securityhub:DescribeStandards",
        "securityhub:DescribeStandardsControls",
        "securityhub:GetEnabledStandards",
        "securityhub:GetFindings",
        "securityhub:GetInsightResults",
        "securityhub:GetInsights",
        "securityhub:GetInvitationsCount",
        "securityhub:GetMasterAccount",
        "securityhub:GetMembers",
        "securityhub:ListEnabledProductsForImport",
        "securityhub:ListInvitations",
        "securityhub:ListMembers",
        "securityhub:ListTagsForResource",
        "serverlessrepo:GetApplication",
        "serverlessrepo:GetApplicationPolicy",
        "serverlessrepo:GetCloudFormationTemplate",
        "serverlessrepo:ListApplicationDependencies",
        "serverlessrepo:ListApplicationVersions",
        "serverlessrepo:ListApplications",
        "serverlessrepo:SearchApplications",
        "servicecatalog:DescribeConstraint",
        "servicecatalog:DescribeCopyProductStatus",
        "servicecatalog:DescribePortfolio",
        "servicecatalog:DescribePortfolioShareStatus",
        "servicecatalog:DescribeProduct",
        "servicecatalog:DescribeProductAsAdmin",
        "servicecatalog:DescribeProductView",
        "servicecatalog:DescribeProvisionedProduct",
        "servicecatalog:DescribeProvisionedProductPlan",
        "servicecatalog:DescribeProvisioningArtifact",
        "servicecatalog:DescribeProvisioningParameters",
        "servicecatalog:DescribeRecord",
        "servicecatalog:DescribeServiceAction",
        "servicecatalog:DescribeServiceActionExecutionParameters",
        "servicecatalog:DescribeTagOption",
        "servicecatalog:ListAcceptedPortfolioShares",
        "servicecatalog:ListBudgetsForResource",
        "servicecatalog:ListConstraintsForPortfolio",
        "servicecatalog:ListLaunchPaths",
        "servicecatalog:ListOrganizationPortfolioAccess",
        "servicecatalog:ListPortfolioAccess",
        "servicecatalog:ListPortfolios",
        "servicecatalog:ListPortfoliosForProduct",
        "servicecatalog:ListPrincipalsForPortfolio",
        "servicecatalog:ListProvisionedProductPlans",
        "servicecatalog:ListProvisioningArtifacts",
        "servicecatalog:ListProvisioningArtifactsForServiceAction",
        "servicecatalog:ListRecordHistory",
        "servicecatalog:ListResourcesForTagOption",
        "servicecatalog:ListServiceActions",
        "servicecatalog:ListServiceActionsForProvisioningArtifact",
        "servicecatalog:ListStackInstancesForProvisionedProduct",
        "servicecatalog:ListTagOptions",
        "servicecatalog:ScanProvisionedProducts",
        "servicecatalog:SearchProducts",
        "servicecatalog:SearchProductsAsAdmin",
        "servicecatalog:SearchProvisionedProducts",
        "servicediscovery:GetInstance",
        "servicediscovery:GetInstancesHealthStatus",
        "servicediscovery:GetNamespace",
        "servicediscovery:GetOperation",
        "servicediscovery:GetService",
        "servicediscovery:ListInstances",
        "servicediscovery:ListNamespaces",
        "servicediscovery:ListOperations",
        "servicediscovery:ListServices",
        "servicediscovery:ListTagsForResource",
        "servicequotas:GetAWSDefaultServiceQuota",
        "servicequotas:GetAssociationForServiceQuotaTemplate",
        "servicequotas:GetRequestedServiceQuotaChange",
        "servicequotas:GetServiceQuota",
        "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
        "servicequotas:ListAWSDefaultServiceQuotas",
        "servicequotas:ListRequestedServiceQuotaChangeHistory",
        "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
        "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
        "servicequotas:ListServiceQuotas",
        "servicequotas:ListServices",
        "ses:DescribeActiveReceiptRuleSet",
        "ses:DescribeConfigurationSet",
        "ses:DescribeReceiptRule",
        "ses:DescribeReceiptRuleSet",
        "ses:GetAccount",
        "ses:GetAccountSendingEnabled",
        "ses:GetBlacklistReports",
        "ses:GetConfigurationSet",
        "ses:GetConfigurationSetEventDestinations",
        "ses:GetCustomVerificationEmailTemplate",
        "ses:GetDedicatedIp",
        "ses:GetDedicatedIps",
        "ses:GetDeliverabilityDashboardOptions",
        "ses:GetDeliverabilityTestReport",
        "ses:GetDomainStatisticsReport",
        "ses:GetEmailIdentity",
        "ses:GetIdentityDkimAttributes",
        "ses:GetIdentityMailFromDomainAttributes",
        "ses:GetIdentityNotificationAttributes",
        "ses:GetIdentityPolicies",
        "ses:GetIdentityVerificationAttributes",
        "ses:GetSendQuota",
        "ses:GetSendStatistics",
        "ses:GetTemplate",
        "ses:ListConfigurationSets",
        "ses:ListCustomVerificationEmailTemplates",
        "ses:ListDedicatedIpPools",
        "ses:ListDeliverabilityTestReports",
        "ses:ListEmailIdentities",
        "ses:ListIdentities",
        "ses:ListIdentityPolicies",
        "ses:ListReceiptFilters",
        "ses:ListReceiptRuleSets",
        "ses:ListTagsForResource",
        "ses:ListTemplates",
        "ses:ListVerifiedEmailAddresses",
        "shield:DescribeAttack",
        "shield:DescribeDRTAccess",
        "shield:DescribeEmergencyContactSettings",
        "shield:DescribeProtection",
        "shield:DescribeSubscription",
        "shield:GetSubscriptionState",
        "shield:ListAttacks",
        "shield:ListProtections",
        "snowball:DescribeAddress",
        "snowball:DescribeAddresses",
        "snowball:DescribeCluster",
        "snowball:DescribeJob",
        "snowball:GetJobManifest",
        "snowball:GetJobUnlockCode",
        "snowball:GetSnowballUsage",
        "snowball:ListClusterJobs",
        "snowball:ListClusters",
        "snowball:ListJobs",
        "sns:CheckIfPhoneNumberIsOptedOut",
        "sns:GetEndpointAttributes",
        "sns:GetPlatformApplicationAttributes",
        "sns:GetSMSAttributes",
        "sns:GetSubscriptionAttributes",
        "sns:GetTopicAttributes",
        "sns:ListEndpointsByPlatformApplication",
        "sns:ListPhoneNumbersOptedOut",
        "sns:ListPlatformApplications",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTagsForResource",
        "sns:ListTopics",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ListDeadLetterSourceQueues",
        "sqs:ListQueueTags",
        "sqs:ListQueues",
        "sqs:ReceiveMessage",
        "ssm:DescribeActivations",
        "ssm:DescribeAssociation",
        "ssm:DescribeAssociationExecutionTargets",
        "ssm:DescribeAssociationExecutions",
        "ssm:DescribeAutomationExecutions",
        "ssm:DescribeAutomationStepExecutions",
        "ssm:DescribeAvailablePatches",
        "ssm:DescribeDocument",
        "ssm:DescribeDocumentParameters",
        "ssm:DescribeDocumentPermission",
        "ssm:DescribeEffectiveInstanceAssociations",
        "ssm:DescribeEffectivePatchesForPatchBaseline",
        "ssm:DescribeInstanceAssociationsStatus",
        "ssm:DescribeInstanceInformation",
        "ssm:DescribeInstancePatchStates",
        "ssm:DescribeInstancePatchStatesForPatchGroup",
        "ssm:DescribeInstancePatches",
        "ssm:DescribeInstanceProperties",
        "ssm:DescribeInventoryDeletions",
        "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
        "ssm:DescribeMaintenanceWindowExecutionTasks",
        "ssm:DescribeMaintenanceWindowExecutions",
        "ssm:DescribeMaintenanceWindowSchedule",
        "ssm:DescribeMaintenanceWindowTargets",
        "ssm:DescribeMaintenanceWindowTasks",
        "ssm:DescribeMaintenanceWindows",
        "ssm:DescribeMaintenanceWindowsForTarget",
        "ssm:DescribeOpsItems",
        "ssm:DescribeParameters",
        "ssm:DescribePatchBaselines",
        "ssm:DescribePatchGroupState",
        "ssm:DescribePatchGroups",
        "ssm:DescribePatchProperties",
        "ssm:DescribeSessions",
        "ssm:GetAutomationExecution",
        "ssm:GetCommandInvocation",
        "ssm:GetConnectionStatus",
        "ssm:GetDefaultPatchBaseline",
        "ssm:GetDeployablePatchSnapshotForInstance",
        "ssm:GetDocument",
        "ssm:GetInventory",
        "ssm:GetInventorySchema",
        "ssm:GetMaintenanceWindow",
        "ssm:GetMaintenanceWindowExecution",
        "ssm:GetMaintenanceWindowExecutionTask",
        "ssm:GetMaintenanceWindowExecutionTaskInvocation",
        "ssm:GetMaintenanceWindowTask",
        "ssm:GetManifest",
        "ssm:GetOpsItem",
        "ssm:GetOpsSummary",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters",
        "ssm:GetParametersByPath",
        "ssm:GetPatchBaseline",
        "ssm:GetPatchBaselineForPatchGroup",
        "ssm:GetServiceSetting",
        "ssm:ListAssociationVersions",
        "ssm:ListAssociations",
        "ssm:ListCommandInvocations",
        "ssm:ListCommands",
        "ssm:ListComplianceItems",
        "ssm:ListComplianceSummaries",
        "ssm:ListDocumentVersions",
        "ssm:ListDocuments",
        "ssm:ListInstanceAssociations",
        "ssm:ListInventoryEntries",
        "ssm:ListResourceComplianceSummaries",
        "ssm:ListResourceDataSync",
        "ssm:ListTagsForResource",
        "states:DescribeActivity",
        "states:DescribeExecution",
        "states:DescribeStateMachine",
        "states:DescribeStateMachineForExecution",
        "states:GetExecutionHistory",
        "states:ListActivities",
        "states:ListExecutions",
        "states:ListStateMachines",
        "states:ListTagsForResource",
        "storagegateway:DescribeBandwidthRateLimit",
        "storagegateway:DescribeCache",
        "storagegateway:DescribeCachediSCSIVolumes",
        "storagegateway:DescribeChapCredentials",
        "storagegateway:DescribeGatewayInformation",
        "storagegateway:DescribeMaintenanceStartTime",
        "storagegateway:DescribeNFSFileShares",
        "storagegateway:DescribeSMBFileShares",
        "storagegateway:DescribeSMBSettings",
        "storagegateway:DescribeSnapshotSchedule",
        "storagegateway:DescribeStorediSCSIVolumes",
        "storagegateway:DescribeTapeArchives",
        "storagegateway:DescribeTapeRecoveryPoints",
        "storagegateway:DescribeTapes",
        "storagegateway:DescribeUploadBuffer",
        "storagegateway:DescribeVTLDevices",
        "storagegateway:DescribeWorkingStorage",
        "storagegateway:ListFileShares",
        "storagegateway:ListGateways",
        "storagegateway:ListLocalDisks",
        "storagegateway:ListTagsForResource",
        "storagegateway:ListTapes",
        "storagegateway:ListVolumeInitiators",
        "storagegateway:ListVolumeRecoveryPoints",
        "storagegateway:ListVolumes",
        "sts:GetAccessKeyInfo",
        "sts:GetCallerIdentity",
        "sts:GetFederationToken",
        "sts:GetServiceBearerToken",
        "sts:GetSessionToken",
        "swf:CountClosedWorkflowExecutions",
        "swf:CountOpenWorkflowExecutions",
        "swf:CountPendingActivityTasks",
        "swf:CountPendingDecisionTasks",
        "swf:DescribeActivityType",
        "swf:DescribeDomain",
        "swf:DescribeWorkflowExecution",
        "swf:DescribeWorkflowType",
        "swf:GetWorkflowExecutionHistory",
        "swf:ListActivityTypes",
        "swf:ListClosedWorkflowExecutions",
        "swf:ListDomains",
        "swf:ListOpenWorkflowExecutions",
        "swf:ListTagsForResource",
        "swf:ListWorkflowTypes",
        "synthetics:DescribeCanaries",
        "synthetics:DescribeCanariesLastRun",
        "synthetics:GetCanaryRuns",
        "tag:GetComplianceSummary",
        "tag:GetResources",
        "tag:GetTagKeys",
        "tag:GetTagValues",
        "transcribe:GetMedicalTranscriptionJob",
        "transcribe:GetMedicalVocabulary",
        "transcribe:GetTranscriptionJob",
        "transcribe:GetVocabulary",
        "transcribe:GetVocabularyFilter",
        "transcribe:ListMedicalTranscriptionJobs",
        "transcribe:ListMedicalVocabularies",
        "transcribe:ListTranscriptionJobs",
        "transcribe:ListVocabularies",
        "transcribe:ListVocabularyFilters",
        "transfer:DescribeServer",
        "transfer:DescribeUser",
        "transfer:ListServers",
        "transfer:ListTagsForResource",
        "transfer:ListUsers",
        "transfer:TestIdentityProvider",
        "trustedadvisor:DescribeAccount",
        "trustedadvisor:DescribeAccountAccess",
        "trustedadvisor:DescribeCheckItems",
        "trustedadvisor:DescribeCheckRefreshStatuses",
        "trustedadvisor:DescribeCheckSummaries",
        "trustedadvisor:DescribeChecks",
        "trustedadvisor:DescribeNotificationPreferences",
        "waf-regional:GetByteMatchSet",
        "waf-regional:GetChangeToken",
        "waf-regional:GetChangeTokenStatus",
        "waf-regional:GetGeoMatchSet",
        "waf-regional:GetIPSet",
        "waf-regional:GetLoggingConfiguration",
        "waf-regional:GetPermissionPolicy",
        "waf-regional:GetRateBasedRule",
        "waf-regional:GetRateBasedRuleManagedKeys",
        "waf-regional:GetRegexMatchSet",
        "waf-regional:GetRegexPatternSet",
        "waf-regional:GetRule",
        "waf-regional:GetRuleGroup",
        "waf-regional:GetSampledRequests",
        "waf-regional:GetSizeConstraintSet",
        "waf-regional:GetSqlInjectionMatchSet",
        "waf-regional:GetWebACL",
        "waf-regional:GetWebACLForResource",
        "waf-regional:GetXssMatchSet",
        "waf-regional:ListActivatedRulesInRuleGroup",
        "waf-regional:ListByteMatchSets",
        "waf-regional:ListGeoMatchSets",
        "waf-regional:ListIPSets",
        "waf-regional:ListLoggingConfigurations",
        "waf-regional:ListRateBasedRules",
        "waf-regional:ListRegexMatchSets",
        "waf-regional:ListRegexPatternSets",
        "waf-regional:ListResourcesForWebACL",
        "waf-regional:ListRuleGroups",
        "waf-regional:ListRules",
        "waf-regional:ListSizeConstraintSets",
        "waf-regional:ListSqlInjectionMatchSets",
        "waf-regional:ListSubscribedRuleGroups",
        "waf-regional:ListTagsForResource",
        "waf-regional:ListWebACLs",
        "waf-regional:ListXssMatchSets",
        "waf:GetByteMatchSet",
        "waf:GetChangeToken",
        "waf:GetChangeTokenStatus",
        "waf:GetGeoMatchSet",
        "waf:GetIPSet",
        "waf:GetLoggingConfiguration",
        "waf:GetPermissionPolicy",
        "waf:GetRateBasedRule",
        "waf:GetRateBasedRuleManagedKeys",
        "waf:GetRegexMatchSet",
        "waf:GetRegexPatternSet",
        "waf:GetRule",
        "waf:GetRuleGroup",
        "waf:GetSampledRequests",
        "waf:GetSizeConstraintSet",
        "waf:GetSqlInjectionMatchSet",
        "waf:GetWebACL",
        "waf:GetXssMatchSet",
        "waf:ListActivatedRulesInRuleGroup",
        "waf:ListByteMatchSets",
        "waf:ListGeoMatchSets",
        "waf:ListIPSets",
        "waf:ListLoggingConfigurations",
        "waf:ListRateBasedRules",
        "waf:ListRegexMatchSets",
        "waf:ListRegexPatternSets",
        "waf:ListRuleGroups",
        "waf:ListRules",
        "waf:ListSizeConstraintSets",
        "waf:ListSqlInjectionMatchSets",
        "waf:ListSubscribedRuleGroups",
        "waf:ListTagsForResource",
        "waf:ListWebACLs",
        "waf:ListXssMatchSets",
        "wafv2:DescribeManagedRuleGroup",
        "wafv2:GetIPSet",
        "wafv2:GetLoggingConfiguration",
        "wafv2:GetPermissionPolicy",
        "wafv2:GetRateBasedStatementManagedKeys",
        "wafv2:GetRegexPatternSet",
        "wafv2:GetRuleGroup",
        "wafv2:GetSampledRequests",
        "wafv2:GetWebACL",
        "wafv2:GetWebACLForResource",
        "wafv2:ListAvailableManagedRuleGroups",
        "wafv2:ListIPSets",
        "wafv2:ListLoggingConfigurations",
        "wafv2:ListRegexPatternSets",
        "wafv2:ListResourcesForWebACL",
        "wafv2:ListRuleGroups",
        "wafv2:ListTagsForResource",
        "wafv2:ListWebACLs",
        "workdocs:CheckAlias",
        "workdocs:DescribeActivities",
        "workdocs:DescribeAvailableDirectories",
        "workdocs:DescribeComments",
        "workdocs:DescribeDocumentVersions",
        "workdocs:DescribeFolderContents",
        "workdocs:DescribeGroups",
        "workdocs:DescribeInstances",
        "workdocs:DescribeNotificationSubscriptions",
        "workdocs:DescribeResourcePermissions",
        "workdocs:DescribeRootFolders",
        "workdocs:DescribeUsers",
        "workdocs:GetCurrentUser",
        "workdocs:GetDocument",
        "workdocs:GetDocumentPath",
        "workdocs:GetDocumentVersion",
        "workdocs:GetFolder",
        "workdocs:GetFolderPath",
        "workdocs:GetResources",
        "worklink:DescribeAuditStreamConfiguration",
        "worklink:DescribeCompanyNetworkConfiguration",
        "worklink:DescribeDevice",
        "worklink:DescribeDevicePolicyConfiguration",
        "worklink:DescribeDomain",
        "worklink:DescribeFleetMetadata",
        "worklink:DescribeIdentityProviderConfiguration",
        "worklink:DescribeWebsiteCertificateAuthority",
        "worklink:ListDevices",
        "worklink:ListDomains",
        "worklink:ListFleets",
        "worklink:ListTagsForResource",
        "worklink:ListWebsiteAuthorizationProviders",
        "worklink:ListWebsiteCertificateAuthorities",
        "workmail:DescribeDirectories",
        "workmail:DescribeGroup",
        "workmail:DescribeInboundMailFlowRule",
        "workmail:DescribeKmsKeys",
        "workmail:DescribeMailDomains",
        "workmail:DescribeMailGroups",
        "workmail:DescribeMailUsers",
        "workmail:DescribeOrganization",
        "workmail:DescribeOrganizations",
        "workmail:DescribeOutboundMailFlowRule",
        "workmail:DescribeResource",
        "workmail:DescribeSmtpGateway",
        "workmail:DescribeUser",
        "workmail:GetAccessControlEffect",
        "workmail:GetDefaultRetentionPolicy",
        "workmail:GetJournalingRules",
        "workmail:GetMailDomainDetails",
        "workmail:GetMailGroupDetails",
        "workmail:GetMailUserDetails",
        "workmail:GetMailboxDetails",
        "workmail:GetMobileDeviceDetails",
        "workmail:GetMobileDevicesForUser",
        "workmail:GetMobilePolicyDetails",
        "workmail:ListAccessControlRules",
        "workmail:ListAliases",
        "workmail:ListGroupMembers",
        "workmail:ListGroups",
        "workmail:ListInboundMailFlowRules",
        "workmail:ListMailboxPermissions",
        "workmail:ListMembersInMailGroup",
        "workmail:ListOrganizations",
        "workmail:ListOutboundMailFlowRules",
        "workmail:ListResourceDelegates",
        "workmail:ListResources",
        "workmail:ListSmtpGateways",
        "workmail:ListTagsForResource",
        "workmail:ListUsers",
        "workmail:SearchMembers",
        "workspaces:DescribeAccount",
        "workspaces:DescribeAccountModifications",
        "workspaces:DescribeClientProperties",
        "workspaces:DescribeIpGroups",
        "workspaces:DescribeTags",
        "workspaces:DescribeWorkspaceBundles",
        "workspaces:DescribeWorkspaceDirectories",
        "workspaces:DescribeWorkspaceImages",
        "workspaces:DescribeWorkspaces",
        "workspaces:DescribeWorkspacesConnectionStatus",
        "xray:BatchGetTraces",
        "xray:GetEncryptionConfig",
        "xray:GetGroup",
        "xray:GetGroups",
        "xray:GetSamplingRules",
        "xray:GetSamplingStatisticSummaries",
        "xray:GetSamplingTargets",
        "xray:GetServiceGraph",
        "xray:GetTimeSeriesServiceStatistics",
        "xray:GetTraceGraph",
        "xray:GetTraceSummaries"
      ]
    },
    "ANPAIMHWGGSRHLOQUICJQ": {
      "PolicyName": "AWSElasticLoadBalancingServiceRolePolicy",
      "PolicyId": "ANPAIMHWGGSRHLOQUICJQ",
      "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy",
      "Path": "/aws-service-role/",
      "DefaultVersionId": "v4",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2017-09-19 22:19:04+00:00",
      "UpdateDate": "2019-10-07 22:55:16+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:DescribeAddresses",
                  "ec2:DescribeInstances",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeClassicLinkInstances",
                  "ec2:DescribeVpcClassicLink",
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateNetworkInterface",
                  "ec2:DeleteNetworkInterface",
                  "ec2:ModifyNetworkInterfaceAttribute",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:AssociateAddress",
                  "ec2:DisassociateAddress",
                  "ec2:AttachNetworkInterface",
                  "ec2:DetachNetworkInterface",
                  "ec2:AssignPrivateIpAddresses",
                  "ec2:AssignIpv6Addresses",
                  "ec2:UnassignIpv6Addresses",
                  "logs:CreateLogDelivery",
                  "logs:GetLogDelivery",
                  "logs:UpdateLogDelivery",
                  "logs:DeleteLogDelivery",
                  "logs:ListLogDeliveries"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v4",
          "IsDefaultVersion": true,
          "CreateDate": "2019-10-07 22:55:16+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssociateAddress",
        "ec2:AttachNetworkInterface",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:CreateNetworkInterface",
        "ec2:CreateSecurityGroup",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcs",
        "ec2:DetachNetworkInterface",
        "ec2:DisassociateAddress",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:UnassignIpv6Addresses",
        "logs:CreateLogDelivery",
        "logs:DeleteLogDelivery",
        "logs:GetLogDelivery",
        "logs:ListLogDeliveries",
        "logs:UpdateLogDelivery"
      ]
    },
    "ANPAINAW5ANUWTH3R4ANI": {
      "PolicyName": "AWSDirectoryServiceFullAccess",
      "PolicyId": "ANPAINAW5ANUWTH3R4ANI",
      "Arn": "arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess",
      "Path": "/",
      "DefaultVersionId": "v4",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:41:11+00:00",
      "UpdateDate": "2019-02-05 20:29:43+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "ds:*",
                  "ec2:AuthorizeSecurityGroupEgress",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateNetworkInterface",
                  "ec2:CreateSecurityGroup",
                  "ec2:DeleteNetworkInterface",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcs",
                  "ec2:RevokeSecurityGroupEgress",
                  "ec2:RevokeSecurityGroupIngress",
                  "ec2:DescribeSecurityGroups",
                  "sns:GetTopicAttributes",
                  "sns:ListSubscriptions",
                  "sns:ListSubscriptionsByTopic",
                  "sns:ListTopics",
                  "iam:ListRoles",
                  "organizations:ListAccountsForParent",
                  "organizations:ListRoots",
                  "organizations:ListAccounts",
                  "organizations:DescribeOrganization",
                  "organizations:DescribeAccount",
                  "organizations:ListOrganizationalUnitsForParent",
                  "organizations:ListAWSServiceAccessForOrganization"
                ],
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Action": [
                  "sns:CreateTopic",
                  "sns:DeleteTopic",
                  "sns:SetTopicAttributes",
                  "sns:Subscribe",
                  "sns:Unsubscribe"
                ],
                "Effect": "Allow",
                "Resource": "arn:aws:sns:*:*:DirectoryMonitoring*"
              },
              {
                "Action": [
                  "organizations:EnableAWSServiceAccess",
                  "organizations:DisableAWSServiceAccess"
                ],
                "Effect": "Allow",
                "Resource": "*",
                "Condition": {
                  "ForAllValues:StringLike": {
                    "organizations:ServicePrincipal": [
                      "ds.amazonaws.com"
                    ]
                  }
                }
              },
              {
                "Action": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:ec2:*:*:network-interface/*",
                  "arn:aws:ec2:*:*:security-group/*"
                ]
              }
            ]
          },
          "VersionId": "v4",
          "IsDefaultVersion": true,
          "CreateDate": "2019-02-05 20:29:43+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "ds:CreateConditionalForwarder",
        "ds:CreateDirectory",
        "ds:CreateMicrosoftAD",
        "ds:CreateTrust",
        "ds:ShareDirectory"
      ],
      "InfrastructureModification": [
        "ds:AcceptSharedDirectory",
        "ds:AddIpRoutes",
        "ds:AddTagsToResource",
        "ds:AuthorizeApplication",
        "ds:CancelSchemaExtension",
        "ds:CheckAlias",
        "ds:ConnectDirectory",
        "ds:CreateAlias",
        "ds:CreateComputer",
        "ds:CreateConditionalForwarder",
        "ds:CreateDirectory",
        "ds:CreateIdentityPoolDirectory",
        "ds:CreateLogSubscription",
        "ds:CreateMicrosoftAD",
        "ds:CreateSnapshot",
        "ds:CreateTrust",
        "ds:DeleteConditionalForwarder",
        "ds:DeleteDirectory",
        "ds:DeleteLogSubscription",
        "ds:DeleteSnapshot",
        "ds:DeleteTrust",
        "ds:DeregisterCertificate",
        "ds:DeregisterEventTopic",
        "ds:DescribeCertificate",
        "ds:DescribeConditionalForwarders",
        "ds:DescribeDirectories",
        "ds:DescribeDomainControllers",
        "ds:DescribeEventTopics",
        "ds:DescribeLDAPSSettings",
        "ds:DescribeSharedDirectories",
        "ds:DescribeSnapshots",
        "ds:DescribeTrusts",
        "ds:DisableLDAPS",
        "ds:DisableRadius",
        "ds:DisableSso",
        "ds:EnableLDAPS",
        "ds:EnableRadius",
        "ds:EnableSso",
        "ds:GetAuthorizedApplicationDetails",
        "ds:GetDirectoryLimits",
        "ds:GetSnapshotLimits",
        "ds:ListAuthorizedApplications",
        "ds:ListCertificates",
        "ds:ListIpRoutes",
        "ds:ListLogSubscriptions",
        "ds:ListSchemaExtensions",
        "ds:ListTagsForResource",
        "ds:RegisterCertificate",
        "ds:RegisterEventTopic",
        "ds:RejectSharedDirectory",
        "ds:RemoveIpRoutes",
        "ds:RemoveTagsFromResource",
        "ds:ResetUserPassword",
        "ds:RestoreFromSnapshot",
        "ds:ShareDirectory",
        "ds:StartSchemaExtension",
        "ds:UnauthorizeApplication",
        "ds:UnshareDirectory",
        "ds:UpdateConditionalForwarder",
        "ds:UpdateNumberOfDomainControllers",
        "ds:UpdateRadius",
        "ds:UpdateTrust",
        "ds:VerifyTrust",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:CreateNetworkInterface",
        "ec2:CreateSecurityGroup",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteSecurityGroup",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "iam:ListRoles",
        "organizations:DescribeAccount",
        "organizations:DescribeOrganization",
        "organizations:ListAWSServiceAccessForOrganization",
        "organizations:ListAccounts",
        "organizations:ListAccountsForParent",
        "organizations:ListOrganizationalUnitsForParent",
        "organizations:ListRoots",
        "sns:GetTopicAttributes",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTopics",
        "organizations:DisableAWSServiceAccess",
        "organizations:EnableAWSServiceAccess"
      ]
    },
    "ANPAIONKN3TJZUKXCHXWC": {
      "PolicyName": "AWSCodeDeployFullAccess",
      "PolicyId": "ANPAIONKN3TJZUKXCHXWC",
      "Arn": "arn:aws:iam::aws:policy/AWSCodeDeployFullAccess",
      "Path": "/",
      "DefaultVersionId": "v3",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-05-19 18:13:23+00:00",
      "UpdateDate": "2020-04-02 16:14:47+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": "codedeploy:*",
                "Effect": "Allow",
                "Resource": "*"
              },
              {
                "Sid": "CodeStarNotificationsReadWriteAccess",
                "Effect": "Allow",
                "Action": [
                  "codestar-notifications:CreateNotificationRule",
                  "codestar-notifications:DescribeNotificationRule",
                  "codestar-notifications:UpdateNotificationRule",
                  "codestar-notifications:DeleteNotificationRule",
                  "codestar-notifications:Subscribe",
                  "codestar-notifications:Unsubscribe"
                ],
                "Resource": "*",
                "Condition": {
                  "StringLike": {
                    "codestar-notifications:NotificationsForResource": "arn:aws:codedeploy:*"
                  }
                }
              },
              {
                "Sid": "CodeStarNotificationsListAccess",
                "Effect": "Allow",
                "Action": [
                  "codestar-notifications:ListNotificationRules",
                  "codestar-notifications:ListTargets",
                  "codestar-notifications:ListTagsforResource",
                  "codestar-notifications:ListEventTypes"
                ],
                "Resource": "*"
              },
              {
                "Sid": "CodeStarNotificationsSNSTopicCreateAccess",
                "Effect": "Allow",
                "Action": [
                  "sns:CreateTopic",
                  "sns:SetTopicAttributes"
                ],
                "Resource": "arn:aws:sns:*:*:codestar-notifications*"
              },
              {
                "Sid": "CodeStarNotificationsChatbotAccess",
                "Effect": "Allow",
                "Action": [
                  "chatbot:DescribeSlackChannelConfigurations"
                ],
                "Resource": "*"
              },
              {
                "Sid": "SNSTopicListAccess",
                "Effect": "Allow",
                "Action": [
                  "sns:ListTopics"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v3",
          "IsDefaultVersion": true,
          "CreateDate": "2020-04-02 16:14:47+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "codedeploy:AddTagsToOnPremisesInstances",
        "codedeploy:BatchGetApplicationRevisions",
        "codedeploy:BatchGetApplications",
        "codedeploy:BatchGetDeploymentGroups",
        "codedeploy:BatchGetDeploymentInstances",
        "codedeploy:BatchGetDeploymentTargets",
        "codedeploy:BatchGetDeployments",
        "codedeploy:BatchGetOnPremisesInstances",
        "codedeploy:ContinueDeployment",
        "codedeploy:CreateApplication",
        "codedeploy:CreateCloudFormationDeployment",
        "codedeploy:CreateDeployment",
        "codedeploy:CreateDeploymentConfig",
        "codedeploy:CreateDeploymentGroup",
        "codedeploy:DeleteApplication",
        "codedeploy:DeleteDeploymentConfig",
        "codedeploy:DeleteDeploymentGroup",
        "codedeploy:DeleteGitHubAccountToken",
        "codedeploy:DeleteResourcesByExternalId",
        "codedeploy:DeregisterOnPremisesInstance",
        "codedeploy:GetApplication",
        "codedeploy:GetApplicationRevision",
        "codedeploy:GetDeployment",
        "codedeploy:GetDeploymentConfig",
        "codedeploy:GetDeploymentGroup",
        "codedeploy:GetDeploymentInstance",
        "codedeploy:GetDeploymentTarget",
        "codedeploy:GetOnPremisesInstance",
        "codedeploy:ListApplicationRevisions",
        "codedeploy:ListApplications",
        "codedeploy:ListDeploymentConfigs",
        "codedeploy:ListDeploymentGroups",
        "codedeploy:ListDeploymentInstances",
        "codedeploy:ListDeploymentTargets",
        "codedeploy:ListDeployments",
        "codedeploy:ListGitHubAccountTokenNames",
        "codedeploy:ListOnPremisesInstances",
        "codedeploy:ListTagsForResource",
        "codedeploy:PutLifecycleEventHookExecutionStatus",
        "codedeploy:RegisterApplicationRevision",
        "codedeploy:RegisterOnPremisesInstance",
        "codedeploy:RemoveTagsFromOnPremisesInstances",
        "codedeploy:SkipWaitTimeForInstanceTermination",
        "codedeploy:StopDeployment",
        "codedeploy:TagResource",
        "codedeploy:UntagResource",
        "codedeploy:UpdateApplication",
        "codedeploy:UpdateDeploymentGroup",
        "codestar-notifications:CreateNotificationRule",
        "codestar-notifications:DeleteNotificationRule",
        "codestar-notifications:DescribeNotificationRule",
        "codestar-notifications:Subscribe",
        "codestar-notifications:Unsubscribe",
        "codestar-notifications:UpdateNotificationRule",
        "codestar-notifications:ListEventTypes",
        "codestar-notifications:ListNotificationRules",
        "codestar-notifications:ListTagsforResource",
        "codestar-notifications:ListTargets",
        "chatbot:DescribeSlackChannelConfigurations",
        "sns:ListTopics"
      ]
    },
    "ANPAIQH6ROMVVECFVRJPK": {
      "PolicyName": "AWSOrganizationsServiceTrustPolicy",
      "PolicyId": "ANPAIQH6ROMVVECFVRJPK",
      "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy",
      "Path": "/aws-service-role/",
      "DefaultVersionId": "v2",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2017-10-10 23:04:07+00:00",
      "UpdateDate": "2017-11-01 06:01:18+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "AllowDeletionOfServiceLinkedRoleForOrganizations",
                "Effect": "Allow",
                "Action": [
                  "iam:DeleteRole"
                ],
                "Resource": [
                  "arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/*"
                ]
              },
              {
                "Sid": "AllowCreationOfServiceLinkedRoles",
                "Effect": "Allow",
                "Action": [
                  "iam:CreateServiceLinkedRole"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v2",
          "IsDefaultVersion": true,
          "CreateDate": "2017-11-01 06:01:18+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "iam:CreateServiceLinkedRole"
      ],
      "InfrastructureModification": [
        "iam:CreateServiceLinkedRole"
      ]
    },
    "ANPAIQNUJTQYDRJPC3BNK": {
      "PolicyName": "AWSCloudTrailFullAccess",
      "PolicyId": "ANPAIQNUJTQYDRJPC3BNK",
      "Arn": "arn:aws:iam::aws:policy/AWSCloudTrailFullAccess",
      "Path": "/",
      "DefaultVersionId": "v8",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:39:58+00:00",
      "UpdateDate": "2019-09-12 23:08:46+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sns:AddPermission",
                  "sns:CreateTopic",
                  "sns:DeleteTopic",
                  "sns:ListTopics",
                  "sns:SetTopicAttributes",
                  "sns:GetTopicAttributes"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:CreateBucket",
                  "s3:DeleteBucket",
                  "s3:ListAllMyBuckets",
                  "s3:PutBucketPolicy",
                  "s3:ListBucket",
                  "s3:GetObject",
                  "s3:GetBucketLocation",
                  "s3:GetBucketPolicy"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "cloudtrail:*",
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "iam:ListRoles",
                  "iam:GetRolePolicy",
                  "iam:GetUser"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "iam:PassRole"
                ],
                "Resource": "*",
                "Condition": {
                  "StringEquals": {
                    "iam:PassedToService": "cloudtrail.amazonaws.com"
                  }
                }
              },
              {
                "Effect": "Allow",
                "Action": [
                  "kms:ListKeys",
                  "kms:ListAliases"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "lambda:ListFunctions"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v8",
          "IsDefaultVersion": true,
          "CreateDate": "2019-09-12 23:08:46+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [
        "s3:GetObject"
      ],
      "ResourceExposure": [
        "sns:AddPermission",
        "sns:CreateTopic",
        "sns:SetTopicAttributes",
        "s3:PutBucketPolicy",
        "iam:PassRole"
      ],
      "InfrastructureModification": [
        "sns:AddPermission",
        "sns:CreateTopic",
        "sns:DeleteTopic",
        "sns:GetTopicAttributes",
        "sns:ListTopics",
        "sns:SetTopicAttributes",
        "s3:CreateBucket",
        "s3:DeleteBucket",
        "s3:GetBucketLocation",
        "s3:GetBucketPolicy",
        "s3:GetObject",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:PutBucketPolicy",
        "cloudtrail:AddTags",
        "cloudtrail:CreateTrail",
        "cloudtrail:DeleteTrail",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:GetInsightSelectors",
        "cloudtrail:GetTrail",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:ListPublicKeys",
        "cloudtrail:ListTags",
        "cloudtrail:ListTrails",
        "cloudtrail:LookupEvents",
        "cloudtrail:PutEventSelectors",
        "cloudtrail:PutInsightSelectors",
        "cloudtrail:RemoveTags",
        "cloudtrail:StartLogging",
        "cloudtrail:StopLogging",
        "cloudtrail:UpdateTrail",
        "logs:CreateLogGroup",
        "iam:GetRolePolicy",
        "iam:GetUser",
        "iam:ListRoles",
        "iam:PassRole",
        "kms:ListAliases",
        "kms:ListKeys",
        "lambda:ListFunctions"
      ]
    },
    "ANPAIQRXRDRGJUA33ELIO": {
      "PolicyName": "AWSConfigRole",
      "PolicyId": "ANPAIQRXRDRGJUA33ELIO",
      "Arn": "arn:aws:iam::aws:policy/service-role/AWSConfigRole",
      "Path": "/service-role/",
      "DefaultVersionId": "v32",
      "AttachmentCount": 2,
      "IsAttachable": true,
      "CreateDate": "2015-04-02 17:36:23+00:00",
      "UpdateDate": "2019-11-18 22:42:07+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "acm:ListTagsForCertificate",
                  "application-autoscaling:DescribeScalableTargets",
                  "application-autoscaling:DescribeScalingPolicies",
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeLifecycleHooks",
                  "autoscaling:DescribePolicies",
                  "autoscaling:DescribeScheduledActions",
                  "autoscaling:DescribeTags",
                  "cloudfront:ListTagsForResource",
                  "cloudformation:describeType",
                  "cloudformation:listTypes",
                  "cloudtrail:DescribeTrails",
                  "cloudtrail:GetEventSelectors",
                  "cloudtrail:GetTrailStatus",
                  "cloudtrail:ListTags",
                  "cloudwatch:DescribeAlarms",
                  "codepipeline:GetPipeline",
                  "codepipeline:GetPipelineState",
                  "codepipeline:ListPipelines",
                  "config:BatchGet*",
                  "config:Describe*",
                  "config:Get*",
                  "config:List*",
                  "config:Put*",
                  "config:Select*",
                  "dms:DescribeReplicationInstances",
                  "dynamodb:DescribeContinuousBackups",
                  "dynamodb:DescribeLimits",
                  "dynamodb:DescribeTable",
                  "dynamodb:ListTables",
                  "dynamodb:ListTagsOfResource",
                  "ec2:Describe*",
                  "elasticache:DescribeCacheClusters",
                  "elasticache:DescribeReplicationGroups",
                  "elasticfilesystem:DescribeFileSystems",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancerPolicies",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeTags",
                  "elasticmapreduce:DescribeCluster",
                  "elasticmapreduce:DescribeSecurityConfiguration",
                  "elasticmapreduce:ListClusters",
                  "elasticmapreduce:ListInstances",
                  "es:DescribeElasticsearchDomain",
                  "es:DescribeElasticsearchDomains",
                  "es:ListDomainNames",
                  "es:ListTags",
                  "guardduty:GetDetector",
                  "guardduty:GetFindings",
                  "guardduty:GetMasterAccount",
                  "guardduty:ListDetectors",
                  "guardduty:ListFindings",
                  "iam:GenerateCredentialReport",
                  "iam:GetAccountAuthorizationDetails",
                  "iam:GetAccountPasswordPolicy",
                  "iam:GetAccountSummary",
                  "iam:GetCredentialReport",
                  "iam:GetGroup",
                  "iam:GetGroupPolicy",
                  "iam:GetPolicy",
                  "iam:GetPolicyVersion",
                  "iam:GetRole",
                  "iam:GetRolePolicy",
                  "iam:GetUser",
                  "iam:GetUserPolicy",
                  "iam:ListAttachedGroupPolicies",
                  "iam:ListAttachedRolePolicies",
                  "iam:ListAttachedUserPolicies",
                  "iam:ListEntitiesForPolicy",
                  "iam:ListGroupPolicies",
                  "iam:ListGroupsForUser",
                  "iam:ListInstanceProfilesForRole",
                  "iam:ListPolicyVersions",
                  "iam:ListRolePolicies",
                  "iam:ListUserPolicies",
                  "iam:ListVirtualMFADevices",
                  "kms:DescribeKey",
                  "kms:GetKeyPolicy",
                  "kms:GetKeyRotationStatus",
                  "kms:ListKeys",
                  "kms:ListResourceTags",
                  "lambda:GetAlias",
                  "lambda:GetFunction",
                  "lambda:GetPolicy",
                  "lambda:ListAliases",
                  "lambda:ListFunctions",
                  "logs:DescribeLogGroups",
                  "rds:DescribeDBClusters",
                  "rds:DescribeDBClusterSnapshotAttributes",
                  "rds:DescribeDBClusterSnapshots",
                  "rds:DescribeDBInstances",
                  "rds:DescribeDBSecurityGroups",
                  "rds:DescribeDBSnapshotAttributes",
                  "rds:DescribeDBSnapshots",
                  "rds:DescribeDBSubnetGroups",
                  "rds:DescribeEventSubscriptions",
                  "rds:ListTagsForResource",
                  "redshift:DescribeClusterParameterGroups",
                  "redshift:DescribeClusterParameters",
                  "redshift:DescribeClusterSecurityGroups",
                  "redshift:DescribeClusterSnapshots",
                  "redshift:DescribeClusterSubnetGroups",
                  "redshift:DescribeClusters",
                  "redshift:DescribeEventSubscriptions",
                  "redshift:DescribeLoggingStatus",
                  "s3:GetAccelerateConfiguration",
                  "s3:GetAccountPublicAccessBlock",
                  "s3:GetBucketAcl",
                  "s3:GetBucketCORS",
                  "s3:GetBucketLocation",
                  "s3:GetBucketLogging",
                  "s3:GetBucketNotification",
                  "s3:GetBucketObjectLockConfiguration",
                  "s3:GetBucketPolicy",
                  "s3:GetBucketPublicAccessBlock",
                  "s3:GetBucketRequestPayment",
                  "s3:GetBucketTagging",
                  "s3:GetBucketVersioning",
                  "s3:GetBucketWebsite",
                  "s3:GetEncryptionConfiguration",
                  "s3:GetLifecycleConfiguration",
                  "s3:GetObject",
                  "s3:GetReplicationConfiguration",
                  "s3:ListAllMyBuckets",
                  "s3:ListBucket",
                  "sagemaker:DescribeEndpointConfig",
                  "sagemaker:DescribeNotebookInstance",
                  "sagemaker:ListEndpointConfigs",
                  "sagemaker:ListNotebookInstances",
                  "secretsmanager:ListSecrets",
                  "secretsmanager:ListSecretVersionIds",
                  "shield:DescribeDRTAccess",
                  "shield:DescribeProtection",
                  "shield:DescribeSubscription",
                  "sns:GetTopicAttributes",
                  "sns:ListSubscriptions",
                  "sns:ListTagsForResource",
                  "sns:ListTopics",
                  "sqs:GetQueueAttributes",
                  "sqs:ListQueues",
                  "sqs:ListQueueTags",
                  "ssm:DescribeAutomationExecutions",
                  "ssm:DescribeDocument",
                  "ssm:GetAutomationExecution",
                  "ssm:GetDocument",
                  "support:DescribeCases",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v32",
          "IsDefaultVersion": true,
          "CreateDate": "2019-11-18 22:42:07+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [
        "s3:GetObject"
      ],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "acm:DescribeCertificate",
        "acm:ListCertificates",
        "acm:ListTagsForCertificate",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingPolicies",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribePolicies",
        "autoscaling:DescribeScheduledActions",
        "autoscaling:DescribeTags",
        "cloudformation:describeType",
        "cloudformation:listTypes",
        "cloudfront:ListTagsForResource",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:ListTags",
        "cloudwatch:DescribeAlarms",
        "codepipeline:GetPipeline",
        "codepipeline:GetPipelineState",
        "codepipeline:ListPipelines",
        "config:BatchGetAggregateResourceConfig",
        "config:BatchGetResourceConfig",
        "config:DescribeAggregateComplianceByConfigRules",
        "config:DescribeAggregationAuthorizations",
        "config:DescribeComplianceByConfigRule",
        "config:DescribeComplianceByResource",
        "config:DescribeConfigRuleEvaluationStatus",
        "config:DescribeConfigRules",
        "config:DescribeConfigurationAggregatorSourcesStatus",
        "config:DescribeConfigurationAggregators",
        "config:DescribeConfigurationRecorderStatus",
        "config:DescribeConfigurationRecorders",
        "config:DescribeConformancePackCompliance",
        "config:DescribeConformancePackStatus",
        "config:DescribeConformancePacks",
        "config:DescribeDeliveryChannelStatus",
        "config:DescribeDeliveryChannels",
        "config:DescribeOrganizationConfigRuleStatuses",
        "config:DescribeOrganizationConfigRules",
        "config:DescribeOrganizationConformancePackStatuses",
        "config:DescribeOrganizationConformancePacks",
        "config:DescribePendingAggregationRequests",
        "config:DescribeRemediationConfigurations",
        "config:DescribeRemediationExceptions",
        "config:DescribeRemediationExecutionStatus",
        "config:DescribeRetentionConfigurations",
        "config:GetAggregateComplianceDetailsByConfigRule",
        "config:GetAggregateConfigRuleComplianceSummary",
        "config:GetAggregateDiscoveredResourceCounts",
        "config:GetAggregateResourceConfig",
        "config:GetComplianceDetailsByConfigRule",
        "config:GetComplianceDetailsByResource",
        "config:GetComplianceSummaryByConfigRule",
        "config:GetComplianceSummaryByResourceType",
        "config:GetConformancePackComplianceDetails",
        "config:GetConformancePackComplianceSummary",
        "config:GetDiscoveredResourceCounts",
        "config:GetOrganizationConfigRuleDetailedStatus",
        "config:GetOrganizationConformancePackDetailedStatus",
        "config:GetResourceConfigHistory",
        "config:ListAggregateDiscoveredResources",
        "config:ListDiscoveredResources",
        "config:ListTagsForResource",
        "config:PutAggregationAuthorization",
        "config:PutConfigRule",
        "config:PutConfigurationAggregator",
        "config:PutConfigurationRecorder",
        "config:PutConformancePack",
        "config:PutDeliveryChannel",
        "config:PutEvaluations",
        "config:PutOrganizationConfigRule",
        "config:PutOrganizationConformancePack",
        "config:PutRemediationConfigurations",
        "config:PutRemediationExceptions",
        "config:PutRetentionConfiguration",
        "config:SelectAggregateResourceConfig",
        "config:SelectResourceConfig",
        "dms:DescribeReplicationInstances",
        "dynamodb:DescribeContinuousBackups",
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeTable",
        "dynamodb:ListTables",
        "dynamodb:ListTagsOfResource",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "elasticache:DescribeCacheClusters",
        "elasticache:DescribeReplicationGroups",
        "elasticfilesystem:DescribeFileSystems",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeTags",
        "elasticmapreduce:DescribeCluster",
        "elasticmapreduce:DescribeSecurityConfiguration",
        "elasticmapreduce:ListClusters",
        "elasticmapreduce:ListInstances",
        "es:DescribeElasticsearchDomain",
        "es:DescribeElasticsearchDomains",
        "es:ListDomainNames",
        "es:ListTags",
        "guardduty:GetDetector",
        "guardduty:GetFindings",
        "guardduty:GetMasterAccount",
        "guardduty:ListDetectors",
        "guardduty:ListFindings",
        "iam:GenerateCredentialReport",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfilesForRole",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListUserPolicies",
        "iam:ListVirtualMFADevices",
        "kms:DescribeKey",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:ListKeys",
        "kms:ListResourceTags",
        "lambda:GetAlias",
        "lambda:GetFunction",
        "lambda:GetPolicy",
        "lambda:ListAliases",
        "lambda:ListFunctions",
        "logs:DescribeLogGroups",
        "rds:DescribeDBClusterSnapshotAttributes",
        "rds:DescribeDBClusterSnapshots",
        "rds:DescribeDBClusters",
        "rds:DescribeDBInstances",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshotAttributes",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEventSubscriptions",
        "rds:ListTagsForResource",
        "redshift:DescribeClusterParameterGroups",
        "redshift:DescribeClusterParameters",
        "redshift:DescribeClusterSecurityGroups",
        "redshift:DescribeClusterSnapshots",
        "redshift:DescribeClusterSubnetGroups",
        "redshift:DescribeClusters",
        "redshift:DescribeEventSubscriptions",
        "redshift:DescribeLoggingStatus",
        "s3:GetAccelerateConfiguration",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetObject",
        "s3:GetReplicationConfiguration",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "sagemaker:DescribeEndpointConfig",
        "sagemaker:DescribeNotebookInstance",
        "sagemaker:ListEndpointConfigs",
        "sagemaker:ListNotebookInstances",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:ListSecrets",
        "shield:DescribeDRTAccess",
        "shield:DescribeProtection",
        "shield:DescribeSubscription",
        "sns:GetTopicAttributes",
        "sns:ListSubscriptions",
        "sns:ListTagsForResource",
        "sns:ListTopics",
        "sqs:GetQueueAttributes",
        "sqs:ListQueueTags",
        "sqs:ListQueues",
        "ssm:DescribeAutomationExecutions",
        "ssm:DescribeDocument",
        "ssm:GetAutomationExecution",
        "ssm:GetDocument",
        "support:DescribeCases",
        "waf-regional:GetWebACL",
        "waf-regional:GetWebACLForResource"
      ]
    },
    "ANPAIWMBCKSKIEE64ZLYK": {
      "PolicyName": "AdministratorAccess",
      "PolicyId": "ANPAIWMBCKSKIEE64ZLYK",
      "Arn": "arn:aws:iam::aws:policy/AdministratorAccess",
      "Path": "/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:39:46+00:00",
      "UpdateDate": "2015-02-06 18:39:46+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": "*",
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2015-02-06 18:39:46+00:00"
        }
      ],
      "PrivilegeEscalation": [
        {
          "type": "CreateAccessKey",
          "actions": [
            "iam:createaccesskey"
          ]
        },
        {
          "type": "CreateLoginProfile",
          "actions": [
            "iam:createloginprofile"
          ]
        },
        {
          "type": "UpdateLoginProfile",
          "actions": [
            "iam:updateloginprofile"
          ]
        },
        {
          "type": "CreateNewPolicyVersion",
          "actions": [
            "iam:createpolicyversion"
          ]
        },
        {
          "type": "SetExistingDefaultPolicyVersion",
          "actions": [
            "iam:setdefaultpolicyversion"
          ]
        },
        {
          "type": "AttachUserPolicy",
          "actions": [
            "iam:attachuserpolicy"
          ]
        },
        {
          "type": "AttachGroupPolicy",
          "actions": [
            "iam:attachgrouppolicy"
          ]
        },
        {
          "type": "AttachRolePolicy",
          "actions": [
            "iam:attachrolepolicy",
            "sts:assumerole"
          ]
        },
        {
          "type": "PutUserPolicy",
          "actions": [
            "iam:putuserpolicy"
          ]
        },
        {
          "type": "PutGroupPolicy",
          "actions": [
            "iam:putgrouppolicy"
          ]
        },
        {
          "type": "PutRolePolicy",
          "actions": [
            "iam:putrolepolicy",
            "sts:assumerole"
          ]
        },
        {
          "type": "AddUserToGroup",
          "actions": [
            "iam:addusertogroup"
          ]
        },
        {
          "type": "UpdateRolePolicyToAssumeIt",
          "actions": [
            "iam:updateassumerolepolicy",
            "sts:assumerole"
          ]
        },
        {
          "type": "CreateEC2WithExistingIP",
          "actions": [
            "iam:passrole",
            "ec2:runinstances"
          ]
        },
        {
          "type": "PassExistingRoleToNewLambdaThenInvoke",
          "actions": [
            "iam:passrole",
            "lambda:createfunction",
            "lambda:invokefunction"
          ]
        },
        {
          "type": "PassExistingRoleToNewLambdaThenTriggerWithNewDynamo",
          "actions": [
            "iam:passrole",
            "lambda:createfunction",
            "lambda:createeventsourcemapping",
            "dynamodb:createtable",
            "dynamodb:putitem"
          ]
        },
        {
          "type": "PassExistingRoleToNewLambdaThenTriggerWithExistingDynamo",
          "actions": [
            "iam:passrole",
            "lambda:createfunction",
            "lambda:createeventsourcemapping"
          ]
        },
        {
          "type": "PassExistingRoleToNewGlueDevEndpoint",
          "actions": [
            "iam:passrole",
            "glue:createdevendpoint"
          ]
        },
        {
          "type": "PassExistingRoleToCloudFormation",
          "actions": [
            "iam:passrole",
            "cloudformation:createstack"
          ]
        },
        {
          "type": "PassExistingRoleToNewDataPipeline",
          "actions": [
            "iam:passrole",
            "datapipeline:createpipeline"
          ]
        },
        {
          "type": "UpdateExistingGlueDevEndpoint",
          "actions": [
            "glue:updatedevendpoint"
          ]
        },
        {
          "type": "EditExistingLambdaFunctionWithRole",
          "actions": [
            "lambda:updatefunctioncode"
          ]
        }
      ],
      "DataExfiltration": [
        "s3:GetObject",
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParametersByPath",
        "secretsmanager:GetSecretValue"
      ],
      "ResourceExposure": [
        "acm-pca:CreatePermission",
        "acm-pca:DeletePermission",
        "apigateway:UpdateRestApiPolicy",
        "backup:DeleteBackupVaultAccessPolicy",
        "backup:PutBackupVaultAccessPolicy",
        "chime:DeleteVoiceConnectorTerminationCredentials",
        "chime:PutVoiceConnectorTerminationCredentials",
        "cloudformation:SetStackPolicy",
        "cloudsearch:UpdateServiceAccessPolicies",
        "codeartifact:DeleteDomainPermissionsPolicy",
        "codeartifact:DeleteRepositoryPermissionsPolicy",
        "codebuild:DeleteResourcePolicy",
        "codebuild:DeleteSourceCredentials",
        "codebuild:ImportSourceCredentials",
        "codebuild:PutResourcePolicy",
        "codeguru-profiler:PutPermission",
        "codeguru-profiler:RemovePermission",
        "codestar:AssociateTeamMember",
        "codestar:CreateProject",
        "codestar:DeleteProject",
        "codestar:DisassociateTeamMember",
        "codestar:UpdateTeamMember",
        "cognito-identity:CreateIdentityPool",
        "cognito-identity:DeleteIdentities",
        "cognito-identity:DeleteIdentityPool",
        "cognito-identity:GetId",
        "cognito-identity:MergeDeveloperIdentities",
        "cognito-identity:SetIdentityPoolRoles",
        "cognito-identity:UnlinkDeveloperIdentity",
        "cognito-identity:UnlinkIdentity",
        "cognito-identity:UpdateIdentityPool",
        "deeplens:AssociateServiceRoleToAccount",
        "ds:CreateConditionalForwarder",
        "ds:CreateDirectory",
        "ds:CreateMicrosoftAD",
        "ds:CreateTrust",
        "ds:ShareDirectory",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ResetSnapshotAttribute",
        "ecr:DeleteRepositoryPolicy",
        "ecr:SetRepositoryPolicy",
        "elasticfilesystem:DeleteFileSystemPolicy",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticmapreduce:PutBlockPublicAccessConfiguration",
        "es:CreateElasticsearchDomain",
        "es:UpdateElasticsearchDomainConfig",
        "glacier:AbortVaultLock",
        "glacier:CompleteVaultLock",
        "glacier:DeleteVaultAccessPolicy",
        "glacier:InitiateVaultLock",
        "glacier:SetDataRetrievalPolicy",
        "glacier:SetVaultAccessPolicy",
        "glue:DeleteResourcePolicy",
        "glue:PutResourcePolicy",
        "greengrass:AssociateServiceRoleToAccount",
        "health:DisableHealthServiceAccessForOrganization",
        "health:EnableHealthServiceAccessForOrganization",
        "iam:AddClientIDToOpenIDConnectProvider",
        "iam:AddRoleToInstanceProfile",
        "iam:AddUserToGroup",
        "iam:AttachGroupPolicy",
        "iam:AttachRolePolicy",
        "iam:AttachUserPolicy",
        "iam:ChangePassword",
        "iam:CreateAccessKey",
        "iam:CreateAccountAlias",
        "iam:CreateGroup",
        "iam:CreateInstanceProfile",
        "iam:CreateLoginProfile",
        "iam:CreateOpenIDConnectProvider",
        "iam:CreatePolicy",
        "iam:CreatePolicyVersion",
        "iam:CreateRole",
        "iam:CreateSAMLProvider",
        "iam:CreateServiceLinkedRole",
        "iam:CreateServiceSpecificCredential",
        "iam:CreateUser",
        "iam:CreateVirtualMFADevice",
        "iam:DeactivateMFADevice",
        "iam:DeleteAccessKey",
        "iam:DeleteAccountAlias",
        "iam:DeleteAccountPasswordPolicy",
        "iam:DeleteGroup",
        "iam:DeleteGroupPolicy",
        "iam:DeleteInstanceProfile",
        "iam:DeleteLoginProfile",
        "iam:DeleteOpenIDConnectProvider",
        "iam:DeletePolicy",
        "iam:DeletePolicyVersion",
        "iam:DeleteRole",
        "iam:DeleteRolePermissionsBoundary",
        "iam:DeleteRolePolicy",
        "iam:DeleteSAMLProvider",
        "iam:DeleteSSHPublicKey",
        "iam:DeleteServerCertificate",
        "iam:DeleteServiceLinkedRole",
        "iam:DeleteServiceSpecificCredential",
        "iam:DeleteSigningCertificate",
        "iam:DeleteUser",
        "iam:DeleteUserPermissionsBoundary",
        "iam:DeleteUserPolicy",
        "iam:DeleteVirtualMFADevice",
        "iam:DetachGroupPolicy",
        "iam:DetachRolePolicy",
        "iam:DetachUserPolicy",
        "iam:EnableMFADevice",
        "iam:PassRole",
        "iam:PutGroupPolicy",
        "iam:PutRolePermissionsBoundary",
        "iam:PutRolePolicy",
        "iam:PutUserPermissionsBoundary",
        "iam:PutUserPolicy",
        "iam:RemoveClientIDFromOpenIDConnectProvider",
        "iam:RemoveRoleFromInstanceProfile",
        "iam:RemoveUserFromGroup",
        "iam:ResetServiceSpecificCredential",
        "iam:ResyncMFADevice",
        "iam:SetDefaultPolicyVersion",
        "iam:SetSecurityTokenServicePreferences",
        "iam:UpdateAccessKey",
        "iam:UpdateAccountPasswordPolicy",
        "iam:UpdateAssumeRolePolicy",
        "iam:UpdateGroup",
        "iam:UpdateLoginProfile",
        "iam:UpdateOpenIDConnectProviderThumbprint",
        "iam:UpdateRole",
        "iam:UpdateRoleDescription",
        "iam:UpdateSAMLProvider",
        "iam:UpdateSSHPublicKey",
        "iam:UpdateServerCertificate",
        "iam:UpdateServiceSpecificCredential",
        "iam:UpdateSigningCertificate",
        "iam:UpdateUser",
        "iam:UploadSSHPublicKey",
        "iam:UploadServerCertificate",
        "iam:UploadSigningCertificate",
        "imagebuilder:PutComponentPolicy",
        "imagebuilder:PutImagePolicy",
        "imagebuilder:PutImageRecipePolicy",
        "iot:AttachPolicy",
        "iot:AttachPrincipalPolicy",
        "iot:DetachPolicy",
        "iot:DetachPrincipalPolicy",
        "iot:SetDefaultAuthorizer",
        "iot:SetDefaultPolicyVersion",
        "iotsitewise:CreateAccessPolicy",
        "iotsitewise:DeleteAccessPolicy",
        "iotsitewise:UpdateAccessPolicy",
        "kms:CreateGrant",
        "kms:PutKeyPolicy",
        "kms:RetireGrant",
        "kms:RevokeGrant",
        "lakeformation:BatchGrantPermissions",
        "lakeformation:BatchRevokePermissions",
        "lakeformation:GrantPermissions",
        "lakeformation:PutDataLakeSettings",
        "lakeformation:RevokePermissions",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "license-manager:UpdateServiceSettings",
        "lightsail:GetRelationalDatabaseMasterUserPassword",
        "logs:DeleteResourcePolicy",
        "logs:PutResourcePolicy",
        "mediapackage:RotateIngestEndpointCredentials",
        "mediastore:DeleteContainerPolicy",
        "mediastore:PutContainerPolicy",
        "opsworks:SetPermission",
        "opsworks:UpdateUserProfile",
        "quicksight:CreateAdmin",
        "quicksight:CreateGroup",
        "quicksight:CreateGroupMembership",
        "quicksight:CreateIAMPolicyAssignment",
        "quicksight:CreateUser",
        "quicksight:DeleteGroup",
        "quicksight:DeleteGroupMembership",
        "quicksight:DeleteIAMPolicyAssignment",
        "quicksight:DeleteUser",
        "quicksight:DeleteUserByPrincipalId",
        "quicksight:RegisterUser",
        "quicksight:UpdateDashboardPermissions",
        "quicksight:UpdateGroup",
        "quicksight:UpdateIAMPolicyAssignment",
        "quicksight:UpdateTemplatePermissions",
        "quicksight:UpdateUser",
        "ram:AcceptResourceShareInvitation",
        "ram:AssociateResourceShare",
        "ram:CreateResourceShare",
        "ram:DeleteResourceShare",
        "ram:DisassociateResourceShare",
        "ram:EnableSharingWithAwsOrganization",
        "ram:RejectResourceShareInvitation",
        "ram:UpdateResourceShare",
        "rds-db:connect",
        "rds:AuthorizeDBSecurityGroupIngress",
        "redshift:AuthorizeSnapshotAccess",
        "redshift:CreateClusterUser",
        "redshift:CreateSnapshotCopyGrant",
        "redshift:JoinGroup",
        "redshift:ModifyClusterIamRoles",
        "redshift:RevokeSnapshotAccess",
        "route53resolver:PutResolverRulePolicy",
        "s3:BypassGovernanceRetention",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucketPolicy",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutBucketAcl",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl",
        "secretsmanager:DeleteResourcePolicy",
        "secretsmanager:PutResourcePolicy",
        "servicecatalog:CreatePortfolioShare",
        "servicecatalog:DeletePortfolioShare",
        "sns:AddPermission",
        "sns:CreateTopic",
        "sns:RemovePermission",
        "sns:SetTopicAttributes",
        "sqs:AddPermission",
        "sqs:CreateQueue",
        "sqs:RemovePermission",
        "sqs:SetQueueAttributes",
        "ssm:ModifyDocumentPermission",
        "sso-directory:AddMemberToGroup",
        "sso-directory:CreateAlias",
        "sso-directory:CreateGroup",
        "sso-directory:CreateUser",
        "sso-directory:DeleteGroup",
        "sso-directory:DeleteUser",
        "sso-directory:DisableUser",
        "sso-directory:EnableUser",
        "sso-directory:RemoveMemberFromGroup",
        "sso-directory:UpdateGroup",
        "sso-directory:UpdatePassword",
        "sso-directory:UpdateUser",
        "sso-directory:VerifyEmail",
        "sso:AssociateDirectory",
        "sso:AssociateProfile",
        "sso:CreateApplicationInstance",
        "sso:CreateApplicationInstanceCertificate",
        "sso:CreatePermissionSet",
        "sso:CreateProfile",
        "sso:CreateTrust",
        "sso:DeleteApplicationInstance",
        "sso:DeleteApplicationInstanceCertificate",
        "sso:DeletePermissionSet",
        "sso:DeletePermissionsPolicy",
        "sso:DeleteProfile",
        "sso:DisassociateDirectory",
        "sso:DisassociateProfile",
        "sso:ImportApplicationInstanceServiceProviderMetadata",
        "sso:PutPermissionsPolicy",
        "sso:StartSSO",
        "sso:UpdateApplicationInstanceActiveCertificate",
        "sso:UpdateApplicationInstanceDisplayData",
        "sso:UpdateApplicationInstanceResponseConfiguration",
        "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
        "sso:UpdateApplicationInstanceSecurityConfiguration",
        "sso:UpdateApplicationInstanceServiceProviderConfiguration",
        "sso:UpdateApplicationInstanceStatus",
        "sso:UpdateDirectoryAssociation",
        "sso:UpdatePermissionSet",
        "sso:UpdateProfile",
        "sso:UpdateSSOConfiguration",
        "sso:UpdateTrust",
        "storagegateway:DeleteChapCredentials",
        "storagegateway:SetLocalConsolePassword",
        "storagegateway:SetSMBGuestPassword",
        "storagegateway:UpdateChapCredentials",
        "waf-regional:DeletePermissionPolicy",
        "waf-regional:PutPermissionPolicy",
        "waf:DeletePermissionPolicy",
        "waf:PutPermissionPolicy",
        "wafv2:CreateWebACL",
        "wafv2:DeletePermissionPolicy",
        "wafv2:DeleteWebACL",
        "wafv2:PutPermissionPolicy",
        "wafv2:UpdateWebACL",
        "worklink:UpdateDevicePolicyConfiguration",
        "workmail:ResetPassword",
        "workmail:ResetUserPassword",
        "xray:PutEncryptionConfig"
      ],
      "InfrastructureModification": [
        "a4b:ApproveSkill",
        "a4b:AssociateContactWithAddressBook",
        "a4b:AssociateDeviceWithRoom",
        "a4b:AssociateSkillGroupWithRoom",
        "a4b:AssociateSkillWithSkillGroup",
        "a4b:AssociateSkillWithUsers",
        "a4b:CompleteRegistration",
        "a4b:CreateAddressBook",
        "a4b:CreateBusinessReportSchedule",
        "a4b:CreateConferenceProvider",
        "a4b:CreateContact",
        "a4b:CreateProfile",
        "a4b:CreateRoom",
        "a4b:CreateSkillGroup",
        "a4b:CreateUser",
        "a4b:DeleteAddressBook",
        "a4b:DeleteBusinessReportSchedule",
        "a4b:DeleteConferenceProvider",
        "a4b:DeleteContact",
        "a4b:DeleteDevice",
        "a4b:DeleteProfile",
        "a4b:DeleteRoom",
        "a4b:DeleteRoomSkillParameter",
        "a4b:DeleteSkillAuthorization",
        "a4b:DeleteSkillGroup",
        "a4b:DeleteUser",
        "a4b:DisassociateContactFromAddressBook",
        "a4b:DisassociateDeviceFromRoom",
        "a4b:DisassociateSkillFromSkillGroup",
        "a4b:DisassociateSkillFromUsers",
        "a4b:DisassociateSkillGroupFromRoom",
        "a4b:ForgetSmartHomeAppliances",
        "a4b:GetAddressBook",
        "a4b:GetConferencePreference",
        "a4b:GetConferenceProvider",
        "a4b:GetContact",
        "a4b:GetDevice",
        "a4b:GetNetworkProfile",
        "a4b:GetProfile",
        "a4b:GetRoom",
        "a4b:GetRoomSkillParameter",
        "a4b:GetSkillGroup",
        "a4b:ListBusinessReportSchedules",
        "a4b:ListConferenceProviders",
        "a4b:ListDeviceEvents",
        "a4b:ListSkills",
        "a4b:ListSkillsStoreCategories",
        "a4b:ListSkillsStoreSkillsByCategory",
        "a4b:ListSmartHomeAppliances",
        "a4b:ListTags",
        "a4b:PutConferencePreference",
        "a4b:PutDeviceSetupEvents",
        "a4b:PutRoomSkillParameter",
        "a4b:PutSkillAuthorization",
        "a4b:RegisterAVSDevice",
        "a4b:RegisterDevice",
        "a4b:RejectSkill",
        "a4b:ResolveRoom",
        "a4b:RevokeInvitation",
        "a4b:SearchAddressBooks",
        "a4b:SearchContacts",
        "a4b:SearchDevices",
        "a4b:SearchNetworkProfiles",
        "a4b:SearchProfiles",
        "a4b:SearchRooms",
        "a4b:SearchSkillGroups",
        "a4b:SearchUsers",
        "a4b:SendInvitation",
        "a4b:StartDeviceSync",
        "a4b:StartSmartHomeApplianceDiscovery",
        "a4b:TagResource",
        "a4b:UntagResource",
        "a4b:UpdateAddressBook",
        "a4b:UpdateBusinessReportSchedule",
        "a4b:UpdateConferenceProvider",
        "a4b:UpdateContact",
        "a4b:UpdateDevice",
        "a4b:UpdateProfile",
        "a4b:UpdateRoom",
        "a4b:UpdateSkillGroup",
        "access-analyzer:CreateAnalyzer",
        "access-analyzer:CreateArchiveRule",
        "access-analyzer:DeleteAnalyzer",
        "access-analyzer:DeleteArchiveRule",
        "access-analyzer:GetAnalyzedResource",
        "access-analyzer:GetAnalyzer",
        "access-analyzer:GetArchiveRule",
        "access-analyzer:GetFinding",
        "access-analyzer:ListAnalyzedResources",
        "access-analyzer:ListAnalyzers",
        "access-analyzer:ListArchiveRules",
        "access-analyzer:ListFindings",
        "access-analyzer:ListTagsForResource",
        "access-analyzer:StartResourceScan",
        "access-analyzer:TagResource",
        "access-analyzer:UntagResource",
        "access-analyzer:UpdateArchiveRule",
        "access-analyzer:UpdateFindings",
        "account:DisableRegion",
        "account:EnableRegion",
        "account:ListRegions",
        "acm-pca:CreateCertificateAuthority",
        "acm-pca:CreateCertificateAuthorityAuditReport",
        "acm-pca:CreatePermission",
        "acm-pca:DeleteCertificateAuthority",
        "acm-pca:DeletePermission",
        "acm-pca:DescribeCertificateAuthority",
        "acm-pca:DescribeCertificateAuthorityAuditReport",
        "acm-pca:GetCertificate",
        "acm-pca:GetCertificateAuthorityCertificate",
        "acm-pca:GetCertificateAuthorityCsr",
        "acm-pca:ImportCertificateAuthorityCertificate",
        "acm-pca:IssueCertificate",
        "acm-pca:ListCertificateAuthorities",
        "acm-pca:ListPermissions",
        "acm-pca:ListTags",
        "acm-pca:RestoreCertificateAuthority",
        "acm-pca:RevokeCertificate",
        "acm-pca:TagCertificateAuthority",
        "acm-pca:UntagCertificateAuthority",
        "acm-pca:UpdateCertificateAuthority",
        "acm:AddTagsToCertificate",
        "acm:DeleteCertificate",
        "acm:DescribeCertificate",
        "acm:ExportCertificate",
        "acm:GetCertificate",
        "acm:ImportCertificate",
        "acm:ListCertificates",
        "acm:ListTagsForCertificate",
        "acm:RemoveTagsFromCertificate",
        "acm:RenewCertificate",
        "acm:RequestCertificate",
        "acm:ResendValidationEmail",
        "acm:UpdateCertificateOptions",
        "amplify:CreateApp",
        "amplify:CreateBackendEnvironment",
        "amplify:CreateBranch",
        "amplify:CreateDeployment",
        "amplify:CreateDomainAssociation",
        "amplify:CreateWebHook",
        "amplify:DeleteApp",
        "amplify:DeleteBackendEnvironment",
        "amplify:DeleteBranch",
        "amplify:DeleteDomainAssociation",
        "amplify:DeleteJob",
        "amplify:DeleteWebHook",
        "amplify:GenerateAccessLogs",
        "amplify:GetApp",
        "amplify:GetArtifactUrl",
        "amplify:GetBackendEnvironment",
        "amplify:GetBranch",
        "amplify:GetDomainAssociation",
        "amplify:GetJob",
        "amplify:GetWebHook",
        "amplify:ListApps",
        "amplify:ListArtifacts",
        "amplify:ListBackendEnvironments",
        "amplify:ListBranches",
        "amplify:ListDomainAssociations",
        "amplify:ListJobs",
        "amplify:ListWebHooks",
        "amplify:StartDeployment",
        "amplify:StartJob",
        "amplify:StopJob",
        "amplify:TagResource",
        "amplify:UntagResource",
        "amplify:UpdateApp",
        "amplify:UpdateBranch",
        "amplify:UpdateDomainAssociation",
        "amplify:UpdateWebHook",
        "apigateway:DELETE",
        "apigateway:GET",
        "apigateway:PATCH",
        "apigateway:POST",
        "apigateway:PUT",
        "apigateway:SetWebACL",
        "apigateway:UpdateRestApiPolicy",
        "appconfig:CreateApplication",
        "appconfig:CreateConfigurationProfile",
        "appconfig:CreateDeploymentStrategy",
        "appconfig:CreateEnvironment",
        "appconfig:DeleteApplication",
        "appconfig:DeleteConfigurationProfile",
        "appconfig:DeleteDeploymentStrategy",
        "appconfig:DeleteEnvironment",
        "appconfig:GetApplication",
        "appconfig:GetConfiguration",
        "appconfig:GetConfigurationProfile",
        "appconfig:GetDeployment",
        "appconfig:GetDeploymentStrategy",
        "appconfig:GetEnvironment",
        "appconfig:ListApplications",
        "appconfig:ListConfigurationProfiles",
        "appconfig:ListDeploymentStrategies",
        "appconfig:ListDeployments",
        "appconfig:ListEnvironments",
        "appconfig:ListTagsForResource",
        "appconfig:StartDeployment",
        "appconfig:StopDeployment",
        "appconfig:TagResource",
        "appconfig:UntagResource",
        "appconfig:UpdateApplication",
        "appconfig:UpdateConfigurationProfile",
        "appconfig:UpdateDeploymentStrategy",
        "appconfig:UpdateEnvironment",
        "appconfig:ValidateConfiguration",
        "appflow:CreateConnectorProfile",
        "appflow:CreateFlow",
        "appflow:DeleteConnectorProfile",
        "appflow:DeleteFlow",
        "appflow:DescribeConnectorFields",
        "appflow:DescribeConnectorProfiles",
        "appflow:DescribeConnectors",
        "appflow:DescribeFlowExecution",
        "appflow:DescribeFlows",
        "appflow:ListConnectorFields",
        "appflow:ListTagsForResource",
        "appflow:RunFlow",
        "appflow:TagResource",
        "appflow:UntagResource",
        "appflow:UpdateFlow",
        "application-autoscaling:DeleteScalingPolicy",
        "application-autoscaling:DeleteScheduledAction",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingActivities",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DescribeScheduledActions",
        "application-autoscaling:PutScalingPolicy",
        "application-autoscaling:PutScheduledAction",
        "application-autoscaling:RegisterScalableTarget",
        "applicationinsights:CreateApplication",
        "applicationinsights:CreateComponent",
        "applicationinsights:DeleteApplication",
        "applicationinsights:DeleteComponent",
        "applicationinsights:DescribeApplication",
        "applicationinsights:DescribeComponent",
        "applicationinsights:DescribeComponentConfiguration",
        "applicationinsights:DescribeComponentConfigurationRecommendation",
        "applicationinsights:DescribeObservation",
        "applicationinsights:DescribeProblem",
        "applicationinsights:DescribeProblemObservations",
        "applicationinsights:ListApplications",
        "applicationinsights:ListComponents",
        "applicationinsights:ListProblems",
        "applicationinsights:UpdateApplication",
        "applicationinsights:UpdateComponent",
        "applicationinsights:UpdateComponentConfiguration",
        "appmesh-preview:CreateMesh",
        "appmesh-preview:CreateRoute",
        "appmesh-preview:CreateVirtualNode",
        "appmesh-preview:CreateVirtualRouter",
        "appmesh-preview:CreateVirtualService",
        "appmesh-preview:DeleteMesh",
        "appmesh-preview:DeleteRoute",
        "appmesh-preview:DeleteVirtualNode",
        "appmesh-preview:DeleteVirtualRouter",
        "appmesh-preview:DeleteVirtualService",
        "appmesh-preview:DescribeMesh",
        "appmesh-preview:DescribeRoute",
        "appmesh-preview:DescribeVirtualNode",
        "appmesh-preview:DescribeVirtualRouter",
        "appmesh-preview:DescribeVirtualService",
        "appmesh-preview:ListMeshes",
        "appmesh-preview:ListRoutes",
        "appmesh-preview:ListVirtualNodes",
        "appmesh-preview:ListVirtualRouters",
        "appmesh-preview:ListVirtualServices",
        "appmesh-preview:StreamAggregatedResources",
        "appmesh-preview:UpdateMesh",
        "appmesh-preview:UpdateRoute",
        "appmesh-preview:UpdateVirtualNode",
        "appmesh-preview:UpdateVirtualRouter",
        "appmesh-preview:UpdateVirtualService",
        "appmesh:CreateMesh",
        "appmesh:CreateRoute",
        "appmesh:CreateVirtualNode",
        "appmesh:CreateVirtualRouter",
        "appmesh:CreateVirtualService",
        "appmesh:DeleteMesh",
        "appmesh:DeleteRoute",
        "appmesh:DeleteVirtualNode",
        "appmesh:DeleteVirtualRouter",
        "appmesh:DeleteVirtualService",
        "appmesh:DescribeMesh",
        "appmesh:DescribeRoute",
        "appmesh:DescribeVirtualNode",
        "appmesh:DescribeVirtualRouter",
        "appmesh:DescribeVirtualService",
        "appmesh:ListMeshes",
        "appmesh:ListRoutes",
        "appmesh:ListTagsForResource",
        "appmesh:ListVirtualNodes",
        "appmesh:ListVirtualRouters",
        "appmesh:ListVirtualServices",
        "appmesh:StreamAggregatedResources",
        "appmesh:TagResource",
        "appmesh:UntagResource",
        "appmesh:UpdateMesh",
        "appmesh:UpdateRoute",
        "appmesh:UpdateVirtualNode",
        "appmesh:UpdateVirtualRouter",
        "appmesh:UpdateVirtualService",
        "appstream:AssociateFleet",
        "appstream:BatchAssociateUserStack",
        "appstream:BatchDisassociateUserStack",
        "appstream:CopyImage",
        "appstream:CreateDirectoryConfig",
        "appstream:CreateFleet",
        "appstream:CreateImageBuilder",
        "appstream:CreateImageBuilderStreamingURL",
        "appstream:CreateStack",
        "appstream:CreateStreamingURL",
        "appstream:CreateUsageReportSubscription",
        "appstream:CreateUser",
        "appstream:DeleteDirectoryConfig",
        "appstream:DeleteFleet",
        "appstream:DeleteImage",
        "appstream:DeleteImageBuilder",
        "appstream:DeleteImagePermissions",
        "appstream:DeleteStack",
        "appstream:DeleteUsageReportSubscription",
        "appstream:DeleteUser",
        "appstream:DescribeDirectoryConfigs",
        "appstream:DescribeFleets",
        "appstream:DescribeImageBuilders",
        "appstream:DescribeImagePermissions",
        "appstream:DescribeImages",
        "appstream:DescribeSessions",
        "appstream:DescribeStacks",
        "appstream:DescribeUsageReportSubscriptions",
        "appstream:DescribeUserStackAssociations",
        "appstream:DescribeUsers",
        "appstream:DisableUser",
        "appstream:DisassociateFleet",
        "appstream:EnableUser",
        "appstream:ExpireSession",
        "appstream:GetImageBuilders",
        "appstream:GetParametersForThemeAssetUpload",
        "appstream:ListAssociatedFleets",
        "appstream:ListAssociatedStacks",
        "appstream:ListTagsForResource",
        "appstream:StartFleet",
        "appstream:StartImageBuilder",
        "appstream:StopFleet",
        "appstream:StopImageBuilder",
        "appstream:Stream",
        "appstream:TagResource",
        "appstream:UntagResource",
        "appstream:UpdateDirectoryConfig",
        "appstream:UpdateFleet",
        "appstream:UpdateImagePermissions",
        "appstream:UpdateStack",
        "appsync:CreateApiKey",
        "appsync:CreateDataSource",
        "appsync:CreateFunction",
        "appsync:CreateGraphqlApi",
        "appsync:CreateResolver",
        "appsync:CreateType",
        "appsync:DeleteApiKey",
        "appsync:DeleteDataSource",
        "appsync:DeleteFunction",
        "appsync:DeleteGraphqlApi",
        "appsync:DeleteResolver",
        "appsync:DeleteType",
        "appsync:GetDataSource",
        "appsync:GetFunction",
        "appsync:GetGraphqlApi",
        "appsync:GetIntrospectionSchema",
        "appsync:GetResolver",
        "appsync:GetSchemaCreationStatus",
        "appsync:GetType",
        "appsync:GraphQL",
        "appsync:ListApiKeys",
        "appsync:ListDataSources",
        "appsync:ListFunctions",
        "appsync:ListGraphqlApis",
        "appsync:ListResolvers",
        "appsync:ListResolversByFunction",
        "appsync:ListTagsForResource",
        "appsync:ListTypes",
        "appsync:StartSchemaCreation",
        "appsync:TagResource",
        "appsync:UntagResource",
        "appsync:UpdateApiKey",
        "appsync:UpdateDataSource",
        "appsync:UpdateFunction",
        "appsync:UpdateGraphqlApi",
        "appsync:UpdateResolver",
        "appsync:UpdateType",
        "arsenal:RegisterOnPremisesAgent",
        "artifact:AcceptAgreement",
        "artifact:DownloadAgreement",
        "artifact:Get",
        "artifact:TerminateAgreement",
        "athena:BatchGetNamedQuery",
        "athena:BatchGetQueryExecution",
        "athena:CreateDataCatalog",
        "athena:CreateNamedQuery",
        "athena:CreateWorkGroup",
        "athena:DeleteDataCatalog",
        "athena:DeleteNamedQuery",
        "athena:DeleteWorkGroup",
        "athena:GetDataCatalog",
        "athena:GetDatabase",
        "athena:GetNamedQuery",
        "athena:GetQueryExecution",
        "athena:GetQueryResults",
        "athena:GetQueryResultsStream",
        "athena:GetTableMetadata",
        "athena:GetWorkGroup",
        "athena:ListDataCatalogs",
        "athena:ListDatabases",
        "athena:ListNamedQueries",
        "athena:ListQueryExecutions",
        "athena:ListTableMetadata",
        "athena:ListTagsForResource",
        "athena:ListWorkGroups",
        "athena:StartQueryExecution",
        "athena:StopQueryExecution",
        "athena:TagResource",
        "athena:UntagResource",
        "athena:UpdateDataCatalog",
        "athena:UpdateWorkGroup",
        "autoscaling-plans:CreateScalingPlan",
        "autoscaling-plans:DeleteScalingPlan",
        "autoscaling-plans:DescribeScalingPlanResources",
        "autoscaling-plans:DescribeScalingPlans",
        "autoscaling-plans:GetScalingPlanResourceForecastData",
        "autoscaling-plans:UpdateScalingPlan",
        "autoscaling:AttachInstances",
        "autoscaling:AttachLoadBalancerTargetGroups",
        "autoscaling:AttachLoadBalancers",
        "autoscaling:BatchDeleteScheduledAction",
        "autoscaling:BatchPutScheduledUpdateGroupAction",
        "autoscaling:CompleteLifecycleAction",
        "autoscaling:CreateAutoScalingGroup",
        "autoscaling:CreateLaunchConfiguration",
        "autoscaling:CreateOrUpdateTags",
        "autoscaling:DeleteAutoScalingGroup",
        "autoscaling:DeleteLaunchConfiguration",
        "autoscaling:DeleteLifecycleHook",
        "autoscaling:DeleteNotificationConfiguration",
        "autoscaling:DeletePolicy",
        "autoscaling:DeleteScheduledAction",
        "autoscaling:DeleteTags",
        "autoscaling:DescribeAccountLimits",
        "autoscaling:DescribeAdjustmentTypes",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeAutoScalingNotificationTypes",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeLifecycleHookTypes",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeLoadBalancerTargetGroups",
        "autoscaling:DescribeLoadBalancers",
        "autoscaling:DescribeMetricCollectionTypes",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:DescribePolicies",
        "autoscaling:DescribeScalingActivities",
        "autoscaling:DescribeScalingProcessTypes",
        "autoscaling:DescribeScheduledActions",
        "autoscaling:DescribeTags",
        "autoscaling:DescribeTerminationPolicyTypes",
        "autoscaling:DetachInstances",
        "autoscaling:DetachLoadBalancerTargetGroups",
        "autoscaling:DetachLoadBalancers",
        "autoscaling:DisableMetricsCollection",
        "autoscaling:EnableMetricsCollection",
        "autoscaling:EnterStandby",
        "autoscaling:ExecutePolicy",
        "autoscaling:ExitStandby",
        "autoscaling:PutLifecycleHook",
        "autoscaling:PutNotificationConfiguration",
        "autoscaling:PutScalingPolicy",
        "autoscaling:PutScheduledUpdateGroupAction",
        "autoscaling:RecordLifecycleActionHeartbeat",
        "autoscaling:ResumeProcesses",
        "autoscaling:SetDesiredCapacity",
        "autoscaling:SetInstanceHealth",
        "autoscaling:SetInstanceProtection",
        "autoscaling:SuspendProcesses",
        "autoscaling:TerminateInstanceInAutoScalingGroup",
        "autoscaling:UpdateAutoScalingGroup",
        "aws-marketplace-management:uploadFiles",
        "aws-marketplace-management:viewMarketing",
        "aws-marketplace-management:viewReports",
        "aws-marketplace-management:viewSettings",
        "aws-marketplace-management:viewSupport",
        "aws-marketplace:AcceptAgreementApprovalRequest",
        "aws-marketplace:AssociateProductsWithPrivateMarketplace",
        "aws-marketplace:BatchMeterUsage",
        "aws-marketplace:CancelAgreementRequest",
        "aws-marketplace:CancelChangeSet",
        "aws-marketplace:CompleteTask",
        "aws-marketplace:CreatePrivateMarketplace",
        "aws-marketplace:CreatePrivateMarketplaceProfile",
        "aws-marketplace:CreatePrivateMarketplaceRequests",
        "aws-marketplace:DescribeAgreement",
        "aws-marketplace:DescribeBuilds",
        "aws-marketplace:DescribeChangeSet",
        "aws-marketplace:DescribeEntity",
        "aws-marketplace:DescribePrivateMarketplaceProducts",
        "aws-marketplace:DescribePrivateMarketplaceProfile",
        "aws-marketplace:DescribePrivateMarketplaceRequests",
        "aws-marketplace:DescribePrivateMarketplaceSettings",
        "aws-marketplace:DescribePrivateMarketplaceStatus",
        "aws-marketplace:DescribeProcurementSystemConfiguration",
        "aws-marketplace:DescribeTask",
        "aws-marketplace:DisassociateProductsFromPrivateMarketplace",
        "aws-marketplace:GetAgreementApprovalRequest",
        "aws-marketplace:GetAgreementRequest",
        "aws-marketplace:GetAgreementTerms",
        "aws-marketplace:GetEntitlements",
        "aws-marketplace:ListAgreementApprovalRequests",
        "aws-marketplace:ListAgreementRequests",
        "aws-marketplace:ListBuilds",
        "aws-marketplace:ListChangeSets",
        "aws-marketplace:ListEntities",
        "aws-marketplace:ListPrivateMarketplaceProducts",
        "aws-marketplace:ListPrivateMarketplaceRequests",
        "aws-marketplace:ListTasks",
        "aws-marketplace:MeterUsage",
        "aws-marketplace:PutProcurementSystemConfiguration",
        "aws-marketplace:RegisterUsage",
        "aws-marketplace:RejectAgreementApprovalRequest",
        "aws-marketplace:ResolveCustomer",
        "aws-marketplace:SearchAgreements",
        "aws-marketplace:StartBuild",
        "aws-marketplace:StartChangeSet",
        "aws-marketplace:StartPrivateMarketplace",
        "aws-marketplace:StopPrivateMarketplace",
        "aws-marketplace:Subscribe",
        "aws-marketplace:Unsubscribe",
        "aws-marketplace:UpdateAgreementApprovalRequest",
        "aws-marketplace:UpdatePrivateMarketplaceProfile",
        "aws-marketplace:UpdatePrivateMarketplaceSettings",
        "aws-marketplace:UpdateTask",
        "aws-marketplace:ViewSubscriptions",
        "aws-portal:ModifyAccount",
        "aws-portal:ModifyBilling",
        "aws-portal:ModifyPaymentMethods",
        "aws-portal:ViewAccount",
        "aws-portal:ViewBilling",
        "aws-portal:ViewPaymentMethods",
        "aws-portal:ViewUsage",
        "awsconnector:GetConnectorHealth",
        "awsconnector:RegisterConnector",
        "awsconnector:ValidateConnectorId",
        "backup-storage:MountCapsule",
        "backup:CopyIntoBackupVault",
        "backup:CreateBackupPlan",
        "backup:CreateBackupSelection",
        "backup:CreateBackupVault",
        "backup:DeleteBackupPlan",
        "backup:DeleteBackupSelection",
        "backup:DeleteBackupVault",
        "backup:DeleteBackupVaultAccessPolicy",
        "backup:DeleteBackupVaultNotifications",
        "backup:DeleteRecoveryPoint",
        "backup:DescribeBackupJob",
        "backup:DescribeBackupVault",
        "backup:DescribeCopyJob",
        "backup:DescribeProtectedResource",
        "backup:DescribeRecoveryPoint",
        "backup:DescribeRestoreJob",
        "backup:ExportBackupPlanTemplate",
        "backup:GetBackupPlan",
        "backup:GetBackupPlanFromJSON",
        "backup:GetBackupPlanFromTemplate",
        "backup:GetBackupSelection",
        "backup:GetBackupVaultAccessPolicy",
        "backup:GetBackupVaultNotifications",
        "backup:GetRecoveryPointRestoreMetadata",
        "backup:GetSupportedResourceTypes",
        "backup:ListBackupJobs",
        "backup:ListBackupPlanTemplates",
        "backup:ListBackupPlanVersions",
        "backup:ListBackupPlans",
        "backup:ListBackupSelections",
        "backup:ListBackupVaults",
        "backup:ListCopyJobs",
        "backup:ListProtectedResources",
        "backup:ListRecoveryPointsByBackupVault",
        "backup:ListRecoveryPointsByResource",
        "backup:ListRestoreJobs",
        "backup:ListTags",
        "backup:PutBackupVaultAccessPolicy",
        "backup:PutBackupVaultNotifications",
        "backup:StartBackupJob",
        "backup:StartCopyJob",
        "backup:StartRestoreJob",
        "backup:StopBackupJob",
        "backup:TagResource",
        "backup:UntagResource",
        "backup:UpdateBackupPlan",
        "backup:UpdateRecoveryPointLifecycle",
        "batch:CancelJob",
        "batch:CreateComputeEnvironment",
        "batch:CreateJobQueue",
        "batch:DeleteComputeEnvironment",
        "batch:DeleteJobQueue",
        "batch:DeregisterJobDefinition",
        "batch:DescribeComputeEnvironments",
        "batch:DescribeJobDefinitions",
        "batch:DescribeJobQueues",
        "batch:DescribeJobs",
        "batch:ListJobs",
        "batch:RegisterJobDefinition",
        "batch:SubmitJob",
        "batch:TerminateJob",
        "batch:UpdateComputeEnvironment",
        "batch:UpdateJobQueue",
        "budgets:ModifyBudget",
        "budgets:ViewBudget",
        "cassandra:Alter",
        "cassandra:Create",
        "cassandra:Drop",
        "cassandra:Modify",
        "cassandra:Select",
        "cassandra:TagResource",
        "cassandra:UntagResource",
        "ce:CreateCostCategoryDefinition",
        "ce:DeleteCostCategoryDefinition",
        "ce:DescribeCostCategoryDefinition",
        "ce:GetCostAndUsage",
        "ce:GetCostAndUsageWithResources",
        "ce:GetCostForecast",
        "ce:GetDimensionValues",
        "ce:GetReservationCoverage",
        "ce:GetReservationPurchaseRecommendation",
        "ce:GetReservationUtilization",
        "ce:GetRightsizingRecommendation",
        "ce:GetSavingsPlansCoverage",
        "ce:GetSavingsPlansPurchaseRecommendation",
        "ce:GetSavingsPlansUtilization",
        "ce:GetSavingsPlansUtilizationDetails",
        "ce:GetTags",
        "ce:GetUsageForecast",
        "ce:ListCostCategoryDefinitions",
        "ce:UpdateCostCategoryDefinition",
        "chatbot:CreateChimeWebhookConfiguration",
        "chatbot:CreateSlackChannelConfiguration",
        "chatbot:DeleteChimeWebhookConfiguration",
        "chatbot:DeleteSlackChannelConfiguration",
        "chatbot:DescribeChimeWebhookConfigurations",
        "chatbot:DescribeSlackChannelConfigurations",
        "chatbot:DescribeSlackChannels",
        "chatbot:DescribeSlackWorkspaces",
        "chatbot:GetSlackOauthParameters",
        "chatbot:RedeemSlackOauthCode",
        "chatbot:UpdateChimeWebhookConfiguration",
        "chatbot:UpdateSlackChannelConfiguration",
        "chime:AcceptDelegate",
        "chime:ActivateUsers",
        "chime:AddDomain",
        "chime:AddOrUpdateGroups",
        "chime:AssociatePhoneNumberWithUser",
        "chime:AssociatePhoneNumbersWithVoiceConnector",
        "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
        "chime:AssociateSigninDelegateGroupsWithAccount",
        "chime:AuthorizeDirectory",
        "chime:BatchCreateAttendee",
        "chime:BatchCreateRoomMembership",
        "chime:BatchDeletePhoneNumber",
        "chime:BatchSuspendUser",
        "chime:BatchUnsuspendUser",
        "chime:BatchUpdatePhoneNumber",
        "chime:BatchUpdateUser",
        "chime:ConnectDirectory",
        "chime:CreateAccount",
        "chime:CreateApiKey",
        "chime:CreateAttendee",
        "chime:CreateBot",
        "chime:CreateBotMembership",
        "chime:CreateCDRBucket",
        "chime:CreateMeeting",
        "chime:CreatePhoneNumberOrder",
        "chime:CreateProxySession",
        "chime:CreateRoom",
        "chime:CreateRoomMembership",
        "chime:CreateUser",
        "chime:CreateVoiceConnector",
        "chime:CreateVoiceConnectorGroup",
        "chime:DeleteAccount",
        "chime:DeleteAccountOpenIdConfig",
        "chime:DeleteApiKey",
        "chime:DeleteAttendee",
        "chime:DeleteCDRBucket",
        "chime:DeleteDelegate",
        "chime:DeleteDomain",
        "chime:DeleteEventsConfiguration",
        "chime:DeleteGroups",
        "chime:DeleteMeeting",
        "chime:DeletePhoneNumber",
        "chime:DeleteProxySession",
        "chime:DeleteRoom",
        "chime:DeleteRoomMembership",
        "chime:DeleteVoiceConnector",
        "chime:DeleteVoiceConnectorGroup",
        "chime:DeleteVoiceConnectorOrigination",
        "chime:DeleteVoiceConnectorProxy",
        "chime:DeleteVoiceConnectorStreamingConfiguration",
        "chime:DeleteVoiceConnectorTermination",
        "chime:DeleteVoiceConnectorTerminationCredentials",
        "chime:DisassociatePhoneNumberFromUser",
        "chime:DisassociatePhoneNumbersFromVoiceConnector",
        "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "chime:DisassociateSigninDelegateGroupsFromAccount",
        "chime:DisconnectDirectory",
        "chime:GetAccount",
        "chime:GetAccountResource",
        "chime:GetAccountSettings",
        "chime:GetAccountWithOpenIdConfig",
        "chime:GetAttendee",
        "chime:GetBot",
        "chime:GetCDRBucket",
        "chime:GetDomain",
        "chime:GetEventsConfiguration",
        "chime:GetGlobalSettings",
        "chime:GetMeeting",
        "chime:GetMeetingDetail",
        "chime:GetPhoneNumber",
        "chime:GetPhoneNumberOrder",
        "chime:GetPhoneNumberSettings",
        "chime:GetProxySession",
        "chime:GetRetentionSettings",
        "chime:GetRoom",
        "chime:GetTelephonyLimits",
        "chime:GetUser",
        "chime:GetUserActivityReportData",
        "chime:GetUserByEmail",
        "chime:GetUserSettings",
        "chime:GetVoiceConnector",
        "chime:GetVoiceConnectorGroup",
        "chime:GetVoiceConnectorLoggingConfiguration",
        "chime:GetVoiceConnectorOrigination",
        "chime:GetVoiceConnectorProxy",
        "chime:GetVoiceConnectorStreamingConfiguration",
        "chime:GetVoiceConnectorTermination",
        "chime:GetVoiceConnectorTerminationHealth",
        "chime:InviteDelegate",
        "chime:InviteUsers",
        "chime:InviteUsersFromProvider",
        "chime:ListAccountUsageReportData",
        "chime:ListAccounts",
        "chime:ListApiKeys",
        "chime:ListAttendeeTags",
        "chime:ListAttendees",
        "chime:ListBots",
        "chime:ListCDRBucket",
        "chime:ListCallingRegions",
        "chime:ListDelegates",
        "chime:ListDirectories",
        "chime:ListDomains",
        "chime:ListGroups",
        "chime:ListMeetingEvents",
        "chime:ListMeetingTags",
        "chime:ListMeetings",
        "chime:ListMeetingsReportData",
        "chime:ListPhoneNumberOrders",
        "chime:ListPhoneNumbers",
        "chime:ListProxySessions",
        "chime:ListRoomMemberships",
        "chime:ListRooms",
        "chime:ListTagsForResource",
        "chime:ListUsers",
        "chime:ListVoiceConnectorGroups",
        "chime:ListVoiceConnectorTerminationCredentials",
        "chime:ListVoiceConnectors",
        "chime:LogoutUser",
        "chime:PutEventsConfiguration",
        "chime:PutRetentionSettings",
        "chime:PutVoiceConnectorLoggingConfiguration",
        "chime:PutVoiceConnectorOrigination",
        "chime:PutVoiceConnectorProxy",
        "chime:PutVoiceConnectorStreamingConfiguration",
        "chime:PutVoiceConnectorTermination",
        "chime:PutVoiceConnectorTerminationCredentials",
        "chime:RedactConversationMessage",
        "chime:RedactRoomMessage",
        "chime:RegenerateSecurityToken",
        "chime:RenameAccount",
        "chime:RenewDelegate",
        "chime:ResetAccountResource",
        "chime:ResetPersonalPIN",
        "chime:RestorePhoneNumber",
        "chime:RetrieveDataExports",
        "chime:SearchAvailablePhoneNumbers",
        "chime:StartDataExport",
        "chime:SubmitSupportRequest",
        "chime:SuspendUsers",
        "chime:TagAttendee",
        "chime:TagMeeting",
        "chime:TagResource",
        "chime:UnauthorizeDirectory",
        "chime:UntagAttendee",
        "chime:UntagMeeting",
        "chime:UntagResource",
        "chime:UpdateAccount",
        "chime:UpdateAccountOpenIdConfig",
        "chime:UpdateAccountResource",
        "chime:UpdateAccountSettings",
        "chime:UpdateBot",
        "chime:UpdateCDRSettings",
        "chime:UpdateGlobalSettings",
        "chime:UpdatePhoneNumber",
        "chime:UpdatePhoneNumberSettings",
        "chime:UpdateProxySession",
        "chime:UpdateRoom",
        "chime:UpdateRoomMembership",
        "chime:UpdateSupportedLicenses",
        "chime:UpdateUser",
        "chime:UpdateUserLicenses",
        "chime:UpdateUserSettings",
        "chime:UpdateVoiceConnector",
        "chime:UpdateVoiceConnectorGroup",
        "chime:ValidateAccountResource",
        "cloud9:CreateEnvironmentEC2",
        "cloud9:CreateEnvironmentMembership",
        "cloud9:DeleteEnvironment",
        "cloud9:DeleteEnvironmentMembership",
        "cloud9:DescribeEnvironmentMemberships",
        "cloud9:DescribeEnvironmentStatus",
        "cloud9:DescribeEnvironments",
        "cloud9:GetUserSettings",
        "cloud9:ListEnvironments",
        "cloud9:ListTagsForResource",
        "cloud9:TagResource",
        "cloud9:UntagResource",
        "cloud9:UpdateEnvironment",
        "cloud9:UpdateEnvironmentMembership",
        "cloud9:UpdateUserSettings",
        "clouddirectory:AddFacetToObject",
        "clouddirectory:ApplySchema",
        "clouddirectory:AttachObject",
        "clouddirectory:AttachPolicy",
        "clouddirectory:AttachToIndex",
        "clouddirectory:AttachTypedLink",
        "clouddirectory:BatchRead",
        "clouddirectory:BatchWrite",
        "clouddirectory:CreateDirectory",
        "clouddirectory:CreateFacet",
        "clouddirectory:CreateIndex",
        "clouddirectory:CreateObject",
        "clouddirectory:CreateSchema",
        "clouddirectory:CreateTypedLinkFacet",
        "clouddirectory:DeleteDirectory",
        "clouddirectory:DeleteFacet",
        "clouddirectory:DeleteObject",
        "clouddirectory:DeleteSchema",
        "clouddirectory:DeleteTypedLinkFacet",
        "clouddirectory:DetachFromIndex",
        "clouddirectory:DetachObject",
        "clouddirectory:DetachPolicy",
        "clouddirectory:DetachTypedLink",
        "clouddirectory:DisableDirectory",
        "clouddirectory:EnableDirectory",
        "clouddirectory:GetDirectory",
        "clouddirectory:GetFacet",
        "clouddirectory:GetLinkAttributes",
        "clouddirectory:GetObjectAttributes",
        "clouddirectory:GetObjectInformation",
        "clouddirectory:GetSchemaAsJson",
        "clouddirectory:GetTypedLinkFacetInformation",
        "clouddirectory:ListAppliedSchemaArns",
        "clouddirectory:ListAttachedIndices",
        "clouddirectory:ListDevelopmentSchemaArns",
        "clouddirectory:ListDirectories",
        "clouddirectory:ListFacetAttributes",
        "clouddirectory:ListFacetNames",
        "clouddirectory:ListIncomingTypedLinks",
        "clouddirectory:ListIndex",
        "clouddirectory:ListObjectAttributes",
        "clouddirectory:ListObjectChildren",
        "clouddirectory:ListObjectParentPaths",
        "clouddirectory:ListObjectParents",
        "clouddirectory:ListObjectPolicies",
        "clouddirectory:ListOutgoingTypedLinks",
        "clouddirectory:ListPolicyAttachments",
        "clouddirectory:ListPublishedSchemaArns",
        "clouddirectory:ListTagsForResource",
        "clouddirectory:ListTypedLinkFacetAttributes",
        "clouddirectory:ListTypedLinkFacetNames",
        "clouddirectory:LookupPolicy",
        "clouddirectory:PublishSchema",
        "clouddirectory:PutSchemaFromJson",
        "clouddirectory:RemoveFacetFromObject",
        "clouddirectory:TagResource",
        "clouddirectory:UntagResource",
        "clouddirectory:UpdateFacet",
        "clouddirectory:UpdateLinkAttributes",
        "clouddirectory:UpdateObjectAttributes",
        "clouddirectory:UpdateSchema",
        "clouddirectory:UpdateTypedLinkFacet",
        "cloudformation:CancelUpdateStack",
        "cloudformation:ContinueUpdateRollback",
        "cloudformation:CreateChangeSet",
        "cloudformation:CreateStack",
        "cloudformation:CreateStackInstances",
        "cloudformation:CreateStackSet",
        "cloudformation:CreateUploadBucket",
        "cloudformation:DeleteChangeSet",
        "cloudformation:DeleteStack",
        "cloudformation:DeleteStackInstances",
        "cloudformation:DeleteStackSet",
        "cloudformation:DeregisterType",
        "cloudformation:DescribeAccountLimits",
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStackDriftDetectionStatus",
        "cloudformation:DescribeStackEvents",
        "cloudformation:DescribeStackInstance",
        "cloudformation:DescribeStackResource",
        "cloudformation:DescribeStackResourceDrifts",
        "cloudformation:DescribeStackResources",
        "cloudformation:DescribeStackSet",
        "cloudformation:DescribeStackSetOperation",
        "cloudformation:DescribeStacks",
        "cloudformation:DescribeType",
        "cloudformation:DescribeTypeRegistration",
        "cloudformation:DetectStackDrift",
        "cloudformation:DetectStackResourceDrift",
        "cloudformation:DetectStackSetDrift",
        "cloudformation:EstimateTemplateCost",
        "cloudformation:ExecuteChangeSet",
        "cloudformation:GetStackPolicy",
        "cloudformation:GetTemplate",
        "cloudformation:GetTemplateSummary",
        "cloudformation:ListChangeSets",
        "cloudformation:ListExports",
        "cloudformation:ListImports",
        "cloudformation:ListStackInstances",
        "cloudformation:ListStackResources",
        "cloudformation:ListStackSetOperationResults",
        "cloudformation:ListStackSetOperations",
        "cloudformation:ListStackSets",
        "cloudformation:ListStacks",
        "cloudformation:ListTypeRegistrations",
        "cloudformation:ListTypeVersions",
        "cloudformation:ListTypes",
        "cloudformation:RegisterType",
        "cloudformation:SetStackPolicy",
        "cloudformation:SetTypeDefaultVersion",
        "cloudformation:SignalResource",
        "cloudformation:StopStackSetOperation",
        "cloudformation:TagResource",
        "cloudformation:UntagResource",
        "cloudformation:UpdateStack",
        "cloudformation:UpdateStackInstances",
        "cloudformation:UpdateStackSet",
        "cloudformation:UpdateTerminationProtection",
        "cloudformation:ValidateTemplate",
        "cloudfront:CreateCloudFrontOriginAccessIdentity",
        "cloudfront:CreateDistribution",
        "cloudfront:CreateDistributionWithTags",
        "cloudfront:CreateFieldLevelEncryptionConfig",
        "cloudfront:CreateFieldLevelEncryptionProfile",
        "cloudfront:CreateInvalidation",
        "cloudfront:CreatePublicKey",
        "cloudfront:CreateStreamingDistribution",
        "cloudfront:CreateStreamingDistributionWithTags",
        "cloudfront:DeleteCloudFrontOriginAccessIdentity",
        "cloudfront:DeleteDistribution",
        "cloudfront:DeleteFieldLevelEncryptionConfig",
        "cloudfront:DeleteFieldLevelEncryptionProfile",
        "cloudfront:DeletePublicKey",
        "cloudfront:DeleteStreamingDistribution",
        "cloudfront:GetCloudFrontOriginAccessIdentity",
        "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
        "cloudfront:GetDistribution",
        "cloudfront:GetDistributionConfig",
        "cloudfront:GetFieldLevelEncryption",
        "cloudfront:GetFieldLevelEncryptionConfig",
        "cloudfront:GetFieldLevelEncryptionProfile",
        "cloudfront:GetFieldLevelEncryptionProfileConfig",
        "cloudfront:GetInvalidation",
        "cloudfront:GetPublicKey",
        "cloudfront:GetPublicKeyConfig",
        "cloudfront:GetStreamingDistribution",
        "cloudfront:GetStreamingDistributionConfig",
        "cloudfront:ListCloudFrontOriginAccessIdentities",
        "cloudfront:ListDistributions",
        "cloudfront:ListDistributionsByLambdaFunction",
        "cloudfront:ListDistributionsByWebACLId",
        "cloudfront:ListFieldLevelEncryptionConfigs",
        "cloudfront:ListFieldLevelEncryptionProfiles",
        "cloudfront:ListInvalidations",
        "cloudfront:ListPublicKeys",
        "cloudfront:ListStreamingDistributions",
        "cloudfront:ListTagsForResource",
        "cloudfront:TagResource",
        "cloudfront:UntagResource",
        "cloudfront:UpdateCloudFrontOriginAccessIdentity",
        "cloudfront:UpdateDistribution",
        "cloudfront:UpdateFieldLevelEncryptionConfig",
        "cloudfront:UpdateFieldLevelEncryptionProfile",
        "cloudfront:UpdatePublicKey",
        "cloudfront:UpdateStreamingDistribution",
        "cloudhsm:AddTagsToResource",
        "cloudhsm:CopyBackupToRegion",
        "cloudhsm:CreateCluster",
        "cloudhsm:CreateHapg",
        "cloudhsm:CreateHsm",
        "cloudhsm:CreateLunaClient",
        "cloudhsm:DeleteBackup",
        "cloudhsm:DeleteCluster",
        "cloudhsm:DeleteHapg",
        "cloudhsm:DeleteHsm",
        "cloudhsm:DeleteLunaClient",
        "cloudhsm:DescribeBackups",
        "cloudhsm:DescribeClusters",
        "cloudhsm:DescribeHapg",
        "cloudhsm:DescribeHsm",
        "cloudhsm:DescribeLunaClient",
        "cloudhsm:GetConfig",
        "cloudhsm:InitializeCluster",
        "cloudhsm:ListAvailableZones",
        "cloudhsm:ListHapgs",
        "cloudhsm:ListHsms",
        "cloudhsm:ListLunaClients",
        "cloudhsm:ListTags",
        "cloudhsm:ListTagsForResource",
        "cloudhsm:ModifyHapg",
        "cloudhsm:ModifyHsm",
        "cloudhsm:ModifyLunaClient",
        "cloudhsm:RemoveTagsFromResource",
        "cloudhsm:RestoreBackup",
        "cloudhsm:TagResource",
        "cloudhsm:UntagResource",
        "cloudsearch:AddTags",
        "cloudsearch:BuildSuggesters",
        "cloudsearch:CreateDomain",
        "cloudsearch:DefineAnalysisScheme",
        "cloudsearch:DefineExpression",
        "cloudsearch:DefineIndexField",
        "cloudsearch:DefineSuggester",
        "cloudsearch:DeleteAnalysisScheme",
        "cloudsearch:DeleteDomain",
        "cloudsearch:DeleteExpression",
        "cloudsearch:DeleteIndexField",
        "cloudsearch:DeleteSuggester",
        "cloudsearch:DescribeAnalysisSchemes",
        "cloudsearch:DescribeAvailabilityOptions",
        "cloudsearch:DescribeDomainEndpointOptions",
        "cloudsearch:DescribeDomains",
        "cloudsearch:DescribeExpressions",
        "cloudsearch:DescribeIndexFields",
        "cloudsearch:DescribeScalingParameters",
        "cloudsearch:DescribeServiceAccessPolicies",
        "cloudsearch:DescribeSuggesters",
        "cloudsearch:IndexDocuments",
        "cloudsearch:ListDomainNames",
        "cloudsearch:ListTags",
        "cloudsearch:RemoveTags",
        "cloudsearch:UpdateAvailabilityOptions",
        "cloudsearch:UpdateDomainEndpointOptions",
        "cloudsearch:UpdateScalingParameters",
        "cloudsearch:UpdateServiceAccessPolicies",
        "cloudsearch:document",
        "cloudsearch:search",
        "cloudsearch:suggest",
        "cloudtrail:AddTags",
        "cloudtrail:CreateTrail",
        "cloudtrail:DeleteTrail",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:GetInsightSelectors",
        "cloudtrail:GetTrail",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:ListPublicKeys",
        "cloudtrail:ListTags",
        "cloudtrail:ListTrails",
        "cloudtrail:LookupEvents",
        "cloudtrail:PutEventSelectors",
        "cloudtrail:PutInsightSelectors",
        "cloudtrail:RemoveTags",
        "cloudtrail:StartLogging",
        "cloudtrail:StopLogging",
        "cloudtrail:UpdateTrail",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DeleteAnomalyDetector",
        "cloudwatch:DeleteDashboards",
        "cloudwatch:DeleteInsightRules",
        "cloudwatch:DescribeAlarmHistory",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:DescribeAlarmsForMetric",
        "cloudwatch:DescribeAnomalyDetectors",
        "cloudwatch:DescribeInsightRules",
        "cloudwatch:DisableAlarmActions",
        "cloudwatch:DisableInsightRules",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:EnableInsightRules",
        "cloudwatch:GetDashboard",
        "cloudwatch:GetInsightRuleReport",
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:GetMetricWidgetImage",
        "cloudwatch:ListDashboards",
        "cloudwatch:ListMetrics",
        "cloudwatch:ListTagsForResource",
        "cloudwatch:PutAnomalyDetector",
        "cloudwatch:PutDashboard",
        "cloudwatch:PutInsightRule",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:PutMetricData",
        "cloudwatch:SetAlarmState",
        "cloudwatch:TagResource",
        "cloudwatch:UntagResource",
        "codeartifact:AssociateExternalConnection",
        "codeartifact:AssociateWithDownstreamRepository",
        "codeartifact:CopyPackageVersions",
        "codeartifact:CreateDomain",
        "codeartifact:CreateRepository",
        "codeartifact:DeleteDomain",
        "codeartifact:DeleteDomainPermissionsPolicy",
        "codeartifact:DeletePackageVersions",
        "codeartifact:DeleteRepository",
        "codeartifact:DeleteRepositoryPermissionsPolicy",
        "codeartifact:DescribeDomain",
        "codeartifact:DescribePackageVersion",
        "codeartifact:DescribeRepository",
        "codeartifact:DisassociateExternalConnection",
        "codeartifact:DisposePackageVersions",
        "codeartifact:GetAuthorizationToken",
        "codeartifact:GetDomainPermissionsPolicy",
        "codeartifact:GetPackageVersionAsset",
        "codeartifact:GetPackageVersionReadme",
        "codeartifact:GetRepositoryEndpoint",
        "codeartifact:GetRepositoryPermissionsPolicy",
        "codeartifact:ListDomains",
        "codeartifact:ListPackageVersionAssets",
        "codeartifact:ListPackageVersionDependencies",
        "codeartifact:ListPackageVersions",
        "codeartifact:ListPackages",
        "codeartifact:ListRepositories",
        "codeartifact:ListRepositoriesInDomain",
        "codeartifact:PublishPackageVersion",
        "codeartifact:PutDomainPermissionsPolicy",
        "codeartifact:PutPackageMetadata",
        "codeartifact:PutRepositoryPermissionsPolicy",
        "codeartifact:ReadFromRepository",
        "codeartifact:UpdatePackageVersionsStatus",
        "codeartifact:UpdateRepository",
        "codebuild:BatchDeleteBuilds",
        "codebuild:BatchGetBuilds",
        "codebuild:BatchGetProjects",
        "codebuild:BatchGetReportGroups",
        "codebuild:BatchGetReports",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateProject",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:CreateWebhook",
        "codebuild:DeleteOAuthToken",
        "codebuild:DeleteProject",
        "codebuild:DeleteReport",
        "codebuild:DeleteReportGroup",
        "codebuild:DeleteResourcePolicy",
        "codebuild:DeleteSourceCredentials",
        "codebuild:DeleteWebhook",
        "codebuild:DescribeTestCases",
        "codebuild:GetResourcePolicy",
        "codebuild:ImportSourceCredentials",
        "codebuild:InvalidateProjectCache",
        "codebuild:ListBuilds",
        "codebuild:ListBuildsForProject",
        "codebuild:ListConnectedOAuthAccounts",
        "codebuild:ListCuratedEnvironmentImages",
        "codebuild:ListProjects",
        "codebuild:ListReportGroups",
        "codebuild:ListReports",
        "codebuild:ListReportsForReportGroup",
        "codebuild:ListRepositories",
        "codebuild:ListSharedProjects",
        "codebuild:ListSharedReportGroups",
        "codebuild:ListSourceCredentials",
        "codebuild:PersistOAuthToken",
        "codebuild:PutResourcePolicy",
        "codebuild:StartBuild",
        "codebuild:StopBuild",
        "codebuild:UpdateProject",
        "codebuild:UpdateReport",
        "codebuild:UpdateReportGroup",
        "codebuild:UpdateWebhook",
        "codecommit:AssociateApprovalRuleTemplateWithRepository",
        "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
        "codecommit:BatchDescribeMergeConflicts",
        "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
        "codecommit:BatchGetCommits",
        "codecommit:BatchGetPullRequests",
        "codecommit:BatchGetRepositories",
        "codecommit:CancelUploadArchive",
        "codecommit:CreateApprovalRuleTemplate",
        "codecommit:CreateBranch",
        "codecommit:CreateCommit",
        "codecommit:CreatePullRequest",
        "codecommit:CreatePullRequestApprovalRule",
        "codecommit:CreateRepository",
        "codecommit:CreateUnreferencedMergeCommit",
        "codecommit:DeleteApprovalRuleTemplate",
        "codecommit:DeleteBranch",
        "codecommit:DeleteCommentContent",
        "codecommit:DeleteFile",
        "codecommit:DeletePullRequestApprovalRule",
        "codecommit:DeleteRepository",
        "codecommit:DescribeMergeConflicts",
        "codecommit:DescribePullRequestEvents",
        "codecommit:DisassociateApprovalRuleTemplateFromRepository",
        "codecommit:EvaluatePullRequestApprovalRules",
        "codecommit:GetApprovalRuleTemplate",
        "codecommit:GetBlob",
        "codecommit:GetBranch",
        "codecommit:GetComment",
        "codecommit:GetCommentsForComparedCommit",
        "codecommit:GetCommentsForPullRequest",
        "codecommit:GetCommit",
        "codecommit:GetCommitHistory",
        "codecommit:GetCommitsFromMergeBase",
        "codecommit:GetDifferences",
        "codecommit:GetFile",
        "codecommit:GetFolder",
        "codecommit:GetMergeCommit",
        "codecommit:GetMergeConflicts",
        "codecommit:GetMergeOptions",
        "codecommit:GetObjectIdentifier",
        "codecommit:GetPullRequest",
        "codecommit:GetPullRequestApprovalStates",
        "codecommit:GetPullRequestOverrideState",
        "codecommit:GetReferences",
        "codecommit:GetRepository",
        "codecommit:GetRepositoryTriggers",
        "codecommit:GetTree",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:GitPull",
        "codecommit:GitPush",
        "codecommit:ListApprovalRuleTemplates",
        "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
        "codecommit:ListBranches",
        "codecommit:ListPullRequests",
        "codecommit:ListRepositories",
        "codecommit:ListRepositoriesForApprovalRuleTemplate",
        "codecommit:ListTagsForResource",
        "codecommit:MergeBranchesByFastForward",
        "codecommit:MergeBranchesBySquash",
        "codecommit:MergeBranchesByThreeWay",
        "codecommit:MergePullRequestByFastForward",
        "codecommit:MergePullRequestBySquash",
        "codecommit:MergePullRequestByThreeWay",
        "codecommit:OverridePullRequestApprovalRules",
        "codecommit:PostCommentForComparedCommit",
        "codecommit:PostCommentForPullRequest",
        "codecommit:PostCommentReply",
        "codecommit:PutFile",
        "codecommit:PutRepositoryTriggers",
        "codecommit:TagResource",
        "codecommit:TestRepositoryTriggers",
        "codecommit:UntagResource",
        "codecommit:UpdateApprovalRuleTemplateContent",
        "codecommit:UpdateApprovalRuleTemplateDescription",
        "codecommit:UpdateApprovalRuleTemplateName",
        "codecommit:UpdateComment",
        "codecommit:UpdateDefaultBranch",
        "codecommit:UpdatePullRequestApprovalRuleContent",
        "codecommit:UpdatePullRequestApprovalState",
        "codecommit:UpdatePullRequestDescription",
        "codecommit:UpdatePullRequestStatus",
        "codecommit:UpdatePullRequestTitle",
        "codecommit:UpdateRepositoryDescription",
        "codecommit:UpdateRepositoryName",
        "codecommit:UploadArchive",
        "codedeploy:AddTagsToOnPremisesInstances",
        "codedeploy:BatchGetApplicationRevisions",
        "codedeploy:BatchGetApplications",
        "codedeploy:BatchGetDeploymentGroups",
        "codedeploy:BatchGetDeploymentInstances",
        "codedeploy:BatchGetDeploymentTargets",
        "codedeploy:BatchGetDeployments",
        "codedeploy:BatchGetOnPremisesInstances",
        "codedeploy:ContinueDeployment",
        "codedeploy:CreateApplication",
        "codedeploy:CreateCloudFormationDeployment",
        "codedeploy:CreateDeployment",
        "codedeploy:CreateDeploymentConfig",
        "codedeploy:CreateDeploymentGroup",
        "codedeploy:DeleteApplication",
        "codedeploy:DeleteDeploymentConfig",
        "codedeploy:DeleteDeploymentGroup",
        "codedeploy:DeleteGitHubAccountToken",
        "codedeploy:DeleteResourcesByExternalId",
        "codedeploy:DeregisterOnPremisesInstance",
        "codedeploy:GetApplication",
        "codedeploy:GetApplicationRevision",
        "codedeploy:GetDeployment",
        "codedeploy:GetDeploymentConfig",
        "codedeploy:GetDeploymentGroup",
        "codedeploy:GetDeploymentInstance",
        "codedeploy:GetDeploymentTarget",
        "codedeploy:GetOnPremisesInstance",
        "codedeploy:ListApplicationRevisions",
        "codedeploy:ListApplications",
        "codedeploy:ListDeploymentConfigs",
        "codedeploy:ListDeploymentGroups",
        "codedeploy:ListDeploymentInstances",
        "codedeploy:ListDeploymentTargets",
        "codedeploy:ListDeployments",
        "codedeploy:ListGitHubAccountTokenNames",
        "codedeploy:ListOnPremisesInstances",
        "codedeploy:ListTagsForResource",
        "codedeploy:PutLifecycleEventHookExecutionStatus",
        "codedeploy:RegisterApplicationRevision",
        "codedeploy:RegisterOnPremisesInstance",
        "codedeploy:RemoveTagsFromOnPremisesInstances",
        "codedeploy:SkipWaitTimeForInstanceTermination",
        "codedeploy:StopDeployment",
        "codedeploy:TagResource",
        "codedeploy:UntagResource",
        "codedeploy:UpdateApplication",
        "codedeploy:UpdateDeploymentGroup",
        "codeguru-profiler:ConfigureAgent",
        "codeguru-profiler:CreateProfilingGroup",
        "codeguru-profiler:DeleteProfilingGroup",
        "codeguru-profiler:DescribeProfilingGroup",
        "codeguru-profiler:GetFindingsReport",
        "codeguru-profiler:GetFindingsReportAccountSummary",
        "codeguru-profiler:GetPolicy",
        "codeguru-profiler:GetProfile",
        "codeguru-profiler:GetRecommendations",
        "codeguru-profiler:ListFindingsReports",
        "codeguru-profiler:ListProfileTimes",
        "codeguru-profiler:ListProfilingGroups",
        "codeguru-profiler:PostAgentProfile",
        "codeguru-profiler:PutPermission",
        "codeguru-profiler:RemovePermission",
        "codeguru-profiler:UpdateProfilingGroup",
        "codeguru-reviewer:AssociateRepository",
        "codeguru-reviewer:CreateConnectionToken",
        "codeguru-reviewer:DescribeCodeReview",
        "codeguru-reviewer:DescribeRecommendationFeedback",
        "codeguru-reviewer:DescribeRepositoryAssociation",
        "codeguru-reviewer:DisassociateRepository",
        "codeguru-reviewer:GetMetricsData",
        "codeguru-reviewer:ListCodeReviews",
        "codeguru-reviewer:ListRecommendationFeedback",
        "codeguru-reviewer:ListRecommendations",
        "codeguru-reviewer:ListRepositoryAssociations",
        "codeguru-reviewer:ListThirdPartyRepositories",
        "codeguru-reviewer:PutRecommendationFeedback",
        "codeguru:GetCodeGuruFreeTrialSummary",
        "codepipeline:AcknowledgeJob",
        "codepipeline:AcknowledgeThirdPartyJob",
        "codepipeline:CreateCustomActionType",
        "codepipeline:CreatePipeline",
        "codepipeline:DeleteCustomActionType",
        "codepipeline:DeletePipeline",
        "codepipeline:DeleteWebhook",
        "codepipeline:DeregisterWebhookWithThirdParty",
        "codepipeline:DisableStageTransition",
        "codepipeline:EnableStageTransition",
        "codepipeline:GetJobDetails",
        "codepipeline:GetPipeline",
        "codepipeline:GetPipelineExecution",
        "codepipeline:GetPipelineState",
        "codepipeline:GetThirdPartyJobDetails",
        "codepipeline:ListActionExecutions",
        "codepipeline:ListActionTypes",
        "codepipeline:ListPipelineExecutions",
        "codepipeline:ListPipelines",
        "codepipeline:ListTagsForResource",
        "codepipeline:ListWebhooks",
        "codepipeline:PollForJobs",
        "codepipeline:PollForThirdPartyJobs",
        "codepipeline:PutActionRevision",
        "codepipeline:PutApprovalResult",
        "codepipeline:PutJobFailureResult",
        "codepipeline:PutJobSuccessResult",
        "codepipeline:PutThirdPartyJobFailureResult",
        "codepipeline:PutThirdPartyJobSuccessResult",
        "codepipeline:PutWebhook",
        "codepipeline:RegisterWebhookWithThirdParty",
        "codepipeline:RetryStageExecution",
        "codepipeline:StartPipelineExecution",
        "codepipeline:StopPipelineExecution",
        "codepipeline:TagResource",
        "codepipeline:UntagResource",
        "codepipeline:UpdatePipeline",
        "codestar-connections:CreateConnection",
        "codestar-connections:DeleteConnection",
        "codestar-connections:GetConnection",
        "codestar-connections:GetIndividualAccessToken",
        "codestar-connections:GetInstallationUrl",
        "codestar-connections:ListConnections",
        "codestar-connections:ListInstallationTargets",
        "codestar-connections:ListTagsForResource",
        "codestar-connections:PassConnection",
        "codestar-connections:StartOAuthHandshake",
        "codestar-connections:TagResource",
        "codestar-connections:UntagResource",
        "codestar-connections:UpdateConnectionInstallation",
        "codestar-connections:UseConnection",
        "codestar-notifications:CreateNotificationRule",
        "codestar-notifications:DeleteNotificationRule",
        "codestar-notifications:DeleteTarget",
        "codestar-notifications:DescribeNotificationRule",
        "codestar-notifications:ListEventTypes",
        "codestar-notifications:ListNotificationRules",
        "codestar-notifications:ListTagsForResource",
        "codestar-notifications:ListTargets",
        "codestar-notifications:Subscribe",
        "codestar-notifications:TagResource",
        "codestar-notifications:Unsubscribe",
        "codestar-notifications:UntagResource",
        "codestar-notifications:UpdateNotificationRule",
        "codestar:AssociateTeamMember",
        "codestar:CreateProject",
        "codestar:CreateUserProfile",
        "codestar:DeleteExtendedAccess",
        "codestar:DeleteProject",
        "codestar:DeleteUserProfile",
        "codestar:DescribeProject",
        "codestar:DescribeUserProfile",
        "codestar:DisassociateTeamMember",
        "codestar:GetExtendedAccess",
        "codestar:ListProjects",
        "codestar:ListResources",
        "codestar:ListTagsForProject",
        "codestar:ListTeamMembers",
        "codestar:ListUserProfiles",
        "codestar:PutExtendedAccess",
        "codestar:TagProject",
        "codestar:UntagProject",
        "codestar:UpdateProject",
        "codestar:UpdateTeamMember",
        "codestar:UpdateUserProfile",
        "cognito-identity:CreateIdentityPool",
        "cognito-identity:DeleteIdentities",
        "cognito-identity:DeleteIdentityPool",
        "cognito-identity:DescribeIdentity",
        "cognito-identity:DescribeIdentityPool",
        "cognito-identity:GetCredentialsForIdentity",
        "cognito-identity:GetId",
        "cognito-identity:GetIdentityPoolRoles",
        "cognito-identity:GetOpenIdToken",
        "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
        "cognito-identity:ListIdentities",
        "cognito-identity:ListIdentityPools",
        "cognito-identity:ListTagsForResource",
        "cognito-identity:LookupDeveloperIdentity",
        "cognito-identity:MergeDeveloperIdentities",
        "cognito-identity:SetIdentityPoolRoles",
        "cognito-identity:TagResource",
        "cognito-identity:UnlinkDeveloperIdentity",
        "cognito-identity:UnlinkIdentity",
        "cognito-identity:UntagResource",
        "cognito-identity:UpdateIdentityPool",
        "cognito-idp:AddCustomAttributes",
        "cognito-idp:AdminAddUserToGroup",
        "cognito-idp:AdminConfirmSignUp",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminDeleteUserAttributes",
        "cognito-idp:AdminDisableProviderForUser",
        "cognito-idp:AdminDisableUser",
        "cognito-idp:AdminEnableUser",
        "cognito-idp:AdminForgetDevice",
        "cognito-idp:AdminGetDevice",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminLinkProviderForUser",
        "cognito-idp:AdminListDevices",
        "cognito-idp:AdminListGroupsForUser",
        "cognito-idp:AdminListUserAuthEvents",
        "cognito-idp:AdminRemoveUserFromGroup",
        "cognito-idp:AdminResetUserPassword",
        "cognito-idp:AdminRespondToAuthChallenge",
        "cognito-idp:AdminSetUserMFAPreference",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminSetUserSettings",
        "cognito-idp:AdminUpdateAuthEventFeedback",
        "cognito-idp:AdminUpdateDeviceStatus",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:AdminUserGlobalSignOut",
        "cognito-idp:AssociateSoftwareToken",
        "cognito-idp:ChangePassword",
        "cognito-idp:ConfirmDevice",
        "cognito-idp:ConfirmForgotPassword",
        "cognito-idp:ConfirmSignUp",
        "cognito-idp:CreateGroup",
        "cognito-idp:CreateIdentityProvider",
        "cognito-idp:CreateResourceServer",
        "cognito-idp:CreateUserImportJob",
        "cognito-idp:CreateUserPool",
        "cognito-idp:CreateUserPoolClient",
        "cognito-idp:CreateUserPoolDomain",
        "cognito-idp:DeleteGroup",
        "cognito-idp:DeleteIdentityProvider",
        "cognito-idp:DeleteResourceServer",
        "cognito-idp:DeleteUser",
        "cognito-idp:DeleteUserAttributes",
        "cognito-idp:DeleteUserPool",
        "cognito-idp:DeleteUserPoolClient",
        "cognito-idp:DeleteUserPoolDomain",
        "cognito-idp:DescribeIdentityProvider",
        "cognito-idp:DescribeResourceServer",
        "cognito-idp:DescribeRiskConfiguration",
        "cognito-idp:DescribeUserImportJob",
        "cognito-idp:DescribeUserPool",
        "cognito-idp:DescribeUserPoolClient",
        "cognito-idp:DescribeUserPoolDomain",
        "cognito-idp:ForgetDevice",
        "cognito-idp:ForgotPassword",
        "cognito-idp:GetCSVHeader",
        "cognito-idp:GetDevice",
        "cognito-idp:GetGroup",
        "cognito-idp:GetIdentityProviderByIdentifier",
        "cognito-idp:GetSigningCertificate",
        "cognito-idp:GetUICustomization",
        "cognito-idp:GetUser",
        "cognito-idp:GetUserAttributeVerificationCode",
        "cognito-idp:GetUserPoolMfaConfig",
        "cognito-idp:GlobalSignOut",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListDevices",
        "cognito-idp:ListGroups",
        "cognito-idp:ListIdentityProviders",
        "cognito-idp:ListResourceServers",
        "cognito-idp:ListTagsForResource",
        "cognito-idp:ListUserImportJobs",
        "cognito-idp:ListUserPoolClients",
        "cognito-idp:ListUserPools",
        "cognito-idp:ListUsers",
        "cognito-idp:ListUsersInGroup",
        "cognito-idp:ResendConfirmationCode",
        "cognito-idp:RespondToAuthChallenge",
        "cognito-idp:SetRiskConfiguration",
        "cognito-idp:SetUICustomization",
        "cognito-idp:SetUserMFAPreference",
        "cognito-idp:SetUserPoolMfaConfig",
        "cognito-idp:SetUserSettings",
        "cognito-idp:SignUp",
        "cognito-idp:StartUserImportJob",
        "cognito-idp:StopUserImportJob",
        "cognito-idp:TagResource",
        "cognito-idp:UntagResource",
        "cognito-idp:UpdateAuthEventFeedback",
        "cognito-idp:UpdateDeviceStatus",
        "cognito-idp:UpdateGroup",
        "cognito-idp:UpdateIdentityProvider",
        "cognito-idp:UpdateResourceServer",
        "cognito-idp:UpdateUserAttributes",
        "cognito-idp:UpdateUserPool",
        "cognito-idp:UpdateUserPoolClient",
        "cognito-idp:UpdateUserPoolDomain",
        "cognito-idp:VerifySoftwareToken",
        "cognito-idp:VerifyUserAttribute",
        "cognito-sync:BulkPublish",
        "cognito-sync:DeleteDataset",
        "cognito-sync:DescribeDataset",
        "cognito-sync:DescribeIdentityPoolUsage",
        "cognito-sync:DescribeIdentityUsage",
        "cognito-sync:GetBulkPublishDetails",
        "cognito-sync:GetCognitoEvents",
        "cognito-sync:GetIdentityPoolConfiguration",
        "cognito-sync:ListDatasets",
        "cognito-sync:ListIdentityPoolUsage",
        "cognito-sync:ListRecords",
        "cognito-sync:QueryRecords",
        "cognito-sync:RegisterDevice",
        "cognito-sync:SetCognitoEvents",
        "cognito-sync:SetDatasetConfiguration",
        "cognito-sync:SetIdentityPoolConfiguration",
        "cognito-sync:SubscribeToDataset",
        "cognito-sync:UnsubscribeFromDataset",
        "cognito-sync:UpdateRecords",
        "comprehend:BatchDetectDominantLanguage",
        "comprehend:BatchDetectEntities",
        "comprehend:BatchDetectKeyPhrases",
        "comprehend:BatchDetectSentiment",
        "comprehend:BatchDetectSyntax",
        "comprehend:ClassifyDocument",
        "comprehend:CreateDocumentClassifier",
        "comprehend:CreateEndpoint",
        "comprehend:CreateEntityRecognizer",
        "comprehend:DeleteDocumentClassifier",
        "comprehend:DeleteEndpoint",
        "comprehend:DeleteEntityRecognizer",
        "comprehend:DescribeDocumentClassificationJob",
        "comprehend:DescribeDocumentClassifier",
        "comprehend:DescribeDominantLanguageDetectionJob",
        "comprehend:DescribeEndpoint",
        "comprehend:DescribeEntitiesDetectionJob",
        "comprehend:DescribeEntityRecognizer",
        "comprehend:DescribeKeyPhrasesDetectionJob",
        "comprehend:DescribeSentimentDetectionJob",
        "comprehend:DescribeTopicsDetectionJob",
        "comprehend:DetectDominantLanguage",
        "comprehend:DetectEntities",
        "comprehend:DetectKeyPhrases",
        "comprehend:DetectSentiment",
        "comprehend:DetectSyntax",
        "comprehend:ListDocumentClassificationJobs",
        "comprehend:ListDocumentClassifiers",
        "comprehend:ListDominantLanguageDetectionJobs",
        "comprehend:ListEndpoints",
        "comprehend:ListEntitiesDetectionJobs",
        "comprehend:ListEntityRecognizers",
        "comprehend:ListKeyPhrasesDetectionJobs",
        "comprehend:ListSentimentDetectionJobs",
        "comprehend:ListTagsForResource",
        "comprehend:ListTopicsDetectionJobs",
        "comprehend:StartDocumentClassificationJob",
        "comprehend:StartDominantLanguageDetectionJob",
        "comprehend:StartEntitiesDetectionJob",
        "comprehend:StartKeyPhrasesDetectionJob",
        "comprehend:StartSentimentDetectionJob",
        "comprehend:StartTopicsDetectionJob",
        "comprehend:StopDominantLanguageDetectionJob",
        "comprehend:StopEntitiesDetectionJob",
        "comprehend:StopKeyPhrasesDetectionJob",
        "comprehend:StopSentimentDetectionJob",
        "comprehend:StopTrainingDocumentClassifier",
        "comprehend:StopTrainingEntityRecognizer",
        "comprehend:TagResource",
        "comprehend:UntagResource",
        "comprehend:UpdateEndpoint",
        "comprehendmedical:DetectEntities",
        "comprehendmedical:DetectPHI",
        "compute-optimizer:DescribeRecommendationExportJobs",
        "compute-optimizer:ExportAutoScalingGroupRecommendations",
        "compute-optimizer:ExportEC2InstanceRecommendations",
        "compute-optimizer:GetAutoScalingGroupRecommendations",
        "compute-optimizer:GetEC2InstanceRecommendations",
        "compute-optimizer:GetEC2RecommendationProjectedMetrics",
        "compute-optimizer:GetEnrollmentStatus",
        "compute-optimizer:GetRecommendationSummaries",
        "compute-optimizer:UpdateEnrollmentStatus",
        "config:BatchGetAggregateResourceConfig",
        "config:BatchGetResourceConfig",
        "config:DeleteAggregationAuthorization",
        "config:DeleteConfigRule",
        "config:DeleteConfigurationAggregator",
        "config:DeleteConfigurationRecorder",
        "config:DeleteConformancePack",
        "config:DeleteDeliveryChannel",
        "config:DeleteEvaluationResults",
        "config:DeleteOrganizationConfigRule",
        "config:DeleteOrganizationConformancePack",
        "config:DeletePendingAggregationRequest",
        "config:DeleteRemediationConfiguration",
        "config:DeleteRemediationExceptions",
        "config:DeleteRetentionConfiguration",
        "config:DeliverConfigSnapshot",
        "config:DescribeAggregateComplianceByConfigRules",
        "config:DescribeAggregationAuthorizations",
        "config:DescribeComplianceByConfigRule",
        "config:DescribeComplianceByResource",
        "config:DescribeConfigRuleEvaluationStatus",
        "config:DescribeConfigRules",
        "config:DescribeConfigurationAggregatorSourcesStatus",
        "config:DescribeConfigurationAggregators",
        "config:DescribeConfigurationRecorderStatus",
        "config:DescribeConfigurationRecorders",
        "config:DescribeConformancePackCompliance",
        "config:DescribeConformancePackStatus",
        "config:DescribeConformancePacks",
        "config:DescribeDeliveryChannelStatus",
        "config:DescribeDeliveryChannels",
        "config:DescribeOrganizationConfigRuleStatuses",
        "config:DescribeOrganizationConfigRules",
        "config:DescribeOrganizationConformancePackStatuses",
        "config:DescribeOrganizationConformancePacks",
        "config:DescribePendingAggregationRequests",
        "config:DescribeRemediationConfigurations",
        "config:DescribeRemediationExceptions",
        "config:DescribeRemediationExecutionStatus",
        "config:DescribeRetentionConfigurations",
        "config:GetAggregateComplianceDetailsByConfigRule",
        "config:GetAggregateConfigRuleComplianceSummary",
        "config:GetAggregateDiscoveredResourceCounts",
        "config:GetAggregateResourceConfig",
        "config:GetComplianceDetailsByConfigRule",
        "config:GetComplianceDetailsByResource",
        "config:GetComplianceSummaryByConfigRule",
        "config:GetComplianceSummaryByResourceType",
        "config:GetConformancePackComplianceDetails",
        "config:GetConformancePackComplianceSummary",
        "config:GetDiscoveredResourceCounts",
        "config:GetOrganizationConfigRuleDetailedStatus",
        "config:GetOrganizationConformancePackDetailedStatus",
        "config:GetResourceConfigHistory",
        "config:ListAggregateDiscoveredResources",
        "config:ListDiscoveredResources",
        "config:ListTagsForResource",
        "config:PutAggregationAuthorization",
        "config:PutConfigRule",
        "config:PutConfigurationAggregator",
        "config:PutConfigurationRecorder",
        "config:PutConformancePack",
        "config:PutDeliveryChannel",
        "config:PutEvaluations",
        "config:PutOrganizationConfigRule",
        "config:PutOrganizationConformancePack",
        "config:PutRemediationConfigurations",
        "config:PutRemediationExceptions",
        "config:PutRetentionConfiguration",
        "config:SelectAggregateResourceConfig",
        "config:SelectResourceConfig",
        "config:StartConfigRulesEvaluation",
        "config:StartConfigurationRecorder",
        "config:StartRemediationExecution",
        "config:StopConfigurationRecorder",
        "config:TagResource",
        "config:UntagResource",
        "connect:CreateInstance",
        "connect:CreateUser",
        "connect:DeleteUser",
        "connect:DescribeInstance",
        "connect:DescribeUser",
        "connect:DescribeUserHierarchyGroup",
        "connect:DescribeUserHierarchyStructure",
        "connect:DestroyInstance",
        "connect:GetContactAttributes",
        "connect:GetCurrentMetricData",
        "connect:GetFederationToken",
        "connect:GetFederationTokens",
        "connect:GetMetricData",
        "connect:ListContactFlows",
        "connect:ListHoursOfOperations",
        "connect:ListInstances",
        "connect:ListPhoneNumbers",
        "connect:ListQueues",
        "connect:ListRoutingProfiles",
        "connect:ListSecurityProfiles",
        "connect:ListTagsForResource",
        "connect:ListUserHierarchyGroups",
        "connect:ListUsers",
        "connect:ModifyInstance",
        "connect:StartChatContact",
        "connect:StartOutboundVoiceContact",
        "connect:StopContact",
        "connect:TagResource",
        "connect:UntagResource",
        "connect:UpdateContactAttributes",
        "connect:UpdateUserHierarchy",
        "connect:UpdateUserIdentityInfo",
        "connect:UpdateUserPhoneConfig",
        "connect:UpdateUserRoutingProfile",
        "connect:UpdateUserSecurityProfiles",
        "cur:DeleteReportDefinition",
        "cur:DescribeReportDefinitions",
        "cur:ModifyReportDefinition",
        "cur:PutReportDefinition",
        "dataexchange:CancelJob",
        "dataexchange:CreateAsset",
        "dataexchange:CreateDataSet",
        "dataexchange:CreateJob",
        "dataexchange:CreateRevision",
        "dataexchange:DeleteAsset",
        "dataexchange:DeleteDataSet",
        "dataexchange:DeleteRevision",
        "dataexchange:GetAsset",
        "dataexchange:GetDataSet",
        "dataexchange:GetJob",
        "dataexchange:GetRevision",
        "dataexchange:ListDataSetRevisions",
        "dataexchange:ListDataSets",
        "dataexchange:ListJobs",
        "dataexchange:ListRevisionAssets",
        "dataexchange:ListTagsForResource",
        "dataexchange:StartJob",
        "dataexchange:TagResource",
        "dataexchange:UntagResource",
        "dataexchange:UpdateAsset",
        "dataexchange:UpdateDataSet",
        "dataexchange:UpdateRevision",
        "datapipeline:ActivatePipeline",
        "datapipeline:AddTags",
        "datapipeline:CreatePipeline",
        "datapipeline:DeactivatePipeline",
        "datapipeline:DeletePipeline",
        "datapipeline:DescribeObjects",
        "datapipeline:DescribePipelines",
        "datapipeline:EvaluateExpression",
        "datapipeline:GetAccountLimits",
        "datapipeline:GetPipelineDefinition",
        "datapipeline:ListPipelines",
        "datapipeline:PollForTask",
        "datapipeline:PutAccountLimits",
        "datapipeline:PutPipelineDefinition",
        "datapipeline:QueryObjects",
        "datapipeline:RemoveTags",
        "datapipeline:ReportTaskProgress",
        "datapipeline:ReportTaskRunnerHeartbeat",
        "datapipeline:SetStatus",
        "datapipeline:SetTaskStatus",
        "datapipeline:ValidatePipelineDefinition",
        "datasync:CancelTaskExecution",
        "datasync:CreateAgent",
        "datasync:CreateLocationEfs",
        "datasync:CreateLocationNfs",
        "datasync:CreateLocationS3",
        "datasync:CreateLocationSmb",
        "datasync:CreateTask",
        "datasync:DeleteAgent",
        "datasync:DeleteLocation",
        "datasync:DeleteTask",
        "datasync:DescribeAgent",
        "datasync:DescribeLocationEfs",
        "datasync:DescribeLocationNfs",
        "datasync:DescribeLocationS3",
        "datasync:DescribeLocationSmb",
        "datasync:DescribeTask",
        "datasync:DescribeTaskExecution",
        "datasync:ListAgents",
        "datasync:ListLocations",
        "datasync:ListTagsForResource",
        "datasync:ListTaskExecutions",
        "datasync:ListTasks",
        "datasync:StartTaskExecution",
        "datasync:TagResource",
        "datasync:UntagResource",
        "datasync:UpdateAgent",
        "datasync:UpdateTask",
        "dax:BatchGetItem",
        "dax:BatchWriteItem",
        "dax:ConditionCheckItem",
        "dax:CreateCluster",
        "dax:CreateParameterGroup",
        "dax:CreateSubnetGroup",
        "dax:DecreaseReplicationFactor",
        "dax:DeleteCluster",
        "dax:DeleteItem",
        "dax:DeleteParameterGroup",
        "dax:DeleteSubnetGroup",
        "dax:DescribeClusters",
        "dax:DescribeDefaultParameters",
        "dax:DescribeEvents",
        "dax:DescribeParameterGroups",
        "dax:DescribeParameters",
        "dax:DescribeSubnetGroups",
        "dax:GetItem",
        "dax:IncreaseReplicationFactor",
        "dax:ListTags",
        "dax:PutItem",
        "dax:Query",
        "dax:RebootNode",
        "dax:Scan",
        "dax:TagResource",
        "dax:UntagResource",
        "dax:UpdateCluster",
        "dax:UpdateItem",
        "dax:UpdateParameterGroup",
        "dax:UpdateSubnetGroup",
        "dbqms:CreateFavoriteQuery",
        "dbqms:CreateQueryHistory",
        "dbqms:DeleteFavoriteQueries",
        "dbqms:DeleteQueryHistory",
        "dbqms:DescribeFavoriteQueries",
        "dbqms:DescribeQueryHistory",
        "dbqms:GetQueryString",
        "dbqms:UpdateFavoriteQuery",
        "dbqms:UpdateQueryHistory",
        "deepcomposer:AssociateCoupon",
        "deepcomposer:CreateAudio",
        "deepcomposer:CreateComposition",
        "deepcomposer:CreateModel",
        "deepcomposer:DeleteComposition",
        "deepcomposer:DeleteModel",
        "deepcomposer:GetComposition",
        "deepcomposer:GetModel",
        "deepcomposer:GetSampleModel",
        "deepcomposer:ListCompositions",
        "deepcomposer:ListModels",
        "deepcomposer:ListSampleModels",
        "deepcomposer:ListTrainingTopics",
        "deepcomposer:UpdateComposition",
        "deepcomposer:UpdateModel",
        "deeplens:AssociateServiceRoleToAccount",
        "deeplens:BatchGetDevice",
        "deeplens:BatchGetModel",
        "deeplens:BatchGetProject",
        "deeplens:CreateDeviceCertificates",
        "deeplens:CreateModel",
        "deeplens:CreateProject",
        "deeplens:DeleteModel",
        "deeplens:DeleteProject",
        "deeplens:DeployProject",
        "deeplens:DeregisterDevice",
        "deeplens:GetAssociatedResources",
        "deeplens:GetDeploymentStatus",
        "deeplens:GetDevice",
        "deeplens:GetModel",
        "deeplens:GetProject",
        "deeplens:ImportProjectFromTemplate",
        "deeplens:ListDeployments",
        "deeplens:ListDevices",
        "deeplens:ListModels",
        "deeplens:ListProjects",
        "deeplens:RegisterDevice",
        "deeplens:RemoveProject",
        "deeplens:UpdateProject",
        "deepracer:CloneReinforcementLearningModel",
        "deepracer:CreateAccountResources",
        "deepracer:CreateLeaderboardSubmission",
        "deepracer:CreateReinforcementLearningModel",
        "deepracer:DeleteAccountResources",
        "deepracer:DeleteModel",
        "deepracer:GetAccountResources",
        "deepracer:GetAlias",
        "deepracer:GetEvaluation",
        "deepracer:GetLatestUserSubmission",
        "deepracer:GetLeaderboard",
        "deepracer:GetModel",
        "deepracer:GetRankedUserSubmission",
        "deepracer:GetTrack",
        "deepracer:GetTrainingJob",
        "deepracer:ListEvaluations",
        "deepracer:ListLeaderboardSubmissions",
        "deepracer:ListLeaderboards",
        "deepracer:ListModels",
        "deepracer:ListTracks",
        "deepracer:ListTrainingJobs",
        "deepracer:SetAlias",
        "deepracer:StartEvaluation",
        "deepracer:StopEvaluation",
        "deepracer:StopTrainingReinforcementLearningModel",
        "deepracer:TestRewardFunction",
        "detective:AcceptInvitation",
        "detective:CreateGraph",
        "detective:CreateMembers",
        "detective:DeleteGraph",
        "detective:DeleteMembers",
        "detective:DisassociateMembership",
        "detective:GetFreeTrialEligibility",
        "detective:GetGraphIngestState",
        "detective:GetMembers",
        "detective:GetPricingInformation",
        "detective:GetUsageInformation",
        "detective:ListGraphs",
        "detective:ListInvitations",
        "detective:ListMembers",
        "detective:RejectInvitation",
        "detective:SearchGraph",
        "detective:StartMonitoringMember",
        "devicefarm:CreateDevicePool",
        "devicefarm:CreateInstanceProfile",
        "devicefarm:CreateNetworkProfile",
        "devicefarm:CreateProject",
        "devicefarm:CreateRemoteAccessSession",
        "devicefarm:CreateTestGridProject",
        "devicefarm:CreateTestGridUrl",
        "devicefarm:CreateUpload",
        "devicefarm:CreateVPCEConfiguration",
        "devicefarm:DeleteDevicePool",
        "devicefarm:DeleteInstanceProfile",
        "devicefarm:DeleteNetworkProfile",
        "devicefarm:DeleteProject",
        "devicefarm:DeleteRemoteAccessSession",
        "devicefarm:DeleteRun",
        "devicefarm:DeleteTestGridProject",
        "devicefarm:DeleteUpload",
        "devicefarm:DeleteVPCEConfiguration",
        "devicefarm:GetAccountSettings",
        "devicefarm:GetDevice",
        "devicefarm:GetDeviceInstance",
        "devicefarm:GetDevicePool",
        "devicefarm:GetDevicePoolCompatibility",
        "devicefarm:GetInstanceProfile",
        "devicefarm:GetJob",
        "devicefarm:GetNetworkProfile",
        "devicefarm:GetOfferingStatus",
        "devicefarm:GetProject",
        "devicefarm:GetRemoteAccessSession",
        "devicefarm:GetRun",
        "devicefarm:GetSuite",
        "devicefarm:GetTest",
        "devicefarm:GetTestGridProject",
        "devicefarm:GetTestGridSession",
        "devicefarm:GetUpload",
        "devicefarm:GetVPCEConfiguration",
        "devicefarm:InstallToRemoteAccessSession",
        "devicefarm:ListArtifacts",
        "devicefarm:ListDeviceInstances",
        "devicefarm:ListDevicePools",
        "devicefarm:ListDevices",
        "devicefarm:ListInstanceProfiles",
        "devicefarm:ListJobs",
        "devicefarm:ListNetworkProfiles",
        "devicefarm:ListOfferingPromotions",
        "devicefarm:ListOfferingTransactions",
        "devicefarm:ListOfferings",
        "devicefarm:ListProjects",
        "devicefarm:ListRemoteAccessSessions",
        "devicefarm:ListRuns",
        "devicefarm:ListSamples",
        "devicefarm:ListSuites",
        "devicefarm:ListTagsForResource",
        "devicefarm:ListTestGridProjects",
        "devicefarm:ListTestGridSessionActions",
        "devicefarm:ListTestGridSessionArtifacts",
        "devicefarm:ListTestGridSessions",
        "devicefarm:ListTests",
        "devicefarm:ListUniqueProblems",
        "devicefarm:ListUploads",
        "devicefarm:ListVPCEConfigurations",
        "devicefarm:PurchaseOffering",
        "devicefarm:RenewOffering",
        "devicefarm:ScheduleRun",
        "devicefarm:StopJob",
        "devicefarm:StopRemoteAccessSession",
        "devicefarm:StopRun",
        "devicefarm:TagResource",
        "devicefarm:UntagResource",
        "devicefarm:UpdateDeviceInstance",
        "devicefarm:UpdateDevicePool",
        "devicefarm:UpdateInstanceProfile",
        "devicefarm:UpdateNetworkProfile",
        "devicefarm:UpdateProject",
        "devicefarm:UpdateTestGridProject",
        "devicefarm:UpdateUpload",
        "devicefarm:UpdateVPCEConfiguration",
        "directconnect:AcceptDirectConnectGatewayAssociationProposal",
        "directconnect:AllocateConnectionOnInterconnect",
        "directconnect:AllocateHostedConnection",
        "directconnect:AllocatePrivateVirtualInterface",
        "directconnect:AllocatePublicVirtualInterface",
        "directconnect:AllocateTransitVirtualInterface",
        "directconnect:AssociateConnectionWithLag",
        "directconnect:AssociateHostedConnection",
        "directconnect:AssociateVirtualInterface",
        "directconnect:ConfirmConnection",
        "directconnect:ConfirmPrivateVirtualInterface",
        "directconnect:ConfirmPublicVirtualInterface",
        "directconnect:ConfirmTransitVirtualInterface",
        "directconnect:CreateBGPPeer",
        "directconnect:CreateConnection",
        "directconnect:CreateDirectConnectGateway",
        "directconnect:CreateDirectConnectGatewayAssociation",
        "directconnect:CreateDirectConnectGatewayAssociationProposal",
        "directconnect:CreateInterconnect",
        "directconnect:CreateLag",
        "directconnect:CreatePrivateVirtualInterface",
        "directconnect:CreatePublicVirtualInterface",
        "directconnect:CreateTransitVirtualInterface",
        "directconnect:DeleteBGPPeer",
        "directconnect:DeleteConnection",
        "directconnect:DeleteDirectConnectGateway",
        "directconnect:DeleteDirectConnectGatewayAssociation",
        "directconnect:DeleteDirectConnectGatewayAssociationProposal",
        "directconnect:DeleteInterconnect",
        "directconnect:DeleteLag",
        "directconnect:DeleteVirtualInterface",
        "directconnect:DescribeConnectionLoa",
        "directconnect:DescribeConnections",
        "directconnect:DescribeConnectionsOnInterconnect",
        "directconnect:DescribeDirectConnectGatewayAssociationProposals",
        "directconnect:DescribeDirectConnectGatewayAssociations",
        "directconnect:DescribeDirectConnectGatewayAttachments",
        "directconnect:DescribeDirectConnectGateways",
        "directconnect:DescribeHostedConnections",
        "directconnect:DescribeInterconnectLoa",
        "directconnect:DescribeInterconnects",
        "directconnect:DescribeLags",
        "directconnect:DescribeLoa",
        "directconnect:DescribeLocations",
        "directconnect:DescribeTags",
        "directconnect:DescribeVirtualGateways",
        "directconnect:DescribeVirtualInterfaces",
        "directconnect:DisassociateConnectionFromLag",
        "directconnect:ListVirtualInterfaceTestHistory",
        "directconnect:StartBgpFailoverTest",
        "directconnect:StopBgpFailoverTest",
        "directconnect:TagResource",
        "directconnect:UntagResource",
        "directconnect:UpdateDirectConnectGatewayAssociation",
        "directconnect:UpdateLag",
        "directconnect:UpdateVirtualInterfaceAttributes",
        "discovery:AssociateConfigurationItemsToApplication",
        "discovery:BatchDeleteImportData",
        "discovery:CreateApplication",
        "discovery:CreateTags",
        "discovery:DeleteApplications",
        "discovery:DeleteTags",
        "discovery:DescribeAgents",
        "discovery:DescribeConfigurations",
        "discovery:DescribeContinuousExports",
        "discovery:DescribeExportConfigurations",
        "discovery:DescribeExportTasks",
        "discovery:DescribeImportTasks",
        "discovery:DescribeTags",
        "discovery:DisassociateConfigurationItemsFromApplication",
        "discovery:ExportConfigurations",
        "discovery:GetDiscoverySummary",
        "discovery:ListConfigurations",
        "discovery:ListServerNeighbors",
        "discovery:StartContinuousExport",
        "discovery:StartDataCollectionByAgentIds",
        "discovery:StartExportTask",
        "discovery:StartImportTask",
        "discovery:StopContinuousExport",
        "discovery:StopDataCollectionByAgentIds",
        "discovery:UpdateApplication",
        "dlm:CreateLifecyclePolicy",
        "dlm:DeleteLifecyclePolicy",
        "dlm:GetLifecyclePolicies",
        "dlm:GetLifecyclePolicy",
        "dlm:ListTagsForResource",
        "dlm:TagResource",
        "dlm:UntagResource",
        "dlm:UpdateLifecyclePolicy",
        "dms:AddTagsToResource",
        "dms:ApplyPendingMaintenanceAction",
        "dms:CreateEndpoint",
        "dms:CreateEventSubscription",
        "dms:CreateReplicationInstance",
        "dms:CreateReplicationSubnetGroup",
        "dms:CreateReplicationTask",
        "dms:DeleteCertificate",
        "dms:DeleteEndpoint",
        "dms:DeleteEventSubscription",
        "dms:DeleteReplicationInstance",
        "dms:DeleteReplicationSubnetGroup",
        "dms:DeleteReplicationTask",
        "dms:DescribeAccountAttributes",
        "dms:DescribeCertificates",
        "dms:DescribeConnections",
        "dms:DescribeEndpointTypes",
        "dms:DescribeEndpoints",
        "dms:DescribeEventCategories",
        "dms:DescribeEventSubscriptions",
        "dms:DescribeEvents",
        "dms:DescribeOrderableReplicationInstances",
        "dms:DescribeRefreshSchemasStatus",
        "dms:DescribeReplicationInstanceTaskLogs",
        "dms:DescribeReplicationInstances",
        "dms:DescribeReplicationSubnetGroups",
        "dms:DescribeReplicationTaskAssessmentResults",
        "dms:DescribeReplicationTasks",
        "dms:DescribeSchemas",
        "dms:DescribeTableStatistics",
        "dms:ImportCertificate",
        "dms:ListTagsForResource",
        "dms:ModifyEndpoint",
        "dms:ModifyEventSubscription",
        "dms:ModifyReplicationInstance",
        "dms:ModifyReplicationSubnetGroup",
        "dms:ModifyReplicationTask",
        "dms:RebootReplicationInstance",
        "dms:RefreshSchemas",
        "dms:ReloadTables",
        "dms:RemoveTagsFromResource",
        "dms:StartReplicationTask",
        "dms:StartReplicationTaskAssessment",
        "dms:StopReplicationTask",
        "dms:TestConnection",
        "ds:AcceptSharedDirectory",
        "ds:AddIpRoutes",
        "ds:AddTagsToResource",
        "ds:AuthorizeApplication",
        "ds:CancelSchemaExtension",
        "ds:CheckAlias",
        "ds:ConnectDirectory",
        "ds:CreateAlias",
        "ds:CreateComputer",
        "ds:CreateConditionalForwarder",
        "ds:CreateDirectory",
        "ds:CreateIdentityPoolDirectory",
        "ds:CreateLogSubscription",
        "ds:CreateMicrosoftAD",
        "ds:CreateSnapshot",
        "ds:CreateTrust",
        "ds:DeleteConditionalForwarder",
        "ds:DeleteDirectory",
        "ds:DeleteLogSubscription",
        "ds:DeleteSnapshot",
        "ds:DeleteTrust",
        "ds:DeregisterCertificate",
        "ds:DeregisterEventTopic",
        "ds:DescribeCertificate",
        "ds:DescribeConditionalForwarders",
        "ds:DescribeDirectories",
        "ds:DescribeDomainControllers",
        "ds:DescribeEventTopics",
        "ds:DescribeLDAPSSettings",
        "ds:DescribeSharedDirectories",
        "ds:DescribeSnapshots",
        "ds:DescribeTrusts",
        "ds:DisableLDAPS",
        "ds:DisableRadius",
        "ds:DisableSso",
        "ds:EnableLDAPS",
        "ds:EnableRadius",
        "ds:EnableSso",
        "ds:GetAuthorizedApplicationDetails",
        "ds:GetDirectoryLimits",
        "ds:GetSnapshotLimits",
        "ds:ListAuthorizedApplications",
        "ds:ListCertificates",
        "ds:ListIpRoutes",
        "ds:ListLogSubscriptions",
        "ds:ListSchemaExtensions",
        "ds:ListTagsForResource",
        "ds:RegisterCertificate",
        "ds:RegisterEventTopic",
        "ds:RejectSharedDirectory",
        "ds:RemoveIpRoutes",
        "ds:RemoveTagsFromResource",
        "ds:ResetUserPassword",
        "ds:RestoreFromSnapshot",
        "ds:ShareDirectory",
        "ds:StartSchemaExtension",
        "ds:UnauthorizeApplication",
        "ds:UnshareDirectory",
        "ds:UpdateConditionalForwarder",
        "ds:UpdateNumberOfDomainControllers",
        "ds:UpdateRadius",
        "ds:UpdateTrust",
        "ds:VerifyTrust",
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:CreateBackup",
        "dynamodb:CreateGlobalTable",
        "dynamodb:CreateTable",
        "dynamodb:CreateTableReplica",
        "dynamodb:DeleteBackup",
        "dynamodb:DeleteItem",
        "dynamodb:DeleteTable",
        "dynamodb:DeleteTableReplica",
        "dynamodb:DescribeBackup",
        "dynamodb:DescribeContinuousBackups",
        "dynamodb:DescribeContributorInsights",
        "dynamodb:DescribeGlobalTable",
        "dynamodb:DescribeGlobalTableSettings",
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeReservedCapacity",
        "dynamodb:DescribeReservedCapacityOfferings",
        "dynamodb:DescribeStream",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeTableReplicaAutoScaling",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListBackups",
        "dynamodb:ListContributorInsights",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListStreams",
        "dynamodb:ListTables",
        "dynamodb:ListTagsOfResource",
        "dynamodb:PurchaseReservedCapacityOfferings",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:RestoreTableFromBackup",
        "dynamodb:RestoreTableToPointInTime",
        "dynamodb:Scan",
        "dynamodb:TagResource",
        "dynamodb:UntagResource",
        "dynamodb:UpdateContinuousBackups",
        "dynamodb:UpdateContributorInsights",
        "dynamodb:UpdateGlobalTable",
        "dynamodb:UpdateGlobalTableSettings",
        "dynamodb:UpdateItem",
        "dynamodb:UpdateTable",
        "dynamodb:UpdateTableReplicaAutoScaling",
        "dynamodb:UpdateTimeToLive",
        "ebs:GetSnapshotBlock",
        "ebs:ListChangedBlocks",
        "ebs:ListSnapshotBlocks",
        "ec2-instance-connect:SendSSHPublicKey",
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AdvertiseByoipCidr",
        "ec2:AllocateAddress",
        "ec2:AllocateHosts",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssociateAddress",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVolume",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelCapacityReservation",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CancelSpotFleetRequests",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyFpgaImage",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateCapacityReservation",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFleet",
        "ec2:CreateFlowLogs",
        "ec2:CreateFpgaImage",
        "ec2:CreateImage",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateInternetGateway",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreatePlacementGroup",
        "ec2:CreateReservedInstancesListing",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot",
        "ec2:CreateSnapshots",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateSubnet",
        "ec2:CreateTags",
        "ec2:CreateTrafficMirrorFilter",
        "ec2:CreateTrafficMirrorFilterRule",
        "ec2:CreateTrafficMirrorSession",
        "ec2:CreateTrafficMirrorTarget",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVolume",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteClientVpnEndpoint",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFleets",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteFpgaImage",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeletePlacementGroup",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteTags",
        "ec2:DeleteTrafficMirrorFilter",
        "ec2:DeleteTrafficMirrorFilterRule",
        "ec2:DeleteTrafficMirrorSession",
        "ec2:DeleteTrafficMirrorTarget",
        "ec2:DeleteTransitGateway",
        "ec2:DeleteTransitGatewayMulticastDomain",
        "ec2:DeleteTransitGatewayPeeringAttachment",
        "ec2:DeleteTransitGatewayRoute",
        "ec2:DeleteTransitGatewayRouteTable",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "ec2:DeleteVolume",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DeprovisionByoipCidr",
        "ec2:DeregisterImage",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVolume",
        "ec2:DetachVpnGateway",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableFastSnapshotRestores",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateTransitGatewayMulticastDomain",
        "ec2:DisassociateTransitGatewayRouteTable",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableFastSnapshotRestores",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVolumeIO",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetLaunchTemplateData",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot",
        "ec2:ImportVolume",
        "ec2:ModifyCapacityReservation",
        "ec2:ModifyClientVpnEndpoint",
        "ec2:ModifyDefaultCreditSpecification",
        "ec2:ModifyEbsDefaultKmsKeyId",
        "ec2:ModifyFleet",
        "ec2:ModifyFpgaImageAttribute",
        "ec2:ModifyHosts",
        "ec2:ModifyIdFormat",
        "ec2:ModifyIdentityIdFormat",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyInstanceCapacityReservationAttributes",
        "ec2:ModifyInstanceCreditSpecification",
        "ec2:ModifyInstanceEventStartTime",
        "ec2:ModifyInstanceMetadataOptions",
        "ec2:ModifyInstancePlacement",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifyReservedInstances",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySpotFleetRequest",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "ec2:ModifyTrafficMirrorFilterRule",
        "ec2:ModifyTrafficMirrorSession",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:ModifyVolume",
        "ec2:ModifyVolumeAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:ModifyVpnConnection",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:MonitorInstances",
        "ec2:MoveAddressToVpc",
        "ec2:ProvisionByoipCidr",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:RegisterInstanceEventNotificationAttributes",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RejectTransitGatewayPeeringAttachment",
        "ec2:RejectTransitGatewayVpcAttachment",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReleaseHosts",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ReplaceTransitGatewayRoute",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotFleet",
        "ec2:RequestSpotInstances",
        "ec2:ResetEbsDefaultKmsKeyId",
        "ec2:ResetFpgaImageAttribute",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RevokeClientVpnIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:RunScheduledInstances",
        "ec2:SearchLocalGatewayRoutes",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:SendDiagnosticInterrupt",
        "ec2:StartInstances",
        "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "ec2:StopInstances",
        "ec2:TerminateClientVpnConnections",
        "ec2:TerminateInstances",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnmonitorInstances",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:WithdrawByoipCidr",
        "ec2messages:AcknowledgeMessage",
        "ec2messages:DeleteMessage",
        "ec2messages:FailMessage",
        "ec2messages:GetEndpoint",
        "ec2messages:GetMessages",
        "ec2messages:SendReply",
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchDeleteImage",
        "ecr:BatchGetImage",
        "ecr:CompleteLayerUpload",
        "ecr:CreateRepository",
        "ecr:DeleteLifecyclePolicy",
        "ecr:DeleteRepository",
        "ecr:DeleteRepositoryPolicy",
        "ecr:DescribeImageScanFindings",
        "ecr:DescribeImages",
        "ecr:DescribeRepositories",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer",
        "ecr:GetLifecyclePolicy",
        "ecr:GetLifecyclePolicyPreview",
        "ecr:GetRepositoryPolicy",
        "ecr:InitiateLayerUpload",
        "ecr:ListImages",
        "ecr:ListTagsForResource",
        "ecr:PutImage",
        "ecr:PutImageScanningConfiguration",
        "ecr:PutImageTagMutability",
        "ecr:PutLifecyclePolicy",
        "ecr:SetRepositoryPolicy",
        "ecr:StartImageScan",
        "ecr:StartLifecyclePolicyPreview",
        "ecr:TagResource",
        "ecr:UntagResource",
        "ecr:UploadLayerPart",
        "ecs:CreateCluster",
        "ecs:CreateService",
        "ecs:CreateTaskSet",
        "ecs:DeleteAccountSetting",
        "ecs:DeleteAttributes",
        "ecs:DeleteCluster",
        "ecs:DeleteService",
        "ecs:DeleteTaskSet",
        "ecs:DeregisterContainerInstance",
        "ecs:DeregisterTaskDefinition",
        "ecs:DescribeClusters",
        "ecs:DescribeContainerInstances",
        "ecs:DescribeServices",
        "ecs:DescribeTaskDefinition",
        "ecs:DescribeTaskSets",
        "ecs:DescribeTasks",
        "ecs:DiscoverPollEndpoint",
        "ecs:ListAccountSettings",
        "ecs:ListAttributes",
        "ecs:ListClusters",
        "ecs:ListContainerInstances",
        "ecs:ListServices",
        "ecs:ListTagsForResource",
        "ecs:ListTaskDefinitionFamilies",
        "ecs:ListTaskDefinitions",
        "ecs:ListTasks",
        "ecs:Poll",
        "ecs:PutAccountSetting",
        "ecs:PutAccountSettingDefault",
        "ecs:PutAttributes",
        "ecs:RegisterContainerInstance",
        "ecs:RegisterTaskDefinition",
        "ecs:RunTask",
        "ecs:StartTask",
        "ecs:StartTelemetrySession",
        "ecs:StopTask",
        "ecs:SubmitAttachmentStateChanges",
        "ecs:SubmitContainerStateChange",
        "ecs:SubmitTaskStateChange",
        "ecs:TagResource",
        "ecs:UntagResource",
        "ecs:UpdateContainerAgent",
        "ecs:UpdateContainerInstancesState",
        "ecs:UpdateService",
        "ecs:UpdateServicePrimaryTaskSet",
        "ecs:UpdateTaskSet",
        "eks:CreateCluster",
        "eks:CreateFargateProfile",
        "eks:CreateNodegroup",
        "eks:DeleteCluster",
        "eks:DeleteFargateProfile",
        "eks:DeleteNodegroup",
        "eks:DescribeCluster",
        "eks:DescribeFargateProfile",
        "eks:DescribeNodegroup",
        "eks:DescribeUpdate",
        "eks:ListClusters",
        "eks:ListFargateProfiles",
        "eks:ListNodegroups",
        "eks:ListTagsForResource",
        "eks:ListUpdates",
        "eks:TagResource",
        "eks:UntagResource",
        "eks:UpdateClusterConfig",
        "eks:UpdateClusterVersion",
        "eks:UpdateNodegroupConfig",
        "eks:UpdateNodegroupVersion",
        "elastic-inference:Connect",
        "elasticache:AddTagsToResource",
        "elasticache:AuthorizeCacheSecurityGroupIngress",
        "elasticache:CopySnapshot",
        "elasticache:CreateCacheCluster",
        "elasticache:CreateCacheParameterGroup",
        "elasticache:CreateCacheSecurityGroup",
        "elasticache:CreateCacheSubnetGroup",
        "elasticache:CreateReplicationGroup",
        "elasticache:CreateSnapshot",
        "elasticache:DecreaseReplicaCount",
        "elasticache:DeleteCacheCluster",
        "elasticache:DeleteCacheParameterGroup",
        "elasticache:DeleteCacheSecurityGroup",
        "elasticache:DeleteCacheSubnetGroup",
        "elasticache:DeleteReplicationGroup",
        "elasticache:DeleteSnapshot",
        "elasticache:DescribeCacheClusters",
        "elasticache:DescribeCacheEngineVersions",
        "elasticache:DescribeCacheParameterGroups",
        "elasticache:DescribeCacheParameters",
        "elasticache:DescribeCacheSecurityGroups",
        "elasticache:DescribeCacheSubnetGroups",
        "elasticache:DescribeEngineDefaultParameters",
        "elasticache:DescribeEvents",
        "elasticache:DescribeReplicationGroups",
        "elasticache:DescribeReservedCacheNodes",
        "elasticache:DescribeReservedCacheNodesOfferings",
        "elasticache:DescribeSnapshots",
        "elasticache:IncreaseReplicaCount",
        "elasticache:ListAllowedNodeTypeModifications",
        "elasticache:ListTagsForResource",
        "elasticache:ModifyCacheCluster",
        "elasticache:ModifyCacheParameterGroup",
        "elasticache:ModifyCacheSubnetGroup",
        "elasticache:ModifyReplicationGroup",
        "elasticache:ModifyReplicationGroupShardConfiguration",
        "elasticache:PurchaseReservedCacheNodesOffering",
        "elasticache:RebootCacheCluster",
        "elasticache:RemoveTagsFromResource",
        "elasticache:ResetCacheParameterGroup",
        "elasticache:RevokeCacheSecurityGroupIngress",
        "elasticache:TestFailover",
        "elasticbeanstalk:AbortEnvironmentUpdate",
        "elasticbeanstalk:AddTags",
        "elasticbeanstalk:ApplyEnvironmentManagedAction",
        "elasticbeanstalk:CheckDNSAvailability",
        "elasticbeanstalk:ComposeEnvironments",
        "elasticbeanstalk:CreateApplication",
        "elasticbeanstalk:CreateApplicationVersion",
        "elasticbeanstalk:CreateConfigurationTemplate",
        "elasticbeanstalk:CreateEnvironment",
        "elasticbeanstalk:CreatePlatformVersion",
        "elasticbeanstalk:CreateStorageLocation",
        "elasticbeanstalk:DeleteApplication",
        "elasticbeanstalk:DeleteApplicationVersion",
        "elasticbeanstalk:DeleteConfigurationTemplate",
        "elasticbeanstalk:DeleteEnvironmentConfiguration",
        "elasticbeanstalk:DeletePlatformVersion",
        "elasticbeanstalk:DescribeAccountAttributes",
        "elasticbeanstalk:DescribeApplicationVersions",
        "elasticbeanstalk:DescribeApplications",
        "elasticbeanstalk:DescribeConfigurationOptions",
        "elasticbeanstalk:DescribeConfigurationSettings",
        "elasticbeanstalk:DescribeEnvironmentHealth",
        "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
        "elasticbeanstalk:DescribeEnvironmentManagedActions",
        "elasticbeanstalk:DescribeEnvironmentResources",
        "elasticbeanstalk:DescribeEnvironments",
        "elasticbeanstalk:DescribeEvents",
        "elasticbeanstalk:DescribeInstancesHealth",
        "elasticbeanstalk:DescribePlatformVersion",
        "elasticbeanstalk:ListAvailableSolutionStacks",
        "elasticbeanstalk:ListPlatformBranches",
        "elasticbeanstalk:ListPlatformVersions",
        "elasticbeanstalk:ListTagsForResource",
        "elasticbeanstalk:RebuildEnvironment",
        "elasticbeanstalk:RemoveTags",
        "elasticbeanstalk:RequestEnvironmentInfo",
        "elasticbeanstalk:RestartAppServer",
        "elasticbeanstalk:RetrieveEnvironmentInfo",
        "elasticbeanstalk:SwapEnvironmentCNAMEs",
        "elasticbeanstalk:TerminateEnvironment",
        "elasticbeanstalk:UpdateApplication",
        "elasticbeanstalk:UpdateApplicationResourceLifecycle",
        "elasticbeanstalk:UpdateApplicationVersion",
        "elasticbeanstalk:UpdateConfigurationTemplate",
        "elasticbeanstalk:UpdateEnvironment",
        "elasticbeanstalk:ValidateConfigurationSettings",
        "elasticfilesystem:Backup",
        "elasticfilesystem:ClientMount",
        "elasticfilesystem:ClientRootAccess",
        "elasticfilesystem:ClientWrite",
        "elasticfilesystem:CreateAccessPoint",
        "elasticfilesystem:CreateFileSystem",
        "elasticfilesystem:CreateMountTarget",
        "elasticfilesystem:CreateTags",
        "elasticfilesystem:DeleteAccessPoint",
        "elasticfilesystem:DeleteFileSystem",
        "elasticfilesystem:DeleteFileSystemPolicy",
        "elasticfilesystem:DeleteMountTarget",
        "elasticfilesystem:DeleteTags",
        "elasticfilesystem:DescribeAccessPoints",
        "elasticfilesystem:DescribeFileSystemPolicy",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeLifecycleConfiguration",
        "elasticfilesystem:DescribeMountTargetSecurityGroups",
        "elasticfilesystem:DescribeMountTargets",
        "elasticfilesystem:DescribeTags",
        "elasticfilesystem:ListTagsForResource",
        "elasticfilesystem:ModifyMountTargetSecurityGroups",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticfilesystem:PutLifecycleConfiguration",
        "elasticfilesystem:Restore",
        "elasticfilesystem:TagResource",
        "elasticfilesystem:UntagResource",
        "elasticfilesystem:UpdateFileSystem",
        "elasticloadbalancing:AddListenerCertificates",
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
        "elasticloadbalancing:AttachLoadBalancerToSubnets",
        "elasticloadbalancing:ConfigureHealthCheck",
        "elasticloadbalancing:CreateAppCookieStickinessPolicy",
        "elasticloadbalancing:CreateLBCookieStickinessPolicy",
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateLoadBalancerListeners",
        "elasticloadbalancing:CreateLoadBalancerPolicy",
        "elasticloadbalancing:CreateRule",
        "elasticloadbalancing:CreateTargetGroup",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:DeleteLoadBalancerListeners",
        "elasticloadbalancing:DeleteLoadBalancerPolicy",
        "elasticloadbalancing:DeleteRule",
        "elasticloadbalancing:DeleteTargetGroup",
        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
        "elasticloadbalancing:DeregisterTargets",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeInstanceHealth",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticloadbalancing:DetachLoadBalancerFromSubnets",
        "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
        "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "elasticloadbalancing:ModifyRule",
        "elasticloadbalancing:ModifyTargetGroup",
        "elasticloadbalancing:ModifyTargetGroupAttributes",
        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
        "elasticloadbalancing:RegisterTargets",
        "elasticloadbalancing:RemoveListenerCertificates",
        "elasticloadbalancing:RemoveTags",
        "elasticloadbalancing:SetIpAddressType",
        "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
        "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
        "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
        "elasticloadbalancing:SetRulePriorities",
        "elasticloadbalancing:SetSecurityGroups",
        "elasticloadbalancing:SetSubnets",
        "elasticloadbalancing:SetWebAcl",
        "elasticmapreduce:AddInstanceFleet",
        "elasticmapreduce:AddInstanceGroups",
        "elasticmapreduce:AddJobFlowSteps",
        "elasticmapreduce:AddTags",
        "elasticmapreduce:CancelSteps",
        "elasticmapreduce:CreateEditor",
        "elasticmapreduce:CreateSecurityConfiguration",
        "elasticmapreduce:DeleteEditor",
        "elasticmapreduce:DeleteSecurityConfiguration",
        "elasticmapreduce:DescribeCluster",
        "elasticmapreduce:DescribeEditor",
        "elasticmapreduce:DescribeJobFlows",
        "elasticmapreduce:DescribeSecurityConfiguration",
        "elasticmapreduce:DescribeStep",
        "elasticmapreduce:GetBlockPublicAccessConfiguration",
        "elasticmapreduce:ListBootstrapActions",
        "elasticmapreduce:ListClusters",
        "elasticmapreduce:ListEditors",
        "elasticmapreduce:ListInstanceFleets",
        "elasticmapreduce:ListInstanceGroups",
        "elasticmapreduce:ListInstances",
        "elasticmapreduce:ListSecurityConfigurations",
        "elasticmapreduce:ListSteps",
        "elasticmapreduce:ModifyCluster",
        "elasticmapreduce:ModifyInstanceFleet",
        "elasticmapreduce:ModifyInstanceGroups",
        "elasticmapreduce:OpenEditorInConsole",
        "elasticmapreduce:PutAutoScalingPolicy",
        "elasticmapreduce:PutBlockPublicAccessConfiguration",
        "elasticmapreduce:RemoveAutoScalingPolicy",
        "elasticmapreduce:RemoveTags",
        "elasticmapreduce:RunJobFlow",
        "elasticmapreduce:SetTerminationProtection",
        "elasticmapreduce:StartEditor",
        "elasticmapreduce:StopEditor",
        "elasticmapreduce:TerminateJobFlows",
        "elasticmapreduce:ViewEventsFromAllClustersInConsole",
        "elastictranscoder:CancelJob",
        "elastictranscoder:CreateJob",
        "elastictranscoder:CreatePipeline",
        "elastictranscoder:CreatePreset",
        "elastictranscoder:DeletePipeline",
        "elastictranscoder:DeletePreset",
        "elastictranscoder:ListJobsByPipeline",
        "elastictranscoder:ListJobsByStatus",
        "elastictranscoder:ListPipelines",
        "elastictranscoder:ListPresets",
        "elastictranscoder:ReadJob",
        "elastictranscoder:ReadPipeline",
        "elastictranscoder:ReadPreset",
        "elastictranscoder:TestRole",
        "elastictranscoder:UpdatePipeline",
        "elastictranscoder:UpdatePipelineNotifications",
        "elastictranscoder:UpdatePipelineStatus",
        "es:AcceptInboundCrossClusterSearchConnection",
        "es:AddTags",
        "es:CreateElasticsearchDomain",
        "es:CreateElasticsearchServiceRole",
        "es:CreateOutboundCrossClusterSearchConnection",
        "es:DeleteElasticsearchDomain",
        "es:DeleteElasticsearchServiceRole",
        "es:DeleteInboundCrossClusterSearchConnection",
        "es:DeleteOutboundCrossClusterSearchConnection",
        "es:DescribeElasticsearchDomain",
        "es:DescribeElasticsearchDomainConfig",
        "es:DescribeElasticsearchDomains",
        "es:DescribeElasticsearchInstanceTypeLimits",
        "es:DescribeInboundCrossClusterSearchConnections",
        "es:DescribeOutboundCrossClusterSearchConnections",
        "es:DescribeReservedElasticsearchInstanceOfferings",
        "es:DescribeReservedElasticsearchInstances",
        "es:ESCrossClusterGet",
        "es:ESHttpDelete",
        "es:ESHttpGet",
        "es:ESHttpHead",
        "es:ESHttpPatch",
        "es:ESHttpPost",
        "es:ESHttpPut",
        "es:GetCompatibleElasticsearchVersions",
        "es:GetUpgradeHistory",
        "es:GetUpgradeStatus",
        "es:ListDomainNames",
        "es:ListElasticsearchInstanceTypeDetails",
        "es:ListElasticsearchInstanceTypes",
        "es:ListElasticsearchVersions",
        "es:ListTags",
        "es:PurchaseReservedElasticsearchInstanceOffering",
        "es:RejectInboundCrossClusterSearchConnection",
        "es:RemoveTags",
        "es:UpdateElasticsearchDomainConfig",
        "es:UpgradeElasticsearchDomain",
        "events:ActivateEventSource",
        "events:CreateEventBus",
        "events:CreatePartnerEventSource",
        "events:DeactivateEventSource",
        "events:DeleteEventBus",
        "events:DeletePartnerEventSource",
        "events:DeleteRule",
        "events:DescribeEventBus",
        "events:DescribeEventSource",
        "events:DescribePartnerEventSource",
        "events:DescribeRule",
        "events:DisableRule",
        "events:EnableRule",
        "events:ListEventBuses",
        "events:ListEventSources",
        "events:ListPartnerEventSourceAccounts",
        "events:ListPartnerEventSources",
        "events:ListRuleNamesByTarget",
        "events:ListRules",
        "events:ListTagsForResource",
        "events:ListTargetsByRule",
        "events:PutEvents",
        "events:PutPartnerEvents",
        "events:PutPermission",
        "events:PutRule",
        "events:PutTargets",
        "events:RemovePermission",
        "events:RemoveTargets",
        "events:TagResource",
        "events:TestEventPattern",
        "events:UntagResource",
        "execute-api:InvalidateCache",
        "execute-api:Invoke",
        "execute-api:ManageConnections",
        "firehose:CreateDeliveryStream",
        "firehose:DeleteDeliveryStream",
        "firehose:DescribeDeliveryStream",
        "firehose:ListDeliveryStreams",
        "firehose:ListTagsForDeliveryStream",
        "firehose:PutRecord",
        "firehose:PutRecordBatch",
        "firehose:StartDeliveryStreamEncryption",
        "firehose:StopDeliveryStreamEncryption",
        "firehose:TagDeliveryStream",
        "firehose:UntagDeliveryStream",
        "firehose:UpdateDestination",
        "fms:AssociateAdminAccount",
        "fms:DeleteNotificationChannel",
        "fms:DeletePolicy",
        "fms:DisassociateAdminAccount",
        "fms:GetAdminAccount",
        "fms:GetComplianceDetail",
        "fms:GetNotificationChannel",
        "fms:GetPolicy",
        "fms:GetProtectionStatus",
        "fms:ListComplianceStatus",
        "fms:ListMemberAccounts",
        "fms:ListPolicies",
        "fms:ListTagsForResource",
        "fms:PutNotificationChannel",
        "fms:PutPolicy",
        "fms:TagResource",
        "fms:UntagResource",
        "forecast:CreateDataset",
        "forecast:CreateDatasetGroup",
        "forecast:CreateDatasetImportJob",
        "forecast:CreateForecast",
        "forecast:CreateForecastExportJob",
        "forecast:CreatePredictor",
        "forecast:DeleteDataset",
        "forecast:DeleteDatasetGroup",
        "forecast:DeleteDatasetImportJob",
        "forecast:DeleteForecast",
        "forecast:DeleteForecastExportJob",
        "forecast:DeletePredictor",
        "forecast:DescribeDataset",
        "forecast:DescribeDatasetGroup",
        "forecast:DescribeDatasetImportJob",
        "forecast:DescribeForecast",
        "forecast:DescribeForecastExportJob",
        "forecast:DescribePredictor",
        "forecast:GetAccuracyMetrics",
        "forecast:ListDatasetGroups",
        "forecast:ListDatasetImportJobs",
        "forecast:ListDatasets",
        "forecast:ListForecastExportJobs",
        "forecast:ListForecasts",
        "forecast:ListPredictors",
        "forecast:QueryForecast",
        "forecast:UpdateDatasetGroup",
        "frauddetector:BatchCreateVariable",
        "frauddetector:BatchGetVariable",
        "frauddetector:CreateDetectorVersion",
        "frauddetector:CreateModelVersion",
        "frauddetector:CreateRule",
        "frauddetector:CreateVariable",
        "frauddetector:DeleteDetector",
        "frauddetector:DeleteDetectorVersion",
        "frauddetector:DeleteEvent",
        "frauddetector:DeleteRuleVersion",
        "frauddetector:DescribeDetector",
        "frauddetector:DescribeModelVersions",
        "frauddetector:GetDetectorVersion",
        "frauddetector:GetDetectors",
        "frauddetector:GetExternalModels",
        "frauddetector:GetModelVersion",
        "frauddetector:GetModels",
        "frauddetector:GetOutcomes",
        "frauddetector:GetPrediction",
        "frauddetector:GetRules",
        "frauddetector:GetVariables",
        "frauddetector:PutDetector",
        "frauddetector:PutExternalModel",
        "frauddetector:PutModel",
        "frauddetector:PutOutcome",
        "frauddetector:UpdateDetectorVersion",
        "frauddetector:UpdateDetectorVersionMetadata",
        "frauddetector:UpdateDetectorVersionStatus",
        "frauddetector:UpdateModelVersion",
        "frauddetector:UpdateRuleMetadata",
        "frauddetector:UpdateRuleVersion",
        "frauddetector:UpdateVariable",
        "freertos:CreateSoftwareConfiguration",
        "freertos:DeleteSoftwareConfiguration",
        "freertos:DescribeHardwarePlatform",
        "freertos:DescribeSoftwareConfiguration",
        "freertos:GetSoftwareURL",
        "freertos:GetSoftwareURLForConfiguration",
        "freertos:ListFreeRTOSVersions",
        "freertos:ListHardwarePlatforms",
        "freertos:ListHardwareVendors",
        "freertos:ListSoftwareConfigurations",
        "freertos:UpdateSoftwareConfiguration",
        "fsx:CancelDataRepositoryTask",
        "fsx:CreateBackup",
        "fsx:CreateDataRepositoryTask",
        "fsx:CreateFileSystem",
        "fsx:CreateFileSystemFromBackup",
        "fsx:DeleteBackup",
        "fsx:DeleteFileSystem",
        "fsx:DescribeBackups",
        "fsx:DescribeDataRepositoryTasks",
        "fsx:DescribeFileSystems",
        "fsx:ListTagsForResource",
        "fsx:TagResource",
        "fsx:UntagResource",
        "fsx:UpdateFileSystem",
        "gamelift:AcceptMatch",
        "gamelift:CreateAlias",
        "gamelift:CreateBuild",
        "gamelift:CreateFleet",
        "gamelift:CreateGameSession",
        "gamelift:CreateGameSessionQueue",
        "gamelift:CreateMatchmakingConfiguration",
        "gamelift:CreateMatchmakingRuleSet",
        "gamelift:CreatePlayerSession",
        "gamelift:CreatePlayerSessions",
        "gamelift:CreateScript",
        "gamelift:CreateVpcPeeringAuthorization",
        "gamelift:CreateVpcPeeringConnection",
        "gamelift:DeleteAlias",
        "gamelift:DeleteBuild",
        "gamelift:DeleteFleet",
        "gamelift:DeleteGameSessionQueue",
        "gamelift:DeleteMatchmakingConfiguration",
        "gamelift:DeleteMatchmakingRuleSet",
        "gamelift:DeleteScalingPolicy",
        "gamelift:DeleteScript",
        "gamelift:DeleteVpcPeeringAuthorization",
        "gamelift:DeleteVpcPeeringConnection",
        "gamelift:DescribeAlias",
        "gamelift:DescribeBuild",
        "gamelift:DescribeEC2InstanceLimits",
        "gamelift:DescribeFleetAttributes",
        "gamelift:DescribeFleetCapacity",
        "gamelift:DescribeFleetEvents",
        "gamelift:DescribeFleetPortSettings",
        "gamelift:DescribeFleetUtilization",
        "gamelift:DescribeGameSessionDetails",
        "gamelift:DescribeGameSessionPlacement",
        "gamelift:DescribeGameSessionQueues",
        "gamelift:DescribeGameSessions",
        "gamelift:DescribeInstances",
        "gamelift:DescribeMatchmaking",
        "gamelift:DescribeMatchmakingConfigurations",
        "gamelift:DescribeMatchmakingRuleSets",
        "gamelift:DescribePlayerSessions",
        "gamelift:DescribeRuntimeConfiguration",
        "gamelift:DescribeScalingPolicies",
        "gamelift:DescribeScript",
        "gamelift:DescribeVpcPeeringAuthorizations",
        "gamelift:DescribeVpcPeeringConnections",
        "gamelift:GetGameSessionLogUrl",
        "gamelift:GetInstanceAccess",
        "gamelift:ListAliases",
        "gamelift:ListBuilds",
        "gamelift:ListFleets",
        "gamelift:ListScripts",
        "gamelift:ListTagsForResource",
        "gamelift:PutScalingPolicy",
        "gamelift:RequestUploadCredentials",
        "gamelift:ResolveAlias",
        "gamelift:SearchGameSessions",
        "gamelift:StartFleetActions",
        "gamelift:StartGameSessionPlacement",
        "gamelift:StartMatchBackfill",
        "gamelift:StartMatchmaking",
        "gamelift:StopFleetActions",
        "gamelift:StopGameSessionPlacement",
        "gamelift:StopMatchmaking",
        "gamelift:TagResource",
        "gamelift:UntagResource",
        "gamelift:UpdateAlias",
        "gamelift:UpdateBuild",
        "gamelift:UpdateFleetAttributes",
        "gamelift:UpdateFleetCapacity",
        "gamelift:UpdateFleetPortSettings",
        "gamelift:UpdateGameSession",
        "gamelift:UpdateGameSessionQueue",
        "gamelift:UpdateMatchmakingConfiguration",
        "gamelift:UpdateRuntimeConfiguration",
        "gamelift:UpdateScript",
        "gamelift:ValidateMatchmakingRuleSet",
        "glacier:AbortMultipartUpload",
        "glacier:AbortVaultLock",
        "glacier:AddTagsToVault",
        "glacier:CompleteMultipartUpload",
        "glacier:CompleteVaultLock",
        "glacier:CreateVault",
        "glacier:DeleteArchive",
        "glacier:DeleteVault",
        "glacier:DeleteVaultAccessPolicy",
        "glacier:DeleteVaultNotifications",
        "glacier:DescribeJob",
        "glacier:DescribeVault",
        "glacier:GetDataRetrievalPolicy",
        "glacier:GetJobOutput",
        "glacier:GetVaultAccessPolicy",
        "glacier:GetVaultLock",
        "glacier:GetVaultNotifications",
        "glacier:InitiateJob",
        "glacier:InitiateMultipartUpload",
        "glacier:InitiateVaultLock",
        "glacier:ListJobs",
        "glacier:ListMultipartUploads",
        "glacier:ListParts",
        "glacier:ListProvisionedCapacity",
        "glacier:ListTagsForVault",
        "glacier:ListVaults",
        "glacier:PurchaseProvisionedCapacity",
        "glacier:RemoveTagsFromVault",
        "glacier:SetDataRetrievalPolicy",
        "glacier:SetVaultAccessPolicy",
        "glacier:SetVaultNotifications",
        "glacier:UploadArchive",
        "glacier:UploadMultipartPart",
        "globalaccelerator:AdvertiseByoipCidr",
        "globalaccelerator:CreateAccelerator",
        "globalaccelerator:CreateEndpointGroup",
        "globalaccelerator:CreateListener",
        "globalaccelerator:DeleteAccelerator",
        "globalaccelerator:DeleteEndpointGroup",
        "globalaccelerator:DeleteListener",
        "globalaccelerator:DeprovisionByoipCidr",
        "globalaccelerator:DescribeAccelerator",
        "globalaccelerator:DescribeAcceleratorAttributes",
        "globalaccelerator:DescribeEndpointGroup",
        "globalaccelerator:DescribeListener",
        "globalaccelerator:ListAccelerators",
        "globalaccelerator:ListByoipCidrs",
        "globalaccelerator:ListEndpointGroups",
        "globalaccelerator:ListListeners",
        "globalaccelerator:ListTagsForResource",
        "globalaccelerator:ProvisionByoipCidr",
        "globalaccelerator:TagResource",
        "globalaccelerator:UntagResource",
        "globalaccelerator:UpdateAccelerator",
        "globalaccelerator:UpdateAcceleratorAttributes",
        "globalaccelerator:UpdateEndpointGroup",
        "globalaccelerator:UpdateListener",
        "globalaccelerator:WithdrawByoipCidr",
        "glue:BatchCreatePartition",
        "glue:BatchDeleteConnection",
        "glue:BatchDeletePartition",
        "glue:BatchDeleteTable",
        "glue:BatchDeleteTableVersion",
        "glue:BatchGetCrawlers",
        "glue:BatchGetDevEndpoints",
        "glue:BatchGetJobs",
        "glue:BatchGetPartition",
        "glue:BatchGetTriggers",
        "glue:BatchGetWorkflows",
        "glue:BatchStopJobRun",
        "glue:CancelMLTaskRun",
        "glue:CreateClassifier",
        "glue:CreateConnection",
        "glue:CreateCrawler",
        "glue:CreateDatabase",
        "glue:CreateDevEndpoint",
        "glue:CreateJob",
        "glue:CreateMLTransform",
        "glue:CreatePartition",
        "glue:CreateScript",
        "glue:CreateSecurityConfiguration",
        "glue:CreateTable",
        "glue:CreateTrigger",
        "glue:CreateUserDefinedFunction",
        "glue:CreateWorkflow",
        "glue:DeleteClassifier",
        "glue:DeleteConnection",
        "glue:DeleteCrawler",
        "glue:DeleteDatabase",
        "glue:DeleteDevEndpoint",
        "glue:DeleteJob",
        "glue:DeleteMLTransform",
        "glue:DeletePartition",
        "glue:DeleteResourcePolicy",
        "glue:DeleteSecurityConfiguration",
        "glue:DeleteTable",
        "glue:DeleteTableVersion",
        "glue:DeleteTrigger",
        "glue:DeleteUserDefinedFunction",
        "glue:DeleteWorkflow",
        "glue:GetCatalogImportStatus",
        "glue:GetClassifier",
        "glue:GetClassifiers",
        "glue:GetConnection",
        "glue:GetConnections",
        "glue:GetCrawler",
        "glue:GetCrawlerMetrics",
        "glue:GetCrawlers",
        "glue:GetDataCatalogEncryptionSettings",
        "glue:GetDatabase",
        "glue:GetDatabases",
        "glue:GetDataflowGraph",
        "glue:GetDevEndpoint",
        "glue:GetDevEndpoints",
        "glue:GetJob",
        "glue:GetJobBookmark",
        "glue:GetJobRun",
        "glue:GetJobRuns",
        "glue:GetJobs",
        "glue:GetMLTaskRun",
        "glue:GetMLTaskRuns",
        "glue:GetMLTransform",
        "glue:GetMLTransforms",
        "glue:GetMapping",
        "glue:GetPartition",
        "glue:GetPartitions",
        "glue:GetPlan",
        "glue:GetResourcePolicy",
        "glue:GetSecurityConfiguration",
        "glue:GetSecurityConfigurations",
        "glue:GetTable",
        "glue:GetTableVersion",
        "glue:GetTableVersions",
        "glue:GetTables",
        "glue:GetTags",
        "glue:GetTrigger",
        "glue:GetTriggers",
        "glue:GetUserDefinedFunction",
        "glue:GetUserDefinedFunctions",
        "glue:GetWorkflow",
        "glue:GetWorkflowRun",
        "glue:GetWorkflowRunProperties",
        "glue:GetWorkflowRuns",
        "glue:ImportCatalogToGlue",
        "glue:ListCrawlers",
        "glue:ListDevEndpoints",
        "glue:ListJobs",
        "glue:ListMLTransforms",
        "glue:ListTriggers",
        "glue:ListWorkflows",
        "glue:PutDataCatalogEncryptionSettings",
        "glue:PutResourcePolicy",
        "glue:PutWorkflowRunProperties",
        "glue:ResetJobBookmark",
        "glue:SearchTables",
        "glue:StartCrawler",
        "glue:StartCrawlerSchedule",
        "glue:StartExportLabelsTaskRun",
        "glue:StartImportLabelsTaskRun",
        "glue:StartJobRun",
        "glue:StartMLEvaluationTaskRun",
        "glue:StartMLLabelingSetGenerationTaskRun",
        "glue:StartTrigger",
        "glue:StartWorkflowRun",
        "glue:StopCrawler",
        "glue:StopCrawlerSchedule",
        "glue:StopTrigger",
        "glue:TagResource",
        "glue:UntagResource",
        "glue:UpdateClassifier",
        "glue:UpdateConnection",
        "glue:UpdateCrawler",
        "glue:UpdateCrawlerSchedule",
        "glue:UpdateDatabase",
        "glue:UpdateDevEndpoint",
        "glue:UpdateJob",
        "glue:UpdateMLTransform",
        "glue:UpdatePartition",
        "glue:UpdateTable",
        "glue:UpdateTrigger",
        "glue:UpdateUserDefinedFunction",
        "glue:UpdateWorkflow",
        "glue:UseMLTransforms",
        "greengrass:AssociateRoleToGroup",
        "greengrass:AssociateServiceRoleToAccount",
        "greengrass:CreateConnectorDefinition",
        "greengrass:CreateConnectorDefinitionVersion",
        "greengrass:CreateCoreDefinition",
        "greengrass:CreateCoreDefinitionVersion",
        "greengrass:CreateDeployment",
        "greengrass:CreateDeviceDefinition",
        "greengrass:CreateDeviceDefinitionVersion",
        "greengrass:CreateFunctionDefinition",
        "greengrass:CreateFunctionDefinitionVersion",
        "greengrass:CreateGroup",
        "greengrass:CreateGroupCertificateAuthority",
        "greengrass:CreateGroupVersion",
        "greengrass:CreateLoggerDefinition",
        "greengrass:CreateLoggerDefinitionVersion",
        "greengrass:CreateResourceDefinition",
        "greengrass:CreateResourceDefinitionVersion",
        "greengrass:CreateSoftwareUpdateJob",
        "greengrass:CreateSubscriptionDefinition",
        "greengrass:CreateSubscriptionDefinitionVersion",
        "greengrass:DeleteConnectorDefinition",
        "greengrass:DeleteCoreDefinition",
        "greengrass:DeleteDeviceDefinition",
        "greengrass:DeleteFunctionDefinition",
        "greengrass:DeleteGroup",
        "greengrass:DeleteLoggerDefinition",
        "greengrass:DeleteResourceDefinition",
        "greengrass:DeleteSubscriptionDefinition",
        "greengrass:DisassociateRoleFromGroup",
        "greengrass:DisassociateServiceRoleFromAccount",
        "greengrass:GetAssociatedRole",
        "greengrass:GetBulkDeploymentStatus",
        "greengrass:GetConnectivityInfo",
        "greengrass:GetConnectorDefinition",
        "greengrass:GetConnectorDefinitionVersion",
        "greengrass:GetCoreDefinition",
        "greengrass:GetCoreDefinitionVersion",
        "greengrass:GetDeploymentStatus",
        "greengrass:GetDeviceDefinition",
        "greengrass:GetDeviceDefinitionVersion",
        "greengrass:GetFunctionDefinition",
        "greengrass:GetFunctionDefinitionVersion",
        "greengrass:GetGroup",
        "greengrass:GetGroupCertificateAuthority",
        "greengrass:GetGroupCertificateConfiguration",
        "greengrass:GetGroupVersion",
        "greengrass:GetLoggerDefinition",
        "greengrass:GetLoggerDefinitionVersion",
        "greengrass:GetResourceDefinition",
        "greengrass:GetResourceDefinitionVersion",
        "greengrass:GetServiceRoleForAccount",
        "greengrass:GetSubscriptionDefinition",
        "greengrass:GetSubscriptionDefinitionVersion",
        "greengrass:ListBulkDeploymentDetailedReports",
        "greengrass:ListBulkDeployments",
        "greengrass:ListConnectorDefinitionVersions",
        "greengrass:ListConnectorDefinitions",
        "greengrass:ListCoreDefinitionVersions",
        "greengrass:ListCoreDefinitions",
        "greengrass:ListDeployments",
        "greengrass:ListDeviceDefinitionVersions",
        "greengrass:ListDeviceDefinitions",
        "greengrass:ListFunctionDefinitionVersions",
        "greengrass:ListFunctionDefinitions",
        "greengrass:ListGroupCertificateAuthorities",
        "greengrass:ListGroupVersions",
        "greengrass:ListGroups",
        "greengrass:ListLoggerDefinitionVersions",
        "greengrass:ListLoggerDefinitions",
        "greengrass:ListResourceDefinitionVersions",
        "greengrass:ListResourceDefinitions",
        "greengrass:ListSubscriptionDefinitionVersions",
        "greengrass:ListSubscriptionDefinitions",
        "greengrass:ListTagsForResource",
        "greengrass:ResetDeployments",
        "greengrass:StartBulkDeployment",
        "greengrass:StopBulkDeployment",
        "greengrass:TagResource",
        "greengrass:UntagResource",
        "greengrass:UpdateConnectivityInfo",
        "greengrass:UpdateConnectorDefinition",
        "greengrass:UpdateCoreDefinition",
        "greengrass:UpdateDeviceDefinition",
        "greengrass:UpdateFunctionDefinition",
        "greengrass:UpdateGroup",
        "greengrass:UpdateGroupCertificateConfiguration",
        "greengrass:UpdateLoggerDefinition",
        "greengrass:UpdateResourceDefinition",
        "greengrass:UpdateSubscriptionDefinition",
        "groundstation:CancelContact",
        "groundstation:CreateConfig",
        "groundstation:CreateDataflowEndpointGroup",
        "groundstation:CreateMissionProfile",
        "groundstation:DeleteConfig",
        "groundstation:DeleteDataflowEndpointGroup",
        "groundstation:DeleteMissionProfile",
        "groundstation:DescribeContact",
        "groundstation:GetConfig",
        "groundstation:GetDataflowEndpointGroup",
        "groundstation:GetMinuteUsage",
        "groundstation:GetMissionProfile",
        "groundstation:GetSatellite",
        "groundstation:ListConfigs",
        "groundstation:ListContacts",
        "groundstation:ListDataflowEndpointGroups",
        "groundstation:ListGroundStations",
        "groundstation:ListMissionProfiles",
        "groundstation:ListSatellites",
        "groundstation:ListTagsForResource",
        "groundstation:ReserveContact",
        "groundstation:TagResource",
        "groundstation:UntagResource",
        "groundstation:UpdateConfig",
        "groundstation:UpdateMissionProfile",
        "groundtruthlabeling:DescribeConsoleJob",
        "groundtruthlabeling:ListDatasetObjects",
        "groundtruthlabeling:RunFilterOrSampleDatasetJob",
        "groundtruthlabeling:RunGenerateManifestByCrawlingJob",
        "guardduty:AcceptInvitation",
        "guardduty:ArchiveFindings",
        "guardduty:CreateDetector",
        "guardduty:CreateFilter",
        "guardduty:CreateIPSet",
        "guardduty:CreateMembers",
        "guardduty:CreatePublishingDestination",
        "guardduty:CreateSampleFindings",
        "guardduty:CreateThreatIntelSet",
        "guardduty:DeclineInvitations",
        "guardduty:DeleteDetector",
        "guardduty:DeleteFilter",
        "guardduty:DeleteIPSet",
        "guardduty:DeleteInvitations",
        "guardduty:DeleteMembers",
        "guardduty:DeletePublishingDestination",
        "guardduty:DeleteThreatIntelSet",
        "guardduty:DescribeOrganizationConfiguration",
        "guardduty:DescribePublishingDestination",
        "guardduty:DisableOrganizationAdminAccount",
        "guardduty:DisassociateFromMasterAccount",
        "guardduty:DisassociateMembers",
        "guardduty:EnableOrganizationAdminAccount",
        "guardduty:GetDetector",
        "guardduty:GetFilter",
        "guardduty:GetFindings",
        "guardduty:GetFindingsStatistics",
        "guardduty:GetIPSet",
        "guardduty:GetInvitationsCount",
        "guardduty:GetMasterAccount",
        "guardduty:GetMembers",
        "guardduty:GetThreatIntelSet",
        "guardduty:InviteMembers",
        "guardduty:ListDetectors",
        "guardduty:ListFilters",
        "guardduty:ListFindings",
        "guardduty:ListInvitations",
        "guardduty:ListMembers",
        "guardduty:ListOrganizationAdminAccounts",
        "guardduty:ListPublishingDestinations",
        "guardduty:ListTagsForResource",
        "guardduty:ListThreatIntelSets",
        "guardduty:StartMonitoringMembers",
        "guardduty:StopMonitoringMembers",
        "guardduty:TagResource",
        "guardduty:UnarchiveFindings",
        "guardduty:UntagResource",
        "guardduty:UpdateDetector",
        "guardduty:UpdateFilter",
        "guardduty:UpdateFindingsFeedback",
        "guardduty:UpdateIPSet",
        "guardduty:UpdateOrganizationConfiguration",
        "guardduty:UpdatePublishingDestination",
        "guardduty:UpdateThreatIntelSet",
        "health:DescribeAffectedAccountsForOrganization",
        "health:DescribeAffectedEntities",
        "health:DescribeAffectedEntitiesForOrganization",
        "health:DescribeEntityAggregates",
        "health:DescribeEventAggregates",
        "health:DescribeEventDetails",
        "health:DescribeEventDetailsForOrganization",
        "health:DescribeEventTypes",
        "health:DescribeEvents",
        "health:DescribeEventsForOrganization",
        "health:DescribeHealthServiceStatusForOrganization",
        "health:DisableHealthServiceAccessForOrganization",
        "health:EnableHealthServiceAccessForOrganization",
        "iam:AddClientIDToOpenIDConnectProvider",
        "iam:AddRoleToInstanceProfile",
        "iam:AddUserToGroup",
        "iam:AttachGroupPolicy",
        "iam:AttachRolePolicy",
        "iam:AttachUserPolicy",
        "iam:ChangePassword",
        "iam:CreateAccessKey",
        "iam:CreateAccountAlias",
        "iam:CreateGroup",
        "iam:CreateInstanceProfile",
        "iam:CreateLoginProfile",
        "iam:CreateOpenIDConnectProvider",
        "iam:CreatePolicy",
        "iam:CreatePolicyVersion",
        "iam:CreateRole",
        "iam:CreateSAMLProvider",
        "iam:CreateServiceLinkedRole",
        "iam:CreateServiceSpecificCredential",
        "iam:CreateUser",
        "iam:CreateVirtualMFADevice",
        "iam:DeactivateMFADevice",
        "iam:DeleteAccessKey",
        "iam:DeleteAccountAlias",
        "iam:DeleteAccountPasswordPolicy",
        "iam:DeleteGroup",
        "iam:DeleteGroupPolicy",
        "iam:DeleteInstanceProfile",
        "iam:DeleteLoginProfile",
        "iam:DeleteOpenIDConnectProvider",
        "iam:DeletePolicy",
        "iam:DeletePolicyVersion",
        "iam:DeleteRole",
        "iam:DeleteRolePermissionsBoundary",
        "iam:DeleteRolePolicy",
        "iam:DeleteSAMLProvider",
        "iam:DeleteSSHPublicKey",
        "iam:DeleteServerCertificate",
        "iam:DeleteServiceLinkedRole",
        "iam:DeleteServiceSpecificCredential",
        "iam:DeleteSigningCertificate",
        "iam:DeleteUser",
        "iam:DeleteUserPermissionsBoundary",
        "iam:DeleteUserPolicy",
        "iam:DeleteVirtualMFADevice",
        "iam:DetachGroupPolicy",
        "iam:DetachRolePolicy",
        "iam:DetachUserPolicy",
        "iam:EnableMFADevice",
        "iam:GenerateCredentialReport",
        "iam:GenerateOrganizationsAccessReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetContextKeysForCustomPolicy",
        "iam:GetContextKeysForPrincipalPolicy",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetInstanceProfile",
        "iam:GetLoginProfile",
        "iam:GetOpenIDConnectProvider",
        "iam:GetOrganizationsAccessReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:GetServerCertificate",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetServiceLinkedRoleDeletionStatus",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfiles",
        "iam:ListInstanceProfilesForRole",
        "iam:ListMFADevices",
        "iam:ListOpenIDConnectProviders",
        "iam:ListPolicies",
        "iam:ListPoliciesGrantingServiceAccess",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoleTags",
        "iam:ListRoles",
        "iam:ListSAMLProviders",
        "iam:ListSSHPublicKeys",
        "iam:ListServerCertificates",
        "iam:ListServiceSpecificCredentials",
        "iam:ListSigningCertificates",
        "iam:ListUserPolicies",
        "iam:ListUserTags",
        "iam:ListUsers",
        "iam:ListVirtualMFADevices",
        "iam:PassRole",
        "iam:PutGroupPolicy",
        "iam:PutRolePermissionsBoundary",
        "iam:PutRolePolicy",
        "iam:PutUserPermissionsBoundary",
        "iam:PutUserPolicy",
        "iam:RemoveClientIDFromOpenIDConnectProvider",
        "iam:RemoveRoleFromInstanceProfile",
        "iam:RemoveUserFromGroup",
        "iam:ResetServiceSpecificCredential",
        "iam:ResyncMFADevice",
        "iam:SetDefaultPolicyVersion",
        "iam:SetSecurityTokenServicePreferences",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy",
        "iam:TagRole",
        "iam:TagUser",
        "iam:UntagRole",
        "iam:UntagUser",
        "iam:UpdateAccessKey",
        "iam:UpdateAccountPasswordPolicy",
        "iam:UpdateAssumeRolePolicy",
        "iam:UpdateGroup",
        "iam:UpdateLoginProfile",
        "iam:UpdateOpenIDConnectProviderThumbprint",
        "iam:UpdateRole",
        "iam:UpdateRoleDescription",
        "iam:UpdateSAMLProvider",
        "iam:UpdateSSHPublicKey",
        "iam:UpdateServerCertificate",
        "iam:UpdateServiceSpecificCredential",
        "iam:UpdateSigningCertificate",
        "iam:UpdateUser",
        "iam:UploadSSHPublicKey",
        "iam:UploadServerCertificate",
        "iam:UploadSigningCertificate",
        "imagebuilder:CancelImageCreation",
        "imagebuilder:CreateComponent",
        "imagebuilder:CreateDistributionConfiguration",
        "imagebuilder:CreateImage",
        "imagebuilder:CreateImagePipeline",
        "imagebuilder:CreateImageRecipe",
        "imagebuilder:CreateInfrastructureConfiguration",
        "imagebuilder:DeleteComponent",
        "imagebuilder:DeleteDistributionConfiguration",
        "imagebuilder:DeleteImage",
        "imagebuilder:DeleteImagePipeline",
        "imagebuilder:DeleteImageRecipe",
        "imagebuilder:DeleteInfrastructureConfiguration",
        "imagebuilder:GetComponent",
        "imagebuilder:GetComponentPolicy",
        "imagebuilder:GetDistributionConfiguration",
        "imagebuilder:GetImage",
        "imagebuilder:GetImagePipeline",
        "imagebuilder:GetImagePolicy",
        "imagebuilder:GetImageRecipe",
        "imagebuilder:GetImageRecipePolicy",
        "imagebuilder:GetInfrastructureConfiguration",
        "imagebuilder:ListComponentBuildVersions",
        "imagebuilder:ListComponents",
        "imagebuilder:ListDistributionConfigurations",
        "imagebuilder:ListImageBuildVersions",
        "imagebuilder:ListImagePipelines",
        "imagebuilder:ListImageRecipes",
        "imagebuilder:ListImages",
        "imagebuilder:ListInfrastructureConfigurations",
        "imagebuilder:ListTagsForResource",
        "imagebuilder:PutComponentPolicy",
        "imagebuilder:PutImagePolicy",
        "imagebuilder:PutImageRecipePolicy",
        "imagebuilder:StartImagePipelineExecution",
        "imagebuilder:TagResource",
        "imagebuilder:UntagResource",
        "imagebuilder:UpdateDistributionConfiguration",
        "imagebuilder:UpdateImagePipeline",
        "imagebuilder:UpdateInfrastructureConfiguration",
        "importexport:CancelJob",
        "importexport:CreateJob",
        "importexport:GetShippingLabel",
        "importexport:GetStatus",
        "importexport:ListJobs",
        "importexport:UpdateJob",
        "inspector:AddAttributesToFindings",
        "inspector:CreateAssessmentTarget",
        "inspector:CreateAssessmentTemplate",
        "inspector:CreateResourceGroup",
        "inspector:DeleteAssessmentRun",
        "inspector:DeleteAssessmentTarget",
        "inspector:DeleteAssessmentTemplate",
        "inspector:DescribeAssessmentRuns",
        "inspector:DescribeAssessmentTargets",
        "inspector:DescribeAssessmentTemplates",
        "inspector:DescribeCrossAccountAccessRole",
        "inspector:DescribeFindings",
        "inspector:DescribeResourceGroups",
        "inspector:DescribeRulesPackages",
        "inspector:GetTelemetryMetadata",
        "inspector:ListAssessmentRunAgents",
        "inspector:ListAssessmentRuns",
        "inspector:ListAssessmentTargets",
        "inspector:ListAssessmentTemplates",
        "inspector:ListEventSubscriptions",
        "inspector:ListFindings",
        "inspector:ListRulesPackages",
        "inspector:ListTagsForResource",
        "inspector:PreviewAgents",
        "inspector:RegisterCrossAccountAccessRole",
        "inspector:RemoveAttributesFromFindings",
        "inspector:SetTagsForResource",
        "inspector:StartAssessmentRun",
        "inspector:StopAssessmentRun",
        "inspector:SubscribeToEvent",
        "inspector:UnsubscribeFromEvent",
        "inspector:UpdateAssessmentTarget",
        "iot-device-tester:CheckVersion",
        "iot-device-tester:DownloadTestSuite",
        "iot-device-tester:LatestIdt",
        "iot-device-tester:SendMetrics",
        "iot-device-tester:SupportedVersion",
        "iot1click:AssociateDeviceWithPlacement",
        "iot1click:ClaimDevicesByClaimCode",
        "iot1click:CreatePlacement",
        "iot1click:CreateProject",
        "iot1click:DeletePlacement",
        "iot1click:DeleteProject",
        "iot1click:DescribeDevice",
        "iot1click:DescribePlacement",
        "iot1click:DescribeProject",
        "iot1click:DisassociateDeviceFromPlacement",
        "iot1click:FinalizeDeviceClaim",
        "iot1click:GetDeviceMethods",
        "iot1click:GetDevicesInPlacement",
        "iot1click:InitiateDeviceClaim",
        "iot1click:InvokeDeviceMethod",
        "iot1click:ListDeviceEvents",
        "iot1click:ListDevices",
        "iot1click:ListPlacements",
        "iot1click:ListProjects",
        "iot1click:ListTagsForResource",
        "iot1click:TagResource",
        "iot1click:UnclaimDevice",
        "iot1click:UntagResource",
        "iot1click:UpdateDeviceState",
        "iot1click:UpdatePlacement",
        "iot1click:UpdateProject",
        "iot:AcceptCertificateTransfer",
        "iot:AddThingToBillingGroup",
        "iot:AddThingToThingGroup",
        "iot:AssociateTargetsWithJob",
        "iot:AttachPolicy",
        "iot:AttachPrincipalPolicy",
        "iot:AttachSecurityProfile",
        "iot:AttachThingPrincipal",
        "iot:CancelAuditMitigationActionsTask",
        "iot:CancelAuditTask",
        "iot:CancelCertificateTransfer",
        "iot:CancelJob",
        "iot:CancelJobExecution",
        "iot:ClearDefaultAuthorizer",
        "iot:CloseTunnel",
        "iot:Connect",
        "iot:CreateAuthorizer",
        "iot:CreateBillingGroup",
        "iot:CreateCertificateFromCsr",
        "iot:CreateDimension",
        "iot:CreateDynamicThingGroup",
        "iot:CreateJob",
        "iot:CreateKeysAndCertificate",
        "iot:CreateMitigationAction",
        "iot:CreateOTAUpdate",
        "iot:CreatePolicy",
        "iot:CreatePolicyVersion",
        "iot:CreateProvisioningClaim",
        "iot:CreateProvisioningTemplate",
        "iot:CreateProvisioningTemplateVersion",
        "iot:CreateRoleAlias",
        "iot:CreateScheduledAudit",
        "iot:CreateSecurityProfile",
        "iot:CreateStream",
        "iot:CreateThing",
        "iot:CreateThingGroup",
        "iot:CreateThingType",
        "iot:CreateTopicRule",
        "iot:DeleteAccountAuditConfiguration",
        "iot:DeleteAuthorizer",
        "iot:DeleteBillingGroup",
        "iot:DeleteCACertificate",
        "iot:DeleteCertificate",
        "iot:DeleteDimension",
        "iot:DeleteDynamicThingGroup",
        "iot:DeleteJob",
        "iot:DeleteJobExecution",
        "iot:DeleteMitigationAction",
        "iot:DeleteOTAUpdate",
        "iot:DeletePolicy",
        "iot:DeletePolicyVersion",
        "iot:DeleteProvisioningTemplate",
        "iot:DeleteProvisioningTemplateVersion",
        "iot:DeleteRegistrationCode",
        "iot:DeleteRoleAlias",
        "iot:DeleteScheduledAudit",
        "iot:DeleteSecurityProfile",
        "iot:DeleteStream",
        "iot:DeleteThing",
        "iot:DeleteThingGroup",
        "iot:DeleteThingShadow",
        "iot:DeleteThingType",
        "iot:DeleteTopicRule",
        "iot:DeleteV2LoggingLevel",
        "iot:DeprecateThingType",
        "iot:DescribeAccountAuditConfiguration",
        "iot:DescribeAuditMitigationActionsTask",
        "iot:DescribeAuditTask",
        "iot:DescribeAuthorizer",
        "iot:DescribeBillingGroup",
        "iot:DescribeCACertificate",
        "iot:DescribeCertificate",
        "iot:DescribeDefaultAuthorizer",
        "iot:DescribeDimension",
        "iot:DescribeEndpoint",
        "iot:DescribeEventConfigurations",
        "iot:DescribeIndex",
        "iot:DescribeJob",
        "iot:DescribeJobExecution",
        "iot:DescribeMitigationAction",
        "iot:DescribeProvisioningTemplate",
        "iot:DescribeProvisioningTemplateVersion",
        "iot:DescribeRoleAlias",
        "iot:DescribeScheduledAudit",
        "iot:DescribeSecurityProfile",
        "iot:DescribeStream",
        "iot:DescribeThing",
        "iot:DescribeThingGroup",
        "iot:DescribeThingRegistrationTask",
        "iot:DescribeThingType",
        "iot:DescribeTunnel",
        "iot:DetachPolicy",
        "iot:DetachPrincipalPolicy",
        "iot:DetachSecurityProfile",
        "iot:DetachThingPrincipal",
        "iot:DisableTopicRule",
        "iot:EnableTopicRule",
        "iot:GetCardinality",
        "iot:GetEffectivePolicies",
        "iot:GetIndexingConfiguration",
        "iot:GetJobDocument",
        "iot:GetLoggingOptions",
        "iot:GetOTAUpdate",
        "iot:GetPendingJobExecutions",
        "iot:GetPercentiles",
        "iot:GetPolicy",
        "iot:GetPolicyVersion",
        "iot:GetRegistrationCode",
        "iot:GetStatistics",
        "iot:GetThingShadow",
        "iot:GetTopicRule",
        "iot:GetV2LoggingOptions",
        "iot:ListActiveViolations",
        "iot:ListAttachedPolicies",
        "iot:ListAuditFindings",
        "iot:ListAuditMitigationActionsExecutions",
        "iot:ListAuditMitigationActionsTasks",
        "iot:ListAuditTasks",
        "iot:ListAuthorizers",
        "iot:ListBillingGroups",
        "iot:ListCACertificates",
        "iot:ListCertificates",
        "iot:ListCertificatesByCA",
        "iot:ListDimensions",
        "iot:ListIndices",
        "iot:ListJobExecutionsForJob",
        "iot:ListJobExecutionsForThing",
        "iot:ListJobs",
        "iot:ListMitigationActions",
        "iot:ListNamedShadowsForThing",
        "iot:ListOTAUpdates",
        "iot:ListOutgoingCertificates",
        "iot:ListPolicies",
        "iot:ListPolicyPrincipals",
        "iot:ListPolicyVersions",
        "iot:ListPrincipalPolicies",
        "iot:ListPrincipalThings",
        "iot:ListProvisioningTemplateVersions",
        "iot:ListProvisioningTemplates",
        "iot:ListRoleAliases",
        "iot:ListScheduledAudits",
        "iot:ListSecurityProfiles",
        "iot:ListSecurityProfilesForTarget",
        "iot:ListStreams",
        "iot:ListTagsForResource",
        "iot:ListTargetsForPolicy",
        "iot:ListTargetsForSecurityProfile",
        "iot:ListThingGroups",
        "iot:ListThingGroupsForThing",
        "iot:ListThingPrincipals",
        "iot:ListThingRegistrationTaskReports",
        "iot:ListThingRegistrationTasks",
        "iot:ListThingTypes",
        "iot:ListThings",
        "iot:ListThingsInBillingGroup",
        "iot:ListThingsInThingGroup",
        "iot:ListTopicRules",
        "iot:ListTunnels",
        "iot:ListV2LoggingLevels",
        "iot:ListViolationEvents",
        "iot:OpenTunnel",
        "iot:Publish",
        "iot:Receive",
        "iot:RegisterCACertificate",
        "iot:RegisterCertificate",
        "iot:RegisterCertificateWithoutCA",
        "iot:RegisterThing",
        "iot:RejectCertificateTransfer",
        "iot:RemoveThingFromBillingGroup",
        "iot:RemoveThingFromThingGroup",
        "iot:ReplaceTopicRule",
        "iot:SearchIndex",
        "iot:SetDefaultAuthorizer",
        "iot:SetDefaultPolicyVersion",
        "iot:SetLoggingOptions",
        "iot:SetV2LoggingLevel",
        "iot:SetV2LoggingOptions",
        "iot:StartAuditMitigationActionsTask",
        "iot:StartNextPendingJobExecution",
        "iot:StartOnDemandAuditTask",
        "iot:StartThingRegistrationTask",
        "iot:StopThingRegistrationTask",
        "iot:Subscribe",
        "iot:TagResource",
        "iot:TestAuthorization",
        "iot:TestInvokeAuthorizer",
        "iot:TransferCertificate",
        "iot:UntagResource",
        "iot:UpdateAccountAuditConfiguration",
        "iot:UpdateAuthorizer",
        "iot:UpdateBillingGroup",
        "iot:UpdateCACertificate",
        "iot:UpdateCertificate",
        "iot:UpdateDimension",
        "iot:UpdateDynamicThingGroup",
        "iot:UpdateEventConfigurations",
        "iot:UpdateIndexingConfiguration",
        "iot:UpdateJob",
        "iot:UpdateJobExecution",
        "iot:UpdateMitigationAction",
        "iot:UpdateProvisioningTemplate",
        "iot:UpdateRoleAlias",
        "iot:UpdateScheduledAudit",
        "iot:UpdateSecurityProfile",
        "iot:UpdateStream",
        "iot:UpdateThing",
        "iot:UpdateThingGroup",
        "iot:UpdateThingGroupsForThing",
        "iot:UpdateThingShadow",
        "iot:ValidateSecurityProfileBehaviors",
        "iotanalytics:BatchPutMessage",
        "iotanalytics:CancelPipelineReprocessing",
        "iotanalytics:CreateChannel",
        "iotanalytics:CreateDataset",
        "iotanalytics:CreateDatasetContent",
        "iotanalytics:CreateDatastore",
        "iotanalytics:CreatePipeline",
        "iotanalytics:DeleteChannel",
        "iotanalytics:DeleteDataset",
        "iotanalytics:DeleteDatasetContent",
        "iotanalytics:DeleteDatastore",
        "iotanalytics:DeletePipeline",
        "iotanalytics:DescribeChannel",
        "iotanalytics:DescribeDataset",
        "iotanalytics:DescribeDatastore",
        "iotanalytics:DescribeLoggingOptions",
        "iotanalytics:DescribePipeline",
        "iotanalytics:GetDatasetContent",
        "iotanalytics:ListChannels",
        "iotanalytics:ListDatasets",
        "iotanalytics:ListDatastores",
        "iotanalytics:ListPipelines",
        "iotanalytics:ListTagsForResource",
        "iotanalytics:PutLoggingOptions",
        "iotanalytics:RunPipelineActivity",
        "iotanalytics:SampleChannelData",
        "iotanalytics:StartPipelineReprocessing",
        "iotanalytics:TagResource",
        "iotanalytics:UntagResource",
        "iotanalytics:UpdateChannel",
        "iotanalytics:UpdateDataset",
        "iotanalytics:UpdateDatastore",
        "iotanalytics:UpdatePipeline",
        "iotevents:BatchPutMessage",
        "iotevents:BatchUpdateDetector",
        "iotevents:CreateDetectorModel",
        "iotevents:CreateInput",
        "iotevents:DeleteDetectorModel",
        "iotevents:DeleteInput",
        "iotevents:DescribeDetector",
        "iotevents:DescribeDetectorModel",
        "iotevents:DescribeInput",
        "iotevents:DescribeLoggingOptions",
        "iotevents:ListDetectorModelVersions",
        "iotevents:ListDetectorModels",
        "iotevents:ListDetectors",
        "iotevents:ListInputs",
        "iotevents:ListTagsForResource",
        "iotevents:PutLoggingOptions",
        "iotevents:TagResource",
        "iotevents:UntagResource",
        "iotevents:UpdateDetectorModel",
        "iotevents:UpdateInput",
        "iotevents:UpdateInputRouting",
        "iotsitewise:AssociateAssets",
        "iotsitewise:BatchAssociateProjectAssets",
        "iotsitewise:BatchDisassociateProjectAssets",
        "iotsitewise:BatchPutAssetPropertyValue",
        "iotsitewise:CreateAccessPolicy",
        "iotsitewise:CreateAsset",
        "iotsitewise:CreateAssetModel",
        "iotsitewise:CreateDashboard",
        "iotsitewise:CreateGateway",
        "iotsitewise:CreatePortal",
        "iotsitewise:CreateProject",
        "iotsitewise:DeleteAccessPolicy",
        "iotsitewise:DeleteAsset",
        "iotsitewise:DeleteAssetModel",
        "iotsitewise:DeleteDashboard",
        "iotsitewise:DeleteGateway",
        "iotsitewise:DeletePortal",
        "iotsitewise:DeleteProject",
        "iotsitewise:DescribeAccessPolicy",
        "iotsitewise:DescribeAsset",
        "iotsitewise:DescribeAssetModel",
        "iotsitewise:DescribeAssetProperty",
        "iotsitewise:DescribeDashboard",
        "iotsitewise:DescribeGateway",
        "iotsitewise:DescribeGatewayCapabilityConfiguration",
        "iotsitewise:DescribeLoggingOptions",
        "iotsitewise:DescribePortal",
        "iotsitewise:DescribeProject",
        "iotsitewise:DisassociateAssets",
        "iotsitewise:GetAssetPropertyAggregates",
        "iotsitewise:GetAssetPropertyValue",
        "iotsitewise:GetAssetPropertyValueHistory",
        "iotsitewise:ListAccessPolicies",
        "iotsitewise:ListAssetModels",
        "iotsitewise:ListAssets",
        "iotsitewise:ListAssociatedAssets",
        "iotsitewise:ListDashboards",
        "iotsitewise:ListGateways",
        "iotsitewise:ListPortals",
        "iotsitewise:ListProjectAssets",
        "iotsitewise:ListProjects",
        "iotsitewise:ListTagsForResource",
        "iotsitewise:PutLoggingOptions",
        "iotsitewise:TagResource",
        "iotsitewise:UntagResource",
        "iotsitewise:UpdateAccessPolicy",
        "iotsitewise:UpdateAsset",
        "iotsitewise:UpdateAssetModel",
        "iotsitewise:UpdateAssetProperty",
        "iotsitewise:UpdateDashboard",
        "iotsitewise:UpdateGateway",
        "iotsitewise:UpdateGatewayCapabilityConfiguration",
        "iotsitewise:UpdatePortal",
        "iotsitewise:UpdateProject",
        "iotthingsgraph:AssociateEntityToThing",
        "iotthingsgraph:CreateFlowTemplate",
        "iotthingsgraph:CreateSystemInstance",
        "iotthingsgraph:CreateSystemTemplate",
        "iotthingsgraph:DeleteFlowTemplate",
        "iotthingsgraph:DeleteNamespace",
        "iotthingsgraph:DeleteSystemInstance",
        "iotthingsgraph:DeleteSystemTemplate",
        "iotthingsgraph:DeploySystemInstance",
        "iotthingsgraph:DeprecateFlowTemplate",
        "iotthingsgraph:DeprecateSystemTemplate",
        "iotthingsgraph:DescribeNamespace",
        "iotthingsgraph:DissociateEntityFromThing",
        "iotthingsgraph:GetEntities",
        "iotthingsgraph:GetFlowTemplate",
        "iotthingsgraph:GetFlowTemplateRevisions",
        "iotthingsgraph:GetNamespaceDeletionStatus",
        "iotthingsgraph:GetSystemInstance",
        "iotthingsgraph:GetSystemTemplate",
        "iotthingsgraph:GetSystemTemplateRevisions",
        "iotthingsgraph:GetUploadStatus",
        "iotthingsgraph:ListFlowExecutionMessages",
        "iotthingsgraph:ListTagsForResource",
        "iotthingsgraph:SearchEntities",
        "iotthingsgraph:SearchFlowExecutions",
        "iotthingsgraph:SearchFlowTemplates",
        "iotthingsgraph:SearchSystemInstances",
        "iotthingsgraph:SearchSystemTemplates",
        "iotthingsgraph:SearchThings",
        "iotthingsgraph:TagResource",
        "iotthingsgraph:UndeploySystemInstance",
        "iotthingsgraph:UntagResource",
        "iotthingsgraph:UpdateFlowTemplate",
        "iotthingsgraph:UpdateSystemTemplate",
        "iotthingsgraph:UploadEntityDefinitions",
        "iq-permission:ApproveAccessGrant",
        "iq:CreateProject",
        "kafka:CreateCluster",
        "kafka:CreateConfiguration",
        "kafka:DeleteCluster",
        "kafka:DescribeCluster",
        "kafka:DescribeClusterOperation",
        "kafka:DescribeConfiguration",
        "kafka:DescribeConfigurationRevision",
        "kafka:GetBootstrapBrokers",
        "kafka:GetCompatibleKafkaVersions",
        "kafka:ListClusterOperations",
        "kafka:ListClusters",
        "kafka:ListConfigurations",
        "kafka:ListNodes",
        "kafka:ListTagsForResource",
        "kafka:TagResource",
        "kafka:UntagResource",
        "kafka:UpdateBrokerCount",
        "kafka:UpdateBrokerStorage",
        "kafka:UpdateClusterConfiguration",
        "kafka:UpdateClusterKafkaVersion",
        "kafka:UpdateMonitoring",
        "kendra:BatchDeleteDocument",
        "kendra:BatchPutDocument",
        "kendra:CreateDataSource",
        "kendra:CreateFaq",
        "kendra:CreateIndex",
        "kendra:DeleteDataSource",
        "kendra:DeleteFaq",
        "kendra:DeleteIndex",
        "kendra:DescribeDataSource",
        "kendra:DescribeFaq",
        "kendra:DescribeIndex",
        "kendra:ListDataSourceSyncJobs",
        "kendra:ListDataSources",
        "kendra:ListFaqs",
        "kendra:ListIndices",
        "kendra:ListTagsForResource",
        "kendra:Query",
        "kendra:StartDataSourceSyncJob",
        "kendra:StopDataSourceSyncJob",
        "kendra:SubmitFeedback",
        "kendra:TagResource",
        "kendra:UntagResource",
        "kendra:UpdateDataSource",
        "kendra:UpdateIndex",
        "kinesis:AddTagsToStream",
        "kinesis:CreateStream",
        "kinesis:DecreaseStreamRetentionPeriod",
        "kinesis:DeleteStream",
        "kinesis:DeregisterStreamConsumer",
        "kinesis:DescribeLimits",
        "kinesis:DescribeStream",
        "kinesis:DescribeStreamConsumer",
        "kinesis:DescribeStreamSummary",
        "kinesis:DisableEnhancedMonitoring",
        "kinesis:EnableEnhancedMonitoring",
        "kinesis:GetRecords",
        "kinesis:GetShardIterator",
        "kinesis:IncreaseStreamRetentionPeriod",
        "kinesis:ListShards",
        "kinesis:ListStreamConsumers",
        "kinesis:ListStreams",
        "kinesis:ListTagsForStream",
        "kinesis:MergeShards",
        "kinesis:PutRecord",
        "kinesis:PutRecords",
        "kinesis:RegisterStreamConsumer",
        "kinesis:RemoveTagsFromStream",
        "kinesis:SplitShard",
        "kinesis:SubscribeToShard",
        "kinesis:UpdateShardCount",
        "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
        "kinesisanalytics:AddApplicationInput",
        "kinesisanalytics:AddApplicationInputProcessingConfiguration",
        "kinesisanalytics:AddApplicationOutput",
        "kinesisanalytics:AddApplicationReferenceDataSource",
        "kinesisanalytics:AddApplicationVpcConfiguration",
        "kinesisanalytics:CreateApplication",
        "kinesisanalytics:CreateApplicationSnapshot",
        "kinesisanalytics:DeleteApplication",
        "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
        "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
        "kinesisanalytics:DeleteApplicationOutput",
        "kinesisanalytics:DeleteApplicationReferenceDataSource",
        "kinesisanalytics:DeleteApplicationSnapshot",
        "kinesisanalytics:DeleteApplicationVpcConfiguration",
        "kinesisanalytics:DescribeApplication",
        "kinesisanalytics:DescribeApplicationSnapshot",
        "kinesisanalytics:DiscoverInputSchema",
        "kinesisanalytics:GetApplicationState",
        "kinesisanalytics:ListApplicationSnapshots",
        "kinesisanalytics:ListApplications",
        "kinesisanalytics:ListTagsForResource",
        "kinesisanalytics:StartApplication",
        "kinesisanalytics:StopApplication",
        "kinesisanalytics:TagResource",
        "kinesisanalytics:UntagResource",
        "kinesisanalytics:UpdateApplication",
        "kinesisvideo:ConnectAsMaster",
        "kinesisvideo:ConnectAsViewer",
        "kinesisvideo:CreateSignalingChannel",
        "kinesisvideo:CreateStream",
        "kinesisvideo:DeleteSignalingChannel",
        "kinesisvideo:DeleteStream",
        "kinesisvideo:DescribeSignalingChannel",
        "kinesisvideo:DescribeStream",
        "kinesisvideo:GetClip",
        "kinesisvideo:GetDASHStreamingSessionURL",
        "kinesisvideo:GetDataEndpoint",
        "kinesisvideo:GetHLSStreamingSessionURL",
        "kinesisvideo:GetIceServerConfig",
        "kinesisvideo:GetMedia",
        "kinesisvideo:GetMediaForFragmentList",
        "kinesisvideo:GetSignalingChannelEndpoint",
        "kinesisvideo:ListFragments",
        "kinesisvideo:ListSignalingChannels",
        "kinesisvideo:ListStreams",
        "kinesisvideo:ListTagsForResource",
        "kinesisvideo:ListTagsForStream",
        "kinesisvideo:PutMedia",
        "kinesisvideo:SendAlexaOfferToMaster",
        "kinesisvideo:TagResource",
        "kinesisvideo:TagStream",
        "kinesisvideo:UntagResource",
        "kinesisvideo:UntagStream",
        "kinesisvideo:UpdateDataRetention",
        "kinesisvideo:UpdateSignalingChannel",
        "kinesisvideo:UpdateStream",
        "kms:CancelKeyDeletion",
        "kms:ConnectCustomKeyStore",
        "kms:CreateAlias",
        "kms:CreateCustomKeyStore",
        "kms:CreateGrant",
        "kms:CreateKey",
        "kms:Decrypt",
        "kms:DeleteAlias",
        "kms:DeleteCustomKeyStore",
        "kms:DeleteImportedKeyMaterial",
        "kms:DescribeCustomKeyStores",
        "kms:DescribeKey",
        "kms:DisableKey",
        "kms:DisableKeyRotation",
        "kms:DisconnectCustomKeyStore",
        "kms:EnableKey",
        "kms:EnableKeyRotation",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyPair",
        "kms:GenerateDataKeyPairWithoutPlaintext",
        "kms:GenerateDataKeyWithoutPlaintext",
        "kms:GenerateRandom",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:GetParametersForImport",
        "kms:GetPublicKey",
        "kms:ImportKeyMaterial",
        "kms:ListAliases",
        "kms:ListGrants",
        "kms:ListKeyPolicies",
        "kms:ListKeys",
        "kms:ListResourceTags",
        "kms:ListRetirableGrants",
        "kms:PutKeyPolicy",
        "kms:ReEncryptFrom",
        "kms:ReEncryptTo",
        "kms:RetireGrant",
        "kms:RevokeGrant",
        "kms:ScheduleKeyDeletion",
        "kms:Sign",
        "kms:TagResource",
        "kms:UntagResource",
        "kms:UpdateAlias",
        "kms:UpdateCustomKeyStore",
        "kms:UpdateKeyDescription",
        "kms:Verify",
        "lakeformation:BatchGrantPermissions",
        "lakeformation:BatchRevokePermissions",
        "lakeformation:DeregisterResource",
        "lakeformation:DescribeResource",
        "lakeformation:GetDataAccess",
        "lakeformation:GetDataLakeSettings",
        "lakeformation:GetEffectivePermissionsForPath",
        "lakeformation:GrantPermissions",
        "lakeformation:ListPermissions",
        "lakeformation:ListResources",
        "lakeformation:PutDataLakeSettings",
        "lakeformation:RegisterResource",
        "lakeformation:RevokePermissions",
        "lakeformation:UpdateResource",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:CreateAlias",
        "lambda:CreateEventSourceMapping",
        "lambda:CreateFunction",
        "lambda:DeleteAlias",
        "lambda:DeleteEventSourceMapping",
        "lambda:DeleteFunction",
        "lambda:DeleteFunctionConcurrency",
        "lambda:DeleteFunctionEventInvokeConfig",
        "lambda:DeleteLayerVersion",
        "lambda:DeleteProvisionedConcurrencyConfig",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:GetAccountSettings",
        "lambda:GetAlias",
        "lambda:GetEventSourceMapping",
        "lambda:GetFunction",
        "lambda:GetFunctionConcurrency",
        "lambda:GetFunctionConfiguration",
        "lambda:GetFunctionEventInvokeConfig",
        "lambda:GetLayerVersion",
        "lambda:GetLayerVersionByArn",
        "lambda:GetLayerVersionPolicy",
        "lambda:GetPolicy",
        "lambda:GetProvisionedConcurrencyConfig",
        "lambda:InvokeAsync",
        "lambda:InvokeFunction",
        "lambda:ListAliases",
        "lambda:ListEventSourceMappings",
        "lambda:ListFunctionEventInvokeConfigs",
        "lambda:ListFunctions",
        "lambda:ListLayerVersions",
        "lambda:ListLayers",
        "lambda:ListProvisionedConcurrencyConfigs",
        "lambda:ListTags",
        "lambda:ListVersionsByFunction",
        "lambda:PublishLayerVersion",
        "lambda:PublishVersion",
        "lambda:PutFunctionConcurrency",
        "lambda:PutFunctionEventInvokeConfig",
        "lambda:PutProvisionedConcurrencyConfig",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:UpdateAlias",
        "lambda:UpdateEventSourceMapping",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateFunctionEventInvokeConfig",
        "launchwizard:DeleteApp",
        "launchwizard:DescribeProvisionedApp",
        "launchwizard:DescribeProvisioningEvents",
        "launchwizard:GetInfrastructureSuggestion",
        "launchwizard:GetIpAddress",
        "launchwizard:GetResourceCostEstimate",
        "launchwizard:ListProvisionedApps",
        "launchwizard:StartProvisioning",
        "lex:CreateBotVersion",
        "lex:CreateIntentVersion",
        "lex:CreateSlotTypeVersion",
        "lex:DeleteBot",
        "lex:DeleteBotAlias",
        "lex:DeleteBotChannelAssociation",
        "lex:DeleteBotVersion",
        "lex:DeleteIntent",
        "lex:DeleteIntentVersion",
        "lex:DeleteSession",
        "lex:DeleteSlotType",
        "lex:DeleteSlotTypeVersion",
        "lex:DeleteUtterances",
        "lex:GetBot",
        "lex:GetBotAlias",
        "lex:GetBotAliases",
        "lex:GetBotChannelAssociation",
        "lex:GetBotChannelAssociations",
        "lex:GetBotVersions",
        "lex:GetBots",
        "lex:GetBuiltinIntent",
        "lex:GetBuiltinIntents",
        "lex:GetBuiltinSlotTypes",
        "lex:GetExport",
        "lex:GetImport",
        "lex:GetIntent",
        "lex:GetIntentVersions",
        "lex:GetIntents",
        "lex:GetSession",
        "lex:GetSlotType",
        "lex:GetSlotTypeVersions",
        "lex:GetSlotTypes",
        "lex:GetUtterancesView",
        "lex:ListTagsForResource",
        "lex:PostContent",
        "lex:PostText",
        "lex:PutBot",
        "lex:PutBotAlias",
        "lex:PutIntent",
        "lex:PutSession",
        "lex:PutSlotType",
        "lex:StartImport",
        "lex:TagResource",
        "lex:UntagResource",
        "license-manager:CreateLicenseConfiguration",
        "license-manager:DeleteLicenseConfiguration",
        "license-manager:GetLicenseConfiguration",
        "license-manager:GetServiceSettings",
        "license-manager:ListAssociationsForLicenseConfiguration",
        "license-manager:ListLicenseConfigurations",
        "license-manager:ListLicenseSpecificationsForResource",
        "license-manager:ListResourceInventory",
        "license-manager:ListTagsForResource",
        "license-manager:ListUsageForLicenseConfiguration",
        "license-manager:TagResource",
        "license-manager:UntagResource",
        "license-manager:UpdateLicenseConfiguration",
        "license-manager:UpdateLicenseSpecificationsForResource",
        "license-manager:UpdateServiceSettings",
        "lightsail:AllocateStaticIp",
        "lightsail:AttachDisk",
        "lightsail:AttachInstancesToLoadBalancer",
        "lightsail:AttachLoadBalancerTlsCertificate",
        "lightsail:AttachStaticIp",
        "lightsail:CloseInstancePublicPorts",
        "lightsail:CopySnapshot",
        "lightsail:CreateCloudFormationStack",
        "lightsail:CreateDisk",
        "lightsail:CreateDiskFromSnapshot",
        "lightsail:CreateDiskSnapshot",
        "lightsail:CreateDomain",
        "lightsail:CreateDomainEntry",
        "lightsail:CreateInstanceSnapshot",
        "lightsail:CreateInstances",
        "lightsail:CreateInstancesFromSnapshot",
        "lightsail:CreateKeyPair",
        "lightsail:CreateLoadBalancer",
        "lightsail:CreateLoadBalancerTlsCertificate",
        "lightsail:CreateRelationalDatabase",
        "lightsail:CreateRelationalDatabaseFromSnapshot",
        "lightsail:CreateRelationalDatabaseSnapshot",
        "lightsail:DeleteDisk",
        "lightsail:DeleteDiskSnapshot",
        "lightsail:DeleteDomain",
        "lightsail:DeleteDomainEntry",
        "lightsail:DeleteInstance",
        "lightsail:DeleteInstanceSnapshot",
        "lightsail:DeleteKeyPair",
        "lightsail:DeleteKnownHostKeys",
        "lightsail:DeleteLoadBalancer",
        "lightsail:DeleteLoadBalancerTlsCertificate",
        "lightsail:DeleteRelationalDatabase",
        "lightsail:DeleteRelationalDatabaseSnapshot",
        "lightsail:DetachDisk",
        "lightsail:DetachInstancesFromLoadBalancer",
        "lightsail:DetachStaticIp",
        "lightsail:DownloadDefaultKeyPair",
        "lightsail:ExportSnapshot",
        "lightsail:GetActiveNames",
        "lightsail:GetBlueprints",
        "lightsail:GetBundles",
        "lightsail:GetCloudFormationStackRecords",
        "lightsail:GetDisk",
        "lightsail:GetDiskSnapshot",
        "lightsail:GetDiskSnapshots",
        "lightsail:GetDisks",
        "lightsail:GetDomain",
        "lightsail:GetDomains",
        "lightsail:GetExportSnapshotRecords",
        "lightsail:GetInstance",
        "lightsail:GetInstanceAccessDetails",
        "lightsail:GetInstanceMetricData",
        "lightsail:GetInstancePortStates",
        "lightsail:GetInstanceSnapshot",
        "lightsail:GetInstanceSnapshots",
        "lightsail:GetInstanceState",
        "lightsail:GetInstances",
        "lightsail:GetKeyPair",
        "lightsail:GetKeyPairs",
        "lightsail:GetLoadBalancer",
        "lightsail:GetLoadBalancerMetricData",
        "lightsail:GetLoadBalancerTlsCertificates",
        "lightsail:GetLoadBalancers",
        "lightsail:GetOperation",
        "lightsail:GetOperations",
        "lightsail:GetOperationsForResource",
        "lightsail:GetRegions",
        "lightsail:GetRelationalDatabase",
        "lightsail:GetRelationalDatabaseBlueprints",
        "lightsail:GetRelationalDatabaseBundles",
        "lightsail:GetRelationalDatabaseEvents",
        "lightsail:GetRelationalDatabaseLogEvents",
        "lightsail:GetRelationalDatabaseLogStreams",
        "lightsail:GetRelationalDatabaseMasterUserPassword",
        "lightsail:GetRelationalDatabaseMetricData",
        "lightsail:GetRelationalDatabaseParameters",
        "lightsail:GetRelationalDatabaseSnapshot",
        "lightsail:GetRelationalDatabaseSnapshots",
        "lightsail:GetRelationalDatabases",
        "lightsail:GetStaticIp",
        "lightsail:GetStaticIps",
        "lightsail:ImportKeyPair",
        "lightsail:IsVpcPeered",
        "lightsail:OpenInstancePublicPorts",
        "lightsail:PeerVpc",
        "lightsail:PutInstancePublicPorts",
        "lightsail:RebootInstance",
        "lightsail:RebootRelationalDatabase",
        "lightsail:ReleaseStaticIp",
        "lightsail:StartInstance",
        "lightsail:StartRelationalDatabase",
        "lightsail:StopInstance",
        "lightsail:StopRelationalDatabase",
        "lightsail:TagResource",
        "lightsail:UnpeerVpc",
        "lightsail:UntagResource",
        "lightsail:UpdateDomainEntry",
        "lightsail:UpdateLoadBalancerAttribute",
        "lightsail:UpdateRelationalDatabase",
        "lightsail:UpdateRelationalDatabaseParameters",
        "logs:AssociateKmsKey",
        "logs:CancelExportTask",
        "logs:CreateExportTask",
        "logs:CreateLogDelivery",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DeleteDestination",
        "logs:DeleteLogDelivery",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream",
        "logs:DeleteMetricFilter",
        "logs:DeleteResourcePolicy",
        "logs:DeleteRetentionPolicy",
        "logs:DeleteSubscriptionFilter",
        "logs:DescribeDestinations",
        "logs:DescribeExportTasks",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeMetricFilters",
        "logs:DescribeQueries",
        "logs:DescribeResourcePolicies",
        "logs:DescribeSubscriptionFilters",
        "logs:DisassociateKmsKey",
        "logs:FilterLogEvents",
        "logs:GetLogDelivery",
        "logs:GetLogEvents",
        "logs:GetLogGroupFields",
        "logs:GetLogRecord",
        "logs:GetQueryResults",
        "logs:ListLogDeliveries",
        "logs:ListTagsLogGroup",
        "logs:PutDestination",
        "logs:PutDestinationPolicy",
        "logs:PutLogEvents",
        "logs:PutMetricFilter",
        "logs:PutResourcePolicy",
        "logs:PutRetentionPolicy",
        "logs:PutSubscriptionFilter",
        "logs:StartQuery",
        "logs:StopQuery",
        "logs:TagLogGroup",
        "logs:TestMetricFilter",
        "logs:UntagLogGroup",
        "logs:UpdateLogDelivery",
        "machinelearning:AddTags",
        "machinelearning:CreateBatchPrediction",
        "machinelearning:CreateDataSourceFromRDS",
        "machinelearning:CreateDataSourceFromRedshift",
        "machinelearning:CreateDataSourceFromS3",
        "machinelearning:CreateEvaluation",
        "machinelearning:CreateMLModel",
        "machinelearning:CreateRealtimeEndpoint",
        "machinelearning:DeleteBatchPrediction",
        "machinelearning:DeleteDataSource",
        "machinelearning:DeleteEvaluation",
        "machinelearning:DeleteMLModel",
        "machinelearning:DeleteRealtimeEndpoint",
        "machinelearning:DeleteTags",
        "machinelearning:DescribeBatchPredictions",
        "machinelearning:DescribeDataSources",
        "machinelearning:DescribeEvaluations",
        "machinelearning:DescribeMLModels",
        "machinelearning:DescribeTags",
        "machinelearning:GetBatchPrediction",
        "machinelearning:GetDataSource",
        "machinelearning:GetEvaluation",
        "machinelearning:GetMLModel",
        "machinelearning:Predict",
        "machinelearning:UpdateBatchPrediction",
        "machinelearning:UpdateDataSource",
        "machinelearning:UpdateEvaluation",
        "machinelearning:UpdateMLModel",
        "macie2:AcceptInvitation",
        "macie2:ArchiveFindings",
        "macie2:BatchGetCustomDataIdentifiers",
        "macie2:CreateClassificationJob",
        "macie2:CreateCustomDataIdentifier",
        "macie2:CreateFindingsFilter",
        "macie2:CreateInvitations",
        "macie2:CreateMember",
        "macie2:CreateSampleFindings",
        "macie2:DeclineInvitations",
        "macie2:DeleteCustomDataIdentifier",
        "macie2:DeleteFindingsFilter",
        "macie2:DeleteInvitations",
        "macie2:DeleteMember",
        "macie2:DescribeBuckets",
        "macie2:DescribeClassificationJob",
        "macie2:DescribeOrganizationConfiguration",
        "macie2:DisableMacie",
        "macie2:DisableOrganizationAdminAccount",
        "macie2:DisassociateFromMasterAccount",
        "macie2:DisassociateMember",
        "macie2:EnableMacie",
        "macie2:EnableOrganizationAdminAccount",
        "macie2:GetBucketStatistics",
        "macie2:GetClassificationExportConfiguration",
        "macie2:GetCustomDataIdentifier",
        "macie2:GetFindingStatistics",
        "macie2:GetFindings",
        "macie2:GetFindingsFilter",
        "macie2:GetInvitationsCount",
        "macie2:GetMacieSession",
        "macie2:GetMasterAccount",
        "macie2:GetMember",
        "macie2:GetUsageStatistics",
        "macie2:GetUsageTotals",
        "macie2:ListClassificationJobs",
        "macie2:ListCustomDataIdentifiers",
        "macie2:ListFindings",
        "macie2:ListFindingsFilters",
        "macie2:ListInvitations",
        "macie2:ListMembers",
        "macie2:ListOrganizationAdminAccounts",
        "macie2:ListTagsForResources",
        "macie2:PutClassificationExportConfiguration",
        "macie2:TagResource",
        "macie2:TestCustomDataIdentifier",
        "macie2:UnarchiveFindings",
        "macie2:UntagResource",
        "macie2:UpdateClassificationJob",
        "macie2:UpdateFindingsFilter",
        "macie2:UpdateMacieSession",
        "macie2:UpdateMemberSession",
        "macie2:UpdateOrganizationConfiguration",
        "macie:AssociateMemberAccount",
        "macie:AssociateS3Resources",
        "macie:DisassociateMemberAccount",
        "macie:DisassociateS3Resources",
        "macie:ListMemberAccounts",
        "macie:ListS3Resources",
        "macie:UpdateS3Resources",
        "managedblockchain:CreateMember",
        "managedblockchain:CreateNetwork",
        "managedblockchain:CreateNode",
        "managedblockchain:CreateProposal",
        "managedblockchain:DeleteMember",
        "managedblockchain:DeleteNode",
        "managedblockchain:GetMember",
        "managedblockchain:GetNetwork",
        "managedblockchain:GetNode",
        "managedblockchain:GetProposal",
        "managedblockchain:ListInvitations",
        "managedblockchain:ListMembers",
        "managedblockchain:ListNetworks",
        "managedblockchain:ListNodes",
        "managedblockchain:ListProposalVotes",
        "managedblockchain:ListProposals",
        "managedblockchain:RejectInvitation",
        "managedblockchain:UpdateMember",
        "managedblockchain:UpdateNode",
        "managedblockchain:VoteOnProposal",
        "mechanicalturk:AcceptQualificationRequest",
        "mechanicalturk:ApproveAssignment",
        "mechanicalturk:AssociateQualificationWithWorker",
        "mechanicalturk:CreateAdditionalAssignmentsForHIT",
        "mechanicalturk:CreateHIT",
        "mechanicalturk:CreateHITType",
        "mechanicalturk:CreateHITWithHITType",
        "mechanicalturk:CreateQualificationType",
        "mechanicalturk:CreateWorkerBlock",
        "mechanicalturk:DeleteHIT",
        "mechanicalturk:DeleteQualificationType",
        "mechanicalturk:DeleteWorkerBlock",
        "mechanicalturk:DisassociateQualificationFromWorker",
        "mechanicalturk:GetAccountBalance",
        "mechanicalturk:GetAssignment",
        "mechanicalturk:GetFileUploadURL",
        "mechanicalturk:GetHIT",
        "mechanicalturk:GetQualificationScore",
        "mechanicalturk:GetQualificationType",
        "mechanicalturk:ListAssignmentsForHIT",
        "mechanicalturk:ListBonusPayments",
        "mechanicalturk:ListHITs",
        "mechanicalturk:ListHITsForQualificationType",
        "mechanicalturk:ListQualificationRequests",
        "mechanicalturk:ListQualificationTypes",
        "mechanicalturk:ListReviewPolicyResultsForHIT",
        "mechanicalturk:ListReviewableHITs",
        "mechanicalturk:ListWorkerBlocks",
        "mechanicalturk:ListWorkersWithQualificationType",
        "mechanicalturk:NotifyWorkers",
        "mechanicalturk:RejectAssignment",
        "mechanicalturk:RejectQualificationRequest",
        "mechanicalturk:SendBonus",
        "mechanicalturk:SendTestEventNotification",
        "mechanicalturk:UpdateExpirationForHIT",
        "mechanicalturk:UpdateHITReviewStatus",
        "mechanicalturk:UpdateHITTypeOfHIT",
        "mechanicalturk:UpdateNotificationSettings",
        "mechanicalturk:UpdateQualificationType",
        "mediaconnect:AddFlowOutputs",
        "mediaconnect:CreateFlow",
        "mediaconnect:DeleteFlow",
        "mediaconnect:DescribeFlow",
        "mediaconnect:GrantFlowEntitlements",
        "mediaconnect:ListEntitlements",
        "mediaconnect:ListFlows",
        "mediaconnect:RemoveFlowOutput",
        "mediaconnect:RevokeFlowEntitlement",
        "mediaconnect:StartFlow",
        "mediaconnect:StopFlow",
        "mediaconnect:UpdateFlowEntitlement",
        "mediaconnect:UpdateFlowOutput",
        "mediaconnect:UpdateFlowSource",
        "mediaconvert:AssociateCertificate",
        "mediaconvert:CancelJob",
        "mediaconvert:CreateJob",
        "mediaconvert:CreateJobTemplate",
        "mediaconvert:CreatePreset",
        "mediaconvert:CreateQueue",
        "mediaconvert:DeleteJobTemplate",
        "mediaconvert:DeletePreset",
        "mediaconvert:DeleteQueue",
        "mediaconvert:DescribeEndpoints",
        "mediaconvert:DisassociateCertificate",
        "mediaconvert:GetJob",
        "mediaconvert:GetJobTemplate",
        "mediaconvert:GetPreset",
        "mediaconvert:GetQueue",
        "mediaconvert:ListJobTemplates",
        "mediaconvert:ListJobs",
        "mediaconvert:ListPresets",
        "mediaconvert:ListQueues",
        "mediaconvert:ListTagsForResource",
        "mediaconvert:TagResource",
        "mediaconvert:UntagResource",
        "mediaconvert:UpdateJobTemplate",
        "mediaconvert:UpdatePreset",
        "mediaconvert:UpdateQueue",
        "medialive:BatchUpdateSchedule",
        "medialive:CreateChannel",
        "medialive:CreateInput",
        "medialive:CreateInputSecurityGroup",
        "medialive:CreateMultiplex",
        "medialive:CreateTags",
        "medialive:DeleteChannel",
        "medialive:DeleteInput",
        "medialive:DeleteInputSecurityGroup",
        "medialive:DeleteMultiplex",
        "medialive:DeleteReservation",
        "medialive:DeleteTags",
        "medialive:DescribeChannel",
        "medialive:DescribeInput",
        "medialive:DescribeInputDevice",
        "medialive:DescribeInputSecurityGroup",
        "medialive:DescribeMultiplex",
        "medialive:DescribeOffering",
        "medialive:DescribeReservation",
        "medialive:DescribeSchedule",
        "medialive:ListChannels",
        "medialive:ListInputDevices",
        "medialive:ListInputSecurityGroups",
        "medialive:ListInputs",
        "medialive:ListMultiplexes",
        "medialive:ListOfferings",
        "medialive:ListReservations",
        "medialive:ListTagsForResource",
        "medialive:PurchaseOffering",
        "medialive:StartChannel",
        "medialive:StartMultiplex",
        "medialive:StopChannel",
        "medialive:StopMultiplex",
        "medialive:UpdateChannel",
        "medialive:UpdateChannelClass",
        "medialive:UpdateInput",
        "medialive:UpdateInputDevice",
        "medialive:UpdateInputSecurityGroup",
        "medialive:UpdateMultiplex",
        "medialive:UpdateReservation",
        "mediapackage-vod:CreateAsset",
        "mediapackage-vod:CreatePackagingConfiguration",
        "mediapackage-vod:CreatePackagingGroup",
        "mediapackage-vod:DeleteAsset",
        "mediapackage-vod:DeletePackagingConfiguration",
        "mediapackage-vod:DeletePackagingGroup",
        "mediapackage-vod:DescribeAsset",
        "mediapackage-vod:DescribePackagingConfiguration",
        "mediapackage-vod:DescribePackagingGroup",
        "mediapackage-vod:ListAssets",
        "mediapackage-vod:ListPackagingConfigurations",
        "mediapackage-vod:ListPackagingGroups",
        "mediapackage-vod:ListTagsForResource",
        "mediapackage-vod:TagResource",
        "mediapackage-vod:UntagResource",
        "mediapackage:CreateChannel",
        "mediapackage:CreateOriginEndpoint",
        "mediapackage:DeleteChannel",
        "mediapackage:DeleteOriginEndpoint",
        "mediapackage:DescribeChannel",
        "mediapackage:DescribeOriginEndpoint",
        "mediapackage:ListChannels",
        "mediapackage:ListOriginEndpoints",
        "mediapackage:ListTagsForResource",
        "mediapackage:RotateIngestEndpointCredentials",
        "mediapackage:TagResource",
        "mediapackage:UntagResource",
        "mediapackage:UpdateChannel",
        "mediapackage:UpdateOriginEndpoint",
        "mediastore:CreateContainer",
        "mediastore:DeleteContainer",
        "mediastore:DeleteContainerPolicy",
        "mediastore:DeleteCorsPolicy",
        "mediastore:DeleteLifecyclePolicy",
        "mediastore:DeleteMetricPolicy",
        "mediastore:DeleteObject",
        "mediastore:DescribeContainer",
        "mediastore:DescribeObject",
        "mediastore:GetContainerPolicy",
        "mediastore:GetCorsPolicy",
        "mediastore:GetLifecyclePolicy",
        "mediastore:GetMetricPolicy",
        "mediastore:GetObject",
        "mediastore:ListContainers",
        "mediastore:ListItems",
        "mediastore:ListTagsForResource",
        "mediastore:PutContainerPolicy",
        "mediastore:PutCorsPolicy",
        "mediastore:PutLifecyclePolicy",
        "mediastore:PutMetricPolicy",
        "mediastore:PutObject",
        "mediastore:StartAccessLogging",
        "mediastore:StopAccessLogging",
        "mediastore:TagResource",
        "mediastore:UntagResource",
        "mediatailor:DeletePlaybackConfiguration",
        "mediatailor:GetPlaybackConfiguration",
        "mediatailor:ListPlaybackConfigurations",
        "mediatailor:ListTagsForResource",
        "mediatailor:PutPlaybackConfiguration",
        "mediatailor:TagResource",
        "mediatailor:UntagResource",
        "mgh:AssociateCreatedArtifact",
        "mgh:AssociateDiscoveredResource",
        "mgh:CreateHomeRegionControl",
        "mgh:CreateProgressUpdateStream",
        "mgh:DeleteProgressUpdateStream",
        "mgh:DescribeApplicationState",
        "mgh:DescribeHomeRegionControls",
        "mgh:DescribeMigrationTask",
        "mgh:DisassociateCreatedArtifact",
        "mgh:DisassociateDiscoveredResource",
        "mgh:GetHomeRegion",
        "mgh:ImportMigrationTask",
        "mgh:ListCreatedArtifacts",
        "mgh:ListDiscoveredResources",
        "mgh:ListMigrationTasks",
        "mgh:ListProgressUpdateStreams",
        "mgh:NotifyApplicationState",
        "mgh:NotifyMigrationTaskState",
        "mgh:PutResourceAttributes",
        "mobileanalytics:GetFinancialReports",
        "mobileanalytics:GetReports",
        "mobileanalytics:PutEvents",
        "mobilehub:CreateProject",
        "mobilehub:CreateServiceRole",
        "mobilehub:DeleteProject",
        "mobilehub:DeleteProjectSnapshot",
        "mobilehub:DeployToStage",
        "mobilehub:DescribeBundle",
        "mobilehub:ExportBundle",
        "mobilehub:ExportProject",
        "mobilehub:GenerateProjectParameters",
        "mobilehub:GetProject",
        "mobilehub:GetProjectSnapshot",
        "mobilehub:ImportProject",
        "mobilehub:InstallBundle",
        "mobilehub:ListAvailableConnectors",
        "mobilehub:ListAvailableFeatures",
        "mobilehub:ListAvailableRegions",
        "mobilehub:ListBundles",
        "mobilehub:ListProjectSnapshots",
        "mobilehub:ListProjects",
        "mobilehub:SynchronizeProject",
        "mobilehub:UpdateProject",
        "mobilehub:ValidateProject",
        "mobilehub:VerifyServiceRole",
        "mobiletargeting:CreateApp",
        "mobiletargeting:CreateCampaign",
        "mobiletargeting:CreateEmailTemplate",
        "mobiletargeting:CreateExportJob",
        "mobiletargeting:CreateImportJob",
        "mobiletargeting:CreateJourney",
        "mobiletargeting:CreatePushTemplate",
        "mobiletargeting:CreateRecommenderConfiguration",
        "mobiletargeting:CreateSegment",
        "mobiletargeting:CreateSmsTemplate",
        "mobiletargeting:CreateVoiceTemplate",
        "mobiletargeting:DeleteAdmChannel",
        "mobiletargeting:DeleteApnsChannel",
        "mobiletargeting:DeleteApnsSandboxChannel",
        "mobiletargeting:DeleteApnsVoipChannel",
        "mobiletargeting:DeleteApnsVoipSandboxChannel",
        "mobiletargeting:DeleteApp",
        "mobiletargeting:DeleteBaiduChannel",
        "mobiletargeting:DeleteCampaign",
        "mobiletargeting:DeleteEmailChannel",
        "mobiletargeting:DeleteEmailTemplate",
        "mobiletargeting:DeleteEndpoint",
        "mobiletargeting:DeleteEventStream",
        "mobiletargeting:DeleteGcmChannel",
        "mobiletargeting:DeleteJourney",
        "mobiletargeting:DeletePushTemplate",
        "mobiletargeting:DeleteRecommenderConfiguration",
        "mobiletargeting:DeleteSegment",
        "mobiletargeting:DeleteSmsChannel",
        "mobiletargeting:DeleteSmsTemplate",
        "mobiletargeting:DeleteUserEndpoints",
        "mobiletargeting:DeleteVoiceChannel",
        "mobiletargeting:DeleteVoiceTemplate",
        "mobiletargeting:GetAdmChannel",
        "mobiletargeting:GetApnsChannel",
        "mobiletargeting:GetApnsSandboxChannel",
        "mobiletargeting:GetApnsVoipChannel",
        "mobiletargeting:GetApnsVoipSandboxChannel",
        "mobiletargeting:GetApp",
        "mobiletargeting:GetApplicationSettings",
        "mobiletargeting:GetApps",
        "mobiletargeting:GetBaiduChannel",
        "mobiletargeting:GetCampaign",
        "mobiletargeting:GetCampaignActivities",
        "mobiletargeting:GetCampaignVersion",
        "mobiletargeting:GetCampaignVersions",
        "mobiletargeting:GetCampaigns",
        "mobiletargeting:GetChannels",
        "mobiletargeting:GetEmailChannel",
        "mobiletargeting:GetEmailTemplate",
        "mobiletargeting:GetEndpoint",
        "mobiletargeting:GetEventStream",
        "mobiletargeting:GetExportJob",
        "mobiletargeting:GetExportJobs",
        "mobiletargeting:GetGcmChannel",
        "mobiletargeting:GetImportJob",
        "mobiletargeting:GetImportJobs",
        "mobiletargeting:GetJourney",
        "mobiletargeting:GetPushTemplate",
        "mobiletargeting:GetRecommenderConfiguration",
        "mobiletargeting:GetRecommenderConfigurations",
        "mobiletargeting:GetSegment",
        "mobiletargeting:GetSegmentExportJobs",
        "mobiletargeting:GetSegmentImportJobs",
        "mobiletargeting:GetSegmentVersion",
        "mobiletargeting:GetSegmentVersions",
        "mobiletargeting:GetSegments",
        "mobiletargeting:GetSmsChannel",
        "mobiletargeting:GetSmsTemplate",
        "mobiletargeting:GetUserEndpoints",
        "mobiletargeting:GetVoiceChannel",
        "mobiletargeting:GetVoiceTemplate",
        "mobiletargeting:ListJourneys",
        "mobiletargeting:ListTagsForResource",
        "mobiletargeting:ListTemplateVersions",
        "mobiletargeting:ListTemplates",
        "mobiletargeting:PhoneNumberValidate",
        "mobiletargeting:PutEventStream",
        "mobiletargeting:PutEvents",
        "mobiletargeting:RemoveAttributes",
        "mobiletargeting:SendMessages",
        "mobiletargeting:SendUsersMessages",
        "mobiletargeting:TagResource",
        "mobiletargeting:UntagResource",
        "mobiletargeting:UpdateAdmChannel",
        "mobiletargeting:UpdateApnsChannel",
        "mobiletargeting:UpdateApnsSandboxChannel",
        "mobiletargeting:UpdateApnsVoipChannel",
        "mobiletargeting:UpdateApnsVoipSandboxChannel",
        "mobiletargeting:UpdateApplicationSettings",
        "mobiletargeting:UpdateBaiduChannel",
        "mobiletargeting:UpdateCampaign",
        "mobiletargeting:UpdateEmailChannel",
        "mobiletargeting:UpdateEmailTemplate",
        "mobiletargeting:UpdateEndpoint",
        "mobiletargeting:UpdateEndpointsBatch",
        "mobiletargeting:UpdateGcmChannel",
        "mobiletargeting:UpdateJourney",
        "mobiletargeting:UpdateJourneyState",
        "mobiletargeting:UpdatePushTemplate",
        "mobiletargeting:UpdateRecommenderConfiguration",
        "mobiletargeting:UpdateSegment",
        "mobiletargeting:UpdateSmsChannel",
        "mobiletargeting:UpdateSmsTemplate",
        "mobiletargeting:UpdateTemplateActiveVersion",
        "mobiletargeting:UpdateVoiceChannel",
        "mobiletargeting:UpdateVoiceTemplate",
        "mq:CreateBroker",
        "mq:CreateConfiguration",
        "mq:CreateTags",
        "mq:CreateUser",
        "mq:DeleteBroker",
        "mq:DeleteTags",
        "mq:DeleteUser",
        "mq:DescribeBroker",
        "mq:DescribeBrokerEngineTypes",
        "mq:DescribeBrokerInstanceOptions",
        "mq:DescribeConfiguration",
        "mq:DescribeConfigurationRevision",
        "mq:DescribeUser",
        "mq:ListBrokers",
        "mq:ListConfigurationRevisions",
        "mq:ListConfigurations",
        "mq:ListTags",
        "mq:ListUsers",
        "mq:RebootBroker",
        "mq:UpdateBroker",
        "mq:UpdateConfiguration",
        "mq:UpdateUser",
        "neptune-db:connect",
        "networkmanager:AssociateCustomerGateway",
        "networkmanager:AssociateLink",
        "networkmanager:CreateDevice",
        "networkmanager:CreateGlobalNetwork",
        "networkmanager:CreateLink",
        "networkmanager:CreateSite",
        "networkmanager:DeleteDevice",
        "networkmanager:DeleteGlobalNetwork",
        "networkmanager:DeleteLink",
        "networkmanager:DeleteSite",
        "networkmanager:DeregisterTransitGateway",
        "networkmanager:DescribeGlobalNetworks",
        "networkmanager:DisassociateCustomerGateway",
        "networkmanager:DisassociateLink",
        "networkmanager:GetCustomerGatewayAssociations",
        "networkmanager:GetDevices",
        "networkmanager:GetLinkAssociations",
        "networkmanager:GetLinks",
        "networkmanager:GetSites",
        "networkmanager:GetTransitGatewayRegistrations",
        "networkmanager:ListTagsForResource",
        "networkmanager:RegisterTransitGateway",
        "networkmanager:TagResource",
        "networkmanager:UntagResource",
        "networkmanager:UpdateDevice",
        "networkmanager:UpdateGlobalNetwork",
        "networkmanager:UpdateLink",
        "networkmanager:UpdateSite",
        "opsworks-cm:AssociateNode",
        "opsworks-cm:CreateBackup",
        "opsworks-cm:CreateServer",
        "opsworks-cm:DeleteBackup",
        "opsworks-cm:DeleteServer",
        "opsworks-cm:DescribeAccountAttributes",
        "opsworks-cm:DescribeBackups",
        "opsworks-cm:DescribeEvents",
        "opsworks-cm:DescribeNodeAssociationStatus",
        "opsworks-cm:DescribeServers",
        "opsworks-cm:DisassociateNode",
        "opsworks-cm:RestoreServer",
        "opsworks-cm:StartMaintenance",
        "opsworks-cm:UpdateServer",
        "opsworks-cm:UpdateServerEngineAttributes",
        "opsworks:AssignInstance",
        "opsworks:AssignVolume",
        "opsworks:AssociateElasticIp",
        "opsworks:AttachElasticLoadBalancer",
        "opsworks:CloneStack",
        "opsworks:CreateApp",
        "opsworks:CreateDeployment",
        "opsworks:CreateInstance",
        "opsworks:CreateLayer",
        "opsworks:CreateStack",
        "opsworks:CreateUserProfile",
        "opsworks:DeleteApp",
        "opsworks:DeleteInstance",
        "opsworks:DeleteLayer",
        "opsworks:DeleteStack",
        "opsworks:DeleteUserProfile",
        "opsworks:DeregisterEcsCluster",
        "opsworks:DeregisterElasticIp",
        "opsworks:DeregisterInstance",
        "opsworks:DeregisterRdsDbInstance",
        "opsworks:DeregisterVolume",
        "opsworks:DescribeAgentVersions",
        "opsworks:DescribeApps",
        "opsworks:DescribeCommands",
        "opsworks:DescribeDeployments",
        "opsworks:DescribeEcsClusters",
        "opsworks:DescribeElasticIps",
        "opsworks:DescribeElasticLoadBalancers",
        "opsworks:DescribeInstances",
        "opsworks:DescribeLayers",
        "opsworks:DescribeLoadBasedAutoScaling",
        "opsworks:DescribeMyUserProfile",
        "opsworks:DescribePermissions",
        "opsworks:DescribeRaidArrays",
        "opsworks:DescribeRdsDbInstances",
        "opsworks:DescribeServiceErrors",
        "opsworks:DescribeStackProvisioningParameters",
        "opsworks:DescribeStackSummary",
        "opsworks:DescribeStacks",
        "opsworks:DescribeTimeBasedAutoScaling",
        "opsworks:DescribeUserProfiles",
        "opsworks:DescribeVolumes",
        "opsworks:DetachElasticLoadBalancer",
        "opsworks:DisassociateElasticIp",
        "opsworks:GetHostnameSuggestion",
        "opsworks:GrantAccess",
        "opsworks:ListTags",
        "opsworks:RebootInstance",
        "opsworks:RegisterEcsCluster",
        "opsworks:RegisterElasticIp",
        "opsworks:RegisterInstance",
        "opsworks:RegisterRdsDbInstance",
        "opsworks:RegisterVolume",
        "opsworks:SetLoadBasedAutoScaling",
        "opsworks:SetPermission",
        "opsworks:SetTimeBasedAutoScaling",
        "opsworks:StartInstance",
        "opsworks:StartStack",
        "opsworks:StopInstance",
        "opsworks:StopStack",
        "opsworks:TagResource",
        "opsworks:UnassignInstance",
        "opsworks:UnassignVolume",
        "opsworks:UntagResource",
        "opsworks:UpdateApp",
        "opsworks:UpdateElasticIp",
        "opsworks:UpdateInstance",
        "opsworks:UpdateLayer",
        "opsworks:UpdateMyUserProfile",
        "opsworks:UpdateRdsDbInstance",
        "opsworks:UpdateStack",
        "opsworks:UpdateUserProfile",
        "opsworks:UpdateVolume",
        "organizations:AcceptHandshake",
        "organizations:AttachPolicy",
        "organizations:CancelHandshake",
        "organizations:CreateAccount",
        "organizations:CreateGovCloudAccount",
        "organizations:CreateOrganization",
        "organizations:CreateOrganizationalUnit",
        "organizations:CreatePolicy",
        "organizations:DeclineHandshake",
        "organizations:DeleteOrganization",
        "organizations:DeleteOrganizationalUnit",
        "organizations:DeletePolicy",
        "organizations:DeregisterDelegatedAdministrator",
        "organizations:DescribeAccount",
        "organizations:DescribeCreateAccountStatus",
        "organizations:DescribeEffectivePolicy",
        "organizations:DescribeHandshake",
        "organizations:DescribeOrganization",
        "organizations:DescribeOrganizationalUnit",
        "organizations:DescribePolicy",
        "organizations:DetachPolicy",
        "organizations:DisableAWSServiceAccess",
        "organizations:DisablePolicyType",
        "organizations:EnableAWSServiceAccess",
        "organizations:EnableAllFeatures",
        "organizations:EnablePolicyType",
        "organizations:InviteAccountToOrganization",
        "organizations:LeaveOrganization",
        "organizations:ListAWSServiceAccessForOrganization",
        "organizations:ListAccounts",
        "organizations:ListAccountsForParent",
        "organizations:ListChildren",
        "organizations:ListCreateAccountStatus",
        "organizations:ListDelegatedAdministrators",
        "organizations:ListDelegatedServicesForAccount",
        "organizations:ListHandshakesForAccount",
        "organizations:ListHandshakesForOrganization",
        "organizations:ListOrganizationalUnitsForParent",
        "organizations:ListParents",
        "organizations:ListPolicies",
        "organizations:ListPoliciesForTarget",
        "organizations:ListRoots",
        "organizations:ListTagsForResource",
        "organizations:ListTargetsForPolicy",
        "organizations:MoveAccount",
        "organizations:RegisterDelegatedAdministrator",
        "organizations:RemoveAccountFromOrganization",
        "organizations:TagResource",
        "organizations:UntagResource",
        "organizations:UpdateOrganizationalUnit",
        "organizations:UpdatePolicy",
        "outposts:CreateOutpost",
        "outposts:GetOutpost",
        "outposts:GetOutpostInstanceTypes",
        "outposts:ListOutposts",
        "outposts:ListSites",
        "personalize:CreateCampaign",
        "personalize:CreateDataset",
        "personalize:CreateDatasetGroup",
        "personalize:CreateDatasetImportJob",
        "personalize:CreateEventTracker",
        "personalize:CreateSchema",
        "personalize:CreateSolution",
        "personalize:CreateSolutionVersion",
        "personalize:DeleteCampaign",
        "personalize:DeleteDataset",
        "personalize:DeleteDatasetGroup",
        "personalize:DeleteEventTracker",
        "personalize:DeleteSchema",
        "personalize:DeleteSolution",
        "personalize:DescribeAlgorithm",
        "personalize:DescribeCampaign",
        "personalize:DescribeDataset",
        "personalize:DescribeDatasetGroup",
        "personalize:DescribeDatasetImportJob",
        "personalize:DescribeEventTracker",
        "personalize:DescribeFeatureTransformation",
        "personalize:DescribeRecipe",
        "personalize:DescribeSchema",
        "personalize:DescribeSolution",
        "personalize:DescribeSolutionVersion",
        "personalize:GetPersonalizedRanking",
        "personalize:GetRecommendations",
        "personalize:GetSolutionMetrics",
        "personalize:ListCampaigns",
        "personalize:ListDatasetGroups",
        "personalize:ListDatasetImportJobs",
        "personalize:ListDatasets",
        "personalize:ListEventTrackers",
        "personalize:ListRecipes",
        "personalize:ListSchemas",
        "personalize:ListSolutionVersions",
        "personalize:ListSolutions",
        "personalize:PutEvents",
        "personalize:UpdateCampaign",
        "pi:DescribeDimensionKeys",
        "pi:GetResourceMetrics",
        "polly:DeleteLexicon",
        "polly:DescribeVoices",
        "polly:GetLexicon",
        "polly:GetSpeechSynthesisTask",
        "polly:ListLexicons",
        "polly:ListSpeechSynthesisTasks",
        "polly:PutLexicon",
        "polly:StartSpeechSynthesisTask",
        "polly:SynthesizeSpeech",
        "pricing:DescribeServices",
        "pricing:GetAttributeValues",
        "pricing:GetProducts",
        "purchase-orders:ModifyPurchaseOrders",
        "purchase-orders:ViewPurchaseOrders",
        "qldb:CancelJournalKinesisStream",
        "qldb:CreateLedger",
        "qldb:DeleteLedger",
        "qldb:DescribeJournalKinesisStream",
        "qldb:DescribeJournalS3Export",
        "qldb:DescribeLedger",
        "qldb:ExecuteStatement",
        "qldb:ExportJournalToS3",
        "qldb:GetBlock",
        "qldb:GetDigest",
        "qldb:GetRevision",
        "qldb:InsertSampleData",
        "qldb:ListJournalKinesisStreamsForLedger",
        "qldb:ListJournalS3Exports",
        "qldb:ListJournalS3ExportsForLedger",
        "qldb:ListLedgers",
        "qldb:ListTagsForResource",
        "qldb:SendCommand",
        "qldb:ShowCatalog",
        "qldb:StreamJournalToKinesis",
        "qldb:TagResource",
        "qldb:UntagResource",
        "qldb:UpdateLedger",
        "quicksight:CreateAdmin",
        "quicksight:CreateDashboard",
        "quicksight:CreateGroup",
        "quicksight:CreateGroupMembership",
        "quicksight:CreateIAMPolicyAssignment",
        "quicksight:CreateReader",
        "quicksight:CreateTemplate",
        "quicksight:CreateTemplateAlias",
        "quicksight:CreateUser",
        "quicksight:DeleteDashboard",
        "quicksight:DeleteGroup",
        "quicksight:DeleteGroupMembership",
        "quicksight:DeleteIAMPolicyAssignment",
        "quicksight:DeleteTemplate",
        "quicksight:DeleteTemplateAlias",
        "quicksight:DeleteUser",
        "quicksight:DeleteUserByPrincipalId",
        "quicksight:DescribeDashboard",
        "quicksight:DescribeDashboardPermissions",
        "quicksight:DescribeGroup",
        "quicksight:DescribeIAMPolicyAssignment",
        "quicksight:DescribeTemplate",
        "quicksight:DescribeTemplateAlias",
        "quicksight:DescribeTemplatePermissions",
        "quicksight:DescribeUser",
        "quicksight:GetAuthCode",
        "quicksight:GetDashboardEmbedUrl",
        "quicksight:GetGroupMapping",
        "quicksight:ListDashboardVersions",
        "quicksight:ListDashboards",
        "quicksight:ListGroupMemberships",
        "quicksight:ListGroups",
        "quicksight:ListIAMPolicyAssignments",
        "quicksight:ListIAMPolicyAssignmentsForUser",
        "quicksight:ListTagsForResource",
        "quicksight:ListTemplateAliases",
        "quicksight:ListTemplateVersions",
        "quicksight:ListTemplates",
        "quicksight:ListUserGroups",
        "quicksight:ListUsers",
        "quicksight:RegisterUser",
        "quicksight:SearchDirectoryGroups",
        "quicksight:SetGroupMapping",
        "quicksight:Subscribe",
        "quicksight:TagResource",
        "quicksight:Unsubscribe",
        "quicksight:UntagResource",
        "quicksight:UpdateDashboard",
        "quicksight:UpdateDashboardPermissions",
        "quicksight:UpdateDashboardPublishedVersion",
        "quicksight:UpdateGroup",
        "quicksight:UpdateIAMPolicyAssignment",
        "quicksight:UpdateTemplate",
        "quicksight:UpdateTemplateAlias",
        "quicksight:UpdateTemplatePermissions",
        "quicksight:UpdateUser",
        "ram:AcceptResourceShareInvitation",
        "ram:AssociateResourceShare",
        "ram:AssociateResourceSharePermission",
        "ram:CreateResourceShare",
        "ram:DeleteResourceShare",
        "ram:DisassociateResourceShare",
        "ram:DisassociateResourceSharePermission",
        "ram:EnableSharingWithAwsOrganization",
        "ram:GetPermission",
        "ram:GetResourcePolicies",
        "ram:GetResourceShareAssociations",
        "ram:GetResourceShareInvitations",
        "ram:GetResourceShares",
        "ram:ListPendingInvitationResources",
        "ram:ListPermissions",
        "ram:ListPrincipals",
        "ram:ListResourceSharePermissions",
        "ram:ListResources",
        "ram:RejectResourceShareInvitation",
        "ram:TagResource",
        "ram:UntagResource",
        "ram:UpdateResourceShare",
        "rds-data:BatchExecuteStatement",
        "rds-data:BeginTransaction",
        "rds-data:CommitTransaction",
        "rds-data:ExecuteSql",
        "rds-data:ExecuteStatement",
        "rds-data:RollbackTransaction",
        "rds-db:connect",
        "rds:AddRoleToDBCluster",
        "rds:AddRoleToDBInstance",
        "rds:AddSourceIdentifierToSubscription",
        "rds:AddTagsToResource",
        "rds:ApplyPendingMaintenanceAction",
        "rds:AuthorizeDBSecurityGroupIngress",
        "rds:BacktrackDBCluster",
        "rds:CancelExportTask",
        "rds:CopyDBClusterParameterGroup",
        "rds:CopyDBClusterSnapshot",
        "rds:CopyDBParameterGroup",
        "rds:CopyDBSnapshot",
        "rds:CopyOptionGroup",
        "rds:CreateDBCluster",
        "rds:CreateDBClusterEndpoint",
        "rds:CreateDBClusterParameterGroup",
        "rds:CreateDBClusterSnapshot",
        "rds:CreateDBInstance",
        "rds:CreateDBInstanceReadReplica",
        "rds:CreateDBParameterGroup",
        "rds:CreateDBProxy",
        "rds:CreateDBSecurityGroup",
        "rds:CreateDBSnapshot",
        "rds:CreateDBSubnetGroup",
        "rds:CreateEventSubscription",
        "rds:CreateGlobalCluster",
        "rds:CreateOptionGroup",
        "rds:DeleteDBCluster",
        "rds:DeleteDBClusterEndpoint",
        "rds:DeleteDBClusterParameterGroup",
        "rds:DeleteDBClusterSnapshot",
        "rds:DeleteDBInstance",
        "rds:DeleteDBInstanceAutomatedBackup",
        "rds:DeleteDBParameterGroup",
        "rds:DeleteDBProxy",
        "rds:DeleteDBSecurityGroup",
        "rds:DeleteDBSnapshot",
        "rds:DeleteDBSubnetGroup",
        "rds:DeleteEventSubscription",
        "rds:DeleteGlobalCluster",
        "rds:DeleteOptionGroup",
        "rds:DeregisterDBProxyTargets",
        "rds:DescribeAccountAttributes",
        "rds:DescribeCertificates",
        "rds:DescribeDBClusterBacktracks",
        "rds:DescribeDBClusterEndpoints",
        "rds:DescribeDBClusterParameterGroups",
        "rds:DescribeDBClusterParameters",
        "rds:DescribeDBClusterSnapshotAttributes",
        "rds:DescribeDBClusterSnapshots",
        "rds:DescribeDBClusters",
        "rds:DescribeDBEngineVersions",
        "rds:DescribeDBInstanceAutomatedBackups",
        "rds:DescribeDBInstances",
        "rds:DescribeDBLogFiles",
        "rds:DescribeDBParameterGroups",
        "rds:DescribeDBParameters",
        "rds:DescribeDBProxies",
        "rds:DescribeDBProxyTargetGroups",
        "rds:DescribeDBProxyTargets",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshotAttributes",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEngineDefaultClusterParameters",
        "rds:DescribeEngineDefaultParameters",
        "rds:DescribeEventCategories",
        "rds:DescribeEventSubscriptions",
        "rds:DescribeEvents",
        "rds:DescribeExportTasks",
        "rds:DescribeGlobalClusters",
        "rds:DescribeOptionGroupOptions",
        "rds:DescribeOptionGroups",
        "rds:DescribeOrderableDBInstanceOptions",
        "rds:DescribePendingMaintenanceActions",
        "rds:DescribeReservedDBInstances",
        "rds:DescribeReservedDBInstancesOfferings",
        "rds:DescribeSourceRegions",
        "rds:DescribeValidDBInstanceModifications",
        "rds:DownloadCompleteDBLogFile",
        "rds:DownloadDBLogFilePortion",
        "rds:FailoverDBCluster",
        "rds:ListTagsForResource",
        "rds:ModifyCurrentDBClusterCapacity",
        "rds:ModifyDBCluster",
        "rds:ModifyDBClusterEndpoint",
        "rds:ModifyDBClusterParameterGroup",
        "rds:ModifyDBClusterSnapshotAttribute",
        "rds:ModifyDBInstance",
        "rds:ModifyDBParameterGroup",
        "rds:ModifyDBProxy",
        "rds:ModifyDBProxyTargetGroup",
        "rds:ModifyDBSnapshot",
        "rds:ModifyDBSnapshotAttribute",
        "rds:ModifyDBSubnetGroup",
        "rds:ModifyEventSubscription",
        "rds:ModifyGlobalCluster",
        "rds:ModifyOptionGroup",
        "rds:PromoteReadReplica",
        "rds:PromoteReadReplicaDBCluster",
        "rds:PurchaseReservedDBInstancesOffering",
        "rds:RebootDBInstance",
        "rds:RegisterDBProxyTargets",
        "rds:RemoveFromGlobalCluster",
        "rds:RemoveRoleFromDBCluster",
        "rds:RemoveRoleFromDBInstance",
        "rds:RemoveSourceIdentifierFromSubscription",
        "rds:RemoveTagsFromResource",
        "rds:ResetDBClusterParameterGroup",
        "rds:ResetDBParameterGroup",
        "rds:RestoreDBClusterFromS3",
        "rds:RestoreDBClusterFromSnapshot",
        "rds:RestoreDBClusterToPointInTime",
        "rds:RestoreDBInstanceFromDBSnapshot",
        "rds:RestoreDBInstanceFromS3",
        "rds:RestoreDBInstanceToPointInTime",
        "rds:RevokeDBSecurityGroupIngress",
        "rds:StartActivityStream",
        "rds:StartDBCluster",
        "rds:StartDBInstance",
        "rds:StartExportTask",
        "rds:StopActivityStream",
        "rds:StopDBCluster",
        "rds:StopDBInstance",
        "redshift:AcceptReservedNodeExchange",
        "redshift:AuthorizeClusterSecurityGroupIngress",
        "redshift:AuthorizeSnapshotAccess",
        "redshift:BatchDeleteClusterSnapshots",
        "redshift:BatchModifyClusterSnapshots",
        "redshift:CancelQuery",
        "redshift:CancelQuerySession",
        "redshift:CancelResize",
        "redshift:CopyClusterSnapshot",
        "redshift:CreateCluster",
        "redshift:CreateClusterParameterGroup",
        "redshift:CreateClusterSecurityGroup",
        "redshift:CreateClusterSnapshot",
        "redshift:CreateClusterSubnetGroup",
        "redshift:CreateClusterUser",
        "redshift:CreateEventSubscription",
        "redshift:CreateHsmClientCertificate",
        "redshift:CreateHsmConfiguration",
        "redshift:CreateSavedQuery",
        "redshift:CreateScheduledAction",
        "redshift:CreateSnapshotCopyGrant",
        "redshift:CreateSnapshotSchedule",
        "redshift:CreateTags",
        "redshift:DeleteCluster",
        "redshift:DeleteClusterParameterGroup",
        "redshift:DeleteClusterSecurityGroup",
        "redshift:DeleteClusterSnapshot",
        "redshift:DeleteClusterSubnetGroup",
        "redshift:DeleteEventSubscription",
        "redshift:DeleteHsmClientCertificate",
        "redshift:DeleteHsmConfiguration",
        "redshift:DeleteSavedQueries",
        "redshift:DeleteScheduledAction",
        "redshift:DeleteSnapshotCopyGrant",
        "redshift:DeleteSnapshotSchedule",
        "redshift:DeleteTags",
        "redshift:DescribeAccountAttributes",
        "redshift:DescribeClusterDbRevisions",
        "redshift:DescribeClusterParameterGroups",
        "redshift:DescribeClusterParameters",
        "redshift:DescribeClusterSecurityGroups",
        "redshift:DescribeClusterSnapshots",
        "redshift:DescribeClusterSubnetGroups",
        "redshift:DescribeClusterTracks",
        "redshift:DescribeClusterVersions",
        "redshift:DescribeClusters",
        "redshift:DescribeDefaultClusterParameters",
        "redshift:DescribeEventCategories",
        "redshift:DescribeEventSubscriptions",
        "redshift:DescribeEvents",
        "redshift:DescribeHsmClientCertificates",
        "redshift:DescribeHsmConfigurations",
        "redshift:DescribeLoggingStatus",
        "redshift:DescribeNodeConfigurationOptions",
        "redshift:DescribeOrderableClusterOptions",
        "redshift:DescribeQuery",
        "redshift:DescribeReservedNodeOfferings",
        "redshift:DescribeReservedNodes",
        "redshift:DescribeResize",
        "redshift:DescribeSavedQueries",
        "redshift:DescribeScheduledActions",
        "redshift:DescribeSnapshotCopyGrants",
        "redshift:DescribeSnapshotSchedules",
        "redshift:DescribeStorage",
        "redshift:DescribeTable",
        "redshift:DescribeTableRestoreStatus",
        "redshift:DescribeTags",
        "redshift:DisableLogging",
        "redshift:DisableSnapshotCopy",
        "redshift:EnableLogging",
        "redshift:EnableSnapshotCopy",
        "redshift:ExecuteQuery",
        "redshift:FetchResults",
        "redshift:GetClusterCredentials",
        "redshift:GetReservedNodeExchangeOfferings",
        "redshift:JoinGroup",
        "redshift:ListDatabases",
        "redshift:ListSavedQueries",
        "redshift:ListSchemas",
        "redshift:ListTables",
        "redshift:ModifyCluster",
        "redshift:ModifyClusterDbRevision",
        "redshift:ModifyClusterIamRoles",
        "redshift:ModifyClusterMaintenance",
        "redshift:ModifyClusterParameterGroup",
        "redshift:ModifyClusterSnapshot",
        "redshift:ModifyClusterSnapshotSchedule",
        "redshift:ModifyClusterSubnetGroup",
        "redshift:ModifyEventSubscription",
        "redshift:ModifySavedQuery",
        "redshift:ModifyScheduledAction",
        "redshift:ModifySnapshotCopyRetentionPeriod",
        "redshift:ModifySnapshotSchedule",
        "redshift:PauseCluster",
        "redshift:PurchaseReservedNodeOffering",
        "redshift:RebootCluster",
        "redshift:ResetClusterParameterGroup",
        "redshift:ResizeCluster",
        "redshift:RestoreFromClusterSnapshot",
        "redshift:RestoreTableFromClusterSnapshot",
        "redshift:ResumeCluster",
        "redshift:RevokeClusterSecurityGroupIngress",
        "redshift:RevokeSnapshotAccess",
        "redshift:RotateEncryptionKey",
        "redshift:ViewQueriesFromConsole",
        "redshift:ViewQueriesInConsole",
        "rekognition:CompareFaces",
        "rekognition:CreateCollection",
        "rekognition:CreateProject",
        "rekognition:CreateProjectVersion",
        "rekognition:CreateStreamProcessor",
        "rekognition:DeleteCollection",
        "rekognition:DeleteFaces",
        "rekognition:DeleteProject",
        "rekognition:DeleteProjectVersion",
        "rekognition:DeleteStreamProcessor",
        "rekognition:DescribeCollection",
        "rekognition:DescribeProjectVersions",
        "rekognition:DescribeProjects",
        "rekognition:DescribeStreamProcessor",
        "rekognition:DetectCustomLabels",
        "rekognition:DetectFaces",
        "rekognition:DetectLabels",
        "rekognition:DetectModerationLabels",
        "rekognition:DetectText",
        "rekognition:GetCelebrityInfo",
        "rekognition:GetCelebrityRecognition",
        "rekognition:GetContentModeration",
        "rekognition:GetFaceDetection",
        "rekognition:GetFaceSearch",
        "rekognition:GetLabelDetection",
        "rekognition:GetPersonTracking",
        "rekognition:GetSegmentDetection",
        "rekognition:GetTextDetection",
        "rekognition:IndexFaces",
        "rekognition:ListCollections",
        "rekognition:ListFaces",
        "rekognition:ListStreamProcessors",
        "rekognition:RecognizeCelebrities",
        "rekognition:SearchFaces",
        "rekognition:SearchFacesByImage",
        "rekognition:StartCelebrityRecognition",
        "rekognition:StartContentModeration",
        "rekognition:StartFaceDetection",
        "rekognition:StartFaceSearch",
        "rekognition:StartLabelDetection",
        "rekognition:StartPersonTracking",
        "rekognition:StartProjectVersion",
        "rekognition:StartSegmentDetection",
        "rekognition:StartStreamProcessor",
        "rekognition:StartTextDetection",
        "rekognition:StopProjectVersion",
        "rekognition:StopStreamProcessor",
        "resource-explorer:ListResourceTypes",
        "resource-explorer:ListResources",
        "resource-explorer:ListTags",
        "resource-groups:CreateGroup",
        "resource-groups:DeleteGroup",
        "resource-groups:GetGroup",
        "resource-groups:GetGroupQuery",
        "resource-groups:GetTags",
        "resource-groups:ListGroupResources",
        "resource-groups:ListGroups",
        "resource-groups:SearchResources",
        "resource-groups:Tag",
        "resource-groups:Untag",
        "resource-groups:UpdateGroup",
        "resource-groups:UpdateGroupQuery",
        "robomaker:BatchDescribeSimulationJob",
        "robomaker:CancelDeploymentJob",
        "robomaker:CancelSimulationJob",
        "robomaker:CancelSimulationJobBatch",
        "robomaker:CreateDeploymentJob",
        "robomaker:CreateFleet",
        "robomaker:CreateRobot",
        "robomaker:CreateRobotApplication",
        "robomaker:CreateRobotApplicationVersion",
        "robomaker:CreateSimulationApplication",
        "robomaker:CreateSimulationApplicationVersion",
        "robomaker:CreateSimulationJob",
        "robomaker:DeleteFleet",
        "robomaker:DeleteRobot",
        "robomaker:DeleteRobotApplication",
        "robomaker:DeleteSimulationApplication",
        "robomaker:DeregisterRobot",
        "robomaker:DescribeDeploymentJob",
        "robomaker:DescribeFleet",
        "robomaker:DescribeRobot",
        "robomaker:DescribeRobotApplication",
        "robomaker:DescribeSimulationApplication",
        "robomaker:DescribeSimulationJob",
        "robomaker:DescribeSimulationJobBatch",
        "robomaker:ListDeploymentJobs",
        "robomaker:ListFleets",
        "robomaker:ListRobotApplications",
        "robomaker:ListRobots",
        "robomaker:ListSimulationApplications",
        "robomaker:ListSimulationJobBatches",
        "robomaker:ListSimulationJobs",
        "robomaker:ListTagsForResource",
        "robomaker:RegisterRobot",
        "robomaker:RestartSimulationJob",
        "robomaker:StartSimulationJobBatch",
        "robomaker:SyncDeploymentJob",
        "robomaker:TagResource",
        "robomaker:UntagResource",
        "robomaker:UpdateRobotApplication",
        "robomaker:UpdateSimulationApplication",
        "route53:AssociateVPCWithHostedZone",
        "route53:ChangeResourceRecordSets",
        "route53:ChangeTagsForResource",
        "route53:CreateHealthCheck",
        "route53:CreateHostedZone",
        "route53:CreateQueryLoggingConfig",
        "route53:CreateReusableDelegationSet",
        "route53:CreateTrafficPolicy",
        "route53:CreateTrafficPolicyInstance",
        "route53:CreateTrafficPolicyVersion",
        "route53:CreateVPCAssociationAuthorization",
        "route53:DeleteHealthCheck",
        "route53:DeleteHostedZone",
        "route53:DeleteQueryLoggingConfig",
        "route53:DeleteReusableDelegationSet",
        "route53:DeleteTrafficPolicy",
        "route53:DeleteTrafficPolicyInstance",
        "route53:DeleteVPCAssociationAuthorization",
        "route53:DisassociateVPCFromHostedZone",
        "route53:GetAccountLimit",
        "route53:GetChange",
        "route53:GetCheckerIpRanges",
        "route53:GetGeoLocation",
        "route53:GetHealthCheck",
        "route53:GetHealthCheckCount",
        "route53:GetHealthCheckLastFailureReason",
        "route53:GetHealthCheckStatus",
        "route53:GetHostedZone",
        "route53:GetHostedZoneCount",
        "route53:GetHostedZoneLimit",
        "route53:GetQueryLoggingConfig",
        "route53:GetReusableDelegationSet",
        "route53:GetReusableDelegationSetLimit",
        "route53:GetTrafficPolicy",
        "route53:GetTrafficPolicyInstance",
        "route53:GetTrafficPolicyInstanceCount",
        "route53:ListGeoLocations",
        "route53:ListHealthChecks",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ListQueryLoggingConfigs",
        "route53:ListResourceRecordSets",
        "route53:ListReusableDelegationSets",
        "route53:ListTagsForResource",
        "route53:ListTagsForResources",
        "route53:ListTrafficPolicies",
        "route53:ListTrafficPolicyInstances",
        "route53:ListTrafficPolicyInstancesByHostedZone",
        "route53:ListTrafficPolicyInstancesByPolicy",
        "route53:ListTrafficPolicyVersions",
        "route53:ListVPCAssociationAuthorizations",
        "route53:TestDNSAnswer",
        "route53:UpdateHealthCheck",
        "route53:UpdateHostedZoneComment",
        "route53:UpdateTrafficPolicyComment",
        "route53:UpdateTrafficPolicyInstance",
        "route53domains:CheckDomainAvailability",
        "route53domains:DeleteTagsForDomain",
        "route53domains:DisableDomainAutoRenew",
        "route53domains:DisableDomainTransferLock",
        "route53domains:EnableDomainAutoRenew",
        "route53domains:EnableDomainTransferLock",
        "route53domains:GetContactReachabilityStatus",
        "route53domains:GetDomainDetail",
        "route53domains:GetDomainSuggestions",
        "route53domains:GetOperationDetail",
        "route53domains:ListDomains",
        "route53domains:ListOperations",
        "route53domains:ListTagsForDomain",
        "route53domains:RegisterDomain",
        "route53domains:RenewDomain",
        "route53domains:ResendContactReachabilityEmail",
        "route53domains:RetrieveDomainAuthCode",
        "route53domains:TransferDomain",
        "route53domains:UpdateDomainContact",
        "route53domains:UpdateDomainContactPrivacy",
        "route53domains:UpdateDomainNameservers",
        "route53domains:UpdateTagsForDomain",
        "route53domains:ViewBilling",
        "route53resolver:AssociateResolverEndpointIpAddress",
        "route53resolver:AssociateResolverRule",
        "route53resolver:CreateResolverEndpoint",
        "route53resolver:CreateResolverRule",
        "route53resolver:DeleteResolverEndpoint",
        "route53resolver:DeleteResolverRule",
        "route53resolver:DisassociateResolverEndpointIpAddress",
        "route53resolver:DisassociateResolverRule",
        "route53resolver:GetResolverEndpoint",
        "route53resolver:GetResolverRule",
        "route53resolver:GetResolverRuleAssociation",
        "route53resolver:GetResolverRulePolicy",
        "route53resolver:ListResolverEndpointIpAddresses",
        "route53resolver:ListResolverEndpoints",
        "route53resolver:ListResolverRuleAssociations",
        "route53resolver:ListResolverRules",
        "route53resolver:ListTagsForResource",
        "route53resolver:PutResolverRulePolicy",
        "route53resolver:TagResource",
        "route53resolver:UntagResource",
        "route53resolver:UpdateResolverEndpoint",
        "route53resolver:UpdateResolverRule",
        "s3:AbortMultipartUpload",
        "s3:BypassGovernanceRetention",
        "s3:CreateAccessPoint",
        "s3:CreateBucket",
        "s3:CreateJob",
        "s3:DeleteAccessPoint",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:DeleteBucketWebsite",
        "s3:DeleteObject",
        "s3:DeleteObjectTagging",
        "s3:DeleteObjectVersion",
        "s3:DeleteObjectVersionTagging",
        "s3:DescribeJob",
        "s3:GetAccelerateConfiguration",
        "s3:GetAccessPoint",
        "s3:GetAccessPointPolicy",
        "s3:GetAccessPointPolicyStatus",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectLegalHold",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetObjectTorrent",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionForReplication",
        "s3:GetObjectVersionTagging",
        "s3:GetObjectVersionTorrent",
        "s3:GetReplicationConfiguration",
        "s3:ListAccessPoints",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:ListBucketMultipartUploads",
        "s3:ListBucketVersions",
        "s3:ListJobs",
        "s3:ListMultipartUploadParts",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccelerateConfiguration",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutAnalyticsConfiguration",
        "s3:PutBucketAcl",
        "s3:PutBucketCORS",
        "s3:PutBucketLogging",
        "s3:PutBucketNotification",
        "s3:PutBucketObjectLockConfiguration",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketRequestPayment",
        "s3:PutBucketTagging",
        "s3:PutBucketVersioning",
        "s3:PutBucketWebsite",
        "s3:PutEncryptionConfiguration",
        "s3:PutInventoryConfiguration",
        "s3:PutLifecycleConfiguration",
        "s3:PutMetricsConfiguration",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionAcl",
        "s3:PutObjectVersionTagging",
        "s3:PutReplicationConfiguration",
        "s3:ReplicateDelete",
        "s3:ReplicateObject",
        "s3:ReplicateTags",
        "s3:RestoreObject",
        "s3:UpdateJobPriority",
        "s3:UpdateJobStatus",
        "sagemaker:AddTags",
        "sagemaker:AssociateTrialComponent",
        "sagemaker:BatchGetMetrics",
        "sagemaker:BatchPutMetrics",
        "sagemaker:CreateAlgorithm",
        "sagemaker:CreateApp",
        "sagemaker:CreateAutoMLJob",
        "sagemaker:CreateCodeRepository",
        "sagemaker:CreateCompilationJob",
        "sagemaker:CreateDomain",
        "sagemaker:CreateEndpoint",
        "sagemaker:CreateEndpointConfig",
        "sagemaker:CreateExperiment",
        "sagemaker:CreateFlowDefinition",
        "sagemaker:CreateHumanTaskUi",
        "sagemaker:CreateHyperParameterTuningJob",
        "sagemaker:CreateLabelingJob",
        "sagemaker:CreateModel",
        "sagemaker:CreateModelPackage",
        "sagemaker:CreateMonitoringSchedule",
        "sagemaker:CreateNotebookInstance",
        "sagemaker:CreateNotebookInstanceLifecycleConfig",
        "sagemaker:CreatePresignedDomainUrl",
        "sagemaker:CreatePresignedNotebookInstanceUrl",
        "sagemaker:CreateProcessingJob",
        "sagemaker:CreateTrainingJob",
        "sagemaker:CreateTransformJob",
        "sagemaker:CreateTrial",
        "sagemaker:CreateTrialComponent",
        "sagemaker:CreateUserProfile",
        "sagemaker:CreateWorkteam",
        "sagemaker:DeleteAlgorithm",
        "sagemaker:DeleteApp",
        "sagemaker:DeleteCodeRepository",
        "sagemaker:DeleteDomain",
        "sagemaker:DeleteEndpoint",
        "sagemaker:DeleteEndpointConfig",
        "sagemaker:DeleteExperiment",
        "sagemaker:DeleteFlowDefinition",
        "sagemaker:DeleteHumanLoop",
        "sagemaker:DeleteModel",
        "sagemaker:DeleteModelPackage",
        "sagemaker:DeleteMonitoringSchedule",
        "sagemaker:DeleteNotebookInstance",
        "sagemaker:DeleteNotebookInstanceLifecycleConfig",
        "sagemaker:DeleteTags",
        "sagemaker:DeleteTrial",
        "sagemaker:DeleteTrialComponent",
        "sagemaker:DeleteUserProfile",
        "sagemaker:DeleteWorkteam",
        "sagemaker:DescribeAlgorithm",
        "sagemaker:DescribeApp",
        "sagemaker:DescribeAutoMLJob",
        "sagemaker:DescribeCodeRepository",
        "sagemaker:DescribeCompilationJob",
        "sagemaker:DescribeDomain",
        "sagemaker:DescribeEndpoint",
        "sagemaker:DescribeEndpointConfig",
        "sagemaker:DescribeExperiment",
        "sagemaker:DescribeFlowDefinition",
        "sagemaker:DescribeHumanLoop",
        "sagemaker:DescribeHumanTaskUi",
        "sagemaker:DescribeHyperParameterTuningJob",
        "sagemaker:DescribeLabelingJob",
        "sagemaker:DescribeModel",
        "sagemaker:DescribeModelPackage",
        "sagemaker:DescribeMonitoringSchedule",
        "sagemaker:DescribeNotebookInstance",
        "sagemaker:DescribeNotebookInstanceLifecycleConfig",
        "sagemaker:DescribeProcessingJob",
        "sagemaker:DescribeSubscribedWorkteam",
        "sagemaker:DescribeTrainingJob",
        "sagemaker:DescribeTransformJob",
        "sagemaker:DescribeTrial",
        "sagemaker:DescribeTrialComponent",
        "sagemaker:DescribeUserProfile",
        "sagemaker:DescribeWorkforce",
        "sagemaker:DescribeWorkteam",
        "sagemaker:DisassociateTrialComponent",
        "sagemaker:GetSearchSuggestions",
        "sagemaker:InvokeEndpoint",
        "sagemaker:ListAlgorithms",
        "sagemaker:ListApps",
        "sagemaker:ListAutoMLJobs",
        "sagemaker:ListCandidatesForAutoMLJob",
        "sagemaker:ListCodeRepositories",
        "sagemaker:ListCompilationJobs",
        "sagemaker:ListDomains",
        "sagemaker:ListEndpointConfigs",
        "sagemaker:ListEndpoints",
        "sagemaker:ListExperiments",
        "sagemaker:ListFlowDefinitions",
        "sagemaker:ListHumanLoops",
        "sagemaker:ListHumanTaskUis",
        "sagemaker:ListHyperParameterTuningJobs",
        "sagemaker:ListLabelingJobs",
        "sagemaker:ListLabelingJobsForWorkteam",
        "sagemaker:ListModelPackages",
        "sagemaker:ListModels",
        "sagemaker:ListMonitoringExecutions",
        "sagemaker:ListMonitoringSchedules",
        "sagemaker:ListNotebookInstanceLifecycleConfigs",
        "sagemaker:ListNotebookInstances",
        "sagemaker:ListProcessingJobs",
        "sagemaker:ListSubscribedWorkteams",
        "sagemaker:ListTags",
        "sagemaker:ListTrainingJobs",
        "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
        "sagemaker:ListTransformJobs",
        "sagemaker:ListTrialComponents",
        "sagemaker:ListTrials",
        "sagemaker:ListUserProfiles",
        "sagemaker:ListWorkteams",
        "sagemaker:RenderUiTemplate",
        "sagemaker:Search",
        "sagemaker:StartHumanLoop",
        "sagemaker:StartMonitoringSchedule",
        "sagemaker:StartNotebookInstance",
        "sagemaker:StopAutoMLJob",
        "sagemaker:StopCompilationJob",
        "sagemaker:StopHumanLoop",
        "sagemaker:StopHyperParameterTuningJob",
        "sagemaker:StopLabelingJob",
        "sagemaker:StopMonitoringSchedule",
        "sagemaker:StopNotebookInstance",
        "sagemaker:StopProcessingJob",
        "sagemaker:StopTrainingJob",
        "sagemaker:StopTransformJob",
        "sagemaker:UpdateCodeRepository",
        "sagemaker:UpdateDomain",
        "sagemaker:UpdateEndpoint",
        "sagemaker:UpdateEndpointWeightsAndCapacities",
        "sagemaker:UpdateExperiment",
        "sagemaker:UpdateMonitoringSchedule",
        "sagemaker:UpdateNotebookInstance",
        "sagemaker:UpdateNotebookInstanceLifecycleConfig",
        "sagemaker:UpdateTrial",
        "sagemaker:UpdateTrialComponent",
        "sagemaker:UpdateUserProfile",
        "sagemaker:UpdateWorkforce",
        "sagemaker:UpdateWorkteam",
        "savingsplans:CreateSavingsPlan",
        "savingsplans:DescribeSavingsPlanRates",
        "savingsplans:DescribeSavingsPlans",
        "savingsplans:DescribeSavingsPlansOfferingRates",
        "savingsplans:DescribeSavingsPlansOfferings",
        "savingsplans:ListTagsForResource",
        "savingsplans:TagResource",
        "savingsplans:UntagResource",
        "schemas:CreateDiscoverer",
        "schemas:CreateRegistry",
        "schemas:CreateSchema",
        "schemas:DeleteDiscoverer",
        "schemas:DeleteRegistry",
        "schemas:DeleteResourcePolicy",
        "schemas:DeleteSchema",
        "schemas:DeleteSchemaVersion",
        "schemas:DescribeCodeBinding",
        "schemas:DescribeDiscoverer",
        "schemas:DescribeRegistry",
        "schemas:DescribeSchema",
        "schemas:GetCodeBindingSource",
        "schemas:GetDiscoveredSchema",
        "schemas:GetResourcePolicy",
        "schemas:ListDiscoverers",
        "schemas:ListRegistries",
        "schemas:ListSchemaVersions",
        "schemas:ListSchemas",
        "schemas:ListTagsForResource",
        "schemas:PutCodeBinding",
        "schemas:PutResourcePolicy",
        "schemas:SearchSchemas",
        "schemas:StartDiscoverer",
        "schemas:StopDiscoverer",
        "schemas:TagResource",
        "schemas:UntagResource",
        "schemas:UpdateDiscoverer",
        "schemas:UpdateRegistry",
        "schemas:UpdateSchema",
        "sdb:BatchDeleteAttributes",
        "sdb:BatchPutAttributes",
        "sdb:CreateDomain",
        "sdb:DeleteAttributes",
        "sdb:DeleteDomain",
        "sdb:DomainMetadata",
        "sdb:GetAttributes",
        "sdb:ListDomains",
        "sdb:PutAttributes",
        "sdb:Select",
        "secretsmanager:CancelRotateSecret",
        "secretsmanager:CreateSecret",
        "secretsmanager:DeleteResourcePolicy",
        "secretsmanager:DeleteSecret",
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetRandomPassword",
        "secretsmanager:GetResourcePolicy",
        "secretsmanager:GetSecretValue",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:ListSecrets",
        "secretsmanager:PutResourcePolicy",
        "secretsmanager:PutSecretValue",
        "secretsmanager:RestoreSecret",
        "secretsmanager:RotateSecret",
        "secretsmanager:TagResource",
        "secretsmanager:UntagResource",
        "secretsmanager:UpdateSecret",
        "secretsmanager:UpdateSecretVersionStage",
        "securityhub:AcceptInvitation",
        "securityhub:BatchDisableStandards",
        "securityhub:BatchEnableStandards",
        "securityhub:BatchImportFindings",
        "securityhub:BatchUpdateFindings",
        "securityhub:CreateActionTarget",
        "securityhub:CreateInsight",
        "securityhub:CreateMembers",
        "securityhub:DeclineInvitations",
        "securityhub:DeleteActionTarget",
        "securityhub:DeleteInsight",
        "securityhub:DeleteInvitations",
        "securityhub:DeleteMembers",
        "securityhub:DescribeActionTargets",
        "securityhub:DescribeHub",
        "securityhub:DescribeProducts",
        "securityhub:DescribeStandards",
        "securityhub:DescribeStandardsControls",
        "securityhub:DisableImportFindingsForProduct",
        "securityhub:DisableSecurityHub",
        "securityhub:DisassociateFromMasterAccount",
        "securityhub:DisassociateMembers",
        "securityhub:EnableImportFindingsForProduct",
        "securityhub:EnableSecurityHub",
        "securityhub:GetEnabledStandards",
        "securityhub:GetFindings",
        "securityhub:GetInsightResults",
        "securityhub:GetInsights",
        "securityhub:GetInvitationsCount",
        "securityhub:GetMasterAccount",
        "securityhub:GetMembers",
        "securityhub:InviteMembers",
        "securityhub:ListEnabledProductsForImport",
        "securityhub:ListInvitations",
        "securityhub:ListMembers",
        "securityhub:ListTagsForResource",
        "securityhub:TagResource",
        "securityhub:UntagResource",
        "securityhub:UpdateActionTarget",
        "securityhub:UpdateFindings",
        "securityhub:UpdateInsight",
        "securityhub:UpdateStandardsControl",
        "serverlessrepo:CreateApplication",
        "serverlessrepo:CreateApplicationVersion",
        "serverlessrepo:CreateCloudFormationChangeSet",
        "serverlessrepo:CreateCloudFormationTemplate",
        "serverlessrepo:DeleteApplication",
        "serverlessrepo:GetApplication",
        "serverlessrepo:GetApplicationPolicy",
        "serverlessrepo:GetCloudFormationTemplate",
        "serverlessrepo:ListApplicationDependencies",
        "serverlessrepo:ListApplicationVersions",
        "serverlessrepo:ListApplications",
        "serverlessrepo:PutApplicationPolicy",
        "serverlessrepo:SearchApplications",
        "serverlessrepo:UnshareApplication",
        "serverlessrepo:UpdateApplication",
        "servicecatalog:AcceptPortfolioShare",
        "servicecatalog:AssociateBudgetWithResource",
        "servicecatalog:AssociatePrincipalWithPortfolio",
        "servicecatalog:AssociateProductWithPortfolio",
        "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
        "servicecatalog:AssociateTagOptionWithResource",
        "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
        "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
        "servicecatalog:CopyProduct",
        "servicecatalog:CreateConstraint",
        "servicecatalog:CreatePortfolio",
        "servicecatalog:CreatePortfolioShare",
        "servicecatalog:CreateProduct",
        "servicecatalog:CreateProvisionedProductPlan",
        "servicecatalog:CreateProvisioningArtifact",
        "servicecatalog:CreateServiceAction",
        "servicecatalog:CreateTagOption",
        "servicecatalog:DeleteConstraint",
        "servicecatalog:DeletePortfolio",
        "servicecatalog:DeletePortfolioShare",
        "servicecatalog:DeleteProduct",
        "servicecatalog:DeleteProvisionedProductPlan",
        "servicecatalog:DeleteProvisioningArtifact",
        "servicecatalog:DeleteServiceAction",
        "servicecatalog:DeleteTagOption",
        "servicecatalog:DescribeConstraint",
        "servicecatalog:DescribeCopyProductStatus",
        "servicecatalog:DescribePortfolio",
        "servicecatalog:DescribePortfolioShareStatus",
        "servicecatalog:DescribeProduct",
        "servicecatalog:DescribeProductAsAdmin",
        "servicecatalog:DescribeProductView",
        "servicecatalog:DescribeProvisionedProduct",
        "servicecatalog:DescribeProvisionedProductPlan",
        "servicecatalog:DescribeProvisioningArtifact",
        "servicecatalog:DescribeProvisioningParameters",
        "servicecatalog:DescribeRecord",
        "servicecatalog:DescribeServiceAction",
        "servicecatalog:DescribeServiceActionExecutionParameters",
        "servicecatalog:DescribeTagOption",
        "servicecatalog:DisableAWSOrganizationsAccess",
        "servicecatalog:DisassociateBudgetFromResource",
        "servicecatalog:DisassociatePrincipalFromPortfolio",
        "servicecatalog:DisassociateProductFromPortfolio",
        "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
        "servicecatalog:DisassociateTagOptionFromResource",
        "servicecatalog:EnableAWSOrganizationsAccess",
        "servicecatalog:ExecuteProvisionedProductPlan",
        "servicecatalog:ExecuteProvisionedProductServiceAction",
        "servicecatalog:GetAWSOrganizationsAccessStatus",
        "servicecatalog:ListAcceptedPortfolioShares",
        "servicecatalog:ListBudgetsForResource",
        "servicecatalog:ListConstraintsForPortfolio",
        "servicecatalog:ListLaunchPaths",
        "servicecatalog:ListOrganizationPortfolioAccess",
        "servicecatalog:ListPortfolioAccess",
        "servicecatalog:ListPortfolios",
        "servicecatalog:ListPortfoliosForProduct",
        "servicecatalog:ListPrincipalsForPortfolio",
        "servicecatalog:ListProvisionedProductPlans",
        "servicecatalog:ListProvisioningArtifacts",
        "servicecatalog:ListProvisioningArtifactsForServiceAction",
        "servicecatalog:ListRecordHistory",
        "servicecatalog:ListResourcesForTagOption",
        "servicecatalog:ListServiceActions",
        "servicecatalog:ListServiceActionsForProvisioningArtifact",
        "servicecatalog:ListStackInstancesForProvisionedProduct",
        "servicecatalog:ListTagOptions",
        "servicecatalog:ProvisionProduct",
        "servicecatalog:RejectPortfolioShare",
        "servicecatalog:ScanProvisionedProducts",
        "servicecatalog:SearchProducts",
        "servicecatalog:SearchProductsAsAdmin",
        "servicecatalog:SearchProvisionedProducts",
        "servicecatalog:TerminateProvisionedProduct",
        "servicecatalog:UpdateConstraint",
        "servicecatalog:UpdatePortfolio",
        "servicecatalog:UpdateProduct",
        "servicecatalog:UpdateProvisionedProduct",
        "servicecatalog:UpdateProvisionedProductProperties",
        "servicecatalog:UpdateProvisioningArtifact",
        "servicecatalog:UpdateServiceAction",
        "servicecatalog:UpdateTagOption",
        "servicediscovery:CreateHttpNamespace",
        "servicediscovery:CreatePrivateDnsNamespace",
        "servicediscovery:CreatePublicDnsNamespace",
        "servicediscovery:CreateService",
        "servicediscovery:DeleteNamespace",
        "servicediscovery:DeleteService",
        "servicediscovery:DeregisterInstance",
        "servicediscovery:DiscoverInstances",
        "servicediscovery:GetInstance",
        "servicediscovery:GetInstancesHealthStatus",
        "servicediscovery:GetNamespace",
        "servicediscovery:GetOperation",
        "servicediscovery:GetService",
        "servicediscovery:ListInstances",
        "servicediscovery:ListNamespaces",
        "servicediscovery:ListOperations",
        "servicediscovery:ListServices",
        "servicediscovery:ListTagsForResource",
        "servicediscovery:RegisterInstance",
        "servicediscovery:TagResource",
        "servicediscovery:UntagResource",
        "servicediscovery:UpdateInstanceCustomHealthStatus",
        "servicediscovery:UpdateService",
        "servicequotas:AssociateServiceQuotaTemplate",
        "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
        "servicequotas:DisassociateServiceQuotaTemplate",
        "servicequotas:GetAWSDefaultServiceQuota",
        "servicequotas:GetAssociationForServiceQuotaTemplate",
        "servicequotas:GetRequestedServiceQuotaChange",
        "servicequotas:GetServiceQuota",
        "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
        "servicequotas:ListAWSDefaultServiceQuotas",
        "servicequotas:ListRequestedServiceQuotaChangeHistory",
        "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
        "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
        "servicequotas:ListServiceQuotas",
        "servicequotas:ListServices",
        "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
        "servicequotas:RequestServiceQuotaIncrease",
        "ses:CloneReceiptRuleSet",
        "ses:CreateConfigurationSet",
        "ses:CreateConfigurationSetEventDestination",
        "ses:CreateConfigurationSetTrackingOptions",
        "ses:CreateCustomVerificationEmailTemplate",
        "ses:CreateDedicatedIpPool",
        "ses:CreateDeliverabilityTestReport",
        "ses:CreateEmailIdentity",
        "ses:CreateReceiptFilter",
        "ses:CreateReceiptRule",
        "ses:CreateReceiptRuleSet",
        "ses:CreateTemplate",
        "ses:DeleteConfigurationSet",
        "ses:DeleteConfigurationSetEventDestination",
        "ses:DeleteConfigurationSetTrackingOptions",
        "ses:DeleteCustomVerificationEmailTemplate",
        "ses:DeleteDedicatedIpPool",
        "ses:DeleteEmailIdentity",
        "ses:DeleteIdentity",
        "ses:DeleteIdentityPolicy",
        "ses:DeleteReceiptFilter",
        "ses:DeleteReceiptRule",
        "ses:DeleteReceiptRuleSet",
        "ses:DeleteTemplate",
        "ses:DeleteVerifiedEmailAddress",
        "ses:DescribeActiveReceiptRuleSet",
        "ses:DescribeConfigurationSet",
        "ses:DescribeReceiptRule",
        "ses:DescribeReceiptRuleSet",
        "ses:GetAccount",
        "ses:GetAccountSendingEnabled",
        "ses:GetBlacklistReports",
        "ses:GetConfigurationSet",
        "ses:GetConfigurationSetEventDestinations",
        "ses:GetCustomVerificationEmailTemplate",
        "ses:GetDedicatedIp",
        "ses:GetDedicatedIps",
        "ses:GetDeliverabilityDashboardOptions",
        "ses:GetDeliverabilityTestReport",
        "ses:GetDomainStatisticsReport",
        "ses:GetEmailIdentity",
        "ses:GetIdentityDkimAttributes",
        "ses:GetIdentityMailFromDomainAttributes",
        "ses:GetIdentityNotificationAttributes",
        "ses:GetIdentityPolicies",
        "ses:GetIdentityVerificationAttributes",
        "ses:GetSendQuota",
        "ses:GetSendStatistics",
        "ses:GetTemplate",
        "ses:ListConfigurationSets",
        "ses:ListCustomVerificationEmailTemplates",
        "ses:ListDedicatedIpPools",
        "ses:ListDeliverabilityTestReports",
        "ses:ListEmailIdentities",
        "ses:ListIdentities",
        "ses:ListIdentityPolicies",
        "ses:ListReceiptFilters",
        "ses:ListReceiptRuleSets",
        "ses:ListTagsForResource",
        "ses:ListTemplates",
        "ses:ListVerifiedEmailAddresses",
        "ses:PutAccountDedicatedIpWarmupAttributes",
        "ses:PutAccountSendingAttributes",
        "ses:PutConfigurationSetDeliveryOptions",
        "ses:PutConfigurationSetReputationOptions",
        "ses:PutConfigurationSetSendingOptions",
        "ses:PutConfigurationSetTrackingOptions",
        "ses:PutDedicatedIpInPool",
        "ses:PutDedicatedIpWarmupAttributes",
        "ses:PutDeliverabilityDashboardOption",
        "ses:PutEmailIdentityDkimAttributes",
        "ses:PutEmailIdentityFeedbackAttributes",
        "ses:PutEmailIdentityMailFromAttributes",
        "ses:PutIdentityPolicy",
        "ses:ReorderReceiptRuleSet",
        "ses:SendBounce",
        "ses:SendBulkTemplatedEmail",
        "ses:SendCustomVerificationEmail",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "ses:SendTemplatedEmail",
        "ses:SetActiveReceiptRuleSet",
        "ses:SetIdentityDkimEnabled",
        "ses:SetIdentityFeedbackForwardingEnabled",
        "ses:SetIdentityHeadersInNotificationsEnabled",
        "ses:SetIdentityMailFromDomain",
        "ses:SetIdentityNotificationTopic",
        "ses:SetReceiptRulePosition",
        "ses:TagResource",
        "ses:TestRenderTemplate",
        "ses:UntagResource",
        "ses:UpdateAccountSendingEnabled",
        "ses:UpdateConfigurationSetEventDestination",
        "ses:UpdateConfigurationSetReputationMetricsEnabled",
        "ses:UpdateConfigurationSetSendingEnabled",
        "ses:UpdateConfigurationSetTrackingOptions",
        "ses:UpdateCustomVerificationEmailTemplate",
        "ses:UpdateReceiptRule",
        "ses:UpdateTemplate",
        "ses:VerifyDomainDkim",
        "ses:VerifyDomainIdentity",
        "ses:VerifyEmailAddress",
        "ses:VerifyEmailIdentity",
        "shield:AssociateDRTLogBucket",
        "shield:AssociateDRTRole",
        "shield:CreateProtection",
        "shield:CreateSubscription",
        "shield:DeleteProtection",
        "shield:DeleteSubscription",
        "shield:DescribeAttack",
        "shield:DescribeDRTAccess",
        "shield:DescribeEmergencyContactSettings",
        "shield:DescribeProtection",
        "shield:DescribeSubscription",
        "shield:DisassociateDRTLogBucket",
        "shield:DisassociateDRTRole",
        "shield:GetSubscriptionState",
        "shield:ListAttacks",
        "shield:ListProtections",
        "shield:UpdateEmergencyContactSettings",
        "shield:UpdateSubscription",
        "signer:CancelSigningProfile",
        "signer:DescribeSigningJob",
        "signer:GetSigningPlatform",
        "signer:GetSigningProfile",
        "signer:ListSigningJobs",
        "signer:ListSigningPlatforms",
        "signer:ListSigningProfiles",
        "signer:ListTagsForResource",
        "signer:PutSigningProfile",
        "signer:StartSigningJob",
        "signer:TagResource",
        "signer:UntagResource",
        "sms-voice:CreateConfigurationSet",
        "sms-voice:CreateConfigurationSetEventDestination",
        "sms-voice:DeleteConfigurationSet",
        "sms-voice:DeleteConfigurationSetEventDestination",
        "sms-voice:GetConfigurationSetEventDestinations",
        "sms-voice:ListConfigurationSets",
        "sms-voice:SendVoiceMessage",
        "sms-voice:UpdateConfigurationSetEventDestination",
        "sms:CreateApp",
        "sms:CreateReplicationJob",
        "sms:DeleteApp",
        "sms:DeleteAppLaunchConfiguration",
        "sms:DeleteAppReplicationConfiguration",
        "sms:DeleteReplicationJob",
        "sms:DeleteServerCatalog",
        "sms:DisassociateConnector",
        "sms:GenerateChangeSet",
        "sms:GenerateTemplate",
        "sms:GetApp",
        "sms:GetAppLaunchConfiguration",
        "sms:GetAppReplicationConfiguration",
        "sms:GetConnectors",
        "sms:GetMessages",
        "sms:GetReplicationJobs",
        "sms:GetReplicationRuns",
        "sms:GetServers",
        "sms:ImportServerCatalog",
        "sms:LaunchApp",
        "sms:ListApps",
        "sms:PutAppLaunchConfiguration",
        "sms:PutAppReplicationConfiguration",
        "sms:SendMessage",
        "sms:StartAppReplication",
        "sms:StartOnDemandReplicationRun",
        "sms:StopAppReplication",
        "sms:TerminateApp",
        "sms:UpdateApp",
        "sms:UpdateReplicationJob",
        "snowball:CancelCluster",
        "snowball:CancelJob",
        "snowball:CreateAddress",
        "snowball:CreateCluster",
        "snowball:CreateJob",
        "snowball:DescribeAddress",
        "snowball:DescribeAddresses",
        "snowball:DescribeCluster",
        "snowball:DescribeJob",
        "snowball:GetJobManifest",
        "snowball:GetJobUnlockCode",
        "snowball:GetSnowballUsage",
        "snowball:ListClusterJobs",
        "snowball:ListClusters",
        "snowball:ListJobs",
        "snowball:UpdateCluster",
        "snowball:UpdateJob",
        "sns:AddPermission",
        "sns:CheckIfPhoneNumberIsOptedOut",
        "sns:ConfirmSubscription",
        "sns:CreatePlatformApplication",
        "sns:CreatePlatformEndpoint",
        "sns:CreateTopic",
        "sns:DeleteEndpoint",
        "sns:DeletePlatformApplication",
        "sns:DeleteTopic",
        "sns:GetEndpointAttributes",
        "sns:GetPlatformApplicationAttributes",
        "sns:GetSMSAttributes",
        "sns:GetSubscriptionAttributes",
        "sns:GetTopicAttributes",
        "sns:ListEndpointsByPlatformApplication",
        "sns:ListPhoneNumbersOptedOut",
        "sns:ListPlatformApplications",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTagsForResource",
        "sns:ListTopics",
        "sns:OptInPhoneNumber",
        "sns:Publish",
        "sns:RemovePermission",
        "sns:SetEndpointAttributes",
        "sns:SetPlatformApplicationAttributes",
        "sns:SetSubscriptionAttributes",
        "sns:SetTopicAttributes",
        "sns:Subscribe",
        "sns:TagResource",
        "sns:Unsubscribe",
        "sns:UntagResource",
        "sqs:AddPermission",
        "sqs:ChangeMessageVisibility",
        "sqs:ChangeMessageVisibilityBatch",
        "sqs:CreateQueue",
        "sqs:DeleteMessage",
        "sqs:DeleteMessageBatch",
        "sqs:DeleteQueue",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ListDeadLetterSourceQueues",
        "sqs:ListQueueTags",
        "sqs:ListQueues",
        "sqs:PurgeQueue",
        "sqs:ReceiveMessage",
        "sqs:RemovePermission",
        "sqs:SendMessage",
        "sqs:SendMessageBatch",
        "sqs:SetQueueAttributes",
        "sqs:TagQueue",
        "sqs:UntagQueue",
        "ssm:AddTagsToResource",
        "ssm:CancelCommand",
        "ssm:CancelMaintenanceWindowExecution",
        "ssm:CreateActivation",
        "ssm:CreateAssociation",
        "ssm:CreateAssociationBatch",
        "ssm:CreateDocument",
        "ssm:CreateMaintenanceWindow",
        "ssm:CreateOpsItem",
        "ssm:CreatePatchBaseline",
        "ssm:CreateResourceDataSync",
        "ssm:DeleteActivation",
        "ssm:DeleteAssociation",
        "ssm:DeleteDocument",
        "ssm:DeleteInventory",
        "ssm:DeleteMaintenanceWindow",
        "ssm:DeleteParameter",
        "ssm:DeleteParameters",
        "ssm:DeletePatchBaseline",
        "ssm:DeleteResourceDataSync",
        "ssm:DeregisterManagedInstance",
        "ssm:DeregisterPatchBaselineForPatchGroup",
        "ssm:DeregisterTargetFromMaintenanceWindow",
        "ssm:DeregisterTaskFromMaintenanceWindow",
        "ssm:DescribeActivations",
        "ssm:DescribeAssociation",
        "ssm:DescribeAssociationExecutionTargets",
        "ssm:DescribeAssociationExecutions",
        "ssm:DescribeAutomationExecutions",
        "ssm:DescribeAutomationStepExecutions",
        "ssm:DescribeAvailablePatches",
        "ssm:DescribeDocument",
        "ssm:DescribeDocumentParameters",
        "ssm:DescribeDocumentPermission",
        "ssm:DescribeEffectiveInstanceAssociations",
        "ssm:DescribeEffectivePatchesForPatchBaseline",
        "ssm:DescribeInstanceAssociationsStatus",
        "ssm:DescribeInstanceInformation",
        "ssm:DescribeInstancePatchStates",
        "ssm:DescribeInstancePatchStatesForPatchGroup",
        "ssm:DescribeInstancePatches",
        "ssm:DescribeInstanceProperties",
        "ssm:DescribeInventoryDeletions",
        "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
        "ssm:DescribeMaintenanceWindowExecutionTasks",
        "ssm:DescribeMaintenanceWindowExecutions",
        "ssm:DescribeMaintenanceWindowSchedule",
        "ssm:DescribeMaintenanceWindowTargets",
        "ssm:DescribeMaintenanceWindowTasks",
        "ssm:DescribeMaintenanceWindows",
        "ssm:DescribeMaintenanceWindowsForTarget",
        "ssm:DescribeOpsItems",
        "ssm:DescribeParameters",
        "ssm:DescribePatchBaselines",
        "ssm:DescribePatchGroupState",
        "ssm:DescribePatchGroups",
        "ssm:DescribePatchProperties",
        "ssm:DescribeSessions",
        "ssm:GetAutomationExecution",
        "ssm:GetCommandInvocation",
        "ssm:GetConnectionStatus",
        "ssm:GetDefaultPatchBaseline",
        "ssm:GetDeployablePatchSnapshotForInstance",
        "ssm:GetDocument",
        "ssm:GetInventory",
        "ssm:GetInventorySchema",
        "ssm:GetMaintenanceWindow",
        "ssm:GetMaintenanceWindowExecution",
        "ssm:GetMaintenanceWindowExecutionTask",
        "ssm:GetMaintenanceWindowExecutionTaskInvocation",
        "ssm:GetMaintenanceWindowTask",
        "ssm:GetManifest",
        "ssm:GetOpsItem",
        "ssm:GetOpsSummary",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters",
        "ssm:GetParametersByPath",
        "ssm:GetPatchBaseline",
        "ssm:GetPatchBaselineForPatchGroup",
        "ssm:GetServiceSetting",
        "ssm:LabelParameterVersion",
        "ssm:ListAssociationVersions",
        "ssm:ListAssociations",
        "ssm:ListCommandInvocations",
        "ssm:ListCommands",
        "ssm:ListComplianceItems",
        "ssm:ListComplianceSummaries",
        "ssm:ListDocumentVersions",
        "ssm:ListDocuments",
        "ssm:ListInstanceAssociations",
        "ssm:ListInventoryEntries",
        "ssm:ListResourceComplianceSummaries",
        "ssm:ListResourceDataSync",
        "ssm:ListTagsForResource",
        "ssm:ModifyDocumentPermission",
        "ssm:PutComplianceItems",
        "ssm:PutConfigurePackageResult",
        "ssm:PutInventory",
        "ssm:PutParameter",
        "ssm:RegisterDefaultPatchBaseline",
        "ssm:RegisterPatchBaselineForPatchGroup",
        "ssm:RegisterTargetWithMaintenanceWindow",
        "ssm:RegisterTaskWithMaintenanceWindow",
        "ssm:RemoveTagsFromResource",
        "ssm:ResetServiceSetting",
        "ssm:ResumeSession",
        "ssm:SendAutomationSignal",
        "ssm:SendCommand",
        "ssm:StartAssociationsOnce",
        "ssm:StartAutomationExecution",
        "ssm:StartSession",
        "ssm:StopAutomationExecution",
        "ssm:TerminateSession",
        "ssm:UpdateAssociation",
        "ssm:UpdateAssociationStatus",
        "ssm:UpdateDocument",
        "ssm:UpdateDocumentDefaultVersion",
        "ssm:UpdateInstanceAssociationStatus",
        "ssm:UpdateInstanceInformation",
        "ssm:UpdateMaintenanceWindow",
        "ssm:UpdateMaintenanceWindowTarget",
        "ssm:UpdateMaintenanceWindowTask",
        "ssm:UpdateManagedInstanceRole",
        "ssm:UpdateOpsItem",
        "ssm:UpdatePatchBaseline",
        "ssm:UpdateResourceDataSync",
        "ssm:UpdateServiceSetting",
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel",
        "sso-directory:AddMemberToGroup",
        "sso-directory:CompleteVirtualMfaDeviceRegistration",
        "sso-directory:CreateAlias",
        "sso-directory:CreateBearerToken",
        "sso-directory:CreateExternalIdPConfigurationForDirectory",
        "sso-directory:CreateGroup",
        "sso-directory:CreateProvisioningTenant",
        "sso-directory:CreateUser",
        "sso-directory:DeleteBearerToken",
        "sso-directory:DeleteExternalIdPConfigurationForDirectory",
        "sso-directory:DeleteGroup",
        "sso-directory:DeleteMfaDeviceForUser",
        "sso-directory:DeleteProvisioningTenant",
        "sso-directory:DeleteUser",
        "sso-directory:DescribeDirectory",
        "sso-directory:DescribeGroups",
        "sso-directory:DescribeUsers",
        "sso-directory:DisableExternalIdPConfigurationForDirectory",
        "sso-directory:DisableUser",
        "sso-directory:EnableExternalIdPConfigurationForDirectory",
        "sso-directory:EnableUser",
        "sso-directory:GetAWSSPConfigurationForDirectory",
        "sso-directory:ListBearerTokens",
        "sso-directory:ListExternalIdPConfigurationsForDirectory",
        "sso-directory:ListGroupsForUser",
        "sso-directory:ListMembersInGroup",
        "sso-directory:ListMfaDevicesForUser",
        "sso-directory:ListProvisioningTenants",
        "sso-directory:RemoveMemberFromGroup",
        "sso-directory:SearchGroups",
        "sso-directory:SearchUsers",
        "sso-directory:StartVirtualMfaDeviceRegistration",
        "sso-directory:UpdateExternalIdPConfigurationForDirectory",
        "sso-directory:UpdateGroup",
        "sso-directory:UpdatePassword",
        "sso-directory:UpdateUser",
        "sso-directory:VerifyEmail",
        "sso:AssociateDirectory",
        "sso:AssociateProfile",
        "sso:CreateApplicationInstance",
        "sso:CreateApplicationInstanceCertificate",
        "sso:CreateManagedApplicationInstance",
        "sso:CreatePermissionSet",
        "sso:CreateProfile",
        "sso:CreateTrust",
        "sso:DeleteApplicationInstance",
        "sso:DeleteApplicationInstanceCertificate",
        "sso:DeleteManagedApplicationInstance",
        "sso:DeletePermissionSet",
        "sso:DeletePermissionsPolicy",
        "sso:DeleteProfile",
        "sso:DescribePermissionsPolicies",
        "sso:DescribeRegisteredRegions",
        "sso:DisassociateDirectory",
        "sso:DisassociateProfile",
        "sso:GetApplicationInstance",
        "sso:GetApplicationTemplate",
        "sso:GetManagedApplicationInstance",
        "sso:GetMfaDeviceManagementForDirectory",
        "sso:GetPermissionSet",
        "sso:GetPermissionsPolicy",
        "sso:GetProfile",
        "sso:GetSSOStatus",
        "sso:GetSharedSsoConfiguration",
        "sso:GetSsoConfiguration",
        "sso:GetTrust",
        "sso:ImportApplicationInstanceServiceProviderMetadata",
        "sso:ListApplicationInstanceCertificates",
        "sso:ListApplicationInstances",
        "sso:ListApplicationTemplates",
        "sso:ListApplications",
        "sso:ListDirectoryAssociations",
        "sso:ListPermissionSets",
        "sso:ListProfileAssociations",
        "sso:ListProfiles",
        "sso:PutMfaDeviceManagementForDirectory",
        "sso:PutPermissionsPolicy",
        "sso:StartSSO",
        "sso:UpdateApplicationInstanceActiveCertificate",
        "sso:UpdateApplicationInstanceDisplayData",
        "sso:UpdateApplicationInstanceResponseConfiguration",
        "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
        "sso:UpdateApplicationInstanceSecurityConfiguration",
        "sso:UpdateApplicationInstanceServiceProviderConfiguration",
        "sso:UpdateApplicationInstanceStatus",
        "sso:UpdateDirectoryAssociation",
        "sso:UpdateManagedApplicationInstanceStatus",
        "sso:UpdatePermissionSet",
        "sso:UpdateProfile",
        "sso:UpdateSSOConfiguration",
        "sso:UpdateTrust",
        "states:CreateActivity",
        "states:CreateStateMachine",
        "states:DeleteActivity",
        "states:DeleteStateMachine",
        "states:DescribeActivity",
        "states:DescribeExecution",
        "states:DescribeStateMachine",
        "states:DescribeStateMachineForExecution",
        "states:GetActivityTask",
        "states:GetExecutionHistory",
        "states:ListActivities",
        "states:ListExecutions",
        "states:ListStateMachines",
        "states:ListTagsForResource",
        "states:SendTaskFailure",
        "states:SendTaskHeartbeat",
        "states:SendTaskSuccess",
        "states:StartExecution",
        "states:StopExecution",
        "states:TagResource",
        "states:UntagResource",
        "states:UpdateStateMachine",
        "storagegateway:ActivateGateway",
        "storagegateway:AddCache",
        "storagegateway:AddTagsToResource",
        "storagegateway:AddUploadBuffer",
        "storagegateway:AddWorkingStorage",
        "storagegateway:AttachVolume",
        "storagegateway:CancelArchival",
        "storagegateway:CancelRetrieval",
        "storagegateway:CreateCachediSCSIVolume",
        "storagegateway:CreateNFSFileShare",
        "storagegateway:CreateSMBFileShare",
        "storagegateway:CreateSnapshot",
        "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
        "storagegateway:CreateStorediSCSIVolume",
        "storagegateway:CreateTapeWithBarcode",
        "storagegateway:CreateTapes",
        "storagegateway:DeleteBandwidthRateLimit",
        "storagegateway:DeleteChapCredentials",
        "storagegateway:DeleteFileShare",
        "storagegateway:DeleteGateway",
        "storagegateway:DeleteSnapshotSchedule",
        "storagegateway:DeleteTape",
        "storagegateway:DeleteTapeArchive",
        "storagegateway:DeleteVolume",
        "storagegateway:DescribeBandwidthRateLimit",
        "storagegateway:DescribeCache",
        "storagegateway:DescribeCachediSCSIVolumes",
        "storagegateway:DescribeChapCredentials",
        "storagegateway:DescribeGatewayInformation",
        "storagegateway:DescribeMaintenanceStartTime",
        "storagegateway:DescribeNFSFileShares",
        "storagegateway:DescribeSMBFileShares",
        "storagegateway:DescribeSMBSettings",
        "storagegateway:DescribeSnapshotSchedule",
        "storagegateway:DescribeStorediSCSIVolumes",
        "storagegateway:DescribeTapeArchives",
        "storagegateway:DescribeTapeRecoveryPoints",
        "storagegateway:DescribeTapes",
        "storagegateway:DescribeUploadBuffer",
        "storagegateway:DescribeVTLDevices",
        "storagegateway:DescribeWorkingStorage",
        "storagegateway:DetachVolume",
        "storagegateway:DisableGateway",
        "storagegateway:JoinDomain",
        "storagegateway:ListFileShares",
        "storagegateway:ListGateways",
        "storagegateway:ListLocalDisks",
        "storagegateway:ListTagsForResource",
        "storagegateway:ListTapes",
        "storagegateway:ListVolumeInitiators",
        "storagegateway:ListVolumeRecoveryPoints",
        "storagegateway:ListVolumes",
        "storagegateway:NotifyWhenUploaded",
        "storagegateway:RefreshCache",
        "storagegateway:RemoveTagsFromResource",
        "storagegateway:ResetCache",
        "storagegateway:RetrieveTapeArchive",
        "storagegateway:RetrieveTapeRecoveryPoint",
        "storagegateway:SetLocalConsolePassword",
        "storagegateway:SetSMBGuestPassword",
        "storagegateway:ShutdownGateway",
        "storagegateway:StartGateway",
        "storagegateway:UpdateBandwidthRateLimit",
        "storagegateway:UpdateChapCredentials",
        "storagegateway:UpdateGatewayInformation",
        "storagegateway:UpdateGatewaySoftwareNow",
        "storagegateway:UpdateMaintenanceStartTime",
        "storagegateway:UpdateNFSFileShare",
        "storagegateway:UpdateSMBFileShare",
        "storagegateway:UpdateSnapshotSchedule",
        "storagegateway:UpdateVTLDeviceType",
        "sts:AssumeRole",
        "sts:AssumeRoleWithSAML",
        "sts:AssumeRoleWithWebIdentity",
        "sts:DecodeAuthorizationMessage",
        "sts:GetAccessKeyInfo",
        "sts:GetCallerIdentity",
        "sts:GetFederationToken",
        "sts:GetServiceBearerToken",
        "sts:GetSessionToken",
        "sts:TagSession",
        "sumerian:Login",
        "sumerian:ViewRelease",
        "support:AddAttachmentsToSet",
        "support:AddCommunicationToCase",
        "support:CreateCase",
        "support:DescribeAttachment",
        "support:DescribeCaseAttributes",
        "support:DescribeCases",
        "support:DescribeCommunications",
        "support:DescribeIssueTypes",
        "support:DescribeServices",
        "support:DescribeSeverityLevels",
        "support:DescribeSupportLevel",
        "support:DescribeTrustedAdvisorCheckRefreshStatuses",
        "support:DescribeTrustedAdvisorCheckResult",
        "support:DescribeTrustedAdvisorCheckSummaries",
        "support:DescribeTrustedAdvisorChecks",
        "support:InitiateCallForCase",
        "support:InitiateChatForCase",
        "support:PutCaseAttributes",
        "support:RateCaseCommunication",
        "support:RefreshTrustedAdvisorCheck",
        "support:ResolveCase",
        "support:SearchForCases",
        "swf:CancelTimer",
        "swf:CancelWorkflowExecution",
        "swf:CompleteWorkflowExecution",
        "swf:ContinueAsNewWorkflowExecution",
        "swf:CountClosedWorkflowExecutions",
        "swf:CountOpenWorkflowExecutions",
        "swf:CountPendingActivityTasks",
        "swf:CountPendingDecisionTasks",
        "swf:DeprecateActivityType",
        "swf:DeprecateDomain",
        "swf:DeprecateWorkflowType",
        "swf:DescribeActivityType",
        "swf:DescribeDomain",
        "swf:DescribeWorkflowExecution",
        "swf:DescribeWorkflowType",
        "swf:FailWorkflowExecution",
        "swf:GetWorkflowExecutionHistory",
        "swf:ListActivityTypes",
        "swf:ListClosedWorkflowExecutions",
        "swf:ListDomains",
        "swf:ListOpenWorkflowExecutions",
        "swf:ListTagsForResource",
        "swf:ListWorkflowTypes",
        "swf:PollForActivityTask",
        "swf:PollForDecisionTask",
        "swf:RecordActivityTaskHeartbeat",
        "swf:RecordMarker",
        "swf:RegisterActivityType",
        "swf:RegisterDomain",
        "swf:RegisterWorkflowType",
        "swf:RequestCancelActivityTask",
        "swf:RequestCancelExternalWorkflowExecution",
        "swf:RequestCancelWorkflowExecution",
        "swf:RespondActivityTaskCanceled",
        "swf:RespondActivityTaskCompleted",
        "swf:RespondActivityTaskFailed",
        "swf:RespondDecisionTaskCompleted",
        "swf:ScheduleActivityTask",
        "swf:SignalExternalWorkflowExecution",
        "swf:SignalWorkflowExecution",
        "swf:StartChildWorkflowExecution",
        "swf:StartTimer",
        "swf:StartWorkflowExecution",
        "swf:TagResource",
        "swf:TerminateWorkflowExecution",
        "swf:UntagResource",
        "synthetics:CreateCanary",
        "synthetics:DeleteCanary",
        "synthetics:DescribeCanaries",
        "synthetics:DescribeCanariesLastRun",
        "synthetics:GetCanaryRuns",
        "synthetics:ListTagsForResource",
        "synthetics:StartCanary",
        "synthetics:StopCanary",
        "synthetics:TagResource",
        "synthetics:UntagResource",
        "synthetics:UpdateCanary",
        "tag:DescribeReportCreation",
        "tag:GetComplianceSummary",
        "tag:GetResources",
        "tag:GetTagKeys",
        "tag:GetTagValues",
        "tag:StartReportCreation",
        "tag:TagResources",
        "tag:UntagResources",
        "textract:AnalyzeDocument",
        "textract:DetectDocumentText",
        "textract:GetDocumentAnalysis",
        "textract:GetDocumentTextDetection",
        "textract:StartDocumentAnalysis",
        "textract:StartDocumentTextDetection",
        "transcribe:CreateMedicalVocabulary",
        "transcribe:CreateVocabulary",
        "transcribe:CreateVocabularyFilter",
        "transcribe:DeleteMedicalTranscriptionJob",
        "transcribe:DeleteMedicalVocabulary",
        "transcribe:DeleteTranscriptionJob",
        "transcribe:DeleteVocabulary",
        "transcribe:DeleteVocabularyFilter",
        "transcribe:GetMedicalTranscriptionJob",
        "transcribe:GetMedicalVocabulary",
        "transcribe:GetTranscriptionJob",
        "transcribe:GetVocabulary",
        "transcribe:GetVocabularyFilter",
        "transcribe:ListMedicalTranscriptionJobs",
        "transcribe:ListMedicalVocabularies",
        "transcribe:ListTranscriptionJobs",
        "transcribe:ListVocabularies",
        "transcribe:ListVocabularyFilters",
        "transcribe:StartMedicalStreamTranscription",
        "transcribe:StartMedicalStreamTranscriptionWebSocket",
        "transcribe:StartMedicalTranscriptionJob",
        "transcribe:StartStreamTranscription",
        "transcribe:StartStreamTranscriptionWebSocket",
        "transcribe:StartTranscriptionJob",
        "transcribe:UpdateMedicalVocabulary",
        "transcribe:UpdateVocabulary",
        "transcribe:UpdateVocabularyFilter",
        "transfer:CreateServer",
        "transfer:CreateUser",
        "transfer:DeleteServer",
        "transfer:DeleteSshPublicKey",
        "transfer:DeleteUser",
        "transfer:DescribeServer",
        "transfer:DescribeUser",
        "transfer:ImportSshPublicKey",
        "transfer:ListServers",
        "transfer:ListTagsForResource",
        "transfer:ListUsers",
        "transfer:StartServer",
        "transfer:StopServer",
        "transfer:TagResource",
        "transfer:TestIdentityProvider",
        "transfer:UntagResource",
        "transfer:UpdateServer",
        "transfer:UpdateUser",
        "translate:DeleteTerminology",
        "translate:DescribeTextTranslationJob",
        "translate:GetTerminology",
        "translate:ImportTerminology",
        "translate:ListTerminologies",
        "translate:ListTextTranslationJobs",
        "translate:StartTextTranslationJob",
        "translate:StopTextTranslationJob",
        "translate:TranslateText",
        "trustedadvisor:DescribeAccount",
        "trustedadvisor:DescribeAccountAccess",
        "trustedadvisor:DescribeCheckItems",
        "trustedadvisor:DescribeCheckRefreshStatuses",
        "trustedadvisor:DescribeCheckSummaries",
        "trustedadvisor:DescribeChecks",
        "trustedadvisor:DescribeNotificationPreferences",
        "trustedadvisor:ExcludeCheckItems",
        "trustedadvisor:IncludeCheckItems",
        "trustedadvisor:RefreshCheck",
        "trustedadvisor:SetAccountAccess",
        "trustedadvisor:UpdateNotificationPreferences",
        "waf-regional:AssociateWebACL",
        "waf-regional:CreateByteMatchSet",
        "waf-regional:CreateGeoMatchSet",
        "waf-regional:CreateIPSet",
        "waf-regional:CreateRateBasedRule",
        "waf-regional:CreateRegexMatchSet",
        "waf-regional:CreateRegexPatternSet",
        "waf-regional:CreateRule",
        "waf-regional:CreateRuleGroup",
        "waf-regional:CreateSizeConstraintSet",
        "waf-regional:CreateSqlInjectionMatchSet",
        "waf-regional:CreateWebACL",
        "waf-regional:CreateWebACLMigrationStack",
        "waf-regional:CreateXssMatchSet",
        "waf-regional:DeleteByteMatchSet",
        "waf-regional:DeleteGeoMatchSet",
        "waf-regional:DeleteIPSet",
        "waf-regional:DeleteLoggingConfiguration",
        "waf-regional:DeletePermissionPolicy",
        "waf-regional:DeleteRateBasedRule",
        "waf-regional:DeleteRegexMatchSet",
        "waf-regional:DeleteRegexPatternSet",
        "waf-regional:DeleteRule",
        "waf-regional:DeleteRuleGroup",
        "waf-regional:DeleteSizeConstraintSet",
        "waf-regional:DeleteSqlInjectionMatchSet",
        "waf-regional:DeleteWebACL",
        "waf-regional:DeleteXssMatchSet",
        "waf-regional:DisassociateWebACL",
        "waf-regional:GetByteMatchSet",
        "waf-regional:GetChangeToken",
        "waf-regional:GetChangeTokenStatus",
        "waf-regional:GetGeoMatchSet",
        "waf-regional:GetIPSet",
        "waf-regional:GetLoggingConfiguration",
        "waf-regional:GetPermissionPolicy",
        "waf-regional:GetRateBasedRule",
        "waf-regional:GetRateBasedRuleManagedKeys",
        "waf-regional:GetRegexMatchSet",
        "waf-regional:GetRegexPatternSet",
        "waf-regional:GetRule",
        "waf-regional:GetRuleGroup",
        "waf-regional:GetSampledRequests",
        "waf-regional:GetSizeConstraintSet",
        "waf-regional:GetSqlInjectionMatchSet",
        "waf-regional:GetWebACL",
        "waf-regional:GetWebACLForResource",
        "waf-regional:GetXssMatchSet",
        "waf-regional:ListActivatedRulesInRuleGroup",
        "waf-regional:ListByteMatchSets",
        "waf-regional:ListGeoMatchSets",
        "waf-regional:ListIPSets",
        "waf-regional:ListLoggingConfigurations",
        "waf-regional:ListRateBasedRules",
        "waf-regional:ListRegexMatchSets",
        "waf-regional:ListRegexPatternSets",
        "waf-regional:ListResourcesForWebACL",
        "waf-regional:ListRuleGroups",
        "waf-regional:ListRules",
        "waf-regional:ListSizeConstraintSets",
        "waf-regional:ListSqlInjectionMatchSets",
        "waf-regional:ListSubscribedRuleGroups",
        "waf-regional:ListTagsForResource",
        "waf-regional:ListWebACLs",
        "waf-regional:ListXssMatchSets",
        "waf-regional:PutLoggingConfiguration",
        "waf-regional:PutPermissionPolicy",
        "waf-regional:TagResource",
        "waf-regional:UntagResource",
        "waf-regional:UpdateByteMatchSet",
        "waf-regional:UpdateGeoMatchSet",
        "waf-regional:UpdateIPSet",
        "waf-regional:UpdateRateBasedRule",
        "waf-regional:UpdateRegexMatchSet",
        "waf-regional:UpdateRegexPatternSet",
        "waf-regional:UpdateRule",
        "waf-regional:UpdateRuleGroup",
        "waf-regional:UpdateSizeConstraintSet",
        "waf-regional:UpdateSqlInjectionMatchSet",
        "waf-regional:UpdateWebACL",
        "waf-regional:UpdateXssMatchSet",
        "waf:CreateByteMatchSet",
        "waf:CreateGeoMatchSet",
        "waf:CreateIPSet",
        "waf:CreateRateBasedRule",
        "waf:CreateRegexMatchSet",
        "waf:CreateRegexPatternSet",
        "waf:CreateRule",
        "waf:CreateRuleGroup",
        "waf:CreateSizeConstraintSet",
        "waf:CreateSqlInjectionMatchSet",
        "waf:CreateWebACL",
        "waf:CreateWebACLMigrationStack",
        "waf:CreateXssMatchSet",
        "waf:DeleteByteMatchSet",
        "waf:DeleteGeoMatchSet",
        "waf:DeleteIPSet",
        "waf:DeleteLoggingConfiguration",
        "waf:DeletePermissionPolicy",
        "waf:DeleteRateBasedRule",
        "waf:DeleteRegexMatchSet",
        "waf:DeleteRegexPatternSet",
        "waf:DeleteRule",
        "waf:DeleteRuleGroup",
        "waf:DeleteSizeConstraintSet",
        "waf:DeleteSqlInjectionMatchSet",
        "waf:DeleteWebACL",
        "waf:DeleteXssMatchSet",
        "waf:GetByteMatchSet",
        "waf:GetChangeToken",
        "waf:GetChangeTokenStatus",
        "waf:GetGeoMatchSet",
        "waf:GetIPSet",
        "waf:GetLoggingConfiguration",
        "waf:GetPermissionPolicy",
        "waf:GetRateBasedRule",
        "waf:GetRateBasedRuleManagedKeys",
        "waf:GetRegexMatchSet",
        "waf:GetRegexPatternSet",
        "waf:GetRule",
        "waf:GetRuleGroup",
        "waf:GetSampledRequests",
        "waf:GetSizeConstraintSet",
        "waf:GetSqlInjectionMatchSet",
        "waf:GetWebACL",
        "waf:GetXssMatchSet",
        "waf:ListActivatedRulesInRuleGroup",
        "waf:ListByteMatchSets",
        "waf:ListGeoMatchSets",
        "waf:ListIPSets",
        "waf:ListLoggingConfigurations",
        "waf:ListRateBasedRules",
        "waf:ListRegexMatchSets",
        "waf:ListRegexPatternSets",
        "waf:ListRuleGroups",
        "waf:ListRules",
        "waf:ListSizeConstraintSets",
        "waf:ListSqlInjectionMatchSets",
        "waf:ListSubscribedRuleGroups",
        "waf:ListTagsForResource",
        "waf:ListWebACLs",
        "waf:ListXssMatchSets",
        "waf:PutLoggingConfiguration",
        "waf:PutPermissionPolicy",
        "waf:TagResource",
        "waf:UntagResource",
        "waf:UpdateByteMatchSet",
        "waf:UpdateGeoMatchSet",
        "waf:UpdateIPSet",
        "waf:UpdateRateBasedRule",
        "waf:UpdateRegexMatchSet",
        "waf:UpdateRegexPatternSet",
        "waf:UpdateRule",
        "waf:UpdateRuleGroup",
        "waf:UpdateSizeConstraintSet",
        "waf:UpdateSqlInjectionMatchSet",
        "waf:UpdateWebACL",
        "waf:UpdateXssMatchSet",
        "wafv2:AssociateWebACL",
        "wafv2:CheckCapacity",
        "wafv2:CreateIPSet",
        "wafv2:CreateRegexPatternSet",
        "wafv2:CreateRuleGroup",
        "wafv2:CreateWebACL",
        "wafv2:DeleteFirewallManagerRuleGroups",
        "wafv2:DeleteIPSet",
        "wafv2:DeleteLoggingConfiguration",
        "wafv2:DeletePermissionPolicy",
        "wafv2:DeleteRegexPatternSet",
        "wafv2:DeleteRuleGroup",
        "wafv2:DeleteWebACL",
        "wafv2:DescribeManagedRuleGroup",
        "wafv2:DisassociateWebACL",
        "wafv2:GetIPSet",
        "wafv2:GetLoggingConfiguration",
        "wafv2:GetPermissionPolicy",
        "wafv2:GetRateBasedStatementManagedKeys",
        "wafv2:GetRegexPatternSet",
        "wafv2:GetRuleGroup",
        "wafv2:GetSampledRequests",
        "wafv2:GetWebACL",
        "wafv2:GetWebACLForResource",
        "wafv2:ListAvailableManagedRuleGroups",
        "wafv2:ListIPSets",
        "wafv2:ListLoggingConfigurations",
        "wafv2:ListRegexPatternSets",
        "wafv2:ListResourcesForWebACL",
        "wafv2:ListRuleGroups",
        "wafv2:ListTagsForResource",
        "wafv2:ListWebACLs",
        "wafv2:PutLoggingConfiguration",
        "wafv2:PutPermissionPolicy",
        "wafv2:TagResource",
        "wafv2:UntagResource",
        "wafv2:UpdateIPSet",
        "wafv2:UpdateRegexPatternSet",
        "wafv2:UpdateRuleGroup",
        "wafv2:UpdateWebACL",
        "wam:AuthenticatePackager",
        "wellarchitected:CreateWorkload",
        "wellarchitected:CreateWorkloadShare",
        "wellarchitected:DeleteWorkload",
        "wellarchitected:GetWorkload",
        "wellarchitected:ListWorkloads",
        "workdocs:AbortDocumentVersionUpload",
        "workdocs:ActivateUser",
        "workdocs:AddResourcePermissions",
        "workdocs:AddUserToGroup",
        "workdocs:CheckAlias",
        "workdocs:CreateComment",
        "workdocs:CreateCustomMetadata",
        "workdocs:CreateFolder",
        "workdocs:CreateInstance",
        "workdocs:CreateLabels",
        "workdocs:CreateNotificationSubscription",
        "workdocs:CreateUser",
        "workdocs:DeactivateUser",
        "workdocs:DeleteComment",
        "workdocs:DeleteCustomMetadata",
        "workdocs:DeleteDocument",
        "workdocs:DeleteFolder",
        "workdocs:DeleteFolderContents",
        "workdocs:DeleteInstance",
        "workdocs:DeleteLabels",
        "workdocs:DeleteNotificationSubscription",
        "workdocs:DeleteUser",
        "workdocs:DeregisterDirectory",
        "workdocs:DescribeActivities",
        "workdocs:DescribeAvailableDirectories",
        "workdocs:DescribeComments",
        "workdocs:DescribeDocumentVersions",
        "workdocs:DescribeFolderContents",
        "workdocs:DescribeGroups",
        "workdocs:DescribeInstances",
        "workdocs:DescribeNotificationSubscriptions",
        "workdocs:DescribeResourcePermissions",
        "workdocs:DescribeRootFolders",
        "workdocs:DescribeUsers",
        "workdocs:DownloadDocumentVersion",
        "workdocs:GetCurrentUser",
        "workdocs:GetDocument",
        "workdocs:GetDocumentPath",
        "workdocs:GetDocumentVersion",
        "workdocs:GetFolder",
        "workdocs:GetFolderPath",
        "workdocs:GetResources",
        "workdocs:InitiateDocumentVersionUpload",
        "workdocs:RegisterDirectory",
        "workdocs:RemoveAllResourcePermissions",
        "workdocs:RemoveResourcePermission",
        "workdocs:UpdateDocument",
        "workdocs:UpdateDocumentVersion",
        "workdocs:UpdateFolder",
        "workdocs:UpdateInstanceAlias",
        "workdocs:UpdateUser",
        "worklink:AssociateDomain",
        "worklink:AssociateWebsiteAuthorizationProvider",
        "worklink:AssociateWebsiteCertificateAuthority",
        "worklink:CreateFleet",
        "worklink:DeleteFleet",
        "worklink:DescribeAuditStreamConfiguration",
        "worklink:DescribeCompanyNetworkConfiguration",
        "worklink:DescribeDevice",
        "worklink:DescribeDevicePolicyConfiguration",
        "worklink:DescribeDomain",
        "worklink:DescribeFleetMetadata",
        "worklink:DescribeIdentityProviderConfiguration",
        "worklink:DescribeWebsiteCertificateAuthority",
        "worklink:DisassociateDomain",
        "worklink:DisassociateWebsiteAuthorizationProvider",
        "worklink:DisassociateWebsiteCertificateAuthority",
        "worklink:ListDevices",
        "worklink:ListDomains",
        "worklink:ListFleets",
        "worklink:ListTagsForResource",
        "worklink:ListWebsiteAuthorizationProviders",
        "worklink:ListWebsiteCertificateAuthorities",
        "worklink:RestoreDomainAccess",
        "worklink:RevokeDomainAccess",
        "worklink:SignOutUser",
        "worklink:TagResource",
        "worklink:UntagResource",
        "worklink:UpdateAuditStreamConfiguration",
        "worklink:UpdateCompanyNetworkConfiguration",
        "worklink:UpdateDevicePolicyConfiguration",
        "worklink:UpdateDomainMetadata",
        "worklink:UpdateFleetMetadata",
        "worklink:UpdateIdentityProviderConfiguration",
        "workmail:AddMembersToGroup",
        "workmail:AssociateDelegateToResource",
        "workmail:AssociateMemberToGroup",
        "workmail:CreateAlias",
        "workmail:CreateGroup",
        "workmail:CreateInboundMailFlowRule",
        "workmail:CreateMailDomain",
        "workmail:CreateMailUser",
        "workmail:CreateOrganization",
        "workmail:CreateOutboundMailFlowRule",
        "workmail:CreateResource",
        "workmail:CreateSmtpGateway",
        "workmail:CreateUser",
        "workmail:DeleteAccessControlRule",
        "workmail:DeleteAlias",
        "workmail:DeleteGroup",
        "workmail:DeleteInboundMailFlowRule",
        "workmail:DeleteMailDomain",
        "workmail:DeleteMailboxPermissions",
        "workmail:DeleteMobileDevice",
        "workmail:DeleteOrganization",
        "workmail:DeleteOutboundMailFlowRule",
        "workmail:DeleteResource",
        "workmail:DeleteRetentionPolicy",
        "workmail:DeleteSmtpGateway",
        "workmail:DeleteUser",
        "workmail:DeregisterFromWorkMail",
        "workmail:DescribeDirectories",
        "workmail:DescribeGroup",
        "workmail:DescribeInboundMailFlowRule",
        "workmail:DescribeKmsKeys",
        "workmail:DescribeMailDomains",
        "workmail:DescribeMailGroups",
        "workmail:DescribeMailUsers",
        "workmail:DescribeOrganization",
        "workmail:DescribeOrganizations",
        "workmail:DescribeOutboundMailFlowRule",
        "workmail:DescribeResource",
        "workmail:DescribeSmtpGateway",
        "workmail:DescribeUser",
        "workmail:DisableMailGroups",
        "workmail:DisableMailUsers",
        "workmail:DisassociateDelegateFromResource",
        "workmail:DisassociateMemberFromGroup",
        "workmail:EnableMailDomain",
        "workmail:EnableMailGroups",
        "workmail:EnableMailUsers",
        "workmail:GetAccessControlEffect",
        "workmail:GetDefaultRetentionPolicy",
        "workmail:GetJournalingRules",
        "workmail:GetMailDomainDetails",
        "workmail:GetMailGroupDetails",
        "workmail:GetMailUserDetails",
        "workmail:GetMailboxDetails",
        "workmail:GetMobileDeviceDetails",
        "workmail:GetMobileDevicesForUser",
        "workmail:GetMobilePolicyDetails",
        "workmail:ListAccessControlRules",
        "workmail:ListAliases",
        "workmail:ListGroupMembers",
        "workmail:ListGroups",
        "workmail:ListInboundMailFlowRules",
        "workmail:ListMailboxPermissions",
        "workmail:ListMembersInMailGroup",
        "workmail:ListOrganizations",
        "workmail:ListOutboundMailFlowRules",
        "workmail:ListResourceDelegates",
        "workmail:ListResources",
        "workmail:ListSmtpGateways",
        "workmail:ListTagsForResource",
        "workmail:ListUsers",
        "workmail:PutAccessControlRule",
        "workmail:PutMailboxPermissions",
        "workmail:PutRetentionPolicy",
        "workmail:RegisterToWorkMail",
        "workmail:RemoveMembersFromGroup",
        "workmail:ResetPassword",
        "workmail:ResetUserPassword",
        "workmail:SearchMembers",
        "workmail:SetAdmin",
        "workmail:SetDefaultMailDomain",
        "workmail:SetJournalingRules",
        "workmail:SetMailGroupDetails",
        "workmail:SetMailUserDetails",
        "workmail:SetMobilePolicyDetails",
        "workmail:TagResource",
        "workmail:TestInboundMailFlowRules",
        "workmail:TestOutboundMailFlowRules",
        "workmail:UntagResource",
        "workmail:UpdateInboundMailFlowRule",
        "workmail:UpdateMailboxQuota",
        "workmail:UpdateOutboundMailFlowRule",
        "workmail:UpdatePrimaryEmailAddress",
        "workmail:UpdateResource",
        "workmail:UpdateSmtpGateway",
        "workmail:WipeMobileDevice",
        "workmailmessageflow:GetRawMessageContent",
        "workspaces:AssociateIpGroups",
        "workspaces:AuthorizeIpRules",
        "workspaces:CreateIpGroup",
        "workspaces:CreateTags",
        "workspaces:CreateWorkspaces",
        "workspaces:DeleteIpGroup",
        "workspaces:DeleteTags",
        "workspaces:DeleteWorkspaceImage",
        "workspaces:DescribeAccount",
        "workspaces:DescribeAccountModifications",
        "workspaces:DescribeClientProperties",
        "workspaces:DescribeIpGroups",
        "workspaces:DescribeTags",
        "workspaces:DescribeWorkspaceBundles",
        "workspaces:DescribeWorkspaceDirectories",
        "workspaces:DescribeWorkspaceImages",
        "workspaces:DescribeWorkspaces",
        "workspaces:DescribeWorkspacesConnectionStatus",
        "workspaces:DisassociateIpGroups",
        "workspaces:ImportWorkspaceImage",
        "workspaces:ListAvailableManagementCidrRanges",
        "workspaces:ModifyAccount",
        "workspaces:ModifyClientProperties",
        "workspaces:ModifyWorkspaceProperties",
        "workspaces:ModifyWorkspaceState",
        "workspaces:RebootWorkspaces",
        "workspaces:RebuildWorkspaces",
        "workspaces:RevokeIpRules",
        "workspaces:StartWorkspaces",
        "workspaces:StopWorkspaces",
        "workspaces:TerminateWorkspaces",
        "workspaces:UpdateRulesOfIpGroup",
        "xray:BatchGetTraces",
        "xray:CreateGroup",
        "xray:CreateSamplingRule",
        "xray:DeleteGroup",
        "xray:DeleteSamplingRule",
        "xray:GetEncryptionConfig",
        "xray:GetGroup",
        "xray:GetGroups",
        "xray:GetSamplingRules",
        "xray:GetSamplingStatisticSummaries",
        "xray:GetSamplingTargets",
        "xray:GetServiceGraph",
        "xray:GetTimeSeriesServiceStatistics",
        "xray:GetTraceGraph",
        "xray:GetTraceSummaries",
        "xray:PutEncryptionConfig",
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments",
        "xray:UpdateGroup",
        "xray:UpdateSamplingRule"
      ]
    },
    "ANPAIX2T3QCXHR2OGGCTO": {
      "PolicyName": "SecurityAudit",
      "PolicyId": "ANPAIX2T3QCXHR2OGGCTO",
      "Arn": "arn:aws:iam::aws:policy/SecurityAudit",
      "Path": "/",
      "DefaultVersionId": "v32",
      "AttachmentCount": 2,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:41:01+00:00",
      "UpdateDate": "2020-02-25 16:08:50+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Resource": "*",
                "Action": [
                  "access-analyzer:GetAnalyzedResource",
                  "access-analyzer:GetAnalyzer",
                  "access-analyzer:GetArchiveRule",
                  "access-analyzer:GetFinding",
                  "access-analyzer:ListAnalyzedResources",
                  "access-analyzer:ListAnalyzers",
                  "access-analyzer:ListArchiveRules",
                  "access-analyzer:ListFindings",
                  "access-analyzer:ListTagsForResource",
                  "acm:Describe*",
                  "acm:List*",
                  "application-autoscaling:Describe*",
                  "appmesh:Describe*",
                  "appmesh:List*",
                  "appsync:List*",
                  "athena:GetWorkGroup",
                  "athena:List*",
                  "autoscaling:Describe*",
                  "batch:DescribeComputeEnvironments",
                  "batch:DescribeJobDefinitions",
                  "chime:List*",
                  "cloud9:Describe*",
                  "cloud9:ListEnvironments",
                  "clouddirectory:ListDirectories",
                  "cloudformation:DescribeStack*",
                  "cloudformation:GetTemplate",
                  "cloudformation:ListStack*",
                  "cloudformation:GetStackPolicy",
                  "cloudfront:Get*",
                  "cloudfront:List*",
                  "cloudhsm:ListHapgs",
                  "cloudhsm:ListHsms",
                  "cloudhsm:ListLunaClients",
                  "cloudsearch:DescribeDomains",
                  "cloudsearch:DescribeServiceAccessPolicies",
                  "cloudtrail:DescribeTrails",
                  "cloudtrail:GetEventSelectors",
                  "cloudtrail:GetTrailStatus",
                  "cloudtrail:ListTags",
                  "cloudtrail:LookupEvents",
                  "cloudwatch:Describe*",
                  "codebuild:ListProjects",
                  "codecommit:BatchGetRepositories",
                  "codecommit:GetBranch",
                  "codecommit:GetObjectIdentifier",
                  "codecommit:GetRepository",
                  "codecommit:List*",
                  "codedeploy:Batch*",
                  "codedeploy:Get*",
                  "codedeploy:List*",
                  "codepipeline:ListPipelines",
                  "codestar:Describe*",
                  "codestar:List*",
                  "cognito-identity:ListIdentityPools",
                  "cognito-idp:ListUserPools",
                  "cognito-sync:Describe*",
                  "cognito-sync:List*",
                  "comprehend:Describe*",
                  "comprehend:List*",
                  "config:BatchGetAggregateResourceConfig",
                  "config:BatchGetResourceConfig",
                  "config:Deliver*",
                  "config:Describe*",
                  "config:Get*",
                  "config:List*",
                  "datapipeline:DescribeObjects",
                  "datapipeline:DescribePipelines",
                  "datapipeline:EvaluateExpression",
                  "datapipeline:GetPipelineDefinition",
                  "datapipeline:ListPipelines",
                  "datapipeline:QueryObjects",
                  "datapipeline:ValidatePipelineDefinition",
                  "datasync:Describe*",
                  "datasync:List*",
                  "dax:Describe*",
                  "dax:ListTags",
                  "directconnect:Describe*",
                  "dms:Describe*",
                  "dms:ListTagsForResource",
                  "ds:DescribeDirectories",
                  "dynamodb:DescribeContinuousBackups",
                  "dynamodb:DescribeGlobalTable",
                  "dynamodb:DescribeTable",
                  "dynamodb:DescribeTimeToLive",
                  "dynamodb:ListBackups",
                  "dynamodb:ListGlobalTables",
                  "dynamodb:ListStreams",
                  "dynamodb:ListTables",
                  "ec2:Describe*",
                  "ecr:DescribeRepositories",
                  "ecr:GetRepositoryPolicy",
                  "ecs:Describe*",
                  "ecs:List*",
                  "eks:DescribeCluster",
                  "eks:ListClusters",
                  "elasticache:Describe*",
                  "elasticbeanstalk:Describe*",
                  "elasticfilesystem:DescribeFileSystems",
                  "elasticfilesystem:DescribeMountTargetSecurityGroups",
                  "elasticfilesystem:DescribeMountTargets",
                  "elasticloadbalancing:Describe*",
                  "elasticmapreduce:Describe*",
                  "elasticmapreduce:ListClusters",
                  "elasticmapreduce:ListInstances",
                  "es:Describe*",
                  "es:ListDomainNames",
                  "events:Describe*",
                  "events:List*",
                  "firehose:Describe*",
                  "firehose:List*",
                  "fms:ListComplianceStatus",
                  "fms:ListPolicies",
                  "fsx:Describe*",
                  "fsx:List*",
                  "gamelift:ListBuilds",
                  "gamelift:ListFleets",
                  "glacier:DescribeVault",
                  "glacier:GetVaultAccessPolicy",
                  "glacier:ListVaults",
                  "globalaccelerator:Describe*",
                  "globalaccelerator:List*",
                  "greengrass:List*",
                  "guardduty:Get*",
                  "guardduty:List*",
                  "iam:GenerateCredentialReport",
                  "iam:GenerateServiceLastAccessedDetails",
                  "iam:Get*",
                  "iam:List*",
                  "iam:SimulateCustomPolicy",
                  "iam:SimulatePrincipalPolicy",
                  "inspector:Describe*",
                  "inspector:Get*",
                  "inspector:List*",
                  "inspector:Preview*",
                  "iot:Describe*",
                  "iot:GetPolicy",
                  "iot:GetPolicyVersion",
                  "iot:List*",
                  "kinesis:DescribeStream",
                  "kinesis:ListStreams",
                  "kinesis:ListTagsForStream",
                  "kinesisanalytics:ListApplications",
                  "kms:Describe*",
                  "kms:Get*",
                  "kms:List*",
                  "lambda:GetAccountSettings",
                  "lambda:GetFunctionConfiguration",
                  "lambda:GetLayerVersionPolicy",
                  "lambda:GetPolicy",
                  "lambda:List*",
                  "license-manager:List*",
                  "lightsail:GetInstances",
                  "lightsail:GetLoadBalancers",
                  "logs:Describe*",
                  "logs:ListTagsLogGroup",
                  "machinelearning:DescribeMLModels",
                  "mediaconnect:Describe*",
                  "mediaconnect:List*",
                  "mediastore:GetContainerPolicy",
                  "mediastore:ListContainers",
                  "opsworks:DescribeStacks",
                  "opsworks-cm:DescribeServers",
                  "organizations:List*",
                  "organizations:Describe*",
                  "quicksight:Describe*",
                  "quicksight:List*",
                  "ram:List*",
                  "rds:Describe*",
                  "rds:DownloadDBLogFilePortion",
                  "rds:ListTagsForResource",
                  "redshift:Describe*",
                  "rekognition:Describe*",
                  "rekognition:List*",
                  "robomaker:Describe*",
                  "robomaker:List*",
                  "route53:Get*",
                  "route53:List*",
                  "route53domains:GetDomainDetail",
                  "route53domains:GetOperationDetail",
                  "route53domains:ListDomains",
                  "route53domains:ListOperations",
                  "route53domains:ListTagsForDomain",
                  "route53resolver:List*",
                  "route53resolver:Get*",
                  "s3:GetAccelerateConfiguration",
                  "s3:GetAccessPoint",
                  "s3:GetAccessPointPolicy",
                  "s3:GetAccessPointPolicyStatus",
                  "s3:GetAccountPublicAccessBlock",
                  "s3:GetAnalyticsConfiguration",
                  "s3:GetBucket*",
                  "s3:GetEncryptionConfiguration",
                  "s3:GetInventoryConfiguration",
                  "s3:GetLifecycleConfiguration",
                  "s3:GetMetricsConfiguration",
                  "s3:GetObjectAcl",
                  "s3:GetObjectVersionAcl",
                  "s3:GetReplicationConfiguration",
                  "s3:ListAccessPoints",
                  "s3:ListAllMyBuckets",
                  "sagemaker:Describe*",
                  "sagemaker:List*",
                  "sdb:DomainMetadata",
                  "sdb:ListDomains",
                  "secretsmanager:GetResourcePolicy",
                  "secretsmanager:ListSecrets",
                  "secretsmanager:ListSecretVersionIds",
                  "securityhub:Describe*",
                  "securityhub:Get*",
                  "securityhub:List*",
                  "serverlessrepo:GetApplicationPolicy",
                  "serverlessrepo:List*",
                  "ses:GetIdentityDkimAttributes",
                  "ses:GetIdentityPolicies",
                  "ses:GetIdentityVerificationAttributes",
                  "ses:ListIdentities",
                  "ses:ListIdentityPolicies",
                  "ses:ListVerifiedEmailAddresses",
                  "shield:Describe*",
                  "shield:List*",
                  "snowball:ListClusters",
                  "snowball:ListJobs",
                  "sns:GetTopicAttributes",
                  "sns:ListSubscriptionsByTopic",
                  "sns:ListTopics",
                  "sqs:GetQueueAttributes",
                  "sqs:ListDeadLetterSourceQueues",
                  "sqs:ListQueues",
                  "sqs:ListQueueTags",
                  "ssm:Describe*",
                  "ssm:GetAutomationExecution",
                  "ssm:ListDocuments",
                  "sso:DescribePermissionsPolicies",
                  "sso:List*",
                  "states:ListStateMachines",
                  "storagegateway:DescribeBandwidthRateLimit",
                  "storagegateway:DescribeCache",
                  "storagegateway:DescribeCachediSCSIVolumes",
                  "storagegateway:DescribeGatewayInformation",
                  "storagegateway:DescribeMaintenanceStartTime",
                  "storagegateway:DescribeNFSFileShares",
                  "storagegateway:DescribeSnapshotSchedule",
                  "storagegateway:DescribeStorediSCSIVolumes",
                  "storagegateway:DescribeTapeArchives",
                  "storagegateway:DescribeTapeRecoveryPoints",
                  "storagegateway:DescribeTapes",
                  "storagegateway:DescribeUploadBuffer",
                  "storagegateway:DescribeVTLDevices",
                  "storagegateway:DescribeWorkingStorage",
                  "storagegateway:List*",
                  "tag:GetResources",
                  "tag:GetTagKeys",
                  "transfer:Describe*",
                  "transfer:List*",
                  "translate:List*",
                  "trustedadvisor:Describe*",
                  "waf:ListWebACLs",
                  "waf-regional:ListWebACLs",
                  "workspaces:Describe*"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "apigateway:GET"
                ],
                "Resource": [
                  "arn:aws:apigateway:*::/apis",
                  "arn:aws:apigateway:*::/apis/*/stages",
                  "arn:aws:apigateway:*::/apis/*/stages/*",
                  "arn:aws:apigateway:*::/apis/*/routes",
                  "arn:aws:apigateway:*::/restapis",
                  "arn:aws:apigateway:*::/restapis/*/authorizers",
                  "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                  "arn:aws:apigateway:*::/restapis/*/documentation/versions",
                  "arn:aws:apigateway:*::/restapis/*/resources",
                  "arn:aws:apigateway:*::/restapis/*/resources/*",
                  "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                  "arn:aws:apigateway:*::/restapis/*/stages",
                  "arn:aws:apigateway:*::/restapis/*/stages/*",
                  "arn:aws:apigateway:*::/vpclinks"
                ]
              }
            ]
          },
          "VersionId": "v32",
          "IsDefaultVersion": true,
          "CreateDate": "2020-02-25 16:08:50+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "access-analyzer:GetAnalyzedResource",
        "access-analyzer:GetAnalyzer",
        "access-analyzer:GetArchiveRule",
        "access-analyzer:GetFinding",
        "access-analyzer:ListAnalyzedResources",
        "access-analyzer:ListAnalyzers",
        "access-analyzer:ListArchiveRules",
        "access-analyzer:ListFindings",
        "access-analyzer:ListTagsForResource",
        "acm:DescribeCertificate",
        "acm:ListCertificates",
        "acm:ListTagsForCertificate",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingActivities",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DescribeScheduledActions",
        "appmesh:DescribeMesh",
        "appmesh:DescribeRoute",
        "appmesh:DescribeVirtualNode",
        "appmesh:DescribeVirtualRouter",
        "appmesh:DescribeVirtualService",
        "appmesh:ListMeshes",
        "appmesh:ListRoutes",
        "appmesh:ListTagsForResource",
        "appmesh:ListVirtualNodes",
        "appmesh:ListVirtualRouters",
        "appmesh:ListVirtualServices",
        "appsync:ListApiKeys",
        "appsync:ListDataSources",
        "appsync:ListFunctions",
        "appsync:ListGraphqlApis",
        "appsync:ListResolvers",
        "appsync:ListResolversByFunction",
        "appsync:ListTagsForResource",
        "appsync:ListTypes",
        "athena:GetWorkGroup",
        "athena:ListDataCatalogs",
        "athena:ListDatabases",
        "athena:ListNamedQueries",
        "athena:ListQueryExecutions",
        "athena:ListTableMetadata",
        "athena:ListTagsForResource",
        "athena:ListWorkGroups",
        "autoscaling:DescribeAccountLimits",
        "autoscaling:DescribeAdjustmentTypes",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeAutoScalingNotificationTypes",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeLifecycleHookTypes",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeLoadBalancerTargetGroups",
        "autoscaling:DescribeLoadBalancers",
        "autoscaling:DescribeMetricCollectionTypes",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:DescribePolicies",
        "autoscaling:DescribeScalingActivities",
        "autoscaling:DescribeScalingProcessTypes",
        "autoscaling:DescribeScheduledActions",
        "autoscaling:DescribeTags",
        "autoscaling:DescribeTerminationPolicyTypes",
        "batch:DescribeComputeEnvironments",
        "batch:DescribeJobDefinitions",
        "chime:ListAccountUsageReportData",
        "chime:ListAccounts",
        "chime:ListApiKeys",
        "chime:ListAttendeeTags",
        "chime:ListAttendees",
        "chime:ListBots",
        "chime:ListCDRBucket",
        "chime:ListCallingRegions",
        "chime:ListDelegates",
        "chime:ListDirectories",
        "chime:ListDomains",
        "chime:ListGroups",
        "chime:ListMeetingEvents",
        "chime:ListMeetingTags",
        "chime:ListMeetings",
        "chime:ListMeetingsReportData",
        "chime:ListPhoneNumberOrders",
        "chime:ListPhoneNumbers",
        "chime:ListProxySessions",
        "chime:ListRoomMemberships",
        "chime:ListRooms",
        "chime:ListTagsForResource",
        "chime:ListUsers",
        "chime:ListVoiceConnectorGroups",
        "chime:ListVoiceConnectorTerminationCredentials",
        "chime:ListVoiceConnectors",
        "cloud9:DescribeEnvironmentMemberships",
        "cloud9:DescribeEnvironmentStatus",
        "cloud9:DescribeEnvironments",
        "cloud9:ListEnvironments",
        "clouddirectory:ListDirectories",
        "cloudformation:DescribeStackDriftDetectionStatus",
        "cloudformation:DescribeStackEvents",
        "cloudformation:DescribeStackInstance",
        "cloudformation:DescribeStackResource",
        "cloudformation:DescribeStackResourceDrifts",
        "cloudformation:DescribeStackResources",
        "cloudformation:DescribeStackSet",
        "cloudformation:DescribeStackSetOperation",
        "cloudformation:DescribeStacks",
        "cloudformation:GetStackPolicy",
        "cloudformation:GetTemplate",
        "cloudformation:ListStackInstances",
        "cloudformation:ListStackResources",
        "cloudformation:ListStackSetOperationResults",
        "cloudformation:ListStackSetOperations",
        "cloudformation:ListStackSets",
        "cloudformation:ListStacks",
        "cloudfront:GetCloudFrontOriginAccessIdentity",
        "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
        "cloudfront:GetDistribution",
        "cloudfront:GetDistributionConfig",
        "cloudfront:GetFieldLevelEncryption",
        "cloudfront:GetFieldLevelEncryptionConfig",
        "cloudfront:GetFieldLevelEncryptionProfile",
        "cloudfront:GetFieldLevelEncryptionProfileConfig",
        "cloudfront:GetInvalidation",
        "cloudfront:GetPublicKey",
        "cloudfront:GetPublicKeyConfig",
        "cloudfront:GetStreamingDistribution",
        "cloudfront:GetStreamingDistributionConfig",
        "cloudfront:ListCloudFrontOriginAccessIdentities",
        "cloudfront:ListDistributions",
        "cloudfront:ListDistributionsByLambdaFunction",
        "cloudfront:ListDistributionsByWebACLId",
        "cloudfront:ListFieldLevelEncryptionConfigs",
        "cloudfront:ListFieldLevelEncryptionProfiles",
        "cloudfront:ListInvalidations",
        "cloudfront:ListPublicKeys",
        "cloudfront:ListStreamingDistributions",
        "cloudfront:ListTagsForResource",
        "cloudhsm:ListHapgs",
        "cloudhsm:ListHsms",
        "cloudhsm:ListLunaClients",
        "cloudsearch:DescribeDomains",
        "cloudsearch:DescribeServiceAccessPolicies",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:ListTags",
        "cloudtrail:LookupEvents",
        "cloudwatch:DescribeAlarmHistory",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:DescribeAlarmsForMetric",
        "cloudwatch:DescribeAnomalyDetectors",
        "cloudwatch:DescribeInsightRules",
        "codebuild:ListProjects",
        "codecommit:BatchGetRepositories",
        "codecommit:GetBranch",
        "codecommit:GetObjectIdentifier",
        "codecommit:GetRepository",
        "codecommit:ListApprovalRuleTemplates",
        "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
        "codecommit:ListBranches",
        "codecommit:ListPullRequests",
        "codecommit:ListRepositories",
        "codecommit:ListRepositoriesForApprovalRuleTemplate",
        "codecommit:ListTagsForResource",
        "codedeploy:BatchGetApplicationRevisions",
        "codedeploy:BatchGetApplications",
        "codedeploy:BatchGetDeploymentGroups",
        "codedeploy:BatchGetDeploymentInstances",
        "codedeploy:BatchGetDeploymentTargets",
        "codedeploy:BatchGetDeployments",
        "codedeploy:BatchGetOnPremisesInstances",
        "codedeploy:GetApplication",
        "codedeploy:GetApplicationRevision",
        "codedeploy:GetDeployment",
        "codedeploy:GetDeploymentConfig",
        "codedeploy:GetDeploymentGroup",
        "codedeploy:GetDeploymentInstance",
        "codedeploy:GetDeploymentTarget",
        "codedeploy:GetOnPremisesInstance",
        "codedeploy:ListApplicationRevisions",
        "codedeploy:ListApplications",
        "codedeploy:ListDeploymentConfigs",
        "codedeploy:ListDeploymentGroups",
        "codedeploy:ListDeploymentInstances",
        "codedeploy:ListDeploymentTargets",
        "codedeploy:ListDeployments",
        "codedeploy:ListGitHubAccountTokenNames",
        "codedeploy:ListOnPremisesInstances",
        "codedeploy:ListTagsForResource",
        "codepipeline:ListPipelines",
        "codestar:DescribeProject",
        "codestar:DescribeUserProfile",
        "codestar:ListProjects",
        "codestar:ListResources",
        "codestar:ListTagsForProject",
        "codestar:ListTeamMembers",
        "codestar:ListUserProfiles",
        "cognito-identity:ListIdentityPools",
        "cognito-idp:ListUserPools",
        "cognito-sync:DescribeDataset",
        "cognito-sync:DescribeIdentityPoolUsage",
        "cognito-sync:DescribeIdentityUsage",
        "cognito-sync:ListDatasets",
        "cognito-sync:ListIdentityPoolUsage",
        "cognito-sync:ListRecords",
        "comprehend:DescribeDocumentClassificationJob",
        "comprehend:DescribeDocumentClassifier",
        "comprehend:DescribeDominantLanguageDetectionJob",
        "comprehend:DescribeEndpoint",
        "comprehend:DescribeEntitiesDetectionJob",
        "comprehend:DescribeEntityRecognizer",
        "comprehend:DescribeKeyPhrasesDetectionJob",
        "comprehend:DescribeSentimentDetectionJob",
        "comprehend:DescribeTopicsDetectionJob",
        "comprehend:ListDocumentClassificationJobs",
        "comprehend:ListDocumentClassifiers",
        "comprehend:ListDominantLanguageDetectionJobs",
        "comprehend:ListEndpoints",
        "comprehend:ListEntitiesDetectionJobs",
        "comprehend:ListEntityRecognizers",
        "comprehend:ListKeyPhrasesDetectionJobs",
        "comprehend:ListSentimentDetectionJobs",
        "comprehend:ListTagsForResource",
        "comprehend:ListTopicsDetectionJobs",
        "config:BatchGetAggregateResourceConfig",
        "config:BatchGetResourceConfig",
        "config:DeliverConfigSnapshot",
        "config:DescribeAggregateComplianceByConfigRules",
        "config:DescribeAggregationAuthorizations",
        "config:DescribeComplianceByConfigRule",
        "config:DescribeComplianceByResource",
        "config:DescribeConfigRuleEvaluationStatus",
        "config:DescribeConfigRules",
        "config:DescribeConfigurationAggregatorSourcesStatus",
        "config:DescribeConfigurationAggregators",
        "config:DescribeConfigurationRecorderStatus",
        "config:DescribeConfigurationRecorders",
        "config:DescribeConformancePackCompliance",
        "config:DescribeConformancePackStatus",
        "config:DescribeConformancePacks",
        "config:DescribeDeliveryChannelStatus",
        "config:DescribeDeliveryChannels",
        "config:DescribeOrganizationConfigRuleStatuses",
        "config:DescribeOrganizationConfigRules",
        "config:DescribeOrganizationConformancePackStatuses",
        "config:DescribeOrganizationConformancePacks",
        "config:DescribePendingAggregationRequests",
        "config:DescribeRemediationConfigurations",
        "config:DescribeRemediationExceptions",
        "config:DescribeRemediationExecutionStatus",
        "config:DescribeRetentionConfigurations",
        "config:GetAggregateComplianceDetailsByConfigRule",
        "config:GetAggregateConfigRuleComplianceSummary",
        "config:GetAggregateDiscoveredResourceCounts",
        "config:GetAggregateResourceConfig",
        "config:GetComplianceDetailsByConfigRule",
        "config:GetComplianceDetailsByResource",
        "config:GetComplianceSummaryByConfigRule",
        "config:GetComplianceSummaryByResourceType",
        "config:GetConformancePackComplianceDetails",
        "config:GetConformancePackComplianceSummary",
        "config:GetDiscoveredResourceCounts",
        "config:GetOrganizationConfigRuleDetailedStatus",
        "config:GetOrganizationConformancePackDetailedStatus",
        "config:GetResourceConfigHistory",
        "config:ListAggregateDiscoveredResources",
        "config:ListDiscoveredResources",
        "config:ListTagsForResource",
        "datapipeline:DescribeObjects",
        "datapipeline:DescribePipelines",
        "datapipeline:EvaluateExpression",
        "datapipeline:GetPipelineDefinition",
        "datapipeline:ListPipelines",
        "datapipeline:QueryObjects",
        "datapipeline:ValidatePipelineDefinition",
        "datasync:DescribeAgent",
        "datasync:DescribeLocationEfs",
        "datasync:DescribeLocationNfs",
        "datasync:DescribeLocationS3",
        "datasync:DescribeLocationSmb",
        "datasync:DescribeTask",
        "datasync:DescribeTaskExecution",
        "datasync:ListAgents",
        "datasync:ListLocations",
        "datasync:ListTagsForResource",
        "datasync:ListTaskExecutions",
        "datasync:ListTasks",
        "dax:DescribeClusters",
        "dax:DescribeDefaultParameters",
        "dax:DescribeEvents",
        "dax:DescribeParameterGroups",
        "dax:DescribeParameters",
        "dax:DescribeSubnetGroups",
        "dax:ListTags",
        "directconnect:DescribeConnectionLoa",
        "directconnect:DescribeConnections",
        "directconnect:DescribeConnectionsOnInterconnect",
        "directconnect:DescribeDirectConnectGatewayAssociationProposals",
        "directconnect:DescribeDirectConnectGatewayAssociations",
        "directconnect:DescribeDirectConnectGatewayAttachments",
        "directconnect:DescribeDirectConnectGateways",
        "directconnect:DescribeHostedConnections",
        "directconnect:DescribeInterconnectLoa",
        "directconnect:DescribeInterconnects",
        "directconnect:DescribeLags",
        "directconnect:DescribeLoa",
        "directconnect:DescribeLocations",
        "directconnect:DescribeTags",
        "directconnect:DescribeVirtualGateways",
        "directconnect:DescribeVirtualInterfaces",
        "dms:DescribeAccountAttributes",
        "dms:DescribeCertificates",
        "dms:DescribeConnections",
        "dms:DescribeEndpointTypes",
        "dms:DescribeEndpoints",
        "dms:DescribeEventCategories",
        "dms:DescribeEventSubscriptions",
        "dms:DescribeEvents",
        "dms:DescribeOrderableReplicationInstances",
        "dms:DescribeRefreshSchemasStatus",
        "dms:DescribeReplicationInstanceTaskLogs",
        "dms:DescribeReplicationInstances",
        "dms:DescribeReplicationSubnetGroups",
        "dms:DescribeReplicationTaskAssessmentResults",
        "dms:DescribeReplicationTasks",
        "dms:DescribeSchemas",
        "dms:DescribeTableStatistics",
        "dms:ListTagsForResource",
        "ds:DescribeDirectories",
        "dynamodb:DescribeContinuousBackups",
        "dynamodb:DescribeGlobalTable",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:ListBackups",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListStreams",
        "dynamodb:ListTables",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ecr:DescribeRepositories",
        "ecr:GetRepositoryPolicy",
        "ecs:DescribeClusters",
        "ecs:DescribeContainerInstances",
        "ecs:DescribeServices",
        "ecs:DescribeTaskDefinition",
        "ecs:DescribeTaskSets",
        "ecs:DescribeTasks",
        "ecs:ListAccountSettings",
        "ecs:ListAttributes",
        "ecs:ListClusters",
        "ecs:ListContainerInstances",
        "ecs:ListServices",
        "ecs:ListTagsForResource",
        "ecs:ListTaskDefinitionFamilies",
        "ecs:ListTaskDefinitions",
        "ecs:ListTasks",
        "eks:DescribeCluster",
        "eks:ListClusters",
        "elasticache:DescribeCacheClusters",
        "elasticache:DescribeCacheEngineVersions",
        "elasticache:DescribeCacheParameterGroups",
        "elasticache:DescribeCacheParameters",
        "elasticache:DescribeCacheSecurityGroups",
        "elasticache:DescribeCacheSubnetGroups",
        "elasticache:DescribeEngineDefaultParameters",
        "elasticache:DescribeEvents",
        "elasticache:DescribeReplicationGroups",
        "elasticache:DescribeReservedCacheNodes",
        "elasticache:DescribeReservedCacheNodesOfferings",
        "elasticache:DescribeSnapshots",
        "elasticbeanstalk:DescribeAccountAttributes",
        "elasticbeanstalk:DescribeApplicationVersions",
        "elasticbeanstalk:DescribeApplications",
        "elasticbeanstalk:DescribeConfigurationOptions",
        "elasticbeanstalk:DescribeConfigurationSettings",
        "elasticbeanstalk:DescribeEnvironmentHealth",
        "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
        "elasticbeanstalk:DescribeEnvironmentManagedActions",
        "elasticbeanstalk:DescribeEnvironmentResources",
        "elasticbeanstalk:DescribeEnvironments",
        "elasticbeanstalk:DescribeEvents",
        "elasticbeanstalk:DescribeInstancesHealth",
        "elasticbeanstalk:DescribePlatformVersion",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeMountTargetSecurityGroups",
        "elasticfilesystem:DescribeMountTargets",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeInstanceHealth",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticmapreduce:DescribeCluster",
        "elasticmapreduce:DescribeEditor",
        "elasticmapreduce:DescribeJobFlows",
        "elasticmapreduce:DescribeSecurityConfiguration",
        "elasticmapreduce:DescribeStep",
        "elasticmapreduce:ListClusters",
        "elasticmapreduce:ListInstances",
        "es:DescribeElasticsearchDomain",
        "es:DescribeElasticsearchDomainConfig",
        "es:DescribeElasticsearchDomains",
        "es:DescribeElasticsearchInstanceTypeLimits",
        "es:DescribeInboundCrossClusterSearchConnections",
        "es:DescribeOutboundCrossClusterSearchConnections",
        "es:DescribeReservedElasticsearchInstanceOfferings",
        "es:DescribeReservedElasticsearchInstances",
        "es:ListDomainNames",
        "events:DescribeEventBus",
        "events:DescribeEventSource",
        "events:DescribePartnerEventSource",
        "events:DescribeRule",
        "events:ListEventBuses",
        "events:ListEventSources",
        "events:ListPartnerEventSourceAccounts",
        "events:ListPartnerEventSources",
        "events:ListRuleNamesByTarget",
        "events:ListRules",
        "events:ListTagsForResource",
        "events:ListTargetsByRule",
        "firehose:DescribeDeliveryStream",
        "firehose:ListDeliveryStreams",
        "firehose:ListTagsForDeliveryStream",
        "fms:ListComplianceStatus",
        "fms:ListPolicies",
        "fsx:DescribeBackups",
        "fsx:DescribeDataRepositoryTasks",
        "fsx:DescribeFileSystems",
        "fsx:ListTagsForResource",
        "gamelift:ListBuilds",
        "gamelift:ListFleets",
        "glacier:DescribeVault",
        "glacier:GetVaultAccessPolicy",
        "glacier:ListVaults",
        "globalaccelerator:DescribeAccelerator",
        "globalaccelerator:DescribeAcceleratorAttributes",
        "globalaccelerator:DescribeEndpointGroup",
        "globalaccelerator:DescribeListener",
        "globalaccelerator:ListAccelerators",
        "globalaccelerator:ListByoipCidrs",
        "globalaccelerator:ListEndpointGroups",
        "globalaccelerator:ListListeners",
        "globalaccelerator:ListTagsForResource",
        "greengrass:ListBulkDeploymentDetailedReports",
        "greengrass:ListBulkDeployments",
        "greengrass:ListConnectorDefinitionVersions",
        "greengrass:ListConnectorDefinitions",
        "greengrass:ListCoreDefinitionVersions",
        "greengrass:ListCoreDefinitions",
        "greengrass:ListDeployments",
        "greengrass:ListDeviceDefinitionVersions",
        "greengrass:ListDeviceDefinitions",
        "greengrass:ListFunctionDefinitionVersions",
        "greengrass:ListFunctionDefinitions",
        "greengrass:ListGroupCertificateAuthorities",
        "greengrass:ListGroupVersions",
        "greengrass:ListGroups",
        "greengrass:ListLoggerDefinitionVersions",
        "greengrass:ListLoggerDefinitions",
        "greengrass:ListResourceDefinitionVersions",
        "greengrass:ListResourceDefinitions",
        "greengrass:ListSubscriptionDefinitionVersions",
        "greengrass:ListSubscriptionDefinitions",
        "greengrass:ListTagsForResource",
        "guardduty:GetDetector",
        "guardduty:GetFilter",
        "guardduty:GetFindings",
        "guardduty:GetFindingsStatistics",
        "guardduty:GetIPSet",
        "guardduty:GetInvitationsCount",
        "guardduty:GetMasterAccount",
        "guardduty:GetMembers",
        "guardduty:GetThreatIntelSet",
        "guardduty:ListDetectors",
        "guardduty:ListFilters",
        "guardduty:ListFindings",
        "guardduty:ListInvitations",
        "guardduty:ListMembers",
        "guardduty:ListOrganizationAdminAccounts",
        "guardduty:ListPublishingDestinations",
        "guardduty:ListTagsForResource",
        "guardduty:ListThreatIntelSets",
        "iam:GenerateCredentialReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetContextKeysForCustomPolicy",
        "iam:GetContextKeysForPrincipalPolicy",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetInstanceProfile",
        "iam:GetLoginProfile",
        "iam:GetOpenIDConnectProvider",
        "iam:GetOrganizationsAccessReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:GetServerCertificate",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetServiceLinkedRoleDeletionStatus",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfiles",
        "iam:ListInstanceProfilesForRole",
        "iam:ListMFADevices",
        "iam:ListOpenIDConnectProviders",
        "iam:ListPolicies",
        "iam:ListPoliciesGrantingServiceAccess",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoleTags",
        "iam:ListRoles",
        "iam:ListSAMLProviders",
        "iam:ListSSHPublicKeys",
        "iam:ListServerCertificates",
        "iam:ListServiceSpecificCredentials",
        "iam:ListSigningCertificates",
        "iam:ListUserPolicies",
        "iam:ListUserTags",
        "iam:ListUsers",
        "iam:ListVirtualMFADevices",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy",
        "inspector:DescribeAssessmentRuns",
        "inspector:DescribeAssessmentTargets",
        "inspector:DescribeAssessmentTemplates",
        "inspector:DescribeCrossAccountAccessRole",
        "inspector:DescribeFindings",
        "inspector:DescribeResourceGroups",
        "inspector:DescribeRulesPackages",
        "inspector:GetTelemetryMetadata",
        "inspector:ListAssessmentRunAgents",
        "inspector:ListAssessmentRuns",
        "inspector:ListAssessmentTargets",
        "inspector:ListAssessmentTemplates",
        "inspector:ListEventSubscriptions",
        "inspector:ListFindings",
        "inspector:ListRulesPackages",
        "inspector:ListTagsForResource",
        "inspector:PreviewAgents",
        "iot:DescribeAccountAuditConfiguration",
        "iot:DescribeAuditMitigationActionsTask",
        "iot:DescribeAuditTask",
        "iot:DescribeAuthorizer",
        "iot:DescribeBillingGroup",
        "iot:DescribeCACertificate",
        "iot:DescribeCertificate",
        "iot:DescribeDefaultAuthorizer",
        "iot:DescribeDimension",
        "iot:DescribeEndpoint",
        "iot:DescribeEventConfigurations",
        "iot:DescribeIndex",
        "iot:DescribeJob",
        "iot:DescribeJobExecution",
        "iot:DescribeMitigationAction",
        "iot:DescribeProvisioningTemplate",
        "iot:DescribeProvisioningTemplateVersion",
        "iot:DescribeRoleAlias",
        "iot:DescribeScheduledAudit",
        "iot:DescribeSecurityProfile",
        "iot:DescribeStream",
        "iot:DescribeThing",
        "iot:DescribeThingGroup",
        "iot:DescribeThingRegistrationTask",
        "iot:DescribeThingType",
        "iot:DescribeTunnel",
        "iot:GetPolicy",
        "iot:GetPolicyVersion",
        "iot:ListActiveViolations",
        "iot:ListAttachedPolicies",
        "iot:ListAuditFindings",
        "iot:ListAuditMitigationActionsExecutions",
        "iot:ListAuditMitigationActionsTasks",
        "iot:ListAuditTasks",
        "iot:ListAuthorizers",
        "iot:ListBillingGroups",
        "iot:ListCACertificates",
        "iot:ListCertificates",
        "iot:ListCertificatesByCA",
        "iot:ListDimensions",
        "iot:ListIndices",
        "iot:ListJobExecutionsForJob",
        "iot:ListJobExecutionsForThing",
        "iot:ListJobs",
        "iot:ListMitigationActions",
        "iot:ListNamedShadowsForThing",
        "iot:ListOTAUpdates",
        "iot:ListOutgoingCertificates",
        "iot:ListPolicies",
        "iot:ListPolicyPrincipals",
        "iot:ListPolicyVersions",
        "iot:ListPrincipalPolicies",
        "iot:ListPrincipalThings",
        "iot:ListProvisioningTemplateVersions",
        "iot:ListProvisioningTemplates",
        "iot:ListRoleAliases",
        "iot:ListScheduledAudits",
        "iot:ListSecurityProfiles",
        "iot:ListSecurityProfilesForTarget",
        "iot:ListStreams",
        "iot:ListTagsForResource",
        "iot:ListTargetsForPolicy",
        "iot:ListTargetsForSecurityProfile",
        "iot:ListThingGroups",
        "iot:ListThingGroupsForThing",
        "iot:ListThingPrincipals",
        "iot:ListThingRegistrationTaskReports",
        "iot:ListThingRegistrationTasks",
        "iot:ListThingTypes",
        "iot:ListThings",
        "iot:ListThingsInBillingGroup",
        "iot:ListThingsInThingGroup",
        "iot:ListTopicRules",
        "iot:ListTunnels",
        "iot:ListV2LoggingLevels",
        "iot:ListViolationEvents",
        "kinesis:DescribeStream",
        "kinesis:ListStreams",
        "kinesis:ListTagsForStream",
        "kinesisanalytics:ListApplications",
        "kms:DescribeCustomKeyStores",
        "kms:DescribeKey",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:GetParametersForImport",
        "kms:GetPublicKey",
        "kms:ListAliases",
        "kms:ListGrants",
        "kms:ListKeyPolicies",
        "kms:ListKeys",
        "kms:ListResourceTags",
        "kms:ListRetirableGrants",
        "lambda:GetAccountSettings",
        "lambda:GetFunctionConfiguration",
        "lambda:GetLayerVersionPolicy",
        "lambda:GetPolicy",
        "lambda:ListAliases",
        "lambda:ListEventSourceMappings",
        "lambda:ListFunctionEventInvokeConfigs",
        "lambda:ListFunctions",
        "lambda:ListLayerVersions",
        "lambda:ListLayers",
        "lambda:ListProvisionedConcurrencyConfigs",
        "lambda:ListTags",
        "lambda:ListVersionsByFunction",
        "license-manager:ListAssociationsForLicenseConfiguration",
        "license-manager:ListLicenseConfigurations",
        "license-manager:ListLicenseSpecificationsForResource",
        "license-manager:ListResourceInventory",
        "license-manager:ListTagsForResource",
        "license-manager:ListUsageForLicenseConfiguration",
        "lightsail:GetInstances",
        "lightsail:GetLoadBalancers",
        "logs:DescribeDestinations",
        "logs:DescribeExportTasks",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeMetricFilters",
        "logs:DescribeQueries",
        "logs:DescribeResourcePolicies",
        "logs:DescribeSubscriptionFilters",
        "logs:ListTagsLogGroup",
        "machinelearning:DescribeMLModels",
        "mediaconnect:DescribeFlow",
        "mediaconnect:ListEntitlements",
        "mediaconnect:ListFlows",
        "mediastore:GetContainerPolicy",
        "mediastore:ListContainers",
        "opsworks-cm:DescribeServers",
        "opsworks:DescribeStacks",
        "organizations:DescribeAccount",
        "organizations:DescribeCreateAccountStatus",
        "organizations:DescribeEffectivePolicy",
        "organizations:DescribeHandshake",
        "organizations:DescribeOrganization",
        "organizations:DescribeOrganizationalUnit",
        "organizations:DescribePolicy",
        "organizations:ListAWSServiceAccessForOrganization",
        "organizations:ListAccounts",
        "organizations:ListAccountsForParent",
        "organizations:ListChildren",
        "organizations:ListCreateAccountStatus",
        "organizations:ListDelegatedAdministrators",
        "organizations:ListDelegatedServicesForAccount",
        "organizations:ListHandshakesForAccount",
        "organizations:ListHandshakesForOrganization",
        "organizations:ListOrganizationalUnitsForParent",
        "organizations:ListParents",
        "organizations:ListPolicies",
        "organizations:ListPoliciesForTarget",
        "organizations:ListRoots",
        "organizations:ListTagsForResource",
        "organizations:ListTargetsForPolicy",
        "quicksight:DescribeDashboard",
        "quicksight:DescribeDashboardPermissions",
        "quicksight:DescribeGroup",
        "quicksight:DescribeIAMPolicyAssignment",
        "quicksight:DescribeTemplate",
        "quicksight:DescribeTemplateAlias",
        "quicksight:DescribeTemplatePermissions",
        "quicksight:DescribeUser",
        "quicksight:ListDashboardVersions",
        "quicksight:ListDashboards",
        "quicksight:ListGroupMemberships",
        "quicksight:ListGroups",
        "quicksight:ListIAMPolicyAssignments",
        "quicksight:ListIAMPolicyAssignmentsForUser",
        "quicksight:ListTagsForResource",
        "quicksight:ListTemplateAliases",
        "quicksight:ListTemplateVersions",
        "quicksight:ListTemplates",
        "quicksight:ListUserGroups",
        "quicksight:ListUsers",
        "ram:ListPendingInvitationResources",
        "ram:ListPermissions",
        "ram:ListPrincipals",
        "ram:ListResourceSharePermissions",
        "ram:ListResources",
        "rds:DescribeAccountAttributes",
        "rds:DescribeCertificates",
        "rds:DescribeDBClusterBacktracks",
        "rds:DescribeDBClusterEndpoints",
        "rds:DescribeDBClusterParameterGroups",
        "rds:DescribeDBClusterParameters",
        "rds:DescribeDBClusterSnapshotAttributes",
        "rds:DescribeDBClusterSnapshots",
        "rds:DescribeDBClusters",
        "rds:DescribeDBEngineVersions",
        "rds:DescribeDBInstanceAutomatedBackups",
        "rds:DescribeDBInstances",
        "rds:DescribeDBLogFiles",
        "rds:DescribeDBParameterGroups",
        "rds:DescribeDBParameters",
        "rds:DescribeDBProxies",
        "rds:DescribeDBProxyTargetGroups",
        "rds:DescribeDBProxyTargets",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshotAttributes",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEngineDefaultClusterParameters",
        "rds:DescribeEngineDefaultParameters",
        "rds:DescribeEventCategories",
        "rds:DescribeEventSubscriptions",
        "rds:DescribeEvents",
        "rds:DescribeExportTasks",
        "rds:DescribeGlobalClusters",
        "rds:DescribeOptionGroupOptions",
        "rds:DescribeOptionGroups",
        "rds:DescribeOrderableDBInstanceOptions",
        "rds:DescribePendingMaintenanceActions",
        "rds:DescribeReservedDBInstances",
        "rds:DescribeReservedDBInstancesOfferings",
        "rds:DescribeSourceRegions",
        "rds:DescribeValidDBInstanceModifications",
        "rds:DownloadDBLogFilePortion",
        "rds:ListTagsForResource",
        "redshift:DescribeAccountAttributes",
        "redshift:DescribeClusterDbRevisions",
        "redshift:DescribeClusterParameterGroups",
        "redshift:DescribeClusterParameters",
        "redshift:DescribeClusterSecurityGroups",
        "redshift:DescribeClusterSnapshots",
        "redshift:DescribeClusterSubnetGroups",
        "redshift:DescribeClusterTracks",
        "redshift:DescribeClusterVersions",
        "redshift:DescribeClusters",
        "redshift:DescribeDefaultClusterParameters",
        "redshift:DescribeEventCategories",
        "redshift:DescribeEventSubscriptions",
        "redshift:DescribeEvents",
        "redshift:DescribeHsmClientCertificates",
        "redshift:DescribeHsmConfigurations",
        "redshift:DescribeLoggingStatus",
        "redshift:DescribeNodeConfigurationOptions",
        "redshift:DescribeOrderableClusterOptions",
        "redshift:DescribeQuery",
        "redshift:DescribeReservedNodeOfferings",
        "redshift:DescribeReservedNodes",
        "redshift:DescribeResize",
        "redshift:DescribeSavedQueries",
        "redshift:DescribeScheduledActions",
        "redshift:DescribeSnapshotCopyGrants",
        "redshift:DescribeSnapshotSchedules",
        "redshift:DescribeStorage",
        "redshift:DescribeTable",
        "redshift:DescribeTableRestoreStatus",
        "redshift:DescribeTags",
        "rekognition:DescribeCollection",
        "rekognition:DescribeProjectVersions",
        "rekognition:DescribeProjects",
        "rekognition:DescribeStreamProcessor",
        "rekognition:ListCollections",
        "rekognition:ListFaces",
        "rekognition:ListStreamProcessors",
        "robomaker:DescribeDeploymentJob",
        "robomaker:DescribeFleet",
        "robomaker:DescribeRobot",
        "robomaker:DescribeRobotApplication",
        "robomaker:DescribeSimulationApplication",
        "robomaker:DescribeSimulationJob",
        "robomaker:DescribeSimulationJobBatch",
        "robomaker:ListDeploymentJobs",
        "robomaker:ListFleets",
        "robomaker:ListRobotApplications",
        "robomaker:ListRobots",
        "robomaker:ListSimulationApplications",
        "robomaker:ListSimulationJobBatches",
        "robomaker:ListSimulationJobs",
        "robomaker:ListTagsForResource",
        "route53:GetAccountLimit",
        "route53:GetChange",
        "route53:GetCheckerIpRanges",
        "route53:GetGeoLocation",
        "route53:GetHealthCheck",
        "route53:GetHealthCheckCount",
        "route53:GetHealthCheckLastFailureReason",
        "route53:GetHealthCheckStatus",
        "route53:GetHostedZone",
        "route53:GetHostedZoneCount",
        "route53:GetHostedZoneLimit",
        "route53:GetQueryLoggingConfig",
        "route53:GetReusableDelegationSet",
        "route53:GetReusableDelegationSetLimit",
        "route53:GetTrafficPolicy",
        "route53:GetTrafficPolicyInstance",
        "route53:GetTrafficPolicyInstanceCount",
        "route53:ListGeoLocations",
        "route53:ListHealthChecks",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ListQueryLoggingConfigs",
        "route53:ListResourceRecordSets",
        "route53:ListReusableDelegationSets",
        "route53:ListTagsForResource",
        "route53:ListTagsForResources",
        "route53:ListTrafficPolicies",
        "route53:ListTrafficPolicyInstances",
        "route53:ListTrafficPolicyInstancesByHostedZone",
        "route53:ListTrafficPolicyInstancesByPolicy",
        "route53:ListTrafficPolicyVersions",
        "route53:ListVPCAssociationAuthorizations",
        "route53domains:GetDomainDetail",
        "route53domains:GetOperationDetail",
        "route53domains:ListDomains",
        "route53domains:ListOperations",
        "route53domains:ListTagsForDomain",
        "route53resolver:GetResolverEndpoint",
        "route53resolver:GetResolverRule",
        "route53resolver:GetResolverRuleAssociation",
        "route53resolver:GetResolverRulePolicy",
        "route53resolver:ListResolverEndpointIpAddresses",
        "route53resolver:ListResolverEndpoints",
        "route53resolver:ListResolverRuleAssociations",
        "route53resolver:ListResolverRules",
        "route53resolver:ListTagsForResource",
        "s3:GetAccelerateConfiguration",
        "s3:GetAccessPoint",
        "s3:GetAccessPointPolicy",
        "s3:GetAccessPointPolicyStatus",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetObjectAcl",
        "s3:GetObjectVersionAcl",
        "s3:GetReplicationConfiguration",
        "s3:ListAccessPoints",
        "s3:ListAllMyBuckets",
        "sagemaker:DescribeAlgorithm",
        "sagemaker:DescribeApp",
        "sagemaker:DescribeAutoMLJob",
        "sagemaker:DescribeCodeRepository",
        "sagemaker:DescribeCompilationJob",
        "sagemaker:DescribeDomain",
        "sagemaker:DescribeEndpoint",
        "sagemaker:DescribeEndpointConfig",
        "sagemaker:DescribeExperiment",
        "sagemaker:DescribeFlowDefinition",
        "sagemaker:DescribeHumanLoop",
        "sagemaker:DescribeHumanTaskUi",
        "sagemaker:DescribeHyperParameterTuningJob",
        "sagemaker:DescribeLabelingJob",
        "sagemaker:DescribeModel",
        "sagemaker:DescribeModelPackage",
        "sagemaker:DescribeMonitoringSchedule",
        "sagemaker:DescribeNotebookInstance",
        "sagemaker:DescribeNotebookInstanceLifecycleConfig",
        "sagemaker:DescribeProcessingJob",
        "sagemaker:DescribeSubscribedWorkteam",
        "sagemaker:DescribeTrainingJob",
        "sagemaker:DescribeTransformJob",
        "sagemaker:DescribeTrial",
        "sagemaker:DescribeTrialComponent",
        "sagemaker:DescribeUserProfile",
        "sagemaker:DescribeWorkforce",
        "sagemaker:DescribeWorkteam",
        "sagemaker:ListAlgorithms",
        "sagemaker:ListApps",
        "sagemaker:ListAutoMLJobs",
        "sagemaker:ListCandidatesForAutoMLJob",
        "sagemaker:ListCodeRepositories",
        "sagemaker:ListCompilationJobs",
        "sagemaker:ListDomains",
        "sagemaker:ListEndpointConfigs",
        "sagemaker:ListEndpoints",
        "sagemaker:ListExperiments",
        "sagemaker:ListFlowDefinitions",
        "sagemaker:ListHumanLoops",
        "sagemaker:ListHumanTaskUis",
        "sagemaker:ListHyperParameterTuningJobs",
        "sagemaker:ListLabelingJobs",
        "sagemaker:ListLabelingJobsForWorkteam",
        "sagemaker:ListModelPackages",
        "sagemaker:ListModels",
        "sagemaker:ListMonitoringExecutions",
        "sagemaker:ListMonitoringSchedules",
        "sagemaker:ListNotebookInstanceLifecycleConfigs",
        "sagemaker:ListNotebookInstances",
        "sagemaker:ListProcessingJobs",
        "sagemaker:ListSubscribedWorkteams",
        "sagemaker:ListTags",
        "sagemaker:ListTrainingJobs",
        "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
        "sagemaker:ListTransformJobs",
        "sagemaker:ListTrialComponents",
        "sagemaker:ListTrials",
        "sagemaker:ListUserProfiles",
        "sagemaker:ListWorkteams",
        "sdb:DomainMetadata",
        "sdb:ListDomains",
        "secretsmanager:GetResourcePolicy",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:ListSecrets",
        "securityhub:DescribeActionTargets",
        "securityhub:DescribeHub",
        "securityhub:DescribeProducts",
        "securityhub:DescribeStandards",
        "securityhub:DescribeStandardsControls",
        "securityhub:GetEnabledStandards",
        "securityhub:GetFindings",
        "securityhub:GetInsightResults",
        "securityhub:GetInsights",
        "securityhub:GetInvitationsCount",
        "securityhub:GetMasterAccount",
        "securityhub:GetMembers",
        "securityhub:ListEnabledProductsForImport",
        "securityhub:ListInvitations",
        "securityhub:ListMembers",
        "securityhub:ListTagsForResource",
        "serverlessrepo:GetApplicationPolicy",
        "serverlessrepo:ListApplicationDependencies",
        "serverlessrepo:ListApplicationVersions",
        "serverlessrepo:ListApplications",
        "ses:GetIdentityDkimAttributes",
        "ses:GetIdentityPolicies",
        "ses:GetIdentityVerificationAttributes",
        "ses:ListIdentities",
        "ses:ListIdentityPolicies",
        "ses:ListVerifiedEmailAddresses",
        "shield:DescribeAttack",
        "shield:DescribeDRTAccess",
        "shield:DescribeEmergencyContactSettings",
        "shield:DescribeProtection",
        "shield:DescribeSubscription",
        "shield:ListAttacks",
        "shield:ListProtections",
        "snowball:ListClusters",
        "snowball:ListJobs",
        "sns:GetTopicAttributes",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTopics",
        "sqs:GetQueueAttributes",
        "sqs:ListDeadLetterSourceQueues",
        "sqs:ListQueueTags",
        "sqs:ListQueues",
        "ssm:DescribeActivations",
        "ssm:DescribeAssociation",
        "ssm:DescribeAssociationExecutionTargets",
        "ssm:DescribeAssociationExecutions",
        "ssm:DescribeAutomationExecutions",
        "ssm:DescribeAutomationStepExecutions",
        "ssm:DescribeAvailablePatches",
        "ssm:DescribeDocument",
        "ssm:DescribeDocumentParameters",
        "ssm:DescribeDocumentPermission",
        "ssm:DescribeEffectiveInstanceAssociations",
        "ssm:DescribeEffectivePatchesForPatchBaseline",
        "ssm:DescribeInstanceAssociationsStatus",
        "ssm:DescribeInstanceInformation",
        "ssm:DescribeInstancePatchStates",
        "ssm:DescribeInstancePatchStatesForPatchGroup",
        "ssm:DescribeInstancePatches",
        "ssm:DescribeInstanceProperties",
        "ssm:DescribeInventoryDeletions",
        "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
        "ssm:DescribeMaintenanceWindowExecutionTasks",
        "ssm:DescribeMaintenanceWindowExecutions",
        "ssm:DescribeMaintenanceWindowSchedule",
        "ssm:DescribeMaintenanceWindowTargets",
        "ssm:DescribeMaintenanceWindowTasks",
        "ssm:DescribeMaintenanceWindows",
        "ssm:DescribeMaintenanceWindowsForTarget",
        "ssm:DescribeOpsItems",
        "ssm:DescribeParameters",
        "ssm:DescribePatchBaselines",
        "ssm:DescribePatchGroupState",
        "ssm:DescribePatchGroups",
        "ssm:DescribePatchProperties",
        "ssm:DescribeSessions",
        "ssm:GetAutomationExecution",
        "ssm:ListDocuments",
        "sso:DescribePermissionsPolicies",
        "sso:ListApplicationInstanceCertificates",
        "sso:ListApplicationInstances",
        "sso:ListApplicationTemplates",
        "sso:ListApplications",
        "sso:ListDirectoryAssociations",
        "sso:ListPermissionSets",
        "sso:ListProfileAssociations",
        "sso:ListProfiles",
        "states:ListStateMachines",
        "storagegateway:DescribeBandwidthRateLimit",
        "storagegateway:DescribeCache",
        "storagegateway:DescribeCachediSCSIVolumes",
        "storagegateway:DescribeGatewayInformation",
        "storagegateway:DescribeMaintenanceStartTime",
        "storagegateway:DescribeNFSFileShares",
        "storagegateway:DescribeSnapshotSchedule",
        "storagegateway:DescribeStorediSCSIVolumes",
        "storagegateway:DescribeTapeArchives",
        "storagegateway:DescribeTapeRecoveryPoints",
        "storagegateway:DescribeTapes",
        "storagegateway:DescribeUploadBuffer",
        "storagegateway:DescribeVTLDevices",
        "storagegateway:DescribeWorkingStorage",
        "storagegateway:ListFileShares",
        "storagegateway:ListGateways",
        "storagegateway:ListLocalDisks",
        "storagegateway:ListTagsForResource",
        "storagegateway:ListTapes",
        "storagegateway:ListVolumeInitiators",
        "storagegateway:ListVolumeRecoveryPoints",
        "storagegateway:ListVolumes",
        "tag:GetResources",
        "tag:GetTagKeys",
        "transfer:DescribeServer",
        "transfer:DescribeUser",
        "transfer:ListServers",
        "transfer:ListTagsForResource",
        "transfer:ListUsers",
        "translate:ListTerminologies",
        "translate:ListTextTranslationJobs",
        "trustedadvisor:DescribeAccount",
        "trustedadvisor:DescribeAccountAccess",
        "trustedadvisor:DescribeCheckItems",
        "trustedadvisor:DescribeCheckRefreshStatuses",
        "trustedadvisor:DescribeCheckSummaries",
        "trustedadvisor:DescribeChecks",
        "trustedadvisor:DescribeNotificationPreferences",
        "waf-regional:ListWebACLs",
        "waf:ListWebACLs",
        "workspaces:DescribeAccount",
        "workspaces:DescribeAccountModifications",
        "workspaces:DescribeClientProperties",
        "workspaces:DescribeIpGroups",
        "workspaces:DescribeTags",
        "workspaces:DescribeWorkspaceBundles",
        "workspaces:DescribeWorkspaceDirectories",
        "workspaces:DescribeWorkspaceImages",
        "workspaces:DescribeWorkspaces",
        "workspaces:DescribeWorkspacesConnectionStatus"
      ]
    },
    "ANPAIZTJ4DXE7G6AGAE6M": {
      "PolicyName": "AmazonS3ReadOnlyAccess",
      "PolicyId": "ANPAIZTJ4DXE7G6AGAE6M",
      "Arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
      "Path": "/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:59+00:00",
      "UpdateDate": "2015-02-06 18:40:59+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:Get*",
                  "s3:List*"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2015-02-06 18:40:59+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [
        "s3:GetObject"
      ],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "s3:GetAccelerateConfiguration",
        "s3:GetAccessPoint",
        "s3:GetAccessPointPolicy",
        "s3:GetAccessPointPolicyStatus",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectLegalHold",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetObjectTorrent",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionForReplication",
        "s3:GetObjectVersionTagging",
        "s3:GetObjectVersionTorrent",
        "s3:GetReplicationConfiguration",
        "s3:ListAccessPoints",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:ListBucketMultipartUploads",
        "s3:ListBucketVersions",
        "s3:ListJobs",
        "s3:ListMultipartUploadParts"
      ]
    },
    "ANPAJ2P4NXCHAT7NDPNR4": {
      "PolicyName": "AmazonSESFullAccess",
      "PolicyId": "ANPAJ2P4NXCHAT7NDPNR4",
      "Arn": "arn:aws:iam::aws:policy/AmazonSESFullAccess",
      "Path": "/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:41:02+00:00",
      "UpdateDate": "2015-02-06 18:41:02+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ses:*"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2015-02-06 18:41:02+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "ses:CloneReceiptRuleSet",
        "ses:CreateConfigurationSet",
        "ses:CreateConfigurationSetEventDestination",
        "ses:CreateConfigurationSetTrackingOptions",
        "ses:CreateCustomVerificationEmailTemplate",
        "ses:CreateDedicatedIpPool",
        "ses:CreateDeliverabilityTestReport",
        "ses:CreateEmailIdentity",
        "ses:CreateReceiptFilter",
        "ses:CreateReceiptRule",
        "ses:CreateReceiptRuleSet",
        "ses:CreateTemplate",
        "ses:DeleteConfigurationSet",
        "ses:DeleteConfigurationSetEventDestination",
        "ses:DeleteConfigurationSetTrackingOptions",
        "ses:DeleteCustomVerificationEmailTemplate",
        "ses:DeleteDedicatedIpPool",
        "ses:DeleteEmailIdentity",
        "ses:DeleteIdentity",
        "ses:DeleteIdentityPolicy",
        "ses:DeleteReceiptFilter",
        "ses:DeleteReceiptRule",
        "ses:DeleteReceiptRuleSet",
        "ses:DeleteTemplate",
        "ses:DeleteVerifiedEmailAddress",
        "ses:DescribeActiveReceiptRuleSet",
        "ses:DescribeConfigurationSet",
        "ses:DescribeReceiptRule",
        "ses:DescribeReceiptRuleSet",
        "ses:GetAccount",
        "ses:GetAccountSendingEnabled",
        "ses:GetBlacklistReports",
        "ses:GetConfigurationSet",
        "ses:GetConfigurationSetEventDestinations",
        "ses:GetCustomVerificationEmailTemplate",
        "ses:GetDedicatedIp",
        "ses:GetDedicatedIps",
        "ses:GetDeliverabilityDashboardOptions",
        "ses:GetDeliverabilityTestReport",
        "ses:GetDomainStatisticsReport",
        "ses:GetEmailIdentity",
        "ses:GetIdentityDkimAttributes",
        "ses:GetIdentityMailFromDomainAttributes",
        "ses:GetIdentityNotificationAttributes",
        "ses:GetIdentityPolicies",
        "ses:GetIdentityVerificationAttributes",
        "ses:GetSendQuota",
        "ses:GetSendStatistics",
        "ses:GetTemplate",
        "ses:ListConfigurationSets",
        "ses:ListCustomVerificationEmailTemplates",
        "ses:ListDedicatedIpPools",
        "ses:ListDeliverabilityTestReports",
        "ses:ListEmailIdentities",
        "ses:ListIdentities",
        "ses:ListIdentityPolicies",
        "ses:ListReceiptFilters",
        "ses:ListReceiptRuleSets",
        "ses:ListTagsForResource",
        "ses:ListTemplates",
        "ses:ListVerifiedEmailAddresses",
        "ses:PutAccountDedicatedIpWarmupAttributes",
        "ses:PutAccountSendingAttributes",
        "ses:PutConfigurationSetDeliveryOptions",
        "ses:PutConfigurationSetReputationOptions",
        "ses:PutConfigurationSetSendingOptions",
        "ses:PutConfigurationSetTrackingOptions",
        "ses:PutDedicatedIpInPool",
        "ses:PutDedicatedIpWarmupAttributes",
        "ses:PutDeliverabilityDashboardOption",
        "ses:PutEmailIdentityDkimAttributes",
        "ses:PutEmailIdentityFeedbackAttributes",
        "ses:PutEmailIdentityMailFromAttributes",
        "ses:PutIdentityPolicy",
        "ses:ReorderReceiptRuleSet",
        "ses:SendBounce",
        "ses:SendBulkTemplatedEmail",
        "ses:SendCustomVerificationEmail",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "ses:SendTemplatedEmail",
        "ses:SetActiveReceiptRuleSet",
        "ses:SetIdentityDkimEnabled",
        "ses:SetIdentityFeedbackForwardingEnabled",
        "ses:SetIdentityHeadersInNotificationsEnabled",
        "ses:SetIdentityMailFromDomain",
        "ses:SetIdentityNotificationTopic",
        "ses:SetReceiptRulePosition",
        "ses:TagResource",
        "ses:TestRenderTemplate",
        "ses:UntagResource",
        "ses:UpdateAccountSendingEnabled",
        "ses:UpdateConfigurationSetEventDestination",
        "ses:UpdateConfigurationSetReputationMetricsEnabled",
        "ses:UpdateConfigurationSetSendingEnabled",
        "ses:UpdateConfigurationSetTrackingOptions",
        "ses:UpdateCustomVerificationEmailTemplate",
        "ses:UpdateReceiptRule",
        "ses:UpdateTemplate",
        "ses:VerifyDomainDkim",
        "ses:VerifyDomainIdentity",
        "ses:VerifyEmailAddress",
        "ses:VerifyEmailIdentity"
      ]
    },
    "ANPAJ7W6266ELXF5MISDS": {
      "PolicyName": "AWSSupportServiceRolePolicy",
      "PolicyId": "ANPAJ7W6266ELXF5MISDS",
      "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy",
      "Path": "/aws-service-role/",
      "DefaultVersionId": "v9",
      "AttachmentCount": 1,
      "IsAttachable": false,
      "CreateDate": "2018-04-19 18:04:44+00:00",
      "UpdateDate": "2020-03-10 18:55:18+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Statement": [
              {
                "Action": [
                  "apigateway:GET"
                ],
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:apigateway:*::/account",
                  "arn:aws:apigateway:*::/apis",
                  "arn:aws:apigateway:*::/apis/*",
                  "arn:aws:apigateway:*::/apis/*/authorizers",
                  "arn:aws:apigateway:*::/apis/*/authorizers/*",
                  "arn:aws:apigateway:*::/apis/*/deployments",
                  "arn:aws:apigateway:*::/apis/*/deployments/*",
                  "arn:aws:apigateway:*::/apis/*/integrations",
                  "arn:aws:apigateway:*::/apis/*/integrations/*",
                  "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
                  "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
                  "arn:aws:apigateway:*::/apis/*/models",
                  "arn:aws:apigateway:*::/apis/*/models/*",
                  "arn:aws:apigateway:*::/apis/*/routes",
                  "arn:aws:apigateway:*::/apis/*/routes/*",
                  "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
                  "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
                  "arn:aws:apigateway:*::/apis/*/stages",
                  "arn:aws:apigateway:*::/apis/*/stages/*",
                  "arn:aws:apigateway:*::/clientcertificates",
                  "arn:aws:apigateway:*::/clientcertificates/*",
                  "arn:aws:apigateway:*::/domainnames",
                  "arn:aws:apigateway:*::/domainnames/*",
                  "arn:aws:apigateway:*::/domainnames/*/apimappings",
                  "arn:aws:apigateway:*::/domainnames/*/apimappings/*",
                  "arn:aws:apigateway:*::/domainnames/*/basepathmappings",
                  "arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
                  "arn:aws:apigateway:*::/restapis",
                  "arn:aws:apigateway:*::/restapis/*",
                  "arn:aws:apigateway:*::/restapis/*/authorizers",
                  "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                  "arn:aws:apigateway:*::/restapis/*/deployments",
                  "arn:aws:apigateway:*::/restapis/*/deployments/*",
                  "arn:aws:apigateway:*::/restapis/*/models",
                  "arn:aws:apigateway:*::/restapis/*/models/*",
                  "arn:aws:apigateway:*::/restapis/*/models/*/default_template",
                  "arn:aws:apigateway:*::/restapis/*/resources",
                  "arn:aws:apigateway:*::/restapis/*/resources/*",
                  "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
                  "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
                  "arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
                  "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                  "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
                  "arn:aws:apigateway:*::/restapis/*/stages",
                  "arn:aws:apigateway:*::/restapis/*/stages/*"
                ]
              },
              {
                "Action": [
                  "iam:DeleteRole"
                ],
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
                ]
              },
              {
                "Action": [
                  "a4b:getDevice",
                  "a4b:getProfile",
                  "a4b:getRoom",
                  "a4b:getRoomSkillParameter",
                  "a4b:getSkillGroup",
                  "a4b:searchDevices",
                  "a4b:searchProfiles",
                  "a4b:searchRooms",
                  "a4b:searchSkillGroups",
                  "access-analyzer:getFinding",
                  "access-analyzer:listAnalyzers",
                  "access-analyzer:listArchiveRules",
                  "access-analyzer:listFindings",
                  "acm-pca:describeCertificateAuthority",
                  "acm-pca:describeCertificateAuthorityAuditReport",
                  "acm-pca:getCertificate",
                  "acm-pca:getCertificateAuthorityCertificate",
                  "acm-pca:getCertificateAuthorityCsr",
                  "acm-pca:listCertificateAuthorities",
                  "acm-pca:listTags",
                  "acm:describeCertificate",
                  "acm:getCertificate",
                  "acm:listCertificates",
                  "acm:listTagsForCertificate",
                  "application-autoscaling:describeScalableTargets",
                  "application-autoscaling:describeScalingActivities",
                  "application-autoscaling:describeScalingPolicies",
                  "application-autoscaling:describeScheduledActions",
                  "appstream:describeDirectoryConfigs",
                  "appstream:describeFleets",
                  "appstream:describeImageBuilders",
                  "appstream:describeImages",
                  "appstream:describeSessions",
                  "appstream:describeStacks",
                  "appstream:listAssociatedFleets",
                  "appstream:listAssociatedStacks",
                  "appstream:listTagsForResource",
                  "appsync:getFunction",
                  "appsync:getGraphqlApi",
                  "appsync:getIntrospectionSchema",
                  "appsync:getResolver",
                  "appsync:getSchemaCreationStatus",
                  "appsync:getType",
                  "appsync:listDataSources",
                  "appsync:listFunctions",
                  "appsync:listGraphqlApis",
                  "appsync:listResolvers",
                  "appsync:listTypes",
                  "athena:batchGetNamedQuery",
                  "athena:batchGetQueryExecution",
                  "athena:getNamedQuery",
                  "athena:getQueryExecution",
                  "athena:getWorkGroup",
                  "athena:listNamedQueries",
                  "athena:listQueryExecutions",
                  "athena:listTagsForResource",
                  "athena:listWorkGroups",
                  "autoscaling-plans:describeScalingPlanResources",
                  "autoscaling-plans:describeScalingPlans",
                  "autoscaling-plans:getScalingPlanResourceForecastData",
                  "autoscaling:describeAccountLimits",
                  "autoscaling:describeAdjustmentTypes",
                  "autoscaling:describeAutoScalingGroups",
                  "autoscaling:describeAutoScalingInstances",
                  "autoscaling:describeAutoScalingNotificationTypes",
                  "autoscaling:describeLaunchConfigurations",
                  "autoscaling:describeLifecycleHookTypes",
                  "autoscaling:describeLifecycleHooks",
                  "autoscaling:describeLoadBalancerTargetGroups",
                  "autoscaling:describeLoadBalancers",
                  "autoscaling:describeMetricCollectionTypes",
                  "autoscaling:describeNotificationConfigurations",
                  "autoscaling:describePolicies",
                  "autoscaling:describeScalingActivities",
                  "autoscaling:describeScalingProcessTypes",
                  "autoscaling:describeScheduledActions",
                  "autoscaling:describeTags",
                  "autoscaling:describeTerminationPolicyTypes",
                  "backup:describeBackupJob",
                  "backup:describeBackupVault",
                  "backup:describeProtectedResource",
                  "backup:describeRecoveryPoint",
                  "backup:describeRestoreJob",
                  "backup:getBackupPlan",
                  "backup:getBackupPlanFromJSON",
                  "backup:getBackupPlanFromTemplate",
                  "backup:getBackupSelection",
                  "backup:getBackupVaultAccessPolicy",
                  "backup:getBackupVaultNotifications",
                  "backup:getRecoveryPointRestoreMetadata",
                  "backup:getSupportedResourceTypes",
                  "backup:listBackupJobs",
                  "backup:listBackupPlanTemplates",
                  "backup:listBackupPlanVersions",
                  "backup:listBackupPlans",
                  "backup:listBackupSelections",
                  "backup:listBackupVaults",
                  "backup:listProtectedResources",
                  "backup:listRecoveryPointsByBackupVault",
                  "backup:listRecoveryPointsByResource",
                  "backup:listRestoreJobs",
                  "backup:listTags",
                  "batch:describeComputeEnvironments",
                  "batch:describeJobDefinitions",
                  "batch:describeJobQueues",
                  "batch:describeJobs",
                  "batch:listJobs",
                  "ce:getCostAndUsage",
                  "ce:getDimensionValues",
                  "ce:getReservationCoverage",
                  "ce:getReservationUtilization",
                  "ce:getTags",
                  "cloud9:describeEnvironmentMemberships",
                  "cloud9:describeEnvironments",
                  "cloud9:listEnvironments",
                  "clouddirectory:getDirectory",
                  "clouddirectory:listDirectories",
                  "cloudformation:describeAccountLimits",
                  "cloudformation:describeChangeSet",
                  "cloudformation:describeStackEvents",
                  "cloudformation:describeStackInstance",
                  "cloudformation:describeStackResource",
                  "cloudformation:describeStackResources",
                  "cloudformation:describeStackSet",
                  "cloudformation:describeStackSetOperation",
                  "cloudformation:describeStacks",
                  "cloudformation:estimateTemplateCost",
                  "cloudformation:getStackPolicy",
                  "cloudformation:getTemplate",
                  "cloudformation:getTemplateSummary",
                  "cloudformation:listChangeSets",
                  "cloudformation:listExports",
                  "cloudformation:listImports",
                  "cloudformation:listStackInstances",
                  "cloudformation:listStackResources",
                  "cloudformation:listStackSetOperationResults",
                  "cloudformation:listStackSetOperations",
                  "cloudformation:listStackSets",
                  "cloudformation:listStacks",
                  "cloudfront:getCloudFrontOriginAccessIdentity",
                  "cloudfront:getCloudFrontOriginAccessIdentityConfig",
                  "cloudfront:getDistribution",
                  "cloudfront:getDistributionConfig",
                  "cloudfront:getInvalidation",
                  "cloudfront:getStreamingDistribution",
                  "cloudfront:getStreamingDistributionConfig",
                  "cloudfront:listCloudFrontOriginAccessIdentities",
                  "cloudfront:listDistributions",
                  "cloudfront:listDistributionsByWebACLId",
                  "cloudfront:listInvalidations",
                  "cloudfront:listStreamingDistributions",
                  "cloudhsm:describeBackups",
                  "cloudhsm:describeClusters",
                  "cloudsearch:describeAnalysisSchemes",
                  "cloudsearch:describeAvailabilityOptions",
                  "cloudsearch:describeDomains",
                  "cloudsearch:describeExpressions",
                  "cloudsearch:describeIndexFields",
                  "cloudsearch:describeScalingParameters",
                  "cloudsearch:describeServiceAccessPolicies",
                  "cloudsearch:describeSuggesters",
                  "cloudsearch:listDomainNames",
                  "cloudtrail:describeTrails",
                  "cloudtrail:getEventSelectors",
                  "cloudtrail:getInsightSelectors",
                  "cloudtrail:getTrail",
                  "cloudtrail:getTrailStatus",
                  "cloudtrail:listPublicKeys",
                  "cloudtrail:listTags",
                  "cloudtrail:listTrails",
                  "cloudtrail:lookupEvents",
                  "cloudwatch:describeAlarmHistory",
                  "cloudwatch:describeAlarms",
                  "cloudwatch:describeAlarmsForMetric",
                  "cloudwatch:getDashboard",
                  "cloudwatch:getMetricData",
                  "cloudwatch:getMetricStatistics",
                  "cloudwatch:listDashboards",
                  "cloudwatch:listMetrics",
                  "codebuild:batchGetBuilds",
                  "codebuild:batchGetProjects",
                  "codebuild:listBuilds",
                  "codebuild:listBuildsForProject",
                  "codebuild:listCuratedEnvironmentImages",
                  "codebuild:listProjects",
                  "codebuild:listSourceCredentials",
                  "codecommit:batchGetRepositories",
                  "codecommit:getBranch",
                  "codecommit:getRepository",
                  "codecommit:getRepositoryTriggers",
                  "codecommit:listBranches",
                  "codecommit:listRepositories",
                  "codedeploy:batchGetApplicationRevisions",
                  "codedeploy:batchGetApplications",
                  "codedeploy:batchGetDeploymentGroups",
                  "codedeploy:batchGetDeploymentInstances",
                  "codedeploy:batchGetDeployments",
                  "codedeploy:batchGetOnPremisesInstances",
                  "codedeploy:getApplication",
                  "codedeploy:getApplicationRevision",
                  "codedeploy:getDeployment",
                  "codedeploy:getDeploymentConfig",
                  "codedeploy:getDeploymentGroup",
                  "codedeploy:getDeploymentInstance",
                  "codedeploy:getOnPremisesInstance",
                  "codedeploy:listApplicationRevisions",
                  "codedeploy:listApplications",
                  "codedeploy:listDeploymentConfigs",
                  "codedeploy:listDeploymentGroups",
                  "codedeploy:listDeploymentInstances",
                  "codedeploy:listDeployments",
                  "codedeploy:listOnPremisesInstances",
                  "codepipeline:getJobDetails",
                  "codepipeline:getPipeline",
                  "codepipeline:getPipelineExecution",
                  "codepipeline:getPipelineState",
                  "codepipeline:listActionTypes",
                  "codepipeline:listPipelines",
                  "codestar:describeProject",
                  "codestar:listProjects",
                  "codestar:listResources",
                  "codestar:listTeamMembers",
                  "codestar:listUserProfiles",
                  "cognito-identity:describeIdentityPool",
                  "cognito-identity:getIdentityPoolRoles",
                  "cognito-identity:listIdentities",
                  "cognito-identity:listIdentityPools",
                  "cognito-idp:adminGetUser",
                  "cognito-idp:describeIdentityProvider",
                  "cognito-idp:describeResourceServer",
                  "cognito-idp:describeRiskConfiguration",
                  "cognito-idp:describeUserImportJob",
                  "cognito-idp:describeUserPool",
                  "cognito-idp:describeUserPoolClient",
                  "cognito-idp:describeUserPoolDomain",
                  "cognito-idp:getGroup",
                  "cognito-idp:getUICustomization",
                  "cognito-idp:getUser",
                  "cognito-idp:getUserPoolMfaConfig",
                  "cognito-idp:listGroups",
                  "cognito-idp:listIdentityProviders",
                  "cognito-idp:listResourceServers",
                  "cognito-idp:listUserImportJobs",
                  "cognito-idp:listUserPoolClients",
                  "cognito-idp:listUserPools",
                  "cognito-sync:describeDataset",
                  "cognito-sync:describeIdentityPoolUsage",
                  "cognito-sync:describeIdentityUsage",
                  "cognito-sync:getCognitoEvents",
                  "cognito-sync:getIdentityPoolConfiguration",
                  "cognito-sync:listDatasets",
                  "cognito-sync:listIdentityPoolUsage",
                  "config:describeConfigRuleEvaluationStatus",
                  "config:describeConfigRules",
                  "config:describeConfigurationRecorderStatus",
                  "config:describeConfigurationRecorders",
                  "config:describeDeliveryChannelStatus",
                  "config:describeDeliveryChannels",
                  "config:getResourceConfigHistory",
                  "config:listDiscoveredResources",
                  "connect:describeUser",
                  "connect:getCurrentMetricData",
                  "connect:getMetricData",
                  "connect:listRoutingProfiles",
                  "connect:listSecurityProfiles",
                  "connect:listUsers",
                  "datapipeline:describeObjects",
                  "datapipeline:describePipelines",
                  "datapipeline:getPipelineDefinition",
                  "datapipeline:listPipelines",
                  "datapipeline:queryObjects",
                  "datasync:describeAgent",
                  "datasync:describeLocationEfs",
                  "datasync:describeLocationNfs",
                  "datasync:describeLocationS3",
                  "datasync:describeTask",
                  "datasync:describeTaskExecution",
                  "datasync:listAgents",
                  "datasync:listLocations",
                  "datasync:listTaskExecutions",
                  "datasync:listTasks",
                  "dax:describeClusters",
                  "dax:describeDefaultParameters",
                  "dax:describeEvents",
                  "dax:describeParameterGroups",
                  "dax:describeParameters",
                  "dax:describeSubnetGroups",
                  "devicefarm:getAccountSettings",
                  "devicefarm:getDevice",
                  "devicefarm:getDevicePool",
                  "devicefarm:getDevicePoolCompatibility",
                  "devicefarm:getJob",
                  "devicefarm:getProject",
                  "devicefarm:getRemoteAccessSession",
                  "devicefarm:getRun",
                  "devicefarm:getSuite",
                  "devicefarm:getTest",
                  "devicefarm:getUpload",
                  "devicefarm:listArtifacts",
                  "devicefarm:listDevicePools",
                  "devicefarm:listDevices",
                  "devicefarm:listJobs",
                  "devicefarm:listProjects",
                  "devicefarm:listRemoteAccessSessions",
                  "devicefarm:listRuns",
                  "devicefarm:listSamples",
                  "devicefarm:listSuites",
                  "devicefarm:listTests",
                  "devicefarm:listUniqueProblems",
                  "devicefarm:listUploads",
                  "directconnect:describeConnections",
                  "directconnect:describeConnectionsOnInterconnect",
                  "directconnect:describeInterconnects",
                  "directconnect:describeLocations",
                  "directconnect:describeVirtualGateways",
                  "directconnect:describeVirtualInterfaces",
                  "dlm:getLifecyclePolicies",
                  "dlm:getLifecyclePolicy",
                  "dms:describeAccountAttributes",
                  "dms:describeConnections",
                  "dms:describeEndpointTypes",
                  "dms:describeEndpoints",
                  "dms:describeOrderableReplicationInstances",
                  "dms:describeRefreshSchemasStatus",
                  "dms:describeReplicationInstances",
                  "dms:describeReplicationSubnetGroups",
                  "ds:describeConditionalForwarders",
                  "ds:describeDirectories",
                  "ds:describeEventTopics",
                  "ds:describeSnapshots",
                  "ds:describeTrusts",
                  "ds:getDirectoryLimits",
                  "ds:getSnapshotLimits",
                  "ds:listIpRoutes",
                  "ds:listSchemaExtensions",
                  "ds:listTagsForResource",
                  "dynamodb:describeBackup",
                  "dynamodb:describeContinuousBackups",
                  "dynamodb:describeGlobalTable",
                  "dynamodb:describeLimits",
                  "dynamodb:describeStream",
                  "dynamodb:describeTable",
                  "dynamodb:describeTimeToLive",
                  "dynamodb:listBackups",
                  "dynamodb:listGlobalTables",
                  "dynamodb:listStreams",
                  "dynamodb:listTables",
                  "dynamodb:listTagsOfResource",
                  "ec2:acceptReservedInstancesExchangeQuote",
                  "ec2:cancelReservedInstancesListing",
                  "ec2:createReservedInstancesListing",
                  "ec2:describeAccountAttributes",
                  "ec2:describeAddresses",
                  "ec2:describeAvailabilityZones",
                  "ec2:describeBundleTasks",
                  "ec2:describeByoipCidrs",
                  "ec2:describeCapacityReservations",
                  "ec2:describeClassicLinkInstances",
                  "ec2:describeClientVpnAuthorizationRules",
                  "ec2:describeClientVpnConnections",
                  "ec2:describeClientVpnEndpoints",
                  "ec2:describeClientVpnRoutes",
                  "ec2:describeClientVpnTargetNetworks",
                  "ec2:describeConversionTasks",
                  "ec2:describeCustomerGateways",
                  "ec2:describeDhcpOptions",
                  "ec2:describeElasticGpus",
                  "ec2:describeExportTasks",
                  "ec2:describeFastSnapshotRestores",
                  "ec2:describeFleetHistory",
                  "ec2:describeFleetInstances",
                  "ec2:describeFleets",
                  "ec2:describeFlowLogs",
                  "ec2:describeHostReservationOfferings",
                  "ec2:describeHostReservations",
                  "ec2:describeHosts",
                  "ec2:describeIdFormat",
                  "ec2:describeIdentityIdFormat",
                  "ec2:describeImageAttribute",
                  "ec2:describeImages",
                  "ec2:describeImportImageTasks",
                  "ec2:describeImportSnapshotTasks",
                  "ec2:describeInstanceAttribute",
                  "ec2:describeInstanceStatus",
                  "ec2:describeInstances",
                  "ec2:describeInternetGateways",
                  "ec2:describeKeyPairs",
                  "ec2:describeLaunchTemplateVersions",
                  "ec2:describeLaunchTemplates",
                  "ec2:describeMovingAddresses",
                  "ec2:describeNatGateways",
                  "ec2:describeNetworkAcls",
                  "ec2:describeNetworkInterfaceAttribute",
                  "ec2:describeNetworkInterfaces",
                  "ec2:describePlacementGroups",
                  "ec2:describePrefixLists",
                  "ec2:describePublicIpv4Pools",
                  "ec2:describeRegions",
                  "ec2:describeReservedInstances",
                  "ec2:describeReservedInstancesListings",
                  "ec2:describeReservedInstancesModifications",
                  "ec2:describeReservedInstancesOfferings",
                  "ec2:describeRouteTables",
                  "ec2:describeScheduledInstances",
                  "ec2:describeSecurityGroups",
                  "ec2:describeSnapshotAttribute",
                  "ec2:describeSnapshots",
                  "ec2:describeSpotDatafeedSubscription",
                  "ec2:describeSpotFleetInstances",
                  "ec2:describeSpotFleetRequestHistory",
                  "ec2:describeSpotFleetRequests",
                  "ec2:describeSpotInstanceRequests",
                  "ec2:describeSpotPriceHistory",
                  "ec2:describeSubnets",
                  "ec2:describeTags",
                  "ec2:describeTrafficMirrorFilters",
                  "ec2:describeTrafficMirrorSessions",
                  "ec2:describeTrafficMirrorTargets",
                  "ec2:describeTransitGatewayAttachments",
                  "ec2:describeTransitGatewayRouteTables",
                  "ec2:describeTransitGatewayVpcAttachments",
                  "ec2:describeTransitGateways",
                  "ec2:describeVolumeAttribute",
                  "ec2:describeVolumeStatus",
                  "ec2:describeVolumes",
                  "ec2:describeVolumesModifications",
                  "ec2:describeVpcAttribute",
                  "ec2:describeVpcClassicLink",
                  "ec2:describeVpcClassicLinkDnsSupport",
                  "ec2:describeVpcEndpointConnectionNotifications",
                  "ec2:describeVpcEndpointConnections",
                  "ec2:describeVpcEndpointServiceConfigurations",
                  "ec2:describeVpcEndpointServicePermissions",
                  "ec2:describeVpcEndpointServices",
                  "ec2:describeVpcEndpoints",
                  "ec2:describeVpcPeeringConnections",
                  "ec2:describeVpcs",
                  "ec2:describeVpnConnections",
                  "ec2:describeVpnGateways",
                  "ec2:getConsoleScreenshot",
                  "ec2:getReservedInstancesExchangeQuote",
                  "ec2:getTransitGatewayAttachmentPropagations",
                  "ec2:getTransitGatewayRouteTableAssociations",
                  "ec2:getTransitGatewayRouteTablePropagations",
                  "ec2:modifyReservedInstances",
                  "ec2:purchaseReservedInstancesOffering",
                  "ecr:batchCheckLayerAvailability",
                  "ecr:describeImages",
                  "ecr:describeRepositories",
                  "ecr:getRepositoryPolicy",
                  "ecr:listImages",
                  "ecs:describeClusters",
                  "ecs:describeContainerInstances",
                  "ecs:describeServices",
                  "ecs:describeTaskDefinition",
                  "ecs:describeTasks",
                  "ecs:listClusters",
                  "ecs:listContainerInstances",
                  "ecs:listServices",
                  "ecs:listTaskDefinitions",
                  "ecs:listTasks",
                  "eks:describeCluster",
                  "eks:describeUpdate",
                  "eks:listClusters",
                  "eks:listUpdates",
                  "elasticache:describeCacheClusters",
                  "elasticache:describeCacheEngineVersions",
                  "elasticache:describeCacheParameterGroups",
                  "elasticache:describeCacheParameters",
                  "elasticache:describeCacheSecurityGroups",
                  "elasticache:describeCacheSubnetGroups",
                  "elasticache:describeEngineDefaultParameters",
                  "elasticache:describeEvents",
                  "elasticache:describeReplicationGroups",
                  "elasticache:describeReservedCacheNodes",
                  "elasticache:describeReservedCacheNodesOfferings",
                  "elasticache:describeSnapshots",
                  "elasticache:listAllowedNodeTypeModifications",
                  "elasticache:listTagsForResource",
                  "elasticbeanstalk:checkDNSAvailability",
                  "elasticbeanstalk:describeApplicationVersions",
                  "elasticbeanstalk:describeApplications",
                  "elasticbeanstalk:describeConfigurationOptions",
                  "elasticbeanstalk:describeConfigurationSettings",
                  "elasticbeanstalk:describeEnvironmentHealth",
                  "elasticbeanstalk:describeEnvironmentManagedActionHistory",
                  "elasticbeanstalk:describeEnvironmentManagedActions",
                  "elasticbeanstalk:describeEnvironmentResources",
                  "elasticbeanstalk:describeEnvironments",
                  "elasticbeanstalk:describeEvents",
                  "elasticbeanstalk:describeInstancesHealth",
                  "elasticbeanstalk:describePlatformVersion",
                  "elasticbeanstalk:listAvailableSolutionStacks",
                  "elasticbeanstalk:listPlatformVersions",
                  "elasticbeanstalk:validateConfigurationSettings",
                  "elasticfilesystem:describeFileSystems",
                  "elasticfilesystem:describeLifecycleConfiguration",
                  "elasticfilesystem:describeMountTargetSecurityGroups",
                  "elasticfilesystem:describeMountTargets",
                  "elasticfilesystem:describeTags",
                  "elasticloadbalancing:describeInstanceHealth",
                  "elasticloadbalancing:describeListenerCertificates",
                  "elasticloadbalancing:describeListeners",
                  "elasticloadbalancing:describeLoadBalancerAttributes",
                  "elasticloadbalancing:describeLoadBalancerPolicies",
                  "elasticloadbalancing:describeLoadBalancerPolicyTypes",
                  "elasticloadbalancing:describeLoadBalancers",
                  "elasticloadbalancing:describeRules",
                  "elasticloadbalancing:describeSSLPolicies",
                  "elasticloadbalancing:describeTags",
                  "elasticloadbalancing:describeTargetGroupAttributes",
                  "elasticloadbalancing:describeTargetGroups",
                  "elasticloadbalancing:describeTargetHealth",
                  "elasticmapreduce:describeCluster",
                  "elasticmapreduce:describeSecurityConfiguration",
                  "elasticmapreduce:describeStep",
                  "elasticmapreduce:listBootstrapActions",
                  "elasticmapreduce:listClusters",
                  "elasticmapreduce:listInstanceGroups",
                  "elasticmapreduce:listInstances",
                  "elasticmapreduce:listSecurityConfigurations",
                  "elasticmapreduce:listSteps",
                  "elastictranscoder:listJobsByPipeline",
                  "elastictranscoder:listJobsByStatus",
                  "elastictranscoder:listPipelines",
                  "elastictranscoder:listPresets",
                  "elastictranscoder:readPipeline",
                  "elastictranscoder:readPreset",
                  "es:describeElasticsearchDomain",
                  "es:describeElasticsearchDomainConfig",
                  "es:describeElasticsearchDomains",
                  "es:listDomainNames",
                  "es:listTags",
                  "events:describeEventBus",
                  "events:describeRule",
                  "events:listRuleNamesByTarget",
                  "events:listRules",
                  "events:listTargetsByRule",
                  "events:testEventPattern",
                  "firehose:describeDeliveryStream",
                  "firehose:listDeliveryStreams",
                  "forecast:describeDataset",
                  "forecast:describeDatasetGroup",
                  "forecast:describeDatasetImportJob",
                  "forecast:describeForecast",
                  "forecast:describeForecastExportJob",
                  "forecast:describePredictor",
                  "forecast:getAccuracyMetrics",
                  "forecast:listDatasetGroups",
                  "forecast:listDatasetImportJobs",
                  "forecast:listDatasets",
                  "forecast:listForecastExportJobs",
                  "forecast:listForecasts",
                  "forecast:listPredictors",
                  "fsx:describeBackups",
                  "fsx:describeFileSystems",
                  "fsx:listTagsForResource",
                  "glacier:describeJob",
                  "glacier:describeVault",
                  "glacier:getDataRetrievalPolicy",
                  "glacier:getVaultAccessPolicy",
                  "glacier:getVaultLock",
                  "glacier:getVaultNotifications",
                  "glacier:listJobs",
                  "glacier:listTagsForVault",
                  "glacier:listVaults",
                  "globalaccelerator:describeAccelerator",
                  "globalaccelerator:describeAcceleratorAttributes",
                  "globalaccelerator:describeEndpointGroup",
                  "globalaccelerator:describeListener",
                  "globalaccelerator:listAccelerators",
                  "globalaccelerator:listEndpointGroups",
                  "globalaccelerator:listListeners",
                  "glue:batchGetPartition",
                  "glue:getCatalogImportStatus",
                  "glue:getClassifier",
                  "glue:getClassifiers",
                  "glue:getCrawler",
                  "glue:getCrawlerMetrics",
                  "glue:getCrawlers",
                  "glue:getDatabase",
                  "glue:getDatabases",
                  "glue:getDataflowGraph",
                  "glue:getDevEndpoint",
                  "glue:getDevEndpoints",
                  "glue:getJob",
                  "glue:getJobRun",
                  "glue:getJobRuns",
                  "glue:getJobs",
                  "glue:getMapping",
                  "glue:getPartition",
                  "glue:getPartitions",
                  "glue:getTable",
                  "glue:getTableVersions",
                  "glue:getTables",
                  "glue:getTrigger",
                  "glue:getTriggers",
                  "glue:getUserDefinedFunction",
                  "glue:getUserDefinedFunctions",
                  "greengrass:getConnectivityInfo",
                  "greengrass:getCoreDefinition",
                  "greengrass:getCoreDefinitionVersion",
                  "greengrass:getDeploymentStatus",
                  "greengrass:getDeviceDefinition",
                  "greengrass:getDeviceDefinitionVersion",
                  "greengrass:getFunctionDefinition",
                  "greengrass:getFunctionDefinitionVersion",
                  "greengrass:getGroup",
                  "greengrass:getGroupCertificateAuthority",
                  "greengrass:getGroupVersion",
                  "greengrass:getLoggerDefinition",
                  "greengrass:getLoggerDefinitionVersion",
                  "greengrass:getResourceDefinitionVersion",
                  "greengrass:getServiceRoleForAccount",
                  "greengrass:getSubscriptionDefinition",
                  "greengrass:getSubscriptionDefinitionVersion",
                  "greengrass:listCoreDefinitionVersions",
                  "greengrass:listCoreDefinitions",
                  "greengrass:listDeployments",
                  "greengrass:listDeviceDefinitionVersions",
                  "greengrass:listDeviceDefinitions",
                  "greengrass:listFunctionDefinitionVersions",
                  "greengrass:listFunctionDefinitions",
                  "greengrass:listGroupVersions",
                  "greengrass:listGroups",
                  "greengrass:listLoggerDefinitionVersions",
                  "greengrass:listLoggerDefinitions",
                  "greengrass:listResourceDefinitionVersions",
                  "greengrass:listResourceDefinitions",
                  "greengrass:listSubscriptionDefinitionVersions",
                  "greengrass:listSubscriptionDefinitions",
                  "guardduty:getDetector",
                  "guardduty:getFindings",
                  "guardduty:getFindingsStatistics",
                  "guardduty:getIPSet",
                  "guardduty:getInvitationsCount",
                  "guardduty:getMasterAccount",
                  "guardduty:getMembers",
                  "guardduty:getThreatIntelSet",
                  "guardduty:listDetectors",
                  "guardduty:listFindings",
                  "guardduty:listIPSets",
                  "guardduty:listInvitations",
                  "guardduty:listMembers",
                  "guardduty:listThreatIntelSets",
                  "health:describeAffectedEntities",
                  "health:describeEntityAggregates",
                  "health:describeEventAggregates",
                  "health:describeEventDetails",
                  "health:describeEventTypes",
                  "health:describeEvents",
                  "iam:getAccessKeyLastUsed",
                  "iam:getAccountAuthorizationDetails",
                  "iam:getAccountPasswordPolicy",
                  "iam:getAccountSummary",
                  "iam:getContextKeysForCustomPolicy",
                  "iam:getContextKeysForPrincipalPolicy",
                  "iam:getCredentialReport",
                  "iam:getGroup",
                  "iam:getGroupPolicy",
                  "iam:getInstanceProfile",
                  "iam:getLoginProfile",
                  "iam:getOpenIDConnectProvider",
                  "iam:getPolicy",
                  "iam:getPolicyVersion",
                  "iam:getRole",
                  "iam:getRolePolicy",
                  "iam:getSAMLProvider",
                  "iam:getSSHPublicKey",
                  "iam:getServerCertificate",
                  "iam:getUser",
                  "iam:getUserPolicy",
                  "iam:listAccessKeys",
                  "iam:listAccountAliases",
                  "iam:listAttachedGroupPolicies",
                  "iam:listAttachedRolePolicies",
                  "iam:listAttachedUserPolicies",
                  "iam:listEntitiesForPolicy",
                  "iam:listGroupPolicies",
                  "iam:listGroups",
                  "iam:listGroupsForUser",
                  "iam:listInstanceProfiles",
                  "iam:listInstanceProfilesForRole",
                  "iam:listMFADevices",
                  "iam:listOpenIDConnectProviders",
                  "iam:listPolicies",
                  "iam:listPolicyVersions",
                  "iam:listRolePolicies",
                  "iam:listRoles",
                  "iam:listSAMLProviders",
                  "iam:listSSHPublicKeys",
                  "iam:listServerCertificates",
                  "iam:listSigningCertificates",
                  "iam:listUserPolicies",
                  "iam:listUsers",
                  "iam:listVirtualMFADevices",
                  "iam:simulateCustomPolicy",
                  "iam:simulatePrincipalPolicy",
                  "importexport:getStatus",
                  "importexport:listJobs",
                  "inspector:describeAssessmentRuns",
                  "inspector:describeAssessmentTargets",
                  "inspector:describeAssessmentTemplates",
                  "inspector:describeCrossAccountAccessRole",
                  "inspector:describeResourceGroups",
                  "inspector:describeRulesPackages",
                  "inspector:getTelemetryMetadata",
                  "inspector:listAssessmentRunAgents",
                  "inspector:listAssessmentRuns",
                  "inspector:listAssessmentTargets",
                  "inspector:listAssessmentTemplates",
                  "inspector:listEventSubscriptions",
                  "inspector:listRulesPackages",
                  "inspector:listTagsForResource",
                  "iot:describeAuthorizer",
                  "iot:describeCACertificate",
                  "iot:describeCertificate",
                  "iot:describeDefaultAuthorizer",
                  "iot:describeEndpoint",
                  "iot:describeIndex",
                  "iot:describeJobExecution",
                  "iot:describeThing",
                  "iot:describeThingGroup",
                  "iot:getEffectivePolicies",
                  "iot:getIndexingConfiguration",
                  "iot:getLoggingOptions",
                  "iot:getPolicy",
                  "iot:getPolicyVersion",
                  "iot:getTopicRule",
                  "iot:getV2LoggingOptions",
                  "iot:listAttachedPolicies",
                  "iot:listAuthorizers",
                  "iot:listCACertificates",
                  "iot:listCertificates",
                  "iot:listCertificatesByCA",
                  "iot:listJobExecutionsForJob",
                  "iot:listJobExecutionsForThing",
                  "iot:listJobs",
                  "iot:listOutgoingCertificates",
                  "iot:listPolicies",
                  "iot:listPolicyPrincipals",
                  "iot:listPolicyVersions",
                  "iot:listPrincipalPolicies",
                  "iot:listPrincipalThings",
                  "iot:listRoleAliases",
                  "iot:listTargetsForPolicy",
                  "iot:listThingGroups",
                  "iot:listThingGroupsForThing",
                  "iot:listThingPrincipals",
                  "iot:listThingRegistrationTasks",
                  "iot:listThingTypes",
                  "iot:listThings",
                  "iot:listTopicRules",
                  "iot:listV2LoggingLevels",
                  "iotevents:describeDetector",
                  "iotevents:describeDetectorModel",
                  "iotevents:describeInput",
                  "iotevents:describeLoggingOptions",
                  "iotevents:listDetectorModelVersions",
                  "iotevents:listDetectorModels",
                  "iotevents:listDetectors",
                  "iotevents:listInputs",
                  "kafka:describeCluster",
                  "kafka:getBootstrapBrokers",
                  "kafka:listClusters",
                  "kafka:listNodes",
                  "kinesis:describeStream",
                  "kinesis:listStreams",
                  "kinesis:listTagsForStream",
                  "kinesisanalytics:describeApplication",
                  "kinesisanalytics:listApplications",
                  "kms:describeKey",
                  "kms:getKeyPolicy",
                  "kms:getKeyRotationStatus",
                  "kms:listAliases",
                  "kms:listGrants",
                  "kms:listKeyPolicies",
                  "kms:listKeys",
                  "kms:listResourceTags",
                  "kms:listRetirableGrants",
                  "lambda:getAccountSettings",
                  "lambda:getAlias",
                  "lambda:getEventSourceMapping",
                  "lambda:getFunction",
                  "lambda:getFunctionConfiguration",
                  "lambda:getLayerVersion",
                  "lambda:getLayerVersionPolicy",
                  "lambda:getPolicy",
                  "lambda:listAliases",
                  "lambda:listEventSourceMappings",
                  "lambda:listFunctions",
                  "lambda:listLayerVersions",
                  "lambda:listLayers",
                  "lambda:listVersionsByFunction",
                  "lex:getBot",
                  "lex:getBotAlias",
                  "lex:getBotAliases",
                  "lex:getBotChannelAssociation",
                  "lex:getBotChannelAssociations",
                  "lex:getBotVersions",
                  "lex:getBots",
                  "lex:getBuiltinIntent",
                  "lex:getBuiltinIntents",
                  "lex:getBuiltinSlotTypes",
                  "lex:getIntent",
                  "lex:getIntentVersions",
                  "lex:getIntents",
                  "lex:getSlotType",
                  "lex:getSlotTypeVersions",
                  "lex:getSlotTypes",
                  "lightsail:getActiveNames",
                  "lightsail:getBlueprints",
                  "lightsail:getBundles",
                  "lightsail:getDomain",
                  "lightsail:getDomains",
                  "lightsail:getInstance",
                  "lightsail:getInstanceAccessDetails",
                  "lightsail:getInstanceMetricData",
                  "lightsail:getInstancePortStates",
                  "lightsail:getInstanceSnapshot",
                  "lightsail:getInstanceSnapshots",
                  "lightsail:getInstanceState",
                  "lightsail:getInstances",
                  "lightsail:getKeyPair",
                  "lightsail:getKeyPairs",
                  "lightsail:getOperation",
                  "lightsail:getOperations",
                  "lightsail:getOperationsForResource",
                  "lightsail:getRegions",
                  "lightsail:getStaticIp",
                  "lightsail:getStaticIps",
                  "logs:describeDestinations",
                  "logs:describeExportTasks",
                  "logs:describeLogGroups",
                  "logs:describeLogStreams",
                  "logs:describeMetricFilters",
                  "logs:describeQueries",
                  "logs:describeSubscriptionFilters",
                  "logs:testMetricFilter",
                  "machinelearning:describeBatchPredictions",
                  "machinelearning:describeDataSources",
                  "machinelearning:describeEvaluations",
                  "machinelearning:describeMLModels",
                  "machinelearning:getBatchPrediction",
                  "machinelearning:getDataSource",
                  "machinelearning:getEvaluation",
                  "machinelearning:getMLModel",
                  "managedblockchain:getMember",
                  "managedblockchain:getNetwork",
                  "managedblockchain:getNode",
                  "managedblockchain:listMembers",
                  "managedblockchain:listNetworks",
                  "managedblockchain:listNodes",
                  "mediaconvert:describeEndpoints",
                  "mediaconvert:getJob",
                  "mediaconvert:getJobTemplate",
                  "mediaconvert:getPreset",
                  "mediaconvert:getQueue",
                  "mediaconvert:listJobTemplates",
                  "mediaconvert:listJobs",
                  "medialive:describeChannel",
                  "medialive:describeInput",
                  "medialive:describeInputSecurityGroup",
                  "medialive:describeOffering",
                  "medialive:describeReservation",
                  "medialive:describeSchedule",
                  "medialive:listChannels",
                  "medialive:listInputSecurityGroups",
                  "medialive:listInputs",
                  "medialive:listOfferings",
                  "medialive:listReservations",
                  "mediapackage:describeChannel",
                  "mediapackage:describeOriginEndpoint",
                  "mediapackage:listChannels",
                  "mediapackage:listOriginEndpoints",
                  "mediastore:describeContainer",
                  "mediastore:describeObject",
                  "mediastore:getContainerPolicy",
                  "mediastore:getCorsPolicy",
                  "mediastore:listContainers",
                  "mediastore:listItems",
                  "mediatailor:getPlaybackConfiguration",
                  "mediatailor:listPlaybackConfigurations",
                  "mobiletargeting:getAdmChannel",
                  "mobiletargeting:getApnsChannel",
                  "mobiletargeting:getApnsSandboxChannel",
                  "mobiletargeting:getApnsVoipChannel",
                  "mobiletargeting:getApnsVoipSandboxChannel",
                  "mobiletargeting:getApp",
                  "mobiletargeting:getApplicationSettings",
                  "mobiletargeting:getApps",
                  "mobiletargeting:getBaiduChannel",
                  "mobiletargeting:getCampaign",
                  "mobiletargeting:getCampaignActivities",
                  "mobiletargeting:getCampaignVersion",
                  "mobiletargeting:getCampaignVersions",
                  "mobiletargeting:getCampaigns",
                  "mobiletargeting:getEmailChannel",
                  "mobiletargeting:getEndpoint",
                  "mobiletargeting:getEventStream",
                  "mobiletargeting:getExportJob",
                  "mobiletargeting:getExportJobs",
                  "mobiletargeting:getGcmChannel",
                  "mobiletargeting:getImportJob",
                  "mobiletargeting:getImportJobs",
                  "mobiletargeting:getSegment",
                  "mobiletargeting:getSegmentImportJobs",
                  "mobiletargeting:getSegmentVersion",
                  "mobiletargeting:getSegmentVersions",
                  "mobiletargeting:getSegments",
                  "mobiletargeting:getSmsChannel",
                  "mq:describeBroker",
                  "mq:describeConfiguration",
                  "mq:describeConfigurationRevision",
                  "mq:describeUser",
                  "mq:listBrokers",
                  "mq:listConfigurationRevisions",
                  "mq:listConfigurations",
                  "mq:listUsers",
                  "opsworks-cm:describeAccountAttributes",
                  "opsworks-cm:describeBackups",
                  "opsworks-cm:describeEvents",
                  "opsworks-cm:describeNodeAssociationStatus",
                  "opsworks-cm:describeServers",
                  "opsworks:describeAgentVersions",
                  "opsworks:describeApps",
                  "opsworks:describeCommands",
                  "opsworks:describeDeployments",
                  "opsworks:describeEcsClusters",
                  "opsworks:describeElasticIps",
                  "opsworks:describeElasticLoadBalancers",
                  "opsworks:describeInstances",
                  "opsworks:describeLayers",
                  "opsworks:describeLoadBasedAutoScaling",
                  "opsworks:describeMyUserProfile",
                  "opsworks:describePermissions",
                  "opsworks:describeRaidArrays",
                  "opsworks:describeRdsDbInstances",
                  "opsworks:describeServiceErrors",
                  "opsworks:describeStackProvisioningParameters",
                  "opsworks:describeStackSummary",
                  "opsworks:describeStacks",
                  "opsworks:describeTimeBasedAutoScaling",
                  "opsworks:describeUserProfiles",
                  "opsworks:describeVolumes",
                  "opsworks:getHostnameSuggestion",
                  "personalize:describeAlgorithm",
                  "personalize:describeCampaign",
                  "personalize:describeDataset",
                  "personalize:describeDatasetGroup",
                  "personalize:describeDatasetImportJob",
                  "personalize:describeEventTracker",
                  "personalize:describeFeatureTransformation",
                  "personalize:describeRecipe",
                  "personalize:describeSchema",
                  "personalize:describeSolution",
                  "personalize:describeSolutionVersion",
                  "personalize:listCampaigns",
                  "personalize:listDatasetGroups",
                  "personalize:listDatasetImportJobs",
                  "personalize:listDatasets",
                  "personalize:listEventTrackers",
                  "personalize:listRecipes",
                  "personalize:listSchemas",
                  "personalize:listSolutionVersions",
                  "personalize:listSolutions",
                  "polly:describeVoices",
                  "polly:getLexicon",
                  "polly:listLexicons",
                  "pricing:describeServices",
                  "pricing:getAttributeValues",
                  "pricing:getProducts",
                  "rds:describeAccountAttributes",
                  "rds:describeCertificates",
                  "rds:describeDBClusterParameterGroups",
                  "rds:describeDBClusterParameters",
                  "rds:describeDBClusterSnapshots",
                  "rds:describeDBClusters",
                  "rds:describeDBEngineVersions",
                  "rds:describeDBInstances",
                  "rds:describeDBParameterGroups",
                  "rds:describeDBParameters",
                  "rds:describeDBSecurityGroups",
                  "rds:describeDBSnapshotAttributes",
                  "rds:describeDBSnapshots",
                  "rds:describeDBSubnetGroups",
                  "rds:describeEngineDefaultClusterParameters",
                  "rds:describeEngineDefaultParameters",
                  "rds:describeEventCategories",
                  "rds:describeEventSubscriptions",
                  "rds:describeEvents",
                  "rds:describeOptionGroupOptions",
                  "rds:describeOptionGroups",
                  "rds:describeOrderableDBInstanceOptions",
                  "rds:describePendingMaintenanceActions",
                  "rds:describeReservedDBInstances",
                  "rds:describeReservedDBInstancesOfferings",
                  "rds:listTagsForResource",
                  "redshift:describeClusterParameterGroups",
                  "redshift:describeClusterParameters",
                  "redshift:describeClusterSecurityGroups",
                  "redshift:describeClusterSnapshots",
                  "redshift:describeClusterSubnetGroups",
                  "redshift:describeClusterVersions",
                  "redshift:describeClusters",
                  "redshift:describeDefaultClusterParameters",
                  "redshift:describeEventCategories",
                  "redshift:describeEventSubscriptions",
                  "redshift:describeEvents",
                  "redshift:describeHsmClientCertificates",
                  "redshift:describeHsmConfigurations",
                  "redshift:describeLoggingStatus",
                  "redshift:describeOrderableClusterOptions",
                  "redshift:describeReservedNodeOfferings",
                  "redshift:describeReservedNodes",
                  "redshift:describeResize",
                  "redshift:describeSnapshotCopyGrants",
                  "redshift:describeTableRestoreStatus",
                  "redshift:describeTags",
                  "rekognition:listCollections",
                  "rekognition:listFaces",
                  "robomaker:batchDescribeSimulationJob",
                  "robomaker:describeDeploymentJob",
                  "robomaker:describeFleet",
                  "robomaker:describeRobot",
                  "robomaker:describeRobotApplication",
                  "robomaker:describeSimulationApplication",
                  "robomaker:describeSimulationJob",
                  "robomaker:listDeploymentJobs",
                  "robomaker:listFleets",
                  "robomaker:listRobotApplications",
                  "robomaker:listRobots",
                  "robomaker:listSimulationApplications",
                  "robomaker:listSimulationJobs",
                  "route53:getChange",
                  "route53:getCheckerIpRanges",
                  "route53:getGeoLocation",
                  "route53:getHealthCheck",
                  "route53:getHealthCheckCount",
                  "route53:getHealthCheckLastFailureReason",
                  "route53:getHealthCheckStatus",
                  "route53:getHostedZone",
                  "route53:getHostedZoneCount",
                  "route53:getReusableDelegationSet",
                  "route53:getTrafficPolicy",
                  "route53:getTrafficPolicyInstance",
                  "route53:getTrafficPolicyInstanceCount",
                  "route53:listGeoLocations",
                  "route53:listHealthChecks",
                  "route53:listHostedZones",
                  "route53:listHostedZonesByName",
                  "route53:listResourceRecordSets",
                  "route53:listReusableDelegationSets",
                  "route53:listTagsForResource",
                  "route53:listTagsForResources",
                  "route53:listTrafficPolicies",
                  "route53:listTrafficPolicyInstances",
                  "route53:listTrafficPolicyInstancesByHostedZone",
                  "route53:listTrafficPolicyInstancesByPolicy",
                  "route53:listTrafficPolicyVersions",
                  "route53domains:checkDomainAvailability",
                  "route53domains:getContactReachabilityStatus",
                  "route53domains:getDomainDetail",
                  "route53domains:getOperationDetail",
                  "route53domains:listDomains",
                  "route53domains:listOperations",
                  "route53domains:listTagsForDomain",
                  "route53domains:viewBilling",
                  "route53resolver:getResolverRulePolicy",
                  "route53resolver:listResolverEndpointIpAddresses",
                  "route53resolver:listResolverEndpoints",
                  "route53resolver:listResolverRuleAssociations",
                  "route53resolver:listResolverRules",
                  "route53resolver:listTagsForResource",
                  "s3:getAccelerateConfiguration",
                  "s3:getAnalyticsConfiguration",
                  "s3:getBucketAcl",
                  "s3:getBucketCORS",
                  "s3:getBucketLocation",
                  "s3:getBucketLogging",
                  "s3:getBucketNotification",
                  "s3:getBucketPolicy",
                  "s3:getBucketRequestPayment",
                  "s3:getBucketTagging",
                  "s3:getBucketVersioning",
                  "s3:getBucketWebsite",
                  "s3:getEncryptionConfiguration",
                  "s3:getInventoryConfiguration",
                  "s3:getLifecycleConfiguration",
                  "s3:getMetricsConfiguration",
                  "s3:getReplicationConfiguration",
                  "s3:listAllMyBuckets",
                  "s3:listBucket",
                  "s3:listBucketMultipartUploads",
                  "sagemaker:describeAlgorithm",
                  "sagemaker:describeCompilationJob",
                  "sagemaker:describeEndpoint",
                  "sagemaker:describeEndpointConfig",
                  "sagemaker:describeHyperParameterTuningJob",
                  "sagemaker:describeLabelingJob",
                  "sagemaker:describeModel",
                  "sagemaker:describeModelPackage",
                  "sagemaker:describeNotebookInstance",
                  "sagemaker:describeNotebookInstanceLifecycleConfig",
                  "sagemaker:describeTrainingJob",
                  "sagemaker:describeTransformJob",
                  "sagemaker:describeWorkteam",
                  "sagemaker:listAlgorithms",
                  "sagemaker:listCompilationJobs",
                  "sagemaker:listEndpointConfigs",
                  "sagemaker:listEndpoints",
                  "sagemaker:listHyperParameterTuningJobs",
                  "sagemaker:listLabelingJobs",
                  "sagemaker:listLabelingJobsForWorkteam",
                  "sagemaker:listModelPackages",
                  "sagemaker:listModels",
                  "sagemaker:listNotebookInstanceLifecycleConfigs",
                  "sagemaker:listNotebookInstances",
                  "sagemaker:listTags",
                  "sagemaker:listTrainingJobs",
                  "sagemaker:listTrainingJobsForHyperParameterTuningJob",
                  "sagemaker:listTransformJobs",
                  "sagemaker:listWorkteams",
                  "sdb:domainMetadata",
                  "sdb:listDomains",
                  "secretsmanager:describeSecret",
                  "secretsmanager:getResourcePolicy",
                  "secretsmanager:listSecretVersionIds",
                  "secretsmanager:listSecrets",
                  "securityhub:getEnabledStandards",
                  "securityhub:getFindings",
                  "securityhub:getInsightResults",
                  "securityhub:getInsights",
                  "securityhub:getMasterAccount",
                  "securityhub:getMembers",
                  "securityhub:listEnabledProductsForImport",
                  "securityhub:listInvitations",
                  "securityhub:listMembers",
                  "servicecatalog:describeConstraint",
                  "servicecatalog:describePortfolio",
                  "servicecatalog:describeProduct",
                  "servicecatalog:describeProductAsAdmin",
                  "servicecatalog:describeProductView",
                  "servicecatalog:describeProvisioningArtifact",
                  "servicecatalog:describeProvisioningParameters",
                  "servicecatalog:describeRecord",
                  "servicecatalog:listAcceptedPortfolioShares",
                  "servicecatalog:listConstraintsForPortfolio",
                  "servicecatalog:listLaunchPaths",
                  "servicecatalog:listPortfolioAccess",
                  "servicecatalog:listPortfolios",
                  "servicecatalog:listPortfoliosForProduct",
                  "servicecatalog:listPrincipalsForPortfolio",
                  "servicecatalog:listProvisioningArtifacts",
                  "servicecatalog:listRecordHistory",
                  "servicecatalog:scanProvisionedProducts",
                  "servicecatalog:searchProducts",
                  "servicequotas:getAWSDefaultServiceQuota",
                  "servicequotas:getAssociationForServiceQuotaTemplate",
                  "servicequotas:getRequestedServiceQuotaChange",
                  "servicequotas:getServiceQuota",
                  "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
                  "servicequotas:listAWSDefaultServiceQuotas",
                  "servicequotas:listRequestedServiceQuotaChangeHistory",
                  "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
                  "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
                  "servicequotas:listServiceQuotas",
                  "servicequotas:listServices",
                  "ses:describeActiveReceiptRuleSet",
                  "ses:describeReceiptRule",
                  "ses:describeReceiptRuleSet",
                  "ses:getIdentityDkimAttributes",
                  "ses:getIdentityMailFromDomainAttributes",
                  "ses:getIdentityNotificationAttributes",
                  "ses:getIdentityPolicies",
                  "ses:getIdentityVerificationAttributes",
                  "ses:getSendQuota",
                  "ses:getSendStatistics",
                  "ses:listIdentities",
                  "ses:listIdentityPolicies",
                  "ses:listReceiptFilters",
                  "ses:listReceiptRuleSets",
                  "ses:listVerifiedEmailAddresses",
                  "shield:describeAttack",
                  "shield:describeProtection",
                  "shield:describeSubscription",
                  "shield:listAttacks",
                  "shield:listProtections",
                  "sms:getConnectors",
                  "sms:getReplicationJobs",
                  "sms:getReplicationRuns",
                  "sms:getServers",
                  "snowball:describeAddress",
                  "snowball:describeAddresses",
                  "snowball:describeJob",
                  "snowball:getSnowballUsage",
                  "snowball:listJobs",
                  "sns:checkIfPhoneNumberIsOptedOut",
                  "sns:getEndpointAttributes",
                  "sns:getPlatformApplicationAttributes",
                  "sns:getSMSAttributes",
                  "sns:getSubscriptionAttributes",
                  "sns:getTopicAttributes",
                  "sns:listEndpointsByPlatformApplication",
                  "sns:listPhoneNumbersOptedOut",
                  "sns:listPlatformApplications",
                  "sns:listSubscriptions",
                  "sns:listSubscriptionsByTopic",
                  "sns:listTopics",
                  "sqs:getQueueAttributes",
                  "sqs:getQueueUrl",
                  "sqs:listDeadLetterSourceQueues",
                  "sqs:listQueues",
                  "ssm:describeActivations",
                  "ssm:describeAssociation",
                  "ssm:describeAutomationExecutions",
                  "ssm:describeAvailablePatches",
                  "ssm:describeDocument",
                  "ssm:describeDocumentPermission",
                  "ssm:describeEffectiveInstanceAssociations",
                  "ssm:describeEffectivePatchesForPatchBaseline",
                  "ssm:describeInstanceAssociationsStatus",
                  "ssm:describeInstanceInformation",
                  "ssm:describeInstancePatchStates",
                  "ssm:describeInstancePatchStatesForPatchGroup",
                  "ssm:describeInstancePatches",
                  "ssm:describeMaintenanceWindowExecutionTaskInvocations",
                  "ssm:describeMaintenanceWindowExecutionTasks",
                  "ssm:describeMaintenanceWindowExecutions",
                  "ssm:describeMaintenanceWindowTargets",
                  "ssm:describeMaintenanceWindowTasks",
                  "ssm:describeMaintenanceWindows",
                  "ssm:describeParameters",
                  "ssm:describePatchBaselines",
                  "ssm:describePatchGroupState",
                  "ssm:describePatchGroups",
                  "ssm:getAutomationExecution",
                  "ssm:getCommandInvocation",
                  "ssm:getDefaultPatchBaseline",
                  "ssm:getDeployablePatchSnapshotForInstance",
                  "ssm:getInventorySchema",
                  "ssm:getMaintenanceWindow",
                  "ssm:getMaintenanceWindowExecution",
                  "ssm:getMaintenanceWindowExecutionTask",
                  "ssm:getPatchBaseline",
                  "ssm:getPatchBaselineForPatchGroup",
                  "ssm:listAssociations",
                  "ssm:listCommandInvocations",
                  "ssm:listCommands",
                  "ssm:listDocumentVersions",
                  "ssm:listDocuments",
                  "ssm:listTagsForResource",
                  "states:describeActivity",
                  "states:describeExecution",
                  "states:describeStateMachine",
                  "states:getExecutionHistory",
                  "states:listActivities",
                  "states:listExecutions",
                  "states:listStateMachines",
                  "storagegateway:describeBandwidthRateLimit",
                  "storagegateway:describeCache",
                  "storagegateway:describeCachediSCSIVolumes",
                  "storagegateway:describeGatewayInformation",
                  "storagegateway:describeMaintenanceStartTime",
                  "storagegateway:describeNFSFileShares",
                  "storagegateway:describeSMBFileShares",
                  "storagegateway:describeSMBSettings",
                  "storagegateway:describeSnapshotSchedule",
                  "storagegateway:describeStorediSCSIVolumes",
                  "storagegateway:describeTapeArchives",
                  "storagegateway:describeTapeRecoveryPoints",
                  "storagegateway:describeTapes",
                  "storagegateway:describeUploadBuffer",
                  "storagegateway:describeVTLDevices",
                  "storagegateway:describeWorkingStorage",
                  "storagegateway:listFileShares",
                  "storagegateway:listGateways",
                  "storagegateway:listLocalDisks",
                  "storagegateway:listTagsForResource",
                  "storagegateway:listTapes",
                  "storagegateway:listVolumeInitiators",
                  "storagegateway:listVolumeRecoveryPoints",
                  "storagegateway:listVolumes",
                  "swf:countClosedWorkflowExecutions",
                  "swf:countOpenWorkflowExecutions",
                  "swf:countPendingActivityTasks",
                  "swf:countPendingDecisionTasks",
                  "swf:describeActivityType",
                  "swf:describeDomain",
                  "swf:describeWorkflowExecution",
                  "swf:describeWorkflowType",
                  "swf:getWorkflowExecutionHistory",
                  "swf:listActivityTypes",
                  "swf:listClosedWorkflowExecutions",
                  "swf:listDomains",
                  "swf:listOpenWorkflowExecutions",
                  "swf:listWorkflowTypes",
                  "transfer:describeServer",
                  "transfer:describeUser",
                  "transfer:listServers",
                  "transfer:listTagsForResource",
                  "transfer:listUsers",
                  "waf-regional:getByteMatchSet",
                  "waf-regional:getChangeTokenStatus",
                  "waf-regional:getIPSet",
                  "waf-regional:getRule",
                  "waf-regional:getSqlInjectionMatchSet",
                  "waf-regional:getWebACL",
                  "waf-regional:getWebACLForResource",
                  "waf-regional:listByteMatchSets",
                  "waf-regional:listIPSets",
                  "waf-regional:listResourcesForWebACL",
                  "waf-regional:listRules",
                  "waf-regional:listSqlInjectionMatchSets",
                  "waf-regional:listWebACLs",
                  "waf:getByteMatchSet",
                  "waf:getChangeTokenStatus",
                  "waf:getIPSet",
                  "waf:getRule",
                  "waf:getSampledRequests",
                  "waf:getSizeConstraintSet",
                  "waf:getSqlInjectionMatchSet",
                  "waf:getWebACL",
                  "waf:getXssMatchSet",
                  "waf:listByteMatchSets",
                  "waf:listIPSets",
                  "waf:listRules",
                  "waf:listSizeConstraintSets",
                  "waf:listSqlInjectionMatchSets",
                  "waf:listWebACLs",
                  "waf:listXssMatchSets",
                  "workdocs:checkAlias",
                  "workdocs:describeAvailableDirectories",
                  "workdocs:describeInstances",
                  "worklink:describeAuditStreamConfiguration",
                  "worklink:describeCompanyNetworkConfiguration",
                  "worklink:describeDevice",
                  "worklink:describeDevicePolicyConfiguration",
                  "worklink:describeDomain",
                  "worklink:describeFleetMetadata",
                  "worklink:describeIdentityProviderConfiguration",
                  "worklink:describeWebsiteCertificateAuthority",
                  "worklink:listDevices",
                  "worklink:listDomains",
                  "worklink:listFleets",
                  "worklink:listWebsiteAuthorizationProviders",
                  "worklink:listWebsiteCertificateAuthorities",
                  "workmail:describeGroup",
                  "workmail:describeOrganization",
                  "workmail:describeResource",
                  "workmail:describeUser",
                  "workmail:listAliases",
                  "workmail:listGroupMembers",
                  "workmail:listGroups",
                  "workmail:listMailboxPermissions",
                  "workmail:listOrganizations",
                  "workmail:listResourceDelegates",
                  "workmail:listResources",
                  "workmail:listUsers",
                  "workspaces:describeAccount",
                  "workspaces:describeAccountModifications",
                  "workspaces:describeIpGroups",
                  "workspaces:describeTags",
                  "workspaces:describeWorkspaceBundles",
                  "workspaces:describeWorkspaceDirectories",
                  "workspaces:describeWorkspaceImages",
                  "workspaces:describeWorkspaces",
                  "workspaces:describeWorkspacesConnectionStatus"
                ],
                "Effect": "Allow",
                "Resource": [
                  "*"
                ]
              }
            ],
            "Version": "2012-10-17"
          },
          "VersionId": "v9",
          "IsDefaultVersion": true,
          "CreateDate": "2020-03-10 18:55:18+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "a4b:getDevice",
        "a4b:getProfile",
        "a4b:getRoom",
        "a4b:getRoomSkillParameter",
        "a4b:getSkillGroup",
        "a4b:searchDevices",
        "a4b:searchProfiles",
        "a4b:searchRooms",
        "a4b:searchSkillGroups",
        "access-analyzer:getFinding",
        "access-analyzer:listAnalyzers",
        "access-analyzer:listArchiveRules",
        "access-analyzer:listFindings",
        "acm-pca:describeCertificateAuthority",
        "acm-pca:describeCertificateAuthorityAuditReport",
        "acm-pca:getCertificate",
        "acm-pca:getCertificateAuthorityCertificate",
        "acm-pca:getCertificateAuthorityCsr",
        "acm-pca:listCertificateAuthorities",
        "acm-pca:listTags",
        "acm:describeCertificate",
        "acm:getCertificate",
        "acm:listCertificates",
        "acm:listTagsForCertificate",
        "application-autoscaling:describeScalableTargets",
        "application-autoscaling:describeScalingActivities",
        "application-autoscaling:describeScalingPolicies",
        "application-autoscaling:describeScheduledActions",
        "appstream:describeDirectoryConfigs",
        "appstream:describeFleets",
        "appstream:describeImageBuilders",
        "appstream:describeImages",
        "appstream:describeSessions",
        "appstream:describeStacks",
        "appstream:listAssociatedFleets",
        "appstream:listAssociatedStacks",
        "appstream:listTagsForResource",
        "appsync:getFunction",
        "appsync:getGraphqlApi",
        "appsync:getIntrospectionSchema",
        "appsync:getResolver",
        "appsync:getSchemaCreationStatus",
        "appsync:getType",
        "appsync:listDataSources",
        "appsync:listFunctions",
        "appsync:listGraphqlApis",
        "appsync:listResolvers",
        "appsync:listTypes",
        "athena:batchGetNamedQuery",
        "athena:batchGetQueryExecution",
        "athena:getNamedQuery",
        "athena:getQueryExecution",
        "athena:getWorkGroup",
        "athena:listNamedQueries",
        "athena:listQueryExecutions",
        "athena:listTagsForResource",
        "athena:listWorkGroups",
        "autoscaling-plans:describeScalingPlanResources",
        "autoscaling-plans:describeScalingPlans",
        "autoscaling-plans:getScalingPlanResourceForecastData",
        "autoscaling:describeAccountLimits",
        "autoscaling:describeAdjustmentTypes",
        "autoscaling:describeAutoScalingGroups",
        "autoscaling:describeAutoScalingInstances",
        "autoscaling:describeAutoScalingNotificationTypes",
        "autoscaling:describeLaunchConfigurations",
        "autoscaling:describeLifecycleHookTypes",
        "autoscaling:describeLifecycleHooks",
        "autoscaling:describeLoadBalancerTargetGroups",
        "autoscaling:describeLoadBalancers",
        "autoscaling:describeMetricCollectionTypes",
        "autoscaling:describeNotificationConfigurations",
        "autoscaling:describePolicies",
        "autoscaling:describeScalingActivities",
        "autoscaling:describeScalingProcessTypes",
        "autoscaling:describeScheduledActions",
        "autoscaling:describeTags",
        "autoscaling:describeTerminationPolicyTypes",
        "backup:describeBackupJob",
        "backup:describeBackupVault",
        "backup:describeProtectedResource",
        "backup:describeRecoveryPoint",
        "backup:describeRestoreJob",
        "backup:getBackupPlan",
        "backup:getBackupPlanFromJSON",
        "backup:getBackupPlanFromTemplate",
        "backup:getBackupSelection",
        "backup:getBackupVaultAccessPolicy",
        "backup:getBackupVaultNotifications",
        "backup:getRecoveryPointRestoreMetadata",
        "backup:getSupportedResourceTypes",
        "backup:listBackupJobs",
        "backup:listBackupPlanTemplates",
        "backup:listBackupPlanVersions",
        "backup:listBackupPlans",
        "backup:listBackupSelections",
        "backup:listBackupVaults",
        "backup:listProtectedResources",
        "backup:listRecoveryPointsByBackupVault",
        "backup:listRecoveryPointsByResource",
        "backup:listRestoreJobs",
        "backup:listTags",
        "batch:describeComputeEnvironments",
        "batch:describeJobDefinitions",
        "batch:describeJobQueues",
        "batch:describeJobs",
        "batch:listJobs",
        "ce:getCostAndUsage",
        "ce:getDimensionValues",
        "ce:getReservationCoverage",
        "ce:getReservationUtilization",
        "ce:getTags",
        "cloud9:describeEnvironmentMemberships",
        "cloud9:describeEnvironments",
        "cloud9:listEnvironments",
        "clouddirectory:getDirectory",
        "clouddirectory:listDirectories",
        "cloudformation:describeAccountLimits",
        "cloudformation:describeChangeSet",
        "cloudformation:describeStackEvents",
        "cloudformation:describeStackInstance",
        "cloudformation:describeStackResource",
        "cloudformation:describeStackResources",
        "cloudformation:describeStackSet",
        "cloudformation:describeStackSetOperation",
        "cloudformation:describeStacks",
        "cloudformation:estimateTemplateCost",
        "cloudformation:getStackPolicy",
        "cloudformation:getTemplate",
        "cloudformation:getTemplateSummary",
        "cloudformation:listChangeSets",
        "cloudformation:listExports",
        "cloudformation:listImports",
        "cloudformation:listStackInstances",
        "cloudformation:listStackResources",
        "cloudformation:listStackSetOperationResults",
        "cloudformation:listStackSetOperations",
        "cloudformation:listStackSets",
        "cloudformation:listStacks",
        "cloudfront:getCloudFrontOriginAccessIdentity",
        "cloudfront:getCloudFrontOriginAccessIdentityConfig",
        "cloudfront:getDistribution",
        "cloudfront:getDistributionConfig",
        "cloudfront:getInvalidation",
        "cloudfront:getStreamingDistribution",
        "cloudfront:getStreamingDistributionConfig",
        "cloudfront:listCloudFrontOriginAccessIdentities",
        "cloudfront:listDistributions",
        "cloudfront:listDistributionsByWebACLId",
        "cloudfront:listInvalidations",
        "cloudfront:listStreamingDistributions",
        "cloudhsm:describeBackups",
        "cloudhsm:describeClusters",
        "cloudsearch:describeAnalysisSchemes",
        "cloudsearch:describeAvailabilityOptions",
        "cloudsearch:describeDomains",
        "cloudsearch:describeExpressions",
        "cloudsearch:describeIndexFields",
        "cloudsearch:describeScalingParameters",
        "cloudsearch:describeServiceAccessPolicies",
        "cloudsearch:describeSuggesters",
        "cloudsearch:listDomainNames",
        "cloudtrail:describeTrails",
        "cloudtrail:getEventSelectors",
        "cloudtrail:getInsightSelectors",
        "cloudtrail:getTrail",
        "cloudtrail:getTrailStatus",
        "cloudtrail:listPublicKeys",
        "cloudtrail:listTags",
        "cloudtrail:listTrails",
        "cloudtrail:lookupEvents",
        "cloudwatch:describeAlarmHistory",
        "cloudwatch:describeAlarms",
        "cloudwatch:describeAlarmsForMetric",
        "cloudwatch:getDashboard",
        "cloudwatch:getMetricData",
        "cloudwatch:getMetricStatistics",
        "cloudwatch:listDashboards",
        "cloudwatch:listMetrics",
        "codebuild:batchGetBuilds",
        "codebuild:batchGetProjects",
        "codebuild:listBuilds",
        "codebuild:listBuildsForProject",
        "codebuild:listCuratedEnvironmentImages",
        "codebuild:listProjects",
        "codebuild:listSourceCredentials",
        "codecommit:batchGetRepositories",
        "codecommit:getBranch",
        "codecommit:getRepository",
        "codecommit:getRepositoryTriggers",
        "codecommit:listBranches",
        "codecommit:listRepositories",
        "codedeploy:batchGetApplicationRevisions",
        "codedeploy:batchGetApplications",
        "codedeploy:batchGetDeploymentGroups",
        "codedeploy:batchGetDeploymentInstances",
        "codedeploy:batchGetDeployments",
        "codedeploy:batchGetOnPremisesInstances",
        "codedeploy:getApplication",
        "codedeploy:getApplicationRevision",
        "codedeploy:getDeployment",
        "codedeploy:getDeploymentConfig",
        "codedeploy:getDeploymentGroup",
        "codedeploy:getDeploymentInstance",
        "codedeploy:getOnPremisesInstance",
        "codedeploy:listApplicationRevisions",
        "codedeploy:listApplications",
        "codedeploy:listDeploymentConfigs",
        "codedeploy:listDeploymentGroups",
        "codedeploy:listDeploymentInstances",
        "codedeploy:listDeployments",
        "codedeploy:listOnPremisesInstances",
        "codepipeline:getJobDetails",
        "codepipeline:getPipeline",
        "codepipeline:getPipelineExecution",
        "codepipeline:getPipelineState",
        "codepipeline:listActionTypes",
        "codepipeline:listPipelines",
        "codestar:describeProject",
        "codestar:listProjects",
        "codestar:listResources",
        "codestar:listTeamMembers",
        "codestar:listUserProfiles",
        "cognito-identity:describeIdentityPool",
        "cognito-identity:getIdentityPoolRoles",
        "cognito-identity:listIdentities",
        "cognito-identity:listIdentityPools",
        "cognito-idp:adminGetUser",
        "cognito-idp:describeIdentityProvider",
        "cognito-idp:describeResourceServer",
        "cognito-idp:describeRiskConfiguration",
        "cognito-idp:describeUserImportJob",
        "cognito-idp:describeUserPool",
        "cognito-idp:describeUserPoolClient",
        "cognito-idp:describeUserPoolDomain",
        "cognito-idp:getGroup",
        "cognito-idp:getUICustomization",
        "cognito-idp:getUser",
        "cognito-idp:getUserPoolMfaConfig",
        "cognito-idp:listGroups",
        "cognito-idp:listIdentityProviders",
        "cognito-idp:listResourceServers",
        "cognito-idp:listUserImportJobs",
        "cognito-idp:listUserPoolClients",
        "cognito-idp:listUserPools",
        "cognito-sync:describeDataset",
        "cognito-sync:describeIdentityPoolUsage",
        "cognito-sync:describeIdentityUsage",
        "cognito-sync:getCognitoEvents",
        "cognito-sync:getIdentityPoolConfiguration",
        "cognito-sync:listDatasets",
        "cognito-sync:listIdentityPoolUsage",
        "config:describeConfigRuleEvaluationStatus",
        "config:describeConfigRules",
        "config:describeConfigurationRecorderStatus",
        "config:describeConfigurationRecorders",
        "config:describeDeliveryChannelStatus",
        "config:describeDeliveryChannels",
        "config:getResourceConfigHistory",
        "config:listDiscoveredResources",
        "connect:describeUser",
        "connect:getCurrentMetricData",
        "connect:getMetricData",
        "connect:listRoutingProfiles",
        "connect:listSecurityProfiles",
        "connect:listUsers",
        "datapipeline:describeObjects",
        "datapipeline:describePipelines",
        "datapipeline:getPipelineDefinition",
        "datapipeline:listPipelines",
        "datapipeline:queryObjects",
        "datasync:describeAgent",
        "datasync:describeLocationEfs",
        "datasync:describeLocationNfs",
        "datasync:describeLocationS3",
        "datasync:describeTask",
        "datasync:describeTaskExecution",
        "datasync:listAgents",
        "datasync:listLocations",
        "datasync:listTaskExecutions",
        "datasync:listTasks",
        "dax:describeClusters",
        "dax:describeDefaultParameters",
        "dax:describeEvents",
        "dax:describeParameterGroups",
        "dax:describeParameters",
        "dax:describeSubnetGroups",
        "devicefarm:getAccountSettings",
        "devicefarm:getDevice",
        "devicefarm:getDevicePool",
        "devicefarm:getDevicePoolCompatibility",
        "devicefarm:getJob",
        "devicefarm:getProject",
        "devicefarm:getRemoteAccessSession",
        "devicefarm:getRun",
        "devicefarm:getSuite",
        "devicefarm:getTest",
        "devicefarm:getUpload",
        "devicefarm:listArtifacts",
        "devicefarm:listDevicePools",
        "devicefarm:listDevices",
        "devicefarm:listJobs",
        "devicefarm:listProjects",
        "devicefarm:listRemoteAccessSessions",
        "devicefarm:listRuns",
        "devicefarm:listSamples",
        "devicefarm:listSuites",
        "devicefarm:listTests",
        "devicefarm:listUniqueProblems",
        "devicefarm:listUploads",
        "directconnect:describeConnections",
        "directconnect:describeConnectionsOnInterconnect",
        "directconnect:describeInterconnects",
        "directconnect:describeLocations",
        "directconnect:describeVirtualGateways",
        "directconnect:describeVirtualInterfaces",
        "dlm:getLifecyclePolicies",
        "dlm:getLifecyclePolicy",
        "dms:describeAccountAttributes",
        "dms:describeConnections",
        "dms:describeEndpointTypes",
        "dms:describeEndpoints",
        "dms:describeOrderableReplicationInstances",
        "dms:describeRefreshSchemasStatus",
        "dms:describeReplicationInstances",
        "dms:describeReplicationSubnetGroups",
        "ds:describeConditionalForwarders",
        "ds:describeDirectories",
        "ds:describeEventTopics",
        "ds:describeSnapshots",
        "ds:describeTrusts",
        "ds:getDirectoryLimits",
        "ds:getSnapshotLimits",
        "ds:listIpRoutes",
        "ds:listSchemaExtensions",
        "ds:listTagsForResource",
        "dynamodb:describeBackup",
        "dynamodb:describeContinuousBackups",
        "dynamodb:describeGlobalTable",
        "dynamodb:describeLimits",
        "dynamodb:describeStream",
        "dynamodb:describeTable",
        "dynamodb:describeTimeToLive",
        "dynamodb:listBackups",
        "dynamodb:listGlobalTables",
        "dynamodb:listStreams",
        "dynamodb:listTables",
        "dynamodb:listTagsOfResource",
        "ec2:acceptReservedInstancesExchangeQuote",
        "ec2:cancelReservedInstancesListing",
        "ec2:createReservedInstancesListing",
        "ec2:describeAccountAttributes",
        "ec2:describeAddresses",
        "ec2:describeAvailabilityZones",
        "ec2:describeBundleTasks",
        "ec2:describeByoipCidrs",
        "ec2:describeCapacityReservations",
        "ec2:describeClassicLinkInstances",
        "ec2:describeClientVpnAuthorizationRules",
        "ec2:describeClientVpnConnections",
        "ec2:describeClientVpnEndpoints",
        "ec2:describeClientVpnRoutes",
        "ec2:describeClientVpnTargetNetworks",
        "ec2:describeConversionTasks",
        "ec2:describeCustomerGateways",
        "ec2:describeDhcpOptions",
        "ec2:describeElasticGpus",
        "ec2:describeExportTasks",
        "ec2:describeFastSnapshotRestores",
        "ec2:describeFleetHistory",
        "ec2:describeFleetInstances",
        "ec2:describeFleets",
        "ec2:describeFlowLogs",
        "ec2:describeHostReservationOfferings",
        "ec2:describeHostReservations",
        "ec2:describeHosts",
        "ec2:describeIdFormat",
        "ec2:describeIdentityIdFormat",
        "ec2:describeImageAttribute",
        "ec2:describeImages",
        "ec2:describeImportImageTasks",
        "ec2:describeImportSnapshotTasks",
        "ec2:describeInstanceAttribute",
        "ec2:describeInstanceStatus",
        "ec2:describeInstances",
        "ec2:describeInternetGateways",
        "ec2:describeKeyPairs",
        "ec2:describeLaunchTemplateVersions",
        "ec2:describeLaunchTemplates",
        "ec2:describeMovingAddresses",
        "ec2:describeNatGateways",
        "ec2:describeNetworkAcls",
        "ec2:describeNetworkInterfaceAttribute",
        "ec2:describeNetworkInterfaces",
        "ec2:describePlacementGroups",
        "ec2:describePrefixLists",
        "ec2:describePublicIpv4Pools",
        "ec2:describeRegions",
        "ec2:describeReservedInstances",
        "ec2:describeReservedInstancesListings",
        "ec2:describeReservedInstancesModifications",
        "ec2:describeReservedInstancesOfferings",
        "ec2:describeRouteTables",
        "ec2:describeScheduledInstances",
        "ec2:describeSecurityGroups",
        "ec2:describeSnapshotAttribute",
        "ec2:describeSnapshots",
        "ec2:describeSpotDatafeedSubscription",
        "ec2:describeSpotFleetInstances",
        "ec2:describeSpotFleetRequestHistory",
        "ec2:describeSpotFleetRequests",
        "ec2:describeSpotInstanceRequests",
        "ec2:describeSpotPriceHistory",
        "ec2:describeSubnets",
        "ec2:describeTags",
        "ec2:describeTrafficMirrorFilters",
        "ec2:describeTrafficMirrorSessions",
        "ec2:describeTrafficMirrorTargets",
        "ec2:describeTransitGatewayAttachments",
        "ec2:describeTransitGatewayRouteTables",
        "ec2:describeTransitGatewayVpcAttachments",
        "ec2:describeTransitGateways",
        "ec2:describeVolumeAttribute",
        "ec2:describeVolumeStatus",
        "ec2:describeVolumes",
        "ec2:describeVolumesModifications",
        "ec2:describeVpcAttribute",
        "ec2:describeVpcClassicLink",
        "ec2:describeVpcClassicLinkDnsSupport",
        "ec2:describeVpcEndpointConnectionNotifications",
        "ec2:describeVpcEndpointConnections",
        "ec2:describeVpcEndpointServiceConfigurations",
        "ec2:describeVpcEndpointServicePermissions",
        "ec2:describeVpcEndpointServices",
        "ec2:describeVpcEndpoints",
        "ec2:describeVpcPeeringConnections",
        "ec2:describeVpcs",
        "ec2:describeVpnConnections",
        "ec2:describeVpnGateways",
        "ec2:getConsoleScreenshot",
        "ec2:getReservedInstancesExchangeQuote",
        "ec2:getTransitGatewayAttachmentPropagations",
        "ec2:getTransitGatewayRouteTableAssociations",
        "ec2:getTransitGatewayRouteTablePropagations",
        "ec2:modifyReservedInstances",
        "ec2:purchaseReservedInstancesOffering",
        "ecr:batchCheckLayerAvailability",
        "ecr:describeImages",
        "ecr:describeRepositories",
        "ecr:getRepositoryPolicy",
        "ecr:listImages",
        "ecs:describeClusters",
        "ecs:describeContainerInstances",
        "ecs:describeServices",
        "ecs:describeTaskDefinition",
        "ecs:describeTasks",
        "ecs:listClusters",
        "ecs:listContainerInstances",
        "ecs:listServices",
        "ecs:listTaskDefinitions",
        "ecs:listTasks",
        "eks:describeCluster",
        "eks:describeUpdate",
        "eks:listClusters",
        "eks:listUpdates",
        "elasticache:describeCacheClusters",
        "elasticache:describeCacheEngineVersions",
        "elasticache:describeCacheParameterGroups",
        "elasticache:describeCacheParameters",
        "elasticache:describeCacheSecurityGroups",
        "elasticache:describeCacheSubnetGroups",
        "elasticache:describeEngineDefaultParameters",
        "elasticache:describeEvents",
        "elasticache:describeReplicationGroups",
        "elasticache:describeReservedCacheNodes",
        "elasticache:describeReservedCacheNodesOfferings",
        "elasticache:describeSnapshots",
        "elasticache:listAllowedNodeTypeModifications",
        "elasticache:listTagsForResource",
        "elasticbeanstalk:checkDNSAvailability",
        "elasticbeanstalk:describeApplicationVersions",
        "elasticbeanstalk:describeApplications",
        "elasticbeanstalk:describeConfigurationOptions",
        "elasticbeanstalk:describeConfigurationSettings",
        "elasticbeanstalk:describeEnvironmentHealth",
        "elasticbeanstalk:describeEnvironmentManagedActionHistory",
        "elasticbeanstalk:describeEnvironmentManagedActions",
        "elasticbeanstalk:describeEnvironmentResources",
        "elasticbeanstalk:describeEnvironments",
        "elasticbeanstalk:describeEvents",
        "elasticbeanstalk:describeInstancesHealth",
        "elasticbeanstalk:describePlatformVersion",
        "elasticbeanstalk:listAvailableSolutionStacks",
        "elasticbeanstalk:listPlatformVersions",
        "elasticbeanstalk:validateConfigurationSettings",
        "elasticfilesystem:describeFileSystems",
        "elasticfilesystem:describeLifecycleConfiguration",
        "elasticfilesystem:describeMountTargetSecurityGroups",
        "elasticfilesystem:describeMountTargets",
        "elasticfilesystem:describeTags",
        "elasticloadbalancing:describeInstanceHealth",
        "elasticloadbalancing:describeListenerCertificates",
        "elasticloadbalancing:describeListeners",
        "elasticloadbalancing:describeLoadBalancerAttributes",
        "elasticloadbalancing:describeLoadBalancerPolicies",
        "elasticloadbalancing:describeLoadBalancerPolicyTypes",
        "elasticloadbalancing:describeLoadBalancers",
        "elasticloadbalancing:describeRules",
        "elasticloadbalancing:describeSSLPolicies",
        "elasticloadbalancing:describeTags",
        "elasticloadbalancing:describeTargetGroupAttributes",
        "elasticloadbalancing:describeTargetGroups",
        "elasticloadbalancing:describeTargetHealth",
        "elasticmapreduce:describeCluster",
        "elasticmapreduce:describeSecurityConfiguration",
        "elasticmapreduce:describeStep",
        "elasticmapreduce:listBootstrapActions",
        "elasticmapreduce:listClusters",
        "elasticmapreduce:listInstanceGroups",
        "elasticmapreduce:listInstances",
        "elasticmapreduce:listSecurityConfigurations",
        "elasticmapreduce:listSteps",
        "elastictranscoder:listJobsByPipeline",
        "elastictranscoder:listJobsByStatus",
        "elastictranscoder:listPipelines",
        "elastictranscoder:listPresets",
        "elastictranscoder:readPipeline",
        "elastictranscoder:readPreset",
        "es:describeElasticsearchDomain",
        "es:describeElasticsearchDomainConfig",
        "es:describeElasticsearchDomains",
        "es:listDomainNames",
        "es:listTags",
        "events:describeEventBus",
        "events:describeRule",
        "events:listRuleNamesByTarget",
        "events:listRules",
        "events:listTargetsByRule",
        "events:testEventPattern",
        "firehose:describeDeliveryStream",
        "firehose:listDeliveryStreams",
        "forecast:describeDataset",
        "forecast:describeDatasetGroup",
        "forecast:describeDatasetImportJob",
        "forecast:describeForecast",
        "forecast:describeForecastExportJob",
        "forecast:describePredictor",
        "forecast:getAccuracyMetrics",
        "forecast:listDatasetGroups",
        "forecast:listDatasetImportJobs",
        "forecast:listDatasets",
        "forecast:listForecastExportJobs",
        "forecast:listForecasts",
        "forecast:listPredictors",
        "fsx:describeBackups",
        "fsx:describeFileSystems",
        "fsx:listTagsForResource",
        "glacier:describeJob",
        "glacier:describeVault",
        "glacier:getDataRetrievalPolicy",
        "glacier:getVaultAccessPolicy",
        "glacier:getVaultLock",
        "glacier:getVaultNotifications",
        "glacier:listJobs",
        "glacier:listTagsForVault",
        "glacier:listVaults",
        "globalaccelerator:describeAccelerator",
        "globalaccelerator:describeAcceleratorAttributes",
        "globalaccelerator:describeEndpointGroup",
        "globalaccelerator:describeListener",
        "globalaccelerator:listAccelerators",
        "globalaccelerator:listEndpointGroups",
        "globalaccelerator:listListeners",
        "glue:batchGetPartition",
        "glue:getCatalogImportStatus",
        "glue:getClassifier",
        "glue:getClassifiers",
        "glue:getCrawler",
        "glue:getCrawlerMetrics",
        "glue:getCrawlers",
        "glue:getDatabase",
        "glue:getDatabases",
        "glue:getDataflowGraph",
        "glue:getDevEndpoint",
        "glue:getDevEndpoints",
        "glue:getJob",
        "glue:getJobRun",
        "glue:getJobRuns",
        "glue:getJobs",
        "glue:getMapping",
        "glue:getPartition",
        "glue:getPartitions",
        "glue:getTable",
        "glue:getTableVersions",
        "glue:getTables",
        "glue:getTrigger",
        "glue:getTriggers",
        "glue:getUserDefinedFunction",
        "glue:getUserDefinedFunctions",
        "greengrass:getConnectivityInfo",
        "greengrass:getCoreDefinition",
        "greengrass:getCoreDefinitionVersion",
        "greengrass:getDeploymentStatus",
        "greengrass:getDeviceDefinition",
        "greengrass:getDeviceDefinitionVersion",
        "greengrass:getFunctionDefinition",
        "greengrass:getFunctionDefinitionVersion",
        "greengrass:getGroup",
        "greengrass:getGroupCertificateAuthority",
        "greengrass:getGroupVersion",
        "greengrass:getLoggerDefinition",
        "greengrass:getLoggerDefinitionVersion",
        "greengrass:getResourceDefinitionVersion",
        "greengrass:getServiceRoleForAccount",
        "greengrass:getSubscriptionDefinition",
        "greengrass:getSubscriptionDefinitionVersion",
        "greengrass:listCoreDefinitionVersions",
        "greengrass:listCoreDefinitions",
        "greengrass:listDeployments",
        "greengrass:listDeviceDefinitionVersions",
        "greengrass:listDeviceDefinitions",
        "greengrass:listFunctionDefinitionVersions",
        "greengrass:listFunctionDefinitions",
        "greengrass:listGroupVersions",
        "greengrass:listGroups",
        "greengrass:listLoggerDefinitionVersions",
        "greengrass:listLoggerDefinitions",
        "greengrass:listResourceDefinitionVersions",
        "greengrass:listResourceDefinitions",
        "greengrass:listSubscriptionDefinitionVersions",
        "greengrass:listSubscriptionDefinitions",
        "guardduty:getDetector",
        "guardduty:getFindings",
        "guardduty:getFindingsStatistics",
        "guardduty:getIPSet",
        "guardduty:getInvitationsCount",
        "guardduty:getMasterAccount",
        "guardduty:getMembers",
        "guardduty:getThreatIntelSet",
        "guardduty:listDetectors",
        "guardduty:listFindings",
        "guardduty:listIPSets",
        "guardduty:listInvitations",
        "guardduty:listMembers",
        "guardduty:listThreatIntelSets",
        "health:describeAffectedEntities",
        "health:describeEntityAggregates",
        "health:describeEventAggregates",
        "health:describeEventDetails",
        "health:describeEventTypes",
        "health:describeEvents",
        "iam:getAccessKeyLastUsed",
        "iam:getAccountAuthorizationDetails",
        "iam:getAccountPasswordPolicy",
        "iam:getAccountSummary",
        "iam:getContextKeysForCustomPolicy",
        "iam:getContextKeysForPrincipalPolicy",
        "iam:getCredentialReport",
        "iam:getGroup",
        "iam:getGroupPolicy",
        "iam:getInstanceProfile",
        "iam:getLoginProfile",
        "iam:getOpenIDConnectProvider",
        "iam:getPolicy",
        "iam:getPolicyVersion",
        "iam:getRole",
        "iam:getRolePolicy",
        "iam:getSAMLProvider",
        "iam:getSSHPublicKey",
        "iam:getServerCertificate",
        "iam:getUser",
        "iam:getUserPolicy",
        "iam:listAccessKeys",
        "iam:listAccountAliases",
        "iam:listAttachedGroupPolicies",
        "iam:listAttachedRolePolicies",
        "iam:listAttachedUserPolicies",
        "iam:listEntitiesForPolicy",
        "iam:listGroupPolicies",
        "iam:listGroups",
        "iam:listGroupsForUser",
        "iam:listInstanceProfiles",
        "iam:listInstanceProfilesForRole",
        "iam:listMFADevices",
        "iam:listOpenIDConnectProviders",
        "iam:listPolicies",
        "iam:listPolicyVersions",
        "iam:listRolePolicies",
        "iam:listRoles",
        "iam:listSAMLProviders",
        "iam:listSSHPublicKeys",
        "iam:listServerCertificates",
        "iam:listSigningCertificates",
        "iam:listUserPolicies",
        "iam:listUsers",
        "iam:listVirtualMFADevices",
        "iam:simulateCustomPolicy",
        "iam:simulatePrincipalPolicy",
        "importexport:getStatus",
        "importexport:listJobs",
        "inspector:describeAssessmentRuns",
        "inspector:describeAssessmentTargets",
        "inspector:describeAssessmentTemplates",
        "inspector:describeCrossAccountAccessRole",
        "inspector:describeResourceGroups",
        "inspector:describeRulesPackages",
        "inspector:getTelemetryMetadata",
        "inspector:listAssessmentRunAgents",
        "inspector:listAssessmentRuns",
        "inspector:listAssessmentTargets",
        "inspector:listAssessmentTemplates",
        "inspector:listEventSubscriptions",
        "inspector:listRulesPackages",
        "inspector:listTagsForResource",
        "iot:describeAuthorizer",
        "iot:describeCACertificate",
        "iot:describeCertificate",
        "iot:describeDefaultAuthorizer",
        "iot:describeEndpoint",
        "iot:describeIndex",
        "iot:describeJobExecution",
        "iot:describeThing",
        "iot:describeThingGroup",
        "iot:getEffectivePolicies",
        "iot:getIndexingConfiguration",
        "iot:getLoggingOptions",
        "iot:getPolicy",
        "iot:getPolicyVersion",
        "iot:getTopicRule",
        "iot:getV2LoggingOptions",
        "iot:listAttachedPolicies",
        "iot:listAuthorizers",
        "iot:listCACertificates",
        "iot:listCertificates",
        "iot:listCertificatesByCA",
        "iot:listJobExecutionsForJob",
        "iot:listJobExecutionsForThing",
        "iot:listJobs",
        "iot:listOutgoingCertificates",
        "iot:listPolicies",
        "iot:listPolicyPrincipals",
        "iot:listPolicyVersions",
        "iot:listPrincipalPolicies",
        "iot:listPrincipalThings",
        "iot:listRoleAliases",
        "iot:listTargetsForPolicy",
        "iot:listThingGroups",
        "iot:listThingGroupsForThing",
        "iot:listThingPrincipals",
        "iot:listThingRegistrationTasks",
        "iot:listThingTypes",
        "iot:listThings",
        "iot:listTopicRules",
        "iot:listV2LoggingLevels",
        "iotevents:describeDetector",
        "iotevents:describeDetectorModel",
        "iotevents:describeInput",
        "iotevents:describeLoggingOptions",
        "iotevents:listDetectorModelVersions",
        "iotevents:listDetectorModels",
        "iotevents:listDetectors",
        "iotevents:listInputs",
        "kafka:describeCluster",
        "kafka:getBootstrapBrokers",
        "kafka:listClusters",
        "kafka:listNodes",
        "kinesis:describeStream",
        "kinesis:listStreams",
        "kinesis:listTagsForStream",
        "kinesisanalytics:describeApplication",
        "kinesisanalytics:listApplications",
        "kms:describeKey",
        "kms:getKeyPolicy",
        "kms:getKeyRotationStatus",
        "kms:listAliases",
        "kms:listGrants",
        "kms:listKeyPolicies",
        "kms:listKeys",
        "kms:listResourceTags",
        "kms:listRetirableGrants",
        "lambda:getAccountSettings",
        "lambda:getAlias",
        "lambda:getEventSourceMapping",
        "lambda:getFunction",
        "lambda:getFunctionConfiguration",
        "lambda:getLayerVersion",
        "lambda:getLayerVersionPolicy",
        "lambda:getPolicy",
        "lambda:listAliases",
        "lambda:listEventSourceMappings",
        "lambda:listFunctions",
        "lambda:listLayerVersions",
        "lambda:listLayers",
        "lambda:listVersionsByFunction",
        "lex:getBot",
        "lex:getBotAlias",
        "lex:getBotAliases",
        "lex:getBotChannelAssociation",
        "lex:getBotChannelAssociations",
        "lex:getBotVersions",
        "lex:getBots",
        "lex:getBuiltinIntent",
        "lex:getBuiltinIntents",
        "lex:getBuiltinSlotTypes",
        "lex:getIntent",
        "lex:getIntentVersions",
        "lex:getIntents",
        "lex:getSlotType",
        "lex:getSlotTypeVersions",
        "lex:getSlotTypes",
        "lightsail:getActiveNames",
        "lightsail:getBlueprints",
        "lightsail:getBundles",
        "lightsail:getDomain",
        "lightsail:getDomains",
        "lightsail:getInstance",
        "lightsail:getInstanceAccessDetails",
        "lightsail:getInstanceMetricData",
        "lightsail:getInstancePortStates",
        "lightsail:getInstanceSnapshot",
        "lightsail:getInstanceSnapshots",
        "lightsail:getInstanceState",
        "lightsail:getInstances",
        "lightsail:getKeyPair",
        "lightsail:getKeyPairs",
        "lightsail:getOperation",
        "lightsail:getOperations",
        "lightsail:getOperationsForResource",
        "lightsail:getRegions",
        "lightsail:getStaticIp",
        "lightsail:getStaticIps",
        "logs:describeDestinations",
        "logs:describeExportTasks",
        "logs:describeLogGroups",
        "logs:describeLogStreams",
        "logs:describeMetricFilters",
        "logs:describeQueries",
        "logs:describeSubscriptionFilters",
        "logs:testMetricFilter",
        "machinelearning:describeBatchPredictions",
        "machinelearning:describeDataSources",
        "machinelearning:describeEvaluations",
        "machinelearning:describeMLModels",
        "machinelearning:getBatchPrediction",
        "machinelearning:getDataSource",
        "machinelearning:getEvaluation",
        "machinelearning:getMLModel",
        "managedblockchain:getMember",
        "managedblockchain:getNetwork",
        "managedblockchain:getNode",
        "managedblockchain:listMembers",
        "managedblockchain:listNetworks",
        "managedblockchain:listNodes",
        "mediaconvert:describeEndpoints",
        "mediaconvert:getJob",
        "mediaconvert:getJobTemplate",
        "mediaconvert:getPreset",
        "mediaconvert:getQueue",
        "mediaconvert:listJobTemplates",
        "mediaconvert:listJobs",
        "medialive:describeChannel",
        "medialive:describeInput",
        "medialive:describeInputSecurityGroup",
        "medialive:describeOffering",
        "medialive:describeReservation",
        "medialive:describeSchedule",
        "medialive:listChannels",
        "medialive:listInputSecurityGroups",
        "medialive:listInputs",
        "medialive:listOfferings",
        "medialive:listReservations",
        "mediapackage:describeChannel",
        "mediapackage:describeOriginEndpoint",
        "mediapackage:listChannels",
        "mediapackage:listOriginEndpoints",
        "mediastore:describeContainer",
        "mediastore:describeObject",
        "mediastore:getContainerPolicy",
        "mediastore:getCorsPolicy",
        "mediastore:listContainers",
        "mediastore:listItems",
        "mediatailor:getPlaybackConfiguration",
        "mediatailor:listPlaybackConfigurations",
        "mobiletargeting:getAdmChannel",
        "mobiletargeting:getApnsChannel",
        "mobiletargeting:getApnsSandboxChannel",
        "mobiletargeting:getApnsVoipChannel",
        "mobiletargeting:getApnsVoipSandboxChannel",
        "mobiletargeting:getApp",
        "mobiletargeting:getApplicationSettings",
        "mobiletargeting:getApps",
        "mobiletargeting:getBaiduChannel",
        "mobiletargeting:getCampaign",
        "mobiletargeting:getCampaignActivities",
        "mobiletargeting:getCampaignVersion",
        "mobiletargeting:getCampaignVersions",
        "mobiletargeting:getCampaigns",
        "mobiletargeting:getEmailChannel",
        "mobiletargeting:getEndpoint",
        "mobiletargeting:getEventStream",
        "mobiletargeting:getExportJob",
        "mobiletargeting:getExportJobs",
        "mobiletargeting:getGcmChannel",
        "mobiletargeting:getImportJob",
        "mobiletargeting:getImportJobs",
        "mobiletargeting:getSegment",
        "mobiletargeting:getSegmentImportJobs",
        "mobiletargeting:getSegmentVersion",
        "mobiletargeting:getSegmentVersions",
        "mobiletargeting:getSegments",
        "mobiletargeting:getSmsChannel",
        "mq:describeBroker",
        "mq:describeConfiguration",
        "mq:describeConfigurationRevision",
        "mq:describeUser",
        "mq:listBrokers",
        "mq:listConfigurationRevisions",
        "mq:listConfigurations",
        "mq:listUsers",
        "opsworks-cm:describeAccountAttributes",
        "opsworks-cm:describeBackups",
        "opsworks-cm:describeEvents",
        "opsworks-cm:describeNodeAssociationStatus",
        "opsworks-cm:describeServers",
        "opsworks:describeAgentVersions",
        "opsworks:describeApps",
        "opsworks:describeCommands",
        "opsworks:describeDeployments",
        "opsworks:describeEcsClusters",
        "opsworks:describeElasticIps",
        "opsworks:describeElasticLoadBalancers",
        "opsworks:describeInstances",
        "opsworks:describeLayers",
        "opsworks:describeLoadBasedAutoScaling",
        "opsworks:describeMyUserProfile",
        "opsworks:describePermissions",
        "opsworks:describeRaidArrays",
        "opsworks:describeRdsDbInstances",
        "opsworks:describeServiceErrors",
        "opsworks:describeStackProvisioningParameters",
        "opsworks:describeStackSummary",
        "opsworks:describeStacks",
        "opsworks:describeTimeBasedAutoScaling",
        "opsworks:describeUserProfiles",
        "opsworks:describeVolumes",
        "opsworks:getHostnameSuggestion",
        "personalize:describeAlgorithm",
        "personalize:describeCampaign",
        "personalize:describeDataset",
        "personalize:describeDatasetGroup",
        "personalize:describeDatasetImportJob",
        "personalize:describeEventTracker",
        "personalize:describeFeatureTransformation",
        "personalize:describeRecipe",
        "personalize:describeSchema",
        "personalize:describeSolution",
        "personalize:describeSolutionVersion",
        "personalize:listCampaigns",
        "personalize:listDatasetGroups",
        "personalize:listDatasetImportJobs",
        "personalize:listDatasets",
        "personalize:listEventTrackers",
        "personalize:listRecipes",
        "personalize:listSchemas",
        "personalize:listSolutionVersions",
        "personalize:listSolutions",
        "polly:describeVoices",
        "polly:getLexicon",
        "polly:listLexicons",
        "pricing:describeServices",
        "pricing:getAttributeValues",
        "pricing:getProducts",
        "rds:describeAccountAttributes",
        "rds:describeCertificates",
        "rds:describeDBClusterParameterGroups",
        "rds:describeDBClusterParameters",
        "rds:describeDBClusterSnapshots",
        "rds:describeDBClusters",
        "rds:describeDBEngineVersions",
        "rds:describeDBInstances",
        "rds:describeDBParameterGroups",
        "rds:describeDBParameters",
        "rds:describeDBSecurityGroups",
        "rds:describeDBSnapshotAttributes",
        "rds:describeDBSnapshots",
        "rds:describeDBSubnetGroups",
        "rds:describeEngineDefaultClusterParameters",
        "rds:describeEngineDefaultParameters",
        "rds:describeEventCategories",
        "rds:describeEventSubscriptions",
        "rds:describeEvents",
        "rds:describeOptionGroupOptions",
        "rds:describeOptionGroups",
        "rds:describeOrderableDBInstanceOptions",
        "rds:describePendingMaintenanceActions",
        "rds:describeReservedDBInstances",
        "rds:describeReservedDBInstancesOfferings",
        "rds:listTagsForResource",
        "redshift:describeClusterParameterGroups",
        "redshift:describeClusterParameters",
        "redshift:describeClusterSecurityGroups",
        "redshift:describeClusterSnapshots",
        "redshift:describeClusterSubnetGroups",
        "redshift:describeClusterVersions",
        "redshift:describeClusters",
        "redshift:describeDefaultClusterParameters",
        "redshift:describeEventCategories",
        "redshift:describeEventSubscriptions",
        "redshift:describeEvents",
        "redshift:describeHsmClientCertificates",
        "redshift:describeHsmConfigurations",
        "redshift:describeLoggingStatus",
        "redshift:describeOrderableClusterOptions",
        "redshift:describeReservedNodeOfferings",
        "redshift:describeReservedNodes",
        "redshift:describeResize",
        "redshift:describeSnapshotCopyGrants",
        "redshift:describeTableRestoreStatus",
        "redshift:describeTags",
        "rekognition:listCollections",
        "rekognition:listFaces",
        "robomaker:batchDescribeSimulationJob",
        "robomaker:describeDeploymentJob",
        "robomaker:describeFleet",
        "robomaker:describeRobot",
        "robomaker:describeRobotApplication",
        "robomaker:describeSimulationApplication",
        "robomaker:describeSimulationJob",
        "robomaker:listDeploymentJobs",
        "robomaker:listFleets",
        "robomaker:listRobotApplications",
        "robomaker:listRobots",
        "robomaker:listSimulationApplications",
        "robomaker:listSimulationJobs",
        "route53:getChange",
        "route53:getCheckerIpRanges",
        "route53:getGeoLocation",
        "route53:getHealthCheck",
        "route53:getHealthCheckCount",
        "route53:getHealthCheckLastFailureReason",
        "route53:getHealthCheckStatus",
        "route53:getHostedZone",
        "route53:getHostedZoneCount",
        "route53:getReusableDelegationSet",
        "route53:getTrafficPolicy",
        "route53:getTrafficPolicyInstance",
        "route53:getTrafficPolicyInstanceCount",
        "route53:listGeoLocations",
        "route53:listHealthChecks",
        "route53:listHostedZones",
        "route53:listHostedZonesByName",
        "route53:listResourceRecordSets",
        "route53:listReusableDelegationSets",
        "route53:listTagsForResource",
        "route53:listTagsForResources",
        "route53:listTrafficPolicies",
        "route53:listTrafficPolicyInstances",
        "route53:listTrafficPolicyInstancesByHostedZone",
        "route53:listTrafficPolicyInstancesByPolicy",
        "route53:listTrafficPolicyVersions",
        "route53domains:checkDomainAvailability",
        "route53domains:getContactReachabilityStatus",
        "route53domains:getDomainDetail",
        "route53domains:getOperationDetail",
        "route53domains:listDomains",
        "route53domains:listOperations",
        "route53domains:listTagsForDomain",
        "route53domains:viewBilling",
        "route53resolver:getResolverRulePolicy",
        "route53resolver:listResolverEndpointIpAddresses",
        "route53resolver:listResolverEndpoints",
        "route53resolver:listResolverRuleAssociations",
        "route53resolver:listResolverRules",
        "route53resolver:listTagsForResource",
        "s3:getAccelerateConfiguration",
        "s3:getAnalyticsConfiguration",
        "s3:getBucketAcl",
        "s3:getBucketCORS",
        "s3:getBucketLocation",
        "s3:getBucketLogging",
        "s3:getBucketNotification",
        "s3:getBucketPolicy",
        "s3:getBucketRequestPayment",
        "s3:getBucketTagging",
        "s3:getBucketVersioning",
        "s3:getBucketWebsite",
        "s3:getEncryptionConfiguration",
        "s3:getInventoryConfiguration",
        "s3:getLifecycleConfiguration",
        "s3:getMetricsConfiguration",
        "s3:getReplicationConfiguration",
        "s3:listAllMyBuckets",
        "s3:listBucket",
        "s3:listBucketMultipartUploads",
        "sagemaker:describeAlgorithm",
        "sagemaker:describeCompilationJob",
        "sagemaker:describeEndpoint",
        "sagemaker:describeEndpointConfig",
        "sagemaker:describeHyperParameterTuningJob",
        "sagemaker:describeLabelingJob",
        "sagemaker:describeModel",
        "sagemaker:describeModelPackage",
        "sagemaker:describeNotebookInstance",
        "sagemaker:describeNotebookInstanceLifecycleConfig",
        "sagemaker:describeTrainingJob",
        "sagemaker:describeTransformJob",
        "sagemaker:describeWorkteam",
        "sagemaker:listAlgorithms",
        "sagemaker:listCompilationJobs",
        "sagemaker:listEndpointConfigs",
        "sagemaker:listEndpoints",
        "sagemaker:listHyperParameterTuningJobs",
        "sagemaker:listLabelingJobs",
        "sagemaker:listLabelingJobsForWorkteam",
        "sagemaker:listModelPackages",
        "sagemaker:listModels",
        "sagemaker:listNotebookInstanceLifecycleConfigs",
        "sagemaker:listNotebookInstances",
        "sagemaker:listTags",
        "sagemaker:listTrainingJobs",
        "sagemaker:listTrainingJobsForHyperParameterTuningJob",
        "sagemaker:listTransformJobs",
        "sagemaker:listWorkteams",
        "sdb:domainMetadata",
        "sdb:listDomains",
        "secretsmanager:describeSecret",
        "secretsmanager:getResourcePolicy",
        "secretsmanager:listSecretVersionIds",
        "secretsmanager:listSecrets",
        "securityhub:getEnabledStandards",
        "securityhub:getFindings",
        "securityhub:getInsightResults",
        "securityhub:getInsights",
        "securityhub:getMasterAccount",
        "securityhub:getMembers",
        "securityhub:listEnabledProductsForImport",
        "securityhub:listInvitations",
        "securityhub:listMembers",
        "servicecatalog:describeConstraint",
        "servicecatalog:describePortfolio",
        "servicecatalog:describeProduct",
        "servicecatalog:describeProductAsAdmin",
        "servicecatalog:describeProductView",
        "servicecatalog:describeProvisioningArtifact",
        "servicecatalog:describeProvisioningParameters",
        "servicecatalog:describeRecord",
        "servicecatalog:listAcceptedPortfolioShares",
        "servicecatalog:listConstraintsForPortfolio",
        "servicecatalog:listLaunchPaths",
        "servicecatalog:listPortfolioAccess",
        "servicecatalog:listPortfolios",
        "servicecatalog:listPortfoliosForProduct",
        "servicecatalog:listPrincipalsForPortfolio",
        "servicecatalog:listProvisioningArtifacts",
        "servicecatalog:listRecordHistory",
        "servicecatalog:scanProvisionedProducts",
        "servicecatalog:searchProducts",
        "servicequotas:getAWSDefaultServiceQuota",
        "servicequotas:getAssociationForServiceQuotaTemplate",
        "servicequotas:getRequestedServiceQuotaChange",
        "servicequotas:getServiceQuota",
        "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
        "servicequotas:listAWSDefaultServiceQuotas",
        "servicequotas:listRequestedServiceQuotaChangeHistory",
        "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
        "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
        "servicequotas:listServiceQuotas",
        "servicequotas:listServices",
        "ses:describeActiveReceiptRuleSet",
        "ses:describeReceiptRule",
        "ses:describeReceiptRuleSet",
        "ses:getIdentityDkimAttributes",
        "ses:getIdentityMailFromDomainAttributes",
        "ses:getIdentityNotificationAttributes",
        "ses:getIdentityPolicies",
        "ses:getIdentityVerificationAttributes",
        "ses:getSendQuota",
        "ses:getSendStatistics",
        "ses:listIdentities",
        "ses:listIdentityPolicies",
        "ses:listReceiptFilters",
        "ses:listReceiptRuleSets",
        "ses:listVerifiedEmailAddresses",
        "shield:describeAttack",
        "shield:describeProtection",
        "shield:describeSubscription",
        "shield:listAttacks",
        "shield:listProtections",
        "sms:getConnectors",
        "sms:getReplicationJobs",
        "sms:getReplicationRuns",
        "sms:getServers",
        "snowball:describeAddress",
        "snowball:describeAddresses",
        "snowball:describeJob",
        "snowball:getSnowballUsage",
        "snowball:listJobs",
        "sns:checkIfPhoneNumberIsOptedOut",
        "sns:getEndpointAttributes",
        "sns:getPlatformApplicationAttributes",
        "sns:getSMSAttributes",
        "sns:getSubscriptionAttributes",
        "sns:getTopicAttributes",
        "sns:listEndpointsByPlatformApplication",
        "sns:listPhoneNumbersOptedOut",
        "sns:listPlatformApplications",
        "sns:listSubscriptions",
        "sns:listSubscriptionsByTopic",
        "sns:listTopics",
        "sqs:getQueueAttributes",
        "sqs:getQueueUrl",
        "sqs:listDeadLetterSourceQueues",
        "sqs:listQueues",
        "ssm:describeActivations",
        "ssm:describeAssociation",
        "ssm:describeAutomationExecutions",
        "ssm:describeAvailablePatches",
        "ssm:describeDocument",
        "ssm:describeDocumentPermission",
        "ssm:describeEffectiveInstanceAssociations",
        "ssm:describeEffectivePatchesForPatchBaseline",
        "ssm:describeInstanceAssociationsStatus",
        "ssm:describeInstanceInformation",
        "ssm:describeInstancePatchStates",
        "ssm:describeInstancePatchStatesForPatchGroup",
        "ssm:describeInstancePatches",
        "ssm:describeMaintenanceWindowExecutionTaskInvocations",
        "ssm:describeMaintenanceWindowExecutionTasks",
        "ssm:describeMaintenanceWindowExecutions",
        "ssm:describeMaintenanceWindowTargets",
        "ssm:describeMaintenanceWindowTasks",
        "ssm:describeMaintenanceWindows",
        "ssm:describeParameters",
        "ssm:describePatchBaselines",
        "ssm:describePatchGroupState",
        "ssm:describePatchGroups",
        "ssm:getAutomationExecution",
        "ssm:getCommandInvocation",
        "ssm:getDefaultPatchBaseline",
        "ssm:getDeployablePatchSnapshotForInstance",
        "ssm:getInventorySchema",
        "ssm:getMaintenanceWindow",
        "ssm:getMaintenanceWindowExecution",
        "ssm:getMaintenanceWindowExecutionTask",
        "ssm:getPatchBaseline",
        "ssm:getPatchBaselineForPatchGroup",
        "ssm:listAssociations",
        "ssm:listCommandInvocations",
        "ssm:listCommands",
        "ssm:listDocumentVersions",
        "ssm:listDocuments",
        "ssm:listTagsForResource",
        "states:describeActivity",
        "states:describeExecution",
        "states:describeStateMachine",
        "states:getExecutionHistory",
        "states:listActivities",
        "states:listExecutions",
        "states:listStateMachines",
        "storagegateway:describeBandwidthRateLimit",
        "storagegateway:describeCache",
        "storagegateway:describeCachediSCSIVolumes",
        "storagegateway:describeGatewayInformation",
        "storagegateway:describeMaintenanceStartTime",
        "storagegateway:describeNFSFileShares",
        "storagegateway:describeSMBFileShares",
        "storagegateway:describeSMBSettings",
        "storagegateway:describeSnapshotSchedule",
        "storagegateway:describeStorediSCSIVolumes",
        "storagegateway:describeTapeArchives",
        "storagegateway:describeTapeRecoveryPoints",
        "storagegateway:describeTapes",
        "storagegateway:describeUploadBuffer",
        "storagegateway:describeVTLDevices",
        "storagegateway:describeWorkingStorage",
        "storagegateway:listFileShares",
        "storagegateway:listGateways",
        "storagegateway:listLocalDisks",
        "storagegateway:listTagsForResource",
        "storagegateway:listTapes",
        "storagegateway:listVolumeInitiators",
        "storagegateway:listVolumeRecoveryPoints",
        "storagegateway:listVolumes",
        "swf:countClosedWorkflowExecutions",
        "swf:countOpenWorkflowExecutions",
        "swf:countPendingActivityTasks",
        "swf:countPendingDecisionTasks",
        "swf:describeActivityType",
        "swf:describeDomain",
        "swf:describeWorkflowExecution",
        "swf:describeWorkflowType",
        "swf:getWorkflowExecutionHistory",
        "swf:listActivityTypes",
        "swf:listClosedWorkflowExecutions",
        "swf:listDomains",
        "swf:listOpenWorkflowExecutions",
        "swf:listWorkflowTypes",
        "transfer:describeServer",
        "transfer:describeUser",
        "transfer:listServers",
        "transfer:listTagsForResource",
        "transfer:listUsers",
        "waf-regional:getByteMatchSet",
        "waf-regional:getChangeTokenStatus",
        "waf-regional:getIPSet",
        "waf-regional:getRule",
        "waf-regional:getSqlInjectionMatchSet",
        "waf-regional:getWebACL",
        "waf-regional:getWebACLForResource",
        "waf-regional:listByteMatchSets",
        "waf-regional:listIPSets",
        "waf-regional:listResourcesForWebACL",
        "waf-regional:listRules",
        "waf-regional:listSqlInjectionMatchSets",
        "waf-regional:listWebACLs",
        "waf:getByteMatchSet",
        "waf:getChangeTokenStatus",
        "waf:getIPSet",
        "waf:getRule",
        "waf:getSampledRequests",
        "waf:getSizeConstraintSet",
        "waf:getSqlInjectionMatchSet",
        "waf:getWebACL",
        "waf:getXssMatchSet",
        "waf:listByteMatchSets",
        "waf:listIPSets",
        "waf:listRules",
        "waf:listSizeConstraintSets",
        "waf:listSqlInjectionMatchSets",
        "waf:listWebACLs",
        "waf:listXssMatchSets",
        "workdocs:checkAlias",
        "workdocs:describeAvailableDirectories",
        "workdocs:describeInstances",
        "worklink:describeAuditStreamConfiguration",
        "worklink:describeCompanyNetworkConfiguration",
        "worklink:describeDevice",
        "worklink:describeDevicePolicyConfiguration",
        "worklink:describeDomain",
        "worklink:describeFleetMetadata",
        "worklink:describeIdentityProviderConfiguration",
        "worklink:describeWebsiteCertificateAuthority",
        "worklink:listDevices",
        "worklink:listDomains",
        "worklink:listFleets",
        "worklink:listWebsiteAuthorizationProviders",
        "worklink:listWebsiteCertificateAuthorities",
        "workmail:describeGroup",
        "workmail:describeOrganization",
        "workmail:describeResource",
        "workmail:describeUser",
        "workmail:listAliases",
        "workmail:listGroupMembers",
        "workmail:listGroups",
        "workmail:listMailboxPermissions",
        "workmail:listOrganizations",
        "workmail:listResourceDelegates",
        "workmail:listResources",
        "workmail:listUsers",
        "workspaces:describeAccount",
        "workspaces:describeAccountModifications",
        "workspaces:describeIpGroups",
        "workspaces:describeTags",
        "workspaces:describeWorkspaceBundles",
        "workspaces:describeWorkspaceDirectories",
        "workspaces:describeWorkspaceImages",
        "workspaces:describeWorkspaces",
        "workspaces:describeWorkspacesConnectionStatus"
      ]
    },
    "ANPAJBWPGNOVKZD3JI2P2": {
      "PolicyName": "AmazonVPCFullAccess",
      "PolicyId": "ANPAJBWPGNOVKZD3JI2P2",
      "Arn": "arn:aws:iam::aws:policy/AmazonVPCFullAccess",
      "Path": "/",
      "DefaultVersionId": "v7",
      "AttachmentCount": 2,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:41:16+00:00",
      "UpdateDate": "2018-03-15 18:30:25+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:AcceptVpcPeeringConnection",
                  "ec2:AcceptVpcEndpointConnections",
                  "ec2:AllocateAddress",
                  "ec2:AssignIpv6Addresses",
                  "ec2:AssignPrivateIpAddresses",
                  "ec2:AssociateAddress",
                  "ec2:AssociateDhcpOptions",
                  "ec2:AssociateRouteTable",
                  "ec2:AssociateSubnetCidrBlock",
                  "ec2:AssociateVpcCidrBlock",
                  "ec2:AttachClassicLinkVpc",
                  "ec2:AttachInternetGateway",
                  "ec2:AttachNetworkInterface",
                  "ec2:AttachVpnGateway",
                  "ec2:AuthorizeSecurityGroupEgress",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateCustomerGateway",
                  "ec2:CreateDefaultSubnet",
                  "ec2:CreateDefaultVpc",
                  "ec2:CreateDhcpOptions",
                  "ec2:CreateEgressOnlyInternetGateway",
                  "ec2:CreateFlowLogs",
                  "ec2:CreateInternetGateway",
                  "ec2:CreateNatGateway",
                  "ec2:CreateNetworkAcl",
                  "ec2:CreateNetworkAcl",
                  "ec2:CreateNetworkAclEntry",
                  "ec2:CreateNetworkInterface",
                  "ec2:CreateNetworkInterfacePermission",
                  "ec2:CreateRoute",
                  "ec2:CreateRouteTable",
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateSubnet",
                  "ec2:CreateTags",
                  "ec2:CreateVpc",
                  "ec2:CreateVpcEndpoint",
                  "ec2:CreateVpcEndpointConnectionNotification",
                  "ec2:CreateVpcEndpointServiceConfiguration",
                  "ec2:CreateVpcPeeringConnection",
                  "ec2:CreateVpnConnection",
                  "ec2:CreateVpnConnectionRoute",
                  "ec2:CreateVpnGateway",
                  "ec2:DeleteCustomerGateway",
                  "ec2:DeleteDhcpOptions",
                  "ec2:DeleteEgressOnlyInternetGateway",
                  "ec2:DeleteFlowLogs",
                  "ec2:DeleteInternetGateway",
                  "ec2:DeleteNatGateway",
                  "ec2:DeleteNetworkAcl",
                  "ec2:DeleteNetworkAclEntry",
                  "ec2:DeleteNetworkInterface",
                  "ec2:DeleteNetworkInterfacePermission",
                  "ec2:DeleteRoute",
                  "ec2:DeleteRouteTable",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DeleteSubnet",
                  "ec2:DeleteTags",
                  "ec2:DeleteVpc",
                  "ec2:DeleteVpcEndpoints",
                  "ec2:DeleteVpcEndpointConnectionNotifications",
                  "ec2:DeleteVpcEndpointServiceConfigurations",
                  "ec2:DeleteVpcPeeringConnection",
                  "ec2:DeleteVpnConnection",
                  "ec2:DeleteVpnConnectionRoute",
                  "ec2:DeleteVpnGateway",
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeClassicLinkInstances",
                  "ec2:DescribeCustomerGateways",
                  "ec2:DescribeDhcpOptions",
                  "ec2:DescribeEgressOnlyInternetGateways",
                  "ec2:DescribeFlowLogs",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeKeyPairs",
                  "ec2:DescribeMovingAddresses",
                  "ec2:DescribeNatGateways",
                  "ec2:DescribeNetworkAcls",
                  "ec2:DescribeNetworkInterfaceAttribute",
                  "ec2:DescribeNetworkInterfacePermissions",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribePrefixLists",
                  "ec2:DescribeRouteTables",
                  "ec2:DescribeSecurityGroupReferences",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeStaleSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcAttribute",
                  "ec2:DescribeVpcClassicLink",
                  "ec2:DescribeVpcClassicLinkDnsSupport",
                  "ec2:DescribeVpcEndpointConnectionNotifications",
                  "ec2:DescribeVpcEndpointConnections",
                  "ec2:DescribeVpcEndpoints",
                  "ec2:DescribeVpcEndpointServiceConfigurations",
                  "ec2:DescribeVpcEndpointServicePermissions",
                  "ec2:DescribeVpcEndpointServices",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeVpnConnections",
                  "ec2:DescribeVpnGateways",
                  "ec2:DetachClassicLinkVpc",
                  "ec2:DetachInternetGateway",
                  "ec2:DetachNetworkInterface",
                  "ec2:DetachVpnGateway",
                  "ec2:DisableVgwRoutePropagation",
                  "ec2:DisableVpcClassicLink",
                  "ec2:DisableVpcClassicLinkDnsSupport",
                  "ec2:DisassociateAddress",
                  "ec2:DisassociateRouteTable",
                  "ec2:DisassociateSubnetCidrBlock",
                  "ec2:DisassociateVpcCidrBlock",
                  "ec2:EnableVgwRoutePropagation",
                  "ec2:EnableVpcClassicLink",
                  "ec2:EnableVpcClassicLinkDnsSupport",
                  "ec2:ModifyNetworkInterfaceAttribute",
                  "ec2:ModifySubnetAttribute",
                  "ec2:ModifyVpcAttribute",
                  "ec2:ModifyVpcEndpoint",
                  "ec2:ModifyVpcEndpointConnectionNotification",
                  "ec2:ModifyVpcEndpointServiceConfiguration",
                  "ec2:ModifyVpcEndpointServicePermissions",
                  "ec2:ModifyVpcPeeringConnectionOptions",
                  "ec2:ModifyVpcTenancy",
                  "ec2:MoveAddressToVpc",
                  "ec2:RejectVpcEndpointConnections",
                  "ec2:RejectVpcPeeringConnection",
                  "ec2:ReleaseAddress",
                  "ec2:ReplaceNetworkAclAssociation",
                  "ec2:ReplaceNetworkAclEntry",
                  "ec2:ReplaceRoute",
                  "ec2:ReplaceRouteTableAssociation",
                  "ec2:ResetNetworkInterfaceAttribute",
                  "ec2:RestoreAddressToClassic",
                  "ec2:RevokeSecurityGroupEgress",
                  "ec2:RevokeSecurityGroupIngress",
                  "ec2:UnassignIpv6Addresses",
                  "ec2:UnassignPrivateIpAddresses",
                  "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                  "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v7",
          "IsDefaultVersion": true,
          "CreateDate": "2018-03-15 18:30:25+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:ModifyVpcEndpointServicePermissions"
      ],
      "InfrastructureModification": [
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AllocateAddress",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssociateAddress",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFlowLogs",
        "ec2:CreateInternetGateway",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSubnet",
        "ec2:CreateTags",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSubnet",
        "ec2:DeleteTags",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePrefixLists",
        "ec2:DescribeRouteTables",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVpnGateway",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:MoveAddressToVpc",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
      ]
    },
    "ANPAJH4QJ2WMHBOB47BUE": {
      "PolicyName": "AWSTrustedAdvisorServiceRolePolicy",
      "PolicyId": "ANPAJH4QJ2WMHBOB47BUE",
      "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy",
      "Path": "/aws-service-role/",
      "DefaultVersionId": "v8",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2018-02-22 21:24:25+00:00",
      "UpdateDate": "2020-04-08 16:15:31+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "autoscaling:DescribeAccountLimits",
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeLaunchConfigurations",
                  "cloudformation:DescribeAccountLimits",
                  "cloudformation:DescribeStacks",
                  "cloudformation:ListStacks",
                  "cloudfront:ListDistributions",
                  "cloudtrail:DescribeTrails",
                  "cloudtrail:GetTrailStatus",
                  "dynamodb:DescribeLimits",
                  "dynamodb:DescribeTable",
                  "dynamodb:ListTables",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeReservedInstances",
                  "ec2:DescribeInstances",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeImages",
                  "ec2:DescribeVolumes",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeReservedInstancesOfferings",
                  "ec2:DescribeSnapshots",
                  "ec2:DescribeVpnConnections",
                  "ec2:DescribeVpnGateways",
                  "ec2:DescribeLaunchTemplateVersions",
                  "elasticloadbalancing:DescribeAccountLimits",
                  "elasticloadbalancing:DescribeInstanceHealth",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancerPolicies",
                  "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "iam:GenerateCredentialReport",
                  "iam:GetAccountPasswordPolicy",
                  "iam:GetAccountSummary",
                  "iam:GetCredentialReport",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "kinesis:DescribeLimits",
                  "rds:DescribeAccountAttributes",
                  "rds:DescribeDBClusters",
                  "rds:DescribeDBEngineVersions",
                  "rds:DescribeDBInstances",
                  "rds:DescribeDBParameterGroups",
                  "rds:DescribeDBParameters",
                  "rds:DescribeDBSecurityGroups",
                  "rds:DescribeDBSnapshots",
                  "rds:DescribeDBSubnetGroups",
                  "rds:DescribeEngineDefaultParameters",
                  "rds:DescribeEvents",
                  "rds:DescribeOptionGroupOptions",
                  "rds:DescribeOptionGroups",
                  "rds:DescribeOrderableDBInstanceOptions",
                  "rds:DescribeReservedDBInstances",
                  "rds:DescribeReservedDBInstancesOfferings",
                  "rds:ListTagsForResource",
                  "redshift:DescribeClusters",
                  "redshift:DescribeReservedNodeOfferings",
                  "redshift:DescribeReservedNodes",
                  "route53:GetAccountLimit",
                  "route53:GetHealthCheck",
                  "route53:GetHostedZone",
                  "route53:ListHealthChecks",
                  "route53:ListHostedZones",
                  "route53:ListHostedZonesByName",
                  "route53:ListResourceRecordSets",
                  "s3:GetBucketAcl",
                  "s3:GetBucketPolicy",
                  "s3:GetBucketPolicyStatus",
                  "s3:GetBucketLocation",
                  "s3:GetBucketLogging",
                  "s3:GetBucketVersioning",
                  "s3:GetBucketPublicAccessBlock",
                  "s3:ListBucket",
                  "s3:ListAllMyBuckets",
                  "ses:GetSendQuota",
                  "sqs:ListQueues",
                  "cloudwatch:GetMetricStatistics",
                  "ce:GetReservationPurchaseRecommendation",
                  "ce:GetSavingsPlansPurchaseRecommendation"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v8",
          "IsDefaultVersion": true,
          "CreateDate": "2020-04-08 16:15:31+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "autoscaling:DescribeAccountLimits",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeLaunchConfigurations",
        "ce:GetReservationPurchaseRecommendation",
        "ce:GetSavingsPlansPurchaseRecommendation",
        "cloudformation:DescribeAccountLimits",
        "cloudformation:DescribeStacks",
        "cloudformation:ListStacks",
        "cloudfront:ListDistributions",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetTrailStatus",
        "cloudwatch:GetMetricStatistics",
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeTable",
        "dynamodb:ListTables",
        "ec2:DescribeAddresses",
        "ec2:DescribeImages",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshots",
        "ec2:DescribeVolumes",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeInstanceHealth",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "iam:GenerateCredentialReport",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetCredentialReport",
        "iam:GetServerCertificate",
        "iam:ListServerCertificates",
        "kinesis:DescribeLimits",
        "rds:DescribeAccountAttributes",
        "rds:DescribeDBClusters",
        "rds:DescribeDBEngineVersions",
        "rds:DescribeDBInstances",
        "rds:DescribeDBParameterGroups",
        "rds:DescribeDBParameters",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEngineDefaultParameters",
        "rds:DescribeEvents",
        "rds:DescribeOptionGroupOptions",
        "rds:DescribeOptionGroups",
        "rds:DescribeOrderableDBInstanceOptions",
        "rds:DescribeReservedDBInstances",
        "rds:DescribeReservedDBInstancesOfferings",
        "rds:ListTagsForResource",
        "redshift:DescribeClusters",
        "redshift:DescribeReservedNodeOfferings",
        "redshift:DescribeReservedNodes",
        "route53:GetAccountLimit",
        "route53:GetHealthCheck",
        "route53:GetHostedZone",
        "route53:ListHealthChecks",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ListResourceRecordSets",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketVersioning",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "ses:GetSendQuota",
        "sqs:ListQueues"
      ]
    },
    "ANPAJKSO7NDY4T57MWDSQ": {
      "PolicyName": "IAMReadOnlyAccess",
      "PolicyId": "ANPAJKSO7NDY4T57MWDSQ",
      "Arn": "arn:aws:iam::aws:policy/IAMReadOnlyAccess",
      "Path": "/",
      "DefaultVersionId": "v4",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:39+00:00",
      "UpdateDate": "2018-01-25 19:11:27+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "iam:GenerateCredentialReport",
                  "iam:GenerateServiceLastAccessedDetails",
                  "iam:Get*",
                  "iam:List*",
                  "iam:SimulateCustomPolicy",
                  "iam:SimulatePrincipalPolicy"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v4",
          "IsDefaultVersion": true,
          "CreateDate": "2018-01-25 19:11:27+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "iam:GenerateCredentialReport",
        "iam:GenerateServiceLastAccessedDetails",
        "iam:GetAccessKeyLastUsed",
        "iam:GetAccountAuthorizationDetails",
        "iam:GetAccountPasswordPolicy",
        "iam:GetAccountSummary",
        "iam:GetContextKeysForCustomPolicy",
        "iam:GetContextKeysForPrincipalPolicy",
        "iam:GetCredentialReport",
        "iam:GetGroup",
        "iam:GetGroupPolicy",
        "iam:GetInstanceProfile",
        "iam:GetLoginProfile",
        "iam:GetOpenIDConnectProvider",
        "iam:GetOrganizationsAccessReport",
        "iam:GetPolicy",
        "iam:GetPolicyVersion",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:GetSAMLProvider",
        "iam:GetSSHPublicKey",
        "iam:GetServerCertificate",
        "iam:GetServiceLastAccessedDetails",
        "iam:GetServiceLastAccessedDetailsWithEntities",
        "iam:GetServiceLinkedRoleDeletionStatus",
        "iam:GetUser",
        "iam:GetUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAccountAliases",
        "iam:ListAttachedGroupPolicies",
        "iam:ListAttachedRolePolicies",
        "iam:ListAttachedUserPolicies",
        "iam:ListEntitiesForPolicy",
        "iam:ListGroupPolicies",
        "iam:ListGroups",
        "iam:ListGroupsForUser",
        "iam:ListInstanceProfiles",
        "iam:ListInstanceProfilesForRole",
        "iam:ListMFADevices",
        "iam:ListOpenIDConnectProviders",
        "iam:ListPolicies",
        "iam:ListPoliciesGrantingServiceAccess",
        "iam:ListPolicyVersions",
        "iam:ListRolePolicies",
        "iam:ListRoleTags",
        "iam:ListRoles",
        "iam:ListSAMLProviders",
        "iam:ListSSHPublicKeys",
        "iam:ListServerCertificates",
        "iam:ListServiceSpecificCredentials",
        "iam:ListSigningCertificates",
        "iam:ListUserPolicies",
        "iam:ListUserTags",
        "iam:ListUsers",
        "iam:ListVirtualMFADevices",
        "iam:SimulateCustomPolicy",
        "iam:SimulatePrincipalPolicy"
      ]
    },
    "ANPAJLIB4VSBVO47ZSBB6": {
      "PolicyName": "AWSAccountUsageReportAccess",
      "PolicyId": "ANPAJLIB4VSBVO47ZSBB6",
      "Arn": "arn:aws:iam::aws:policy/AWSAccountUsageReportAccess",
      "Path": "/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:41:19+00:00",
      "UpdateDate": "2015-02-06 18:41:19+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "aws-portal:ViewUsage"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2015-02-06 18:41:19+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "aws-portal:ViewUsage"
      ]
    },
    "ANPAJNPP7PPPPMJRV2SA4": {
      "PolicyName": "AWSKeyManagementServicePowerUser",
      "PolicyId": "ANPAJNPP7PPPPMJRV2SA4",
      "Arn": "arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser",
      "Path": "/",
      "DefaultVersionId": "v2",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:40+00:00",
      "UpdateDate": "2017-03-07 00:55:11+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "kms:CreateAlias",
                  "kms:CreateKey",
                  "kms:DeleteAlias",
                  "kms:Describe*",
                  "kms:GenerateRandom",
                  "kms:Get*",
                  "kms:List*",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "iam:ListGroups",
                  "iam:ListRoles",
                  "iam:ListUsers"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v2",
          "IsDefaultVersion": true,
          "CreateDate": "2017-03-07 00:55:11+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "iam:ListGroups",
        "iam:ListRoles",
        "iam:ListUsers",
        "kms:CreateAlias",
        "kms:CreateKey",
        "kms:DeleteAlias",
        "kms:DescribeCustomKeyStores",
        "kms:DescribeKey",
        "kms:GenerateRandom",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:GetParametersForImport",
        "kms:GetPublicKey",
        "kms:ListAliases",
        "kms:ListGrants",
        "kms:ListKeyPolicies",
        "kms:ListKeys",
        "kms:ListResourceTags",
        "kms:ListRetirableGrants",
        "kms:TagResource",
        "kms:UntagResource"
      ]
    },
    "ANPAJS2PBJSYV2EZW3MIQ": {
      "PolicyName": "AWSVPCTransitGatewayServiceRolePolicy",
      "PolicyId": "ANPAJS2PBJSYV2EZW3MIQ",
      "Arn": "arn:aws:iam::aws:policy/aws-service-role/AWSVPCTransitGatewayServiceRolePolicy",
      "Path": "/aws-service-role/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2018-11-26 16:21:17+00:00",
      "UpdateDate": "2018-11-26 16:21:17+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "ec2:CreateNetworkInterface",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:ModifyNetworkInterfaceAttribute",
                  "ec2:DeleteNetworkInterface",
                  "ec2:CreateNetworkInterfacePermission"
                ],
                "Resource": "*",
                "Effect": "Allow",
                "Sid": "0"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2018-11-26 16:21:17+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "ec2:CreateNetworkInterfacePermission"
      ],
      "InfrastructureModification": [
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:ModifyNetworkInterfaceAttribute"
      ]
    },
    "ANPAJWVDLG5RPST6PHQ3A": {
      "PolicyName": "AmazonRoute53FullAccess",
      "PolicyId": "ANPAJWVDLG5RPST6PHQ3A",
      "Arn": "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
      "Path": "/",
      "DefaultVersionId": "v4",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:40:54+00:00",
      "UpdateDate": "2018-12-20 21:42:00+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "route53:*",
                  "route53domains:*",
                  "cloudfront:ListDistributions",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticbeanstalk:DescribeEnvironments",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetBucketWebsite",
                  "ec2:DescribeVpcs",
                  "ec2:DescribeVpcEndpoints",
                  "ec2:DescribeRegions",
                  "sns:ListTopics",
                  "sns:ListSubscriptionsByTopic",
                  "cloudwatch:DescribeAlarms",
                  "cloudwatch:GetMetricStatistics"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": "apigateway:GET",
                "Resource": "arn:aws:apigateway:*::/domainnames"
              }
            ]
          },
          "VersionId": "v4",
          "IsDefaultVersion": true,
          "CreateDate": "2018-12-20 21:42:00+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": [
        "cloudfront:ListDistributions",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricStatistics",
        "ec2:DescribeRegions",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcs",
        "elasticbeanstalk:DescribeEnvironments",
        "elasticloadbalancing:DescribeLoadBalancers",
        "route53:AssociateVPCWithHostedZone",
        "route53:ChangeResourceRecordSets",
        "route53:ChangeTagsForResource",
        "route53:CreateHealthCheck",
        "route53:CreateHostedZone",
        "route53:CreateQueryLoggingConfig",
        "route53:CreateReusableDelegationSet",
        "route53:CreateTrafficPolicy",
        "route53:CreateTrafficPolicyInstance",
        "route53:CreateTrafficPolicyVersion",
        "route53:CreateVPCAssociationAuthorization",
        "route53:DeleteHealthCheck",
        "route53:DeleteHostedZone",
        "route53:DeleteQueryLoggingConfig",
        "route53:DeleteReusableDelegationSet",
        "route53:DeleteTrafficPolicy",
        "route53:DeleteTrafficPolicyInstance",
        "route53:DeleteVPCAssociationAuthorization",
        "route53:DisassociateVPCFromHostedZone",
        "route53:GetAccountLimit",
        "route53:GetChange",
        "route53:GetCheckerIpRanges",
        "route53:GetGeoLocation",
        "route53:GetHealthCheck",
        "route53:GetHealthCheckCount",
        "route53:GetHealthCheckLastFailureReason",
        "route53:GetHealthCheckStatus",
        "route53:GetHostedZone",
        "route53:GetHostedZoneCount",
        "route53:GetHostedZoneLimit",
        "route53:GetQueryLoggingConfig",
        "route53:GetReusableDelegationSet",
        "route53:GetReusableDelegationSetLimit",
        "route53:GetTrafficPolicy",
        "route53:GetTrafficPolicyInstance",
        "route53:GetTrafficPolicyInstanceCount",
        "route53:ListGeoLocations",
        "route53:ListHealthChecks",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ListQueryLoggingConfigs",
        "route53:ListResourceRecordSets",
        "route53:ListReusableDelegationSets",
        "route53:ListTagsForResource",
        "route53:ListTagsForResources",
        "route53:ListTrafficPolicies",
        "route53:ListTrafficPolicyInstances",
        "route53:ListTrafficPolicyInstancesByHostedZone",
        "route53:ListTrafficPolicyInstancesByPolicy",
        "route53:ListTrafficPolicyVersions",
        "route53:ListVPCAssociationAuthorizations",
        "route53:TestDNSAnswer",
        "route53:UpdateHealthCheck",
        "route53:UpdateHostedZoneComment",
        "route53:UpdateTrafficPolicyComment",
        "route53:UpdateTrafficPolicyInstance",
        "route53domains:CheckDomainAvailability",
        "route53domains:DeleteTagsForDomain",
        "route53domains:DisableDomainAutoRenew",
        "route53domains:DisableDomainTransferLock",
        "route53domains:EnableDomainAutoRenew",
        "route53domains:EnableDomainTransferLock",
        "route53domains:GetContactReachabilityStatus",
        "route53domains:GetDomainDetail",
        "route53domains:GetDomainSuggestions",
        "route53domains:GetOperationDetail",
        "route53domains:ListDomains",
        "route53domains:ListOperations",
        "route53domains:ListTagsForDomain",
        "route53domains:RegisterDomain",
        "route53domains:RenewDomain",
        "route53domains:ResendContactReachabilityEmail",
        "route53domains:RetrieveDomainAuthCode",
        "route53domains:TransferDomain",
        "route53domains:UpdateDomainContact",
        "route53domains:UpdateDomainContactPrivacy",
        "route53domains:UpdateDomainNameservers",
        "route53domains:UpdateTagsForDomain",
        "route53domains:ViewBilling",
        "s3:GetBucketLocation",
        "s3:GetBucketWebsite",
        "s3:ListBucket",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTopics"
      ]
    },
    "ANPAJYRXTHIB4FOVS3ZXS": {
      "PolicyName": "PowerUserAccess",
      "PolicyId": "ANPAJYRXTHIB4FOVS3ZXS",
      "Arn": "arn:aws:iam::aws:policy/PowerUserAccess",
      "Path": "/",
      "DefaultVersionId": "v4",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2015-02-06 18:39:47+00:00",
      "UpdateDate": "2019-03-20 22:19:03+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "NotAction": [
                  "iam:*",
                  "organizations:*",
                  "account:*"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "iam:CreateServiceLinkedRole",
                  "iam:DeleteServiceLinkedRole",
                  "iam:ListRoles",
                  "organizations:DescribeOrganization",
                  "account:ListRegions"
                ],
                "Resource": "*"
              }
            ]
          },
          "VersionId": "v4",
          "IsDefaultVersion": true,
          "CreateDate": "2019-03-20 22:19:03+00:00"
        }
      ],
      "PrivilegeEscalation": [
        {
          "type": "UpdateExistingGlueDevEndpoint",
          "actions": [
            "glue:updatedevendpoint"
          ]
        },
        {
          "type": "EditExistingLambdaFunctionWithRole",
          "actions": [
            "lambda:updatefunctioncode"
          ]
        }
      ],
      "DataExfiltration": [
        "s3:GetObject",
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:GetParametersByPath",
        "secretsmanager:GetSecretValue"
      ],
      "ResourceExposure": [
        "acm-pca:CreatePermission",
        "acm-pca:DeletePermission",
        "apigateway:UpdateRestApiPolicy",
        "backup:DeleteBackupVaultAccessPolicy",
        "backup:PutBackupVaultAccessPolicy",
        "chime:DeleteVoiceConnectorTerminationCredentials",
        "chime:PutVoiceConnectorTerminationCredentials",
        "cloudformation:SetStackPolicy",
        "cloudsearch:UpdateServiceAccessPolicies",
        "codeartifact:DeleteDomainPermissionsPolicy",
        "codeartifact:DeleteRepositoryPermissionsPolicy",
        "codebuild:DeleteResourcePolicy",
        "codebuild:DeleteSourceCredentials",
        "codebuild:ImportSourceCredentials",
        "codebuild:PutResourcePolicy",
        "codeguru-profiler:PutPermission",
        "codeguru-profiler:RemovePermission",
        "codestar:AssociateTeamMember",
        "codestar:CreateProject",
        "codestar:DeleteProject",
        "codestar:DisassociateTeamMember",
        "codestar:UpdateTeamMember",
        "cognito-identity:CreateIdentityPool",
        "cognito-identity:DeleteIdentities",
        "cognito-identity:DeleteIdentityPool",
        "cognito-identity:GetId",
        "cognito-identity:MergeDeveloperIdentities",
        "cognito-identity:SetIdentityPoolRoles",
        "cognito-identity:UnlinkDeveloperIdentity",
        "cognito-identity:UnlinkIdentity",
        "cognito-identity:UpdateIdentityPool",
        "deeplens:AssociateServiceRoleToAccount",
        "ds:CreateConditionalForwarder",
        "ds:CreateDirectory",
        "ds:CreateMicrosoftAD",
        "ds:CreateTrust",
        "ds:ShareDirectory",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ResetSnapshotAttribute",
        "ecr:DeleteRepositoryPolicy",
        "ecr:SetRepositoryPolicy",
        "elasticfilesystem:DeleteFileSystemPolicy",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticmapreduce:PutBlockPublicAccessConfiguration",
        "es:CreateElasticsearchDomain",
        "es:UpdateElasticsearchDomainConfig",
        "glacier:AbortVaultLock",
        "glacier:CompleteVaultLock",
        "glacier:DeleteVaultAccessPolicy",
        "glacier:InitiateVaultLock",
        "glacier:SetDataRetrievalPolicy",
        "glacier:SetVaultAccessPolicy",
        "glue:DeleteResourcePolicy",
        "glue:PutResourcePolicy",
        "greengrass:AssociateServiceRoleToAccount",
        "health:DisableHealthServiceAccessForOrganization",
        "health:EnableHealthServiceAccessForOrganization",
        "imagebuilder:PutComponentPolicy",
        "imagebuilder:PutImagePolicy",
        "imagebuilder:PutImageRecipePolicy",
        "iot:AttachPolicy",
        "iot:AttachPrincipalPolicy",
        "iot:DetachPolicy",
        "iot:DetachPrincipalPolicy",
        "iot:SetDefaultAuthorizer",
        "iot:SetDefaultPolicyVersion",
        "iotsitewise:CreateAccessPolicy",
        "iotsitewise:DeleteAccessPolicy",
        "iotsitewise:UpdateAccessPolicy",
        "kms:CreateGrant",
        "kms:PutKeyPolicy",
        "kms:RetireGrant",
        "kms:RevokeGrant",
        "lakeformation:BatchGrantPermissions",
        "lakeformation:BatchRevokePermissions",
        "lakeformation:GrantPermissions",
        "lakeformation:PutDataLakeSettings",
        "lakeformation:RevokePermissions",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "license-manager:UpdateServiceSettings",
        "lightsail:GetRelationalDatabaseMasterUserPassword",
        "logs:DeleteResourcePolicy",
        "logs:PutResourcePolicy",
        "mediapackage:RotateIngestEndpointCredentials",
        "mediastore:DeleteContainerPolicy",
        "mediastore:PutContainerPolicy",
        "opsworks:SetPermission",
        "opsworks:UpdateUserProfile",
        "quicksight:CreateAdmin",
        "quicksight:CreateGroup",
        "quicksight:CreateGroupMembership",
        "quicksight:CreateIAMPolicyAssignment",
        "quicksight:CreateUser",
        "quicksight:DeleteGroup",
        "quicksight:DeleteGroupMembership",
        "quicksight:DeleteIAMPolicyAssignment",
        "quicksight:DeleteUser",
        "quicksight:DeleteUserByPrincipalId",
        "quicksight:RegisterUser",
        "quicksight:UpdateDashboardPermissions",
        "quicksight:UpdateGroup",
        "quicksight:UpdateIAMPolicyAssignment",
        "quicksight:UpdateTemplatePermissions",
        "quicksight:UpdateUser",
        "ram:AcceptResourceShareInvitation",
        "ram:AssociateResourceShare",
        "ram:CreateResourceShare",
        "ram:DeleteResourceShare",
        "ram:DisassociateResourceShare",
        "ram:EnableSharingWithAwsOrganization",
        "ram:RejectResourceShareInvitation",
        "ram:UpdateResourceShare",
        "rds-db:connect",
        "rds:AuthorizeDBSecurityGroupIngress",
        "redshift:AuthorizeSnapshotAccess",
        "redshift:CreateClusterUser",
        "redshift:CreateSnapshotCopyGrant",
        "redshift:JoinGroup",
        "redshift:ModifyClusterIamRoles",
        "redshift:RevokeSnapshotAccess",
        "route53resolver:PutResolverRulePolicy",
        "s3:BypassGovernanceRetention",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucketPolicy",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutBucketAcl",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutObjectAcl",
        "s3:PutObjectVersionAcl",
        "secretsmanager:DeleteResourcePolicy",
        "secretsmanager:PutResourcePolicy",
        "servicecatalog:CreatePortfolioShare",
        "servicecatalog:DeletePortfolioShare",
        "sns:AddPermission",
        "sns:CreateTopic",
        "sns:RemovePermission",
        "sns:SetTopicAttributes",
        "sqs:AddPermission",
        "sqs:CreateQueue",
        "sqs:RemovePermission",
        "sqs:SetQueueAttributes",
        "ssm:ModifyDocumentPermission",
        "sso-directory:AddMemberToGroup",
        "sso-directory:CreateAlias",
        "sso-directory:CreateGroup",
        "sso-directory:CreateUser",
        "sso-directory:DeleteGroup",
        "sso-directory:DeleteUser",
        "sso-directory:DisableUser",
        "sso-directory:EnableUser",
        "sso-directory:RemoveMemberFromGroup",
        "sso-directory:UpdateGroup",
        "sso-directory:UpdatePassword",
        "sso-directory:UpdateUser",
        "sso-directory:VerifyEmail",
        "sso:AssociateDirectory",
        "sso:AssociateProfile",
        "sso:CreateApplicationInstance",
        "sso:CreateApplicationInstanceCertificate",
        "sso:CreatePermissionSet",
        "sso:CreateProfile",
        "sso:CreateTrust",
        "sso:DeleteApplicationInstance",
        "sso:DeleteApplicationInstanceCertificate",
        "sso:DeletePermissionSet",
        "sso:DeletePermissionsPolicy",
        "sso:DeleteProfile",
        "sso:DisassociateDirectory",
        "sso:DisassociateProfile",
        "sso:ImportApplicationInstanceServiceProviderMetadata",
        "sso:PutPermissionsPolicy",
        "sso:StartSSO",
        "sso:UpdateApplicationInstanceActiveCertificate",
        "sso:UpdateApplicationInstanceDisplayData",
        "sso:UpdateApplicationInstanceResponseConfiguration",
        "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
        "sso:UpdateApplicationInstanceSecurityConfiguration",
        "sso:UpdateApplicationInstanceServiceProviderConfiguration",
        "sso:UpdateApplicationInstanceStatus",
        "sso:UpdateDirectoryAssociation",
        "sso:UpdatePermissionSet",
        "sso:UpdateProfile",
        "sso:UpdateSSOConfiguration",
        "sso:UpdateTrust",
        "storagegateway:DeleteChapCredentials",
        "storagegateway:SetLocalConsolePassword",
        "storagegateway:SetSMBGuestPassword",
        "storagegateway:UpdateChapCredentials",
        "waf-regional:DeletePermissionPolicy",
        "waf-regional:PutPermissionPolicy",
        "waf:DeletePermissionPolicy",
        "waf:PutPermissionPolicy",
        "wafv2:CreateWebACL",
        "wafv2:DeletePermissionPolicy",
        "wafv2:DeleteWebACL",
        "wafv2:PutPermissionPolicy",
        "wafv2:UpdateWebACL",
        "worklink:UpdateDevicePolicyConfiguration",
        "workmail:ResetPassword",
        "workmail:ResetUserPassword",
        "xray:PutEncryptionConfig",
        "iam:CreateServiceLinkedRole",
        "iam:DeleteServiceLinkedRole"
      ],
      "InfrastructureModification": [
        "a4b:ApproveSkill",
        "a4b:AssociateContactWithAddressBook",
        "a4b:AssociateDeviceWithRoom",
        "a4b:AssociateSkillGroupWithRoom",
        "a4b:AssociateSkillWithSkillGroup",
        "a4b:AssociateSkillWithUsers",
        "a4b:CompleteRegistration",
        "a4b:CreateAddressBook",
        "a4b:CreateBusinessReportSchedule",
        "a4b:CreateConferenceProvider",
        "a4b:CreateContact",
        "a4b:CreateProfile",
        "a4b:CreateRoom",
        "a4b:CreateSkillGroup",
        "a4b:CreateUser",
        "a4b:DeleteAddressBook",
        "a4b:DeleteBusinessReportSchedule",
        "a4b:DeleteConferenceProvider",
        "a4b:DeleteContact",
        "a4b:DeleteDevice",
        "a4b:DeleteProfile",
        "a4b:DeleteRoom",
        "a4b:DeleteRoomSkillParameter",
        "a4b:DeleteSkillAuthorization",
        "a4b:DeleteSkillGroup",
        "a4b:DeleteUser",
        "a4b:DisassociateContactFromAddressBook",
        "a4b:DisassociateDeviceFromRoom",
        "a4b:DisassociateSkillFromSkillGroup",
        "a4b:DisassociateSkillFromUsers",
        "a4b:DisassociateSkillGroupFromRoom",
        "a4b:ForgetSmartHomeAppliances",
        "a4b:GetAddressBook",
        "a4b:GetConferencePreference",
        "a4b:GetConferenceProvider",
        "a4b:GetContact",
        "a4b:GetDevice",
        "a4b:GetNetworkProfile",
        "a4b:GetProfile",
        "a4b:GetRoom",
        "a4b:GetRoomSkillParameter",
        "a4b:GetSkillGroup",
        "a4b:ListBusinessReportSchedules",
        "a4b:ListConferenceProviders",
        "a4b:ListDeviceEvents",
        "a4b:ListSkills",
        "a4b:ListSkillsStoreCategories",
        "a4b:ListSkillsStoreSkillsByCategory",
        "a4b:ListSmartHomeAppliances",
        "a4b:ListTags",
        "a4b:PutConferencePreference",
        "a4b:PutDeviceSetupEvents",
        "a4b:PutRoomSkillParameter",
        "a4b:PutSkillAuthorization",
        "a4b:RegisterAVSDevice",
        "a4b:RegisterDevice",
        "a4b:RejectSkill",
        "a4b:ResolveRoom",
        "a4b:RevokeInvitation",
        "a4b:SearchAddressBooks",
        "a4b:SearchContacts",
        "a4b:SearchDevices",
        "a4b:SearchNetworkProfiles",
        "a4b:SearchProfiles",
        "a4b:SearchRooms",
        "a4b:SearchSkillGroups",
        "a4b:SearchUsers",
        "a4b:SendInvitation",
        "a4b:StartDeviceSync",
        "a4b:StartSmartHomeApplianceDiscovery",
        "a4b:TagResource",
        "a4b:UntagResource",
        "a4b:UpdateAddressBook",
        "a4b:UpdateBusinessReportSchedule",
        "a4b:UpdateConferenceProvider",
        "a4b:UpdateContact",
        "a4b:UpdateDevice",
        "a4b:UpdateProfile",
        "a4b:UpdateRoom",
        "a4b:UpdateSkillGroup",
        "access-analyzer:CreateAnalyzer",
        "access-analyzer:CreateArchiveRule",
        "access-analyzer:DeleteAnalyzer",
        "access-analyzer:DeleteArchiveRule",
        "access-analyzer:GetAnalyzedResource",
        "access-analyzer:GetAnalyzer",
        "access-analyzer:GetArchiveRule",
        "access-analyzer:GetFinding",
        "access-analyzer:ListAnalyzedResources",
        "access-analyzer:ListAnalyzers",
        "access-analyzer:ListArchiveRules",
        "access-analyzer:ListFindings",
        "access-analyzer:ListTagsForResource",
        "access-analyzer:StartResourceScan",
        "access-analyzer:TagResource",
        "access-analyzer:UntagResource",
        "access-analyzer:UpdateArchiveRule",
        "access-analyzer:UpdateFindings",
        "acm-pca:CreateCertificateAuthority",
        "acm-pca:CreateCertificateAuthorityAuditReport",
        "acm-pca:CreatePermission",
        "acm-pca:DeleteCertificateAuthority",
        "acm-pca:DeletePermission",
        "acm-pca:DescribeCertificateAuthority",
        "acm-pca:DescribeCertificateAuthorityAuditReport",
        "acm-pca:GetCertificate",
        "acm-pca:GetCertificateAuthorityCertificate",
        "acm-pca:GetCertificateAuthorityCsr",
        "acm-pca:ImportCertificateAuthorityCertificate",
        "acm-pca:IssueCertificate",
        "acm-pca:ListCertificateAuthorities",
        "acm-pca:ListPermissions",
        "acm-pca:ListTags",
        "acm-pca:RestoreCertificateAuthority",
        "acm-pca:RevokeCertificate",
        "acm-pca:TagCertificateAuthority",
        "acm-pca:UntagCertificateAuthority",
        "acm-pca:UpdateCertificateAuthority",
        "acm:AddTagsToCertificate",
        "acm:DeleteCertificate",
        "acm:DescribeCertificate",
        "acm:ExportCertificate",
        "acm:GetCertificate",
        "acm:ImportCertificate",
        "acm:ListCertificates",
        "acm:ListTagsForCertificate",
        "acm:RemoveTagsFromCertificate",
        "acm:RenewCertificate",
        "acm:RequestCertificate",
        "acm:ResendValidationEmail",
        "acm:UpdateCertificateOptions",
        "amplify:CreateApp",
        "amplify:CreateBackendEnvironment",
        "amplify:CreateBranch",
        "amplify:CreateDeployment",
        "amplify:CreateDomainAssociation",
        "amplify:CreateWebHook",
        "amplify:DeleteApp",
        "amplify:DeleteBackendEnvironment",
        "amplify:DeleteBranch",
        "amplify:DeleteDomainAssociation",
        "amplify:DeleteJob",
        "amplify:DeleteWebHook",
        "amplify:GenerateAccessLogs",
        "amplify:GetApp",
        "amplify:GetArtifactUrl",
        "amplify:GetBackendEnvironment",
        "amplify:GetBranch",
        "amplify:GetDomainAssociation",
        "amplify:GetJob",
        "amplify:GetWebHook",
        "amplify:ListApps",
        "amplify:ListArtifacts",
        "amplify:ListBackendEnvironments",
        "amplify:ListBranches",
        "amplify:ListDomainAssociations",
        "amplify:ListJobs",
        "amplify:ListWebHooks",
        "amplify:StartDeployment",
        "amplify:StartJob",
        "amplify:StopJob",
        "amplify:TagResource",
        "amplify:UntagResource",
        "amplify:UpdateApp",
        "amplify:UpdateBranch",
        "amplify:UpdateDomainAssociation",
        "amplify:UpdateWebHook",
        "apigateway:DELETE",
        "apigateway:GET",
        "apigateway:PATCH",
        "apigateway:POST",
        "apigateway:PUT",
        "apigateway:SetWebACL",
        "apigateway:UpdateRestApiPolicy",
        "appconfig:CreateApplication",
        "appconfig:CreateConfigurationProfile",
        "appconfig:CreateDeploymentStrategy",
        "appconfig:CreateEnvironment",
        "appconfig:DeleteApplication",
        "appconfig:DeleteConfigurationProfile",
        "appconfig:DeleteDeploymentStrategy",
        "appconfig:DeleteEnvironment",
        "appconfig:GetApplication",
        "appconfig:GetConfiguration",
        "appconfig:GetConfigurationProfile",
        "appconfig:GetDeployment",
        "appconfig:GetDeploymentStrategy",
        "appconfig:GetEnvironment",
        "appconfig:ListApplications",
        "appconfig:ListConfigurationProfiles",
        "appconfig:ListDeploymentStrategies",
        "appconfig:ListDeployments",
        "appconfig:ListEnvironments",
        "appconfig:ListTagsForResource",
        "appconfig:StartDeployment",
        "appconfig:StopDeployment",
        "appconfig:TagResource",
        "appconfig:UntagResource",
        "appconfig:UpdateApplication",
        "appconfig:UpdateConfigurationProfile",
        "appconfig:UpdateDeploymentStrategy",
        "appconfig:UpdateEnvironment",
        "appconfig:ValidateConfiguration",
        "appflow:CreateConnectorProfile",
        "appflow:CreateFlow",
        "appflow:DeleteConnectorProfile",
        "appflow:DeleteFlow",
        "appflow:DescribeConnectorFields",
        "appflow:DescribeConnectorProfiles",
        "appflow:DescribeConnectors",
        "appflow:DescribeFlowExecution",
        "appflow:DescribeFlows",
        "appflow:ListConnectorFields",
        "appflow:ListTagsForResource",
        "appflow:RunFlow",
        "appflow:TagResource",
        "appflow:UntagResource",
        "appflow:UpdateFlow",
        "application-autoscaling:DeleteScalingPolicy",
        "application-autoscaling:DeleteScheduledAction",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingActivities",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DescribeScheduledActions",
        "application-autoscaling:PutScalingPolicy",
        "application-autoscaling:PutScheduledAction",
        "application-autoscaling:RegisterScalableTarget",
        "applicationinsights:CreateApplication",
        "applicationinsights:CreateComponent",
        "applicationinsights:DeleteApplication",
        "applicationinsights:DeleteComponent",
        "applicationinsights:DescribeApplication",
        "applicationinsights:DescribeComponent",
        "applicationinsights:DescribeComponentConfiguration",
        "applicationinsights:DescribeComponentConfigurationRecommendation",
        "applicationinsights:DescribeObservation",
        "applicationinsights:DescribeProblem",
        "applicationinsights:DescribeProblemObservations",
        "applicationinsights:ListApplications",
        "applicationinsights:ListComponents",
        "applicationinsights:ListProblems",
        "applicationinsights:UpdateApplication",
        "applicationinsights:UpdateComponent",
        "applicationinsights:UpdateComponentConfiguration",
        "appmesh-preview:CreateMesh",
        "appmesh-preview:CreateRoute",
        "appmesh-preview:CreateVirtualNode",
        "appmesh-preview:CreateVirtualRouter",
        "appmesh-preview:CreateVirtualService",
        "appmesh-preview:DeleteMesh",
        "appmesh-preview:DeleteRoute",
        "appmesh-preview:DeleteVirtualNode",
        "appmesh-preview:DeleteVirtualRouter",
        "appmesh-preview:DeleteVirtualService",
        "appmesh-preview:DescribeMesh",
        "appmesh-preview:DescribeRoute",
        "appmesh-preview:DescribeVirtualNode",
        "appmesh-preview:DescribeVirtualRouter",
        "appmesh-preview:DescribeVirtualService",
        "appmesh-preview:ListMeshes",
        "appmesh-preview:ListRoutes",
        "appmesh-preview:ListVirtualNodes",
        "appmesh-preview:ListVirtualRouters",
        "appmesh-preview:ListVirtualServices",
        "appmesh-preview:StreamAggregatedResources",
        "appmesh-preview:UpdateMesh",
        "appmesh-preview:UpdateRoute",
        "appmesh-preview:UpdateVirtualNode",
        "appmesh-preview:UpdateVirtualRouter",
        "appmesh-preview:UpdateVirtualService",
        "appmesh:CreateMesh",
        "appmesh:CreateRoute",
        "appmesh:CreateVirtualNode",
        "appmesh:CreateVirtualRouter",
        "appmesh:CreateVirtualService",
        "appmesh:DeleteMesh",
        "appmesh:DeleteRoute",
        "appmesh:DeleteVirtualNode",
        "appmesh:DeleteVirtualRouter",
        "appmesh:DeleteVirtualService",
        "appmesh:DescribeMesh",
        "appmesh:DescribeRoute",
        "appmesh:DescribeVirtualNode",
        "appmesh:DescribeVirtualRouter",
        "appmesh:DescribeVirtualService",
        "appmesh:ListMeshes",
        "appmesh:ListRoutes",
        "appmesh:ListTagsForResource",
        "appmesh:ListVirtualNodes",
        "appmesh:ListVirtualRouters",
        "appmesh:ListVirtualServices",
        "appmesh:StreamAggregatedResources",
        "appmesh:TagResource",
        "appmesh:UntagResource",
        "appmesh:UpdateMesh",
        "appmesh:UpdateRoute",
        "appmesh:UpdateVirtualNode",
        "appmesh:UpdateVirtualRouter",
        "appmesh:UpdateVirtualService",
        "appstream:AssociateFleet",
        "appstream:BatchAssociateUserStack",
        "appstream:BatchDisassociateUserStack",
        "appstream:CopyImage",
        "appstream:CreateDirectoryConfig",
        "appstream:CreateFleet",
        "appstream:CreateImageBuilder",
        "appstream:CreateImageBuilderStreamingURL",
        "appstream:CreateStack",
        "appstream:CreateStreamingURL",
        "appstream:CreateUsageReportSubscription",
        "appstream:CreateUser",
        "appstream:DeleteDirectoryConfig",
        "appstream:DeleteFleet",
        "appstream:DeleteImage",
        "appstream:DeleteImageBuilder",
        "appstream:DeleteImagePermissions",
        "appstream:DeleteStack",
        "appstream:DeleteUsageReportSubscription",
        "appstream:DeleteUser",
        "appstream:DescribeDirectoryConfigs",
        "appstream:DescribeFleets",
        "appstream:DescribeImageBuilders",
        "appstream:DescribeImagePermissions",
        "appstream:DescribeImages",
        "appstream:DescribeSessions",
        "appstream:DescribeStacks",
        "appstream:DescribeUsageReportSubscriptions",
        "appstream:DescribeUserStackAssociations",
        "appstream:DescribeUsers",
        "appstream:DisableUser",
        "appstream:DisassociateFleet",
        "appstream:EnableUser",
        "appstream:ExpireSession",
        "appstream:GetImageBuilders",
        "appstream:GetParametersForThemeAssetUpload",
        "appstream:ListAssociatedFleets",
        "appstream:ListAssociatedStacks",
        "appstream:ListTagsForResource",
        "appstream:StartFleet",
        "appstream:StartImageBuilder",
        "appstream:StopFleet",
        "appstream:StopImageBuilder",
        "appstream:Stream",
        "appstream:TagResource",
        "appstream:UntagResource",
        "appstream:UpdateDirectoryConfig",
        "appstream:UpdateFleet",
        "appstream:UpdateImagePermissions",
        "appstream:UpdateStack",
        "appsync:CreateApiKey",
        "appsync:CreateDataSource",
        "appsync:CreateFunction",
        "appsync:CreateGraphqlApi",
        "appsync:CreateResolver",
        "appsync:CreateType",
        "appsync:DeleteApiKey",
        "appsync:DeleteDataSource",
        "appsync:DeleteFunction",
        "appsync:DeleteGraphqlApi",
        "appsync:DeleteResolver",
        "appsync:DeleteType",
        "appsync:GetDataSource",
        "appsync:GetFunction",
        "appsync:GetGraphqlApi",
        "appsync:GetIntrospectionSchema",
        "appsync:GetResolver",
        "appsync:GetSchemaCreationStatus",
        "appsync:GetType",
        "appsync:GraphQL",
        "appsync:ListApiKeys",
        "appsync:ListDataSources",
        "appsync:ListFunctions",
        "appsync:ListGraphqlApis",
        "appsync:ListResolvers",
        "appsync:ListResolversByFunction",
        "appsync:ListTagsForResource",
        "appsync:ListTypes",
        "appsync:StartSchemaCreation",
        "appsync:TagResource",
        "appsync:UntagResource",
        "appsync:UpdateApiKey",
        "appsync:UpdateDataSource",
        "appsync:UpdateFunction",
        "appsync:UpdateGraphqlApi",
        "appsync:UpdateResolver",
        "appsync:UpdateType",
        "arsenal:RegisterOnPremisesAgent",
        "artifact:AcceptAgreement",
        "artifact:DownloadAgreement",
        "artifact:Get",
        "artifact:TerminateAgreement",
        "athena:BatchGetNamedQuery",
        "athena:BatchGetQueryExecution",
        "athena:CreateDataCatalog",
        "athena:CreateNamedQuery",
        "athena:CreateWorkGroup",
        "athena:DeleteDataCatalog",
        "athena:DeleteNamedQuery",
        "athena:DeleteWorkGroup",
        "athena:GetDataCatalog",
        "athena:GetDatabase",
        "athena:GetNamedQuery",
        "athena:GetQueryExecution",
        "athena:GetQueryResults",
        "athena:GetQueryResultsStream",
        "athena:GetTableMetadata",
        "athena:GetWorkGroup",
        "athena:ListDataCatalogs",
        "athena:ListDatabases",
        "athena:ListNamedQueries",
        "athena:ListQueryExecutions",
        "athena:ListTableMetadata",
        "athena:ListTagsForResource",
        "athena:ListWorkGroups",
        "athena:StartQueryExecution",
        "athena:StopQueryExecution",
        "athena:TagResource",
        "athena:UntagResource",
        "athena:UpdateDataCatalog",
        "athena:UpdateWorkGroup",
        "autoscaling-plans:CreateScalingPlan",
        "autoscaling-plans:DeleteScalingPlan",
        "autoscaling-plans:DescribeScalingPlanResources",
        "autoscaling-plans:DescribeScalingPlans",
        "autoscaling-plans:GetScalingPlanResourceForecastData",
        "autoscaling-plans:UpdateScalingPlan",
        "autoscaling:AttachInstances",
        "autoscaling:AttachLoadBalancerTargetGroups",
        "autoscaling:AttachLoadBalancers",
        "autoscaling:BatchDeleteScheduledAction",
        "autoscaling:BatchPutScheduledUpdateGroupAction",
        "autoscaling:CompleteLifecycleAction",
        "autoscaling:CreateAutoScalingGroup",
        "autoscaling:CreateLaunchConfiguration",
        "autoscaling:CreateOrUpdateTags",
        "autoscaling:DeleteAutoScalingGroup",
        "autoscaling:DeleteLaunchConfiguration",
        "autoscaling:DeleteLifecycleHook",
        "autoscaling:DeleteNotificationConfiguration",
        "autoscaling:DeletePolicy",
        "autoscaling:DeleteScheduledAction",
        "autoscaling:DeleteTags",
        "autoscaling:DescribeAccountLimits",
        "autoscaling:DescribeAdjustmentTypes",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeAutoScalingNotificationTypes",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeLifecycleHookTypes",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeLoadBalancerTargetGroups",
        "autoscaling:DescribeLoadBalancers",
        "autoscaling:DescribeMetricCollectionTypes",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:DescribePolicies",
        "autoscaling:DescribeScalingActivities",
        "autoscaling:DescribeScalingProcessTypes",
        "autoscaling:DescribeScheduledActions",
        "autoscaling:DescribeTags",
        "autoscaling:DescribeTerminationPolicyTypes",
        "autoscaling:DetachInstances",
        "autoscaling:DetachLoadBalancerTargetGroups",
        "autoscaling:DetachLoadBalancers",
        "autoscaling:DisableMetricsCollection",
        "autoscaling:EnableMetricsCollection",
        "autoscaling:EnterStandby",
        "autoscaling:ExecutePolicy",
        "autoscaling:ExitStandby",
        "autoscaling:PutLifecycleHook",
        "autoscaling:PutNotificationConfiguration",
        "autoscaling:PutScalingPolicy",
        "autoscaling:PutScheduledUpdateGroupAction",
        "autoscaling:RecordLifecycleActionHeartbeat",
        "autoscaling:ResumeProcesses",
        "autoscaling:SetDesiredCapacity",
        "autoscaling:SetInstanceHealth",
        "autoscaling:SetInstanceProtection",
        "autoscaling:SuspendProcesses",
        "autoscaling:TerminateInstanceInAutoScalingGroup",
        "autoscaling:UpdateAutoScalingGroup",
        "aws-marketplace-management:uploadFiles",
        "aws-marketplace-management:viewMarketing",
        "aws-marketplace-management:viewReports",
        "aws-marketplace-management:viewSettings",
        "aws-marketplace-management:viewSupport",
        "aws-marketplace:AcceptAgreementApprovalRequest",
        "aws-marketplace:AssociateProductsWithPrivateMarketplace",
        "aws-marketplace:BatchMeterUsage",
        "aws-marketplace:CancelAgreementRequest",
        "aws-marketplace:CancelChangeSet",
        "aws-marketplace:CompleteTask",
        "aws-marketplace:CreatePrivateMarketplace",
        "aws-marketplace:CreatePrivateMarketplaceProfile",
        "aws-marketplace:CreatePrivateMarketplaceRequests",
        "aws-marketplace:DescribeAgreement",
        "aws-marketplace:DescribeBuilds",
        "aws-marketplace:DescribeChangeSet",
        "aws-marketplace:DescribeEntity",
        "aws-marketplace:DescribePrivateMarketplaceProducts",
        "aws-marketplace:DescribePrivateMarketplaceProfile",
        "aws-marketplace:DescribePrivateMarketplaceRequests",
        "aws-marketplace:DescribePrivateMarketplaceSettings",
        "aws-marketplace:DescribePrivateMarketplaceStatus",
        "aws-marketplace:DescribeProcurementSystemConfiguration",
        "aws-marketplace:DescribeTask",
        "aws-marketplace:DisassociateProductsFromPrivateMarketplace",
        "aws-marketplace:GetAgreementApprovalRequest",
        "aws-marketplace:GetAgreementRequest",
        "aws-marketplace:GetAgreementTerms",
        "aws-marketplace:GetEntitlements",
        "aws-marketplace:ListAgreementApprovalRequests",
        "aws-marketplace:ListAgreementRequests",
        "aws-marketplace:ListBuilds",
        "aws-marketplace:ListChangeSets",
        "aws-marketplace:ListEntities",
        "aws-marketplace:ListPrivateMarketplaceProducts",
        "aws-marketplace:ListPrivateMarketplaceRequests",
        "aws-marketplace:ListTasks",
        "aws-marketplace:MeterUsage",
        "aws-marketplace:PutProcurementSystemConfiguration",
        "aws-marketplace:RegisterUsage",
        "aws-marketplace:RejectAgreementApprovalRequest",
        "aws-marketplace:ResolveCustomer",
        "aws-marketplace:SearchAgreements",
        "aws-marketplace:StartBuild",
        "aws-marketplace:StartChangeSet",
        "aws-marketplace:StartPrivateMarketplace",
        "aws-marketplace:StopPrivateMarketplace",
        "aws-marketplace:Subscribe",
        "aws-marketplace:Unsubscribe",
        "aws-marketplace:UpdateAgreementApprovalRequest",
        "aws-marketplace:UpdatePrivateMarketplaceProfile",
        "aws-marketplace:UpdatePrivateMarketplaceSettings",
        "aws-marketplace:UpdateTask",
        "aws-marketplace:ViewSubscriptions",
        "aws-portal:ModifyAccount",
        "aws-portal:ModifyBilling",
        "aws-portal:ModifyPaymentMethods",
        "aws-portal:ViewAccount",
        "aws-portal:ViewBilling",
        "aws-portal:ViewPaymentMethods",
        "aws-portal:ViewUsage",
        "awsconnector:GetConnectorHealth",
        "awsconnector:RegisterConnector",
        "awsconnector:ValidateConnectorId",
        "backup-storage:MountCapsule",
        "backup:CopyIntoBackupVault",
        "backup:CreateBackupPlan",
        "backup:CreateBackupSelection",
        "backup:CreateBackupVault",
        "backup:DeleteBackupPlan",
        "backup:DeleteBackupSelection",
        "backup:DeleteBackupVault",
        "backup:DeleteBackupVaultAccessPolicy",
        "backup:DeleteBackupVaultNotifications",
        "backup:DeleteRecoveryPoint",
        "backup:DescribeBackupJob",
        "backup:DescribeBackupVault",
        "backup:DescribeCopyJob",
        "backup:DescribeProtectedResource",
        "backup:DescribeRecoveryPoint",
        "backup:DescribeRestoreJob",
        "backup:ExportBackupPlanTemplate",
        "backup:GetBackupPlan",
        "backup:GetBackupPlanFromJSON",
        "backup:GetBackupPlanFromTemplate",
        "backup:GetBackupSelection",
        "backup:GetBackupVaultAccessPolicy",
        "backup:GetBackupVaultNotifications",
        "backup:GetRecoveryPointRestoreMetadata",
        "backup:GetSupportedResourceTypes",
        "backup:ListBackupJobs",
        "backup:ListBackupPlanTemplates",
        "backup:ListBackupPlanVersions",
        "backup:ListBackupPlans",
        "backup:ListBackupSelections",
        "backup:ListBackupVaults",
        "backup:ListCopyJobs",
        "backup:ListProtectedResources",
        "backup:ListRecoveryPointsByBackupVault",
        "backup:ListRecoveryPointsByResource",
        "backup:ListRestoreJobs",
        "backup:ListTags",
        "backup:PutBackupVaultAccessPolicy",
        "backup:PutBackupVaultNotifications",
        "backup:StartBackupJob",
        "backup:StartCopyJob",
        "backup:StartRestoreJob",
        "backup:StopBackupJob",
        "backup:TagResource",
        "backup:UntagResource",
        "backup:UpdateBackupPlan",
        "backup:UpdateRecoveryPointLifecycle",
        "batch:CancelJob",
        "batch:CreateComputeEnvironment",
        "batch:CreateJobQueue",
        "batch:DeleteComputeEnvironment",
        "batch:DeleteJobQueue",
        "batch:DeregisterJobDefinition",
        "batch:DescribeComputeEnvironments",
        "batch:DescribeJobDefinitions",
        "batch:DescribeJobQueues",
        "batch:DescribeJobs",
        "batch:ListJobs",
        "batch:RegisterJobDefinition",
        "batch:SubmitJob",
        "batch:TerminateJob",
        "batch:UpdateComputeEnvironment",
        "batch:UpdateJobQueue",
        "budgets:ModifyBudget",
        "budgets:ViewBudget",
        "cassandra:Alter",
        "cassandra:Create",
        "cassandra:Drop",
        "cassandra:Modify",
        "cassandra:Select",
        "cassandra:TagResource",
        "cassandra:UntagResource",
        "ce:CreateCostCategoryDefinition",
        "ce:DeleteCostCategoryDefinition",
        "ce:DescribeCostCategoryDefinition",
        "ce:GetCostAndUsage",
        "ce:GetCostAndUsageWithResources",
        "ce:GetCostForecast",
        "ce:GetDimensionValues",
        "ce:GetReservationCoverage",
        "ce:GetReservationPurchaseRecommendation",
        "ce:GetReservationUtilization",
        "ce:GetRightsizingRecommendation",
        "ce:GetSavingsPlansCoverage",
        "ce:GetSavingsPlansPurchaseRecommendation",
        "ce:GetSavingsPlansUtilization",
        "ce:GetSavingsPlansUtilizationDetails",
        "ce:GetTags",
        "ce:GetUsageForecast",
        "ce:ListCostCategoryDefinitions",
        "ce:UpdateCostCategoryDefinition",
        "chatbot:CreateChimeWebhookConfiguration",
        "chatbot:CreateSlackChannelConfiguration",
        "chatbot:DeleteChimeWebhookConfiguration",
        "chatbot:DeleteSlackChannelConfiguration",
        "chatbot:DescribeChimeWebhookConfigurations",
        "chatbot:DescribeSlackChannelConfigurations",
        "chatbot:DescribeSlackChannels",
        "chatbot:DescribeSlackWorkspaces",
        "chatbot:GetSlackOauthParameters",
        "chatbot:RedeemSlackOauthCode",
        "chatbot:UpdateChimeWebhookConfiguration",
        "chatbot:UpdateSlackChannelConfiguration",
        "chime:AcceptDelegate",
        "chime:ActivateUsers",
        "chime:AddDomain",
        "chime:AddOrUpdateGroups",
        "chime:AssociatePhoneNumberWithUser",
        "chime:AssociatePhoneNumbersWithVoiceConnector",
        "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
        "chime:AssociateSigninDelegateGroupsWithAccount",
        "chime:AuthorizeDirectory",
        "chime:BatchCreateAttendee",
        "chime:BatchCreateRoomMembership",
        "chime:BatchDeletePhoneNumber",
        "chime:BatchSuspendUser",
        "chime:BatchUnsuspendUser",
        "chime:BatchUpdatePhoneNumber",
        "chime:BatchUpdateUser",
        "chime:ConnectDirectory",
        "chime:CreateAccount",
        "chime:CreateApiKey",
        "chime:CreateAttendee",
        "chime:CreateBot",
        "chime:CreateBotMembership",
        "chime:CreateCDRBucket",
        "chime:CreateMeeting",
        "chime:CreatePhoneNumberOrder",
        "chime:CreateProxySession",
        "chime:CreateRoom",
        "chime:CreateRoomMembership",
        "chime:CreateUser",
        "chime:CreateVoiceConnector",
        "chime:CreateVoiceConnectorGroup",
        "chime:DeleteAccount",
        "chime:DeleteAccountOpenIdConfig",
        "chime:DeleteApiKey",
        "chime:DeleteAttendee",
        "chime:DeleteCDRBucket",
        "chime:DeleteDelegate",
        "chime:DeleteDomain",
        "chime:DeleteEventsConfiguration",
        "chime:DeleteGroups",
        "chime:DeleteMeeting",
        "chime:DeletePhoneNumber",
        "chime:DeleteProxySession",
        "chime:DeleteRoom",
        "chime:DeleteRoomMembership",
        "chime:DeleteVoiceConnector",
        "chime:DeleteVoiceConnectorGroup",
        "chime:DeleteVoiceConnectorOrigination",
        "chime:DeleteVoiceConnectorProxy",
        "chime:DeleteVoiceConnectorStreamingConfiguration",
        "chime:DeleteVoiceConnectorTermination",
        "chime:DeleteVoiceConnectorTerminationCredentials",
        "chime:DisassociatePhoneNumberFromUser",
        "chime:DisassociatePhoneNumbersFromVoiceConnector",
        "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
        "chime:DisassociateSigninDelegateGroupsFromAccount",
        "chime:DisconnectDirectory",
        "chime:GetAccount",
        "chime:GetAccountResource",
        "chime:GetAccountSettings",
        "chime:GetAccountWithOpenIdConfig",
        "chime:GetAttendee",
        "chime:GetBot",
        "chime:GetCDRBucket",
        "chime:GetDomain",
        "chime:GetEventsConfiguration",
        "chime:GetGlobalSettings",
        "chime:GetMeeting",
        "chime:GetMeetingDetail",
        "chime:GetPhoneNumber",
        "chime:GetPhoneNumberOrder",
        "chime:GetPhoneNumberSettings",
        "chime:GetProxySession",
        "chime:GetRetentionSettings",
        "chime:GetRoom",
        "chime:GetTelephonyLimits",
        "chime:GetUser",
        "chime:GetUserActivityReportData",
        "chime:GetUserByEmail",
        "chime:GetUserSettings",
        "chime:GetVoiceConnector",
        "chime:GetVoiceConnectorGroup",
        "chime:GetVoiceConnectorLoggingConfiguration",
        "chime:GetVoiceConnectorOrigination",
        "chime:GetVoiceConnectorProxy",
        "chime:GetVoiceConnectorStreamingConfiguration",
        "chime:GetVoiceConnectorTermination",
        "chime:GetVoiceConnectorTerminationHealth",
        "chime:InviteDelegate",
        "chime:InviteUsers",
        "chime:InviteUsersFromProvider",
        "chime:ListAccountUsageReportData",
        "chime:ListAccounts",
        "chime:ListApiKeys",
        "chime:ListAttendeeTags",
        "chime:ListAttendees",
        "chime:ListBots",
        "chime:ListCDRBucket",
        "chime:ListCallingRegions",
        "chime:ListDelegates",
        "chime:ListDirectories",
        "chime:ListDomains",
        "chime:ListGroups",
        "chime:ListMeetingEvents",
        "chime:ListMeetingTags",
        "chime:ListMeetings",
        "chime:ListMeetingsReportData",
        "chime:ListPhoneNumberOrders",
        "chime:ListPhoneNumbers",
        "chime:ListProxySessions",
        "chime:ListRoomMemberships",
        "chime:ListRooms",
        "chime:ListTagsForResource",
        "chime:ListUsers",
        "chime:ListVoiceConnectorGroups",
        "chime:ListVoiceConnectorTerminationCredentials",
        "chime:ListVoiceConnectors",
        "chime:LogoutUser",
        "chime:PutEventsConfiguration",
        "chime:PutRetentionSettings",
        "chime:PutVoiceConnectorLoggingConfiguration",
        "chime:PutVoiceConnectorOrigination",
        "chime:PutVoiceConnectorProxy",
        "chime:PutVoiceConnectorStreamingConfiguration",
        "chime:PutVoiceConnectorTermination",
        "chime:PutVoiceConnectorTerminationCredentials",
        "chime:RedactConversationMessage",
        "chime:RedactRoomMessage",
        "chime:RegenerateSecurityToken",
        "chime:RenameAccount",
        "chime:RenewDelegate",
        "chime:ResetAccountResource",
        "chime:ResetPersonalPIN",
        "chime:RestorePhoneNumber",
        "chime:RetrieveDataExports",
        "chime:SearchAvailablePhoneNumbers",
        "chime:StartDataExport",
        "chime:SubmitSupportRequest",
        "chime:SuspendUsers",
        "chime:TagAttendee",
        "chime:TagMeeting",
        "chime:TagResource",
        "chime:UnauthorizeDirectory",
        "chime:UntagAttendee",
        "chime:UntagMeeting",
        "chime:UntagResource",
        "chime:UpdateAccount",
        "chime:UpdateAccountOpenIdConfig",
        "chime:UpdateAccountResource",
        "chime:UpdateAccountSettings",
        "chime:UpdateBot",
        "chime:UpdateCDRSettings",
        "chime:UpdateGlobalSettings",
        "chime:UpdatePhoneNumber",
        "chime:UpdatePhoneNumberSettings",
        "chime:UpdateProxySession",
        "chime:UpdateRoom",
        "chime:UpdateRoomMembership",
        "chime:UpdateSupportedLicenses",
        "chime:UpdateUser",
        "chime:UpdateUserLicenses",
        "chime:UpdateUserSettings",
        "chime:UpdateVoiceConnector",
        "chime:UpdateVoiceConnectorGroup",
        "chime:ValidateAccountResource",
        "cloud9:CreateEnvironmentEC2",
        "cloud9:CreateEnvironmentMembership",
        "cloud9:DeleteEnvironment",
        "cloud9:DeleteEnvironmentMembership",
        "cloud9:DescribeEnvironmentMemberships",
        "cloud9:DescribeEnvironmentStatus",
        "cloud9:DescribeEnvironments",
        "cloud9:GetUserSettings",
        "cloud9:ListEnvironments",
        "cloud9:ListTagsForResource",
        "cloud9:TagResource",
        "cloud9:UntagResource",
        "cloud9:UpdateEnvironment",
        "cloud9:UpdateEnvironmentMembership",
        "cloud9:UpdateUserSettings",
        "clouddirectory:AddFacetToObject",
        "clouddirectory:ApplySchema",
        "clouddirectory:AttachObject",
        "clouddirectory:AttachPolicy",
        "clouddirectory:AttachToIndex",
        "clouddirectory:AttachTypedLink",
        "clouddirectory:BatchRead",
        "clouddirectory:BatchWrite",
        "clouddirectory:CreateDirectory",
        "clouddirectory:CreateFacet",
        "clouddirectory:CreateIndex",
        "clouddirectory:CreateObject",
        "clouddirectory:CreateSchema",
        "clouddirectory:CreateTypedLinkFacet",
        "clouddirectory:DeleteDirectory",
        "clouddirectory:DeleteFacet",
        "clouddirectory:DeleteObject",
        "clouddirectory:DeleteSchema",
        "clouddirectory:DeleteTypedLinkFacet",
        "clouddirectory:DetachFromIndex",
        "clouddirectory:DetachObject",
        "clouddirectory:DetachPolicy",
        "clouddirectory:DetachTypedLink",
        "clouddirectory:DisableDirectory",
        "clouddirectory:EnableDirectory",
        "clouddirectory:GetDirectory",
        "clouddirectory:GetFacet",
        "clouddirectory:GetLinkAttributes",
        "clouddirectory:GetObjectAttributes",
        "clouddirectory:GetObjectInformation",
        "clouddirectory:GetSchemaAsJson",
        "clouddirectory:GetTypedLinkFacetInformation",
        "clouddirectory:ListAppliedSchemaArns",
        "clouddirectory:ListAttachedIndices",
        "clouddirectory:ListDevelopmentSchemaArns",
        "clouddirectory:ListDirectories",
        "clouddirectory:ListFacetAttributes",
        "clouddirectory:ListFacetNames",
        "clouddirectory:ListIncomingTypedLinks",
        "clouddirectory:ListIndex",
        "clouddirectory:ListObjectAttributes",
        "clouddirectory:ListObjectChildren",
        "clouddirectory:ListObjectParentPaths",
        "clouddirectory:ListObjectParents",
        "clouddirectory:ListObjectPolicies",
        "clouddirectory:ListOutgoingTypedLinks",
        "clouddirectory:ListPolicyAttachments",
        "clouddirectory:ListPublishedSchemaArns",
        "clouddirectory:ListTagsForResource",
        "clouddirectory:ListTypedLinkFacetAttributes",
        "clouddirectory:ListTypedLinkFacetNames",
        "clouddirectory:LookupPolicy",
        "clouddirectory:PublishSchema",
        "clouddirectory:PutSchemaFromJson",
        "clouddirectory:RemoveFacetFromObject",
        "clouddirectory:TagResource",
        "clouddirectory:UntagResource",
        "clouddirectory:UpdateFacet",
        "clouddirectory:UpdateLinkAttributes",
        "clouddirectory:UpdateObjectAttributes",
        "clouddirectory:UpdateSchema",
        "clouddirectory:UpdateTypedLinkFacet",
        "cloudformation:CancelUpdateStack",
        "cloudformation:ContinueUpdateRollback",
        "cloudformation:CreateChangeSet",
        "cloudformation:CreateStack",
        "cloudformation:CreateStackInstances",
        "cloudformation:CreateStackSet",
        "cloudformation:CreateUploadBucket",
        "cloudformation:DeleteChangeSet",
        "cloudformation:DeleteStack",
        "cloudformation:DeleteStackInstances",
        "cloudformation:DeleteStackSet",
        "cloudformation:DeregisterType",
        "cloudformation:DescribeAccountLimits",
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStackDriftDetectionStatus",
        "cloudformation:DescribeStackEvents",
        "cloudformation:DescribeStackInstance",
        "cloudformation:DescribeStackResource",
        "cloudformation:DescribeStackResourceDrifts",
        "cloudformation:DescribeStackResources",
        "cloudformation:DescribeStackSet",
        "cloudformation:DescribeStackSetOperation",
        "cloudformation:DescribeStacks",
        "cloudformation:DescribeType",
        "cloudformation:DescribeTypeRegistration",
        "cloudformation:DetectStackDrift",
        "cloudformation:DetectStackResourceDrift",
        "cloudformation:DetectStackSetDrift",
        "cloudformation:EstimateTemplateCost",
        "cloudformation:ExecuteChangeSet",
        "cloudformation:GetStackPolicy",
        "cloudformation:GetTemplate",
        "cloudformation:GetTemplateSummary",
        "cloudformation:ListChangeSets",
        "cloudformation:ListExports",
        "cloudformation:ListImports",
        "cloudformation:ListStackInstances",
        "cloudformation:ListStackResources",
        "cloudformation:ListStackSetOperationResults",
        "cloudformation:ListStackSetOperations",
        "cloudformation:ListStackSets",
        "cloudformation:ListStacks",
        "cloudformation:ListTypeRegistrations",
        "cloudformation:ListTypeVersions",
        "cloudformation:ListTypes",
        "cloudformation:RegisterType",
        "cloudformation:SetStackPolicy",
        "cloudformation:SetTypeDefaultVersion",
        "cloudformation:SignalResource",
        "cloudformation:StopStackSetOperation",
        "cloudformation:TagResource",
        "cloudformation:UntagResource",
        "cloudformation:UpdateStack",
        "cloudformation:UpdateStackInstances",
        "cloudformation:UpdateStackSet",
        "cloudformation:UpdateTerminationProtection",
        "cloudformation:ValidateTemplate",
        "cloudfront:CreateCloudFrontOriginAccessIdentity",
        "cloudfront:CreateDistribution",
        "cloudfront:CreateDistributionWithTags",
        "cloudfront:CreateFieldLevelEncryptionConfig",
        "cloudfront:CreateFieldLevelEncryptionProfile",
        "cloudfront:CreateInvalidation",
        "cloudfront:CreatePublicKey",
        "cloudfront:CreateStreamingDistribution",
        "cloudfront:CreateStreamingDistributionWithTags",
        "cloudfront:DeleteCloudFrontOriginAccessIdentity",
        "cloudfront:DeleteDistribution",
        "cloudfront:DeleteFieldLevelEncryptionConfig",
        "cloudfront:DeleteFieldLevelEncryptionProfile",
        "cloudfront:DeletePublicKey",
        "cloudfront:DeleteStreamingDistribution",
        "cloudfront:GetCloudFrontOriginAccessIdentity",
        "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
        "cloudfront:GetDistribution",
        "cloudfront:GetDistributionConfig",
        "cloudfront:GetFieldLevelEncryption",
        "cloudfront:GetFieldLevelEncryptionConfig",
        "cloudfront:GetFieldLevelEncryptionProfile",
        "cloudfront:GetFieldLevelEncryptionProfileConfig",
        "cloudfront:GetInvalidation",
        "cloudfront:GetPublicKey",
        "cloudfront:GetPublicKeyConfig",
        "cloudfront:GetStreamingDistribution",
        "cloudfront:GetStreamingDistributionConfig",
        "cloudfront:ListCloudFrontOriginAccessIdentities",
        "cloudfront:ListDistributions",
        "cloudfront:ListDistributionsByLambdaFunction",
        "cloudfront:ListDistributionsByWebACLId",
        "cloudfront:ListFieldLevelEncryptionConfigs",
        "cloudfront:ListFieldLevelEncryptionProfiles",
        "cloudfront:ListInvalidations",
        "cloudfront:ListPublicKeys",
        "cloudfront:ListStreamingDistributions",
        "cloudfront:ListTagsForResource",
        "cloudfront:TagResource",
        "cloudfront:UntagResource",
        "cloudfront:UpdateCloudFrontOriginAccessIdentity",
        "cloudfront:UpdateDistribution",
        "cloudfront:UpdateFieldLevelEncryptionConfig",
        "cloudfront:UpdateFieldLevelEncryptionProfile",
        "cloudfront:UpdatePublicKey",
        "cloudfront:UpdateStreamingDistribution",
        "cloudhsm:AddTagsToResource",
        "cloudhsm:CopyBackupToRegion",
        "cloudhsm:CreateCluster",
        "cloudhsm:CreateHapg",
        "cloudhsm:CreateHsm",
        "cloudhsm:CreateLunaClient",
        "cloudhsm:DeleteBackup",
        "cloudhsm:DeleteCluster",
        "cloudhsm:DeleteHapg",
        "cloudhsm:DeleteHsm",
        "cloudhsm:DeleteLunaClient",
        "cloudhsm:DescribeBackups",
        "cloudhsm:DescribeClusters",
        "cloudhsm:DescribeHapg",
        "cloudhsm:DescribeHsm",
        "cloudhsm:DescribeLunaClient",
        "cloudhsm:GetConfig",
        "cloudhsm:InitializeCluster",
        "cloudhsm:ListAvailableZones",
        "cloudhsm:ListHapgs",
        "cloudhsm:ListHsms",
        "cloudhsm:ListLunaClients",
        "cloudhsm:ListTags",
        "cloudhsm:ListTagsForResource",
        "cloudhsm:ModifyHapg",
        "cloudhsm:ModifyHsm",
        "cloudhsm:ModifyLunaClient",
        "cloudhsm:RemoveTagsFromResource",
        "cloudhsm:RestoreBackup",
        "cloudhsm:TagResource",
        "cloudhsm:UntagResource",
        "cloudsearch:AddTags",
        "cloudsearch:BuildSuggesters",
        "cloudsearch:CreateDomain",
        "cloudsearch:DefineAnalysisScheme",
        "cloudsearch:DefineExpression",
        "cloudsearch:DefineIndexField",
        "cloudsearch:DefineSuggester",
        "cloudsearch:DeleteAnalysisScheme",
        "cloudsearch:DeleteDomain",
        "cloudsearch:DeleteExpression",
        "cloudsearch:DeleteIndexField",
        "cloudsearch:DeleteSuggester",
        "cloudsearch:DescribeAnalysisSchemes",
        "cloudsearch:DescribeAvailabilityOptions",
        "cloudsearch:DescribeDomainEndpointOptions",
        "cloudsearch:DescribeDomains",
        "cloudsearch:DescribeExpressions",
        "cloudsearch:DescribeIndexFields",
        "cloudsearch:DescribeScalingParameters",
        "cloudsearch:DescribeServiceAccessPolicies",
        "cloudsearch:DescribeSuggesters",
        "cloudsearch:IndexDocuments",
        "cloudsearch:ListDomainNames",
        "cloudsearch:ListTags",
        "cloudsearch:RemoveTags",
        "cloudsearch:UpdateAvailabilityOptions",
        "cloudsearch:UpdateDomainEndpointOptions",
        "cloudsearch:UpdateScalingParameters",
        "cloudsearch:UpdateServiceAccessPolicies",
        "cloudsearch:document",
        "cloudsearch:search",
        "cloudsearch:suggest",
        "cloudtrail:AddTags",
        "cloudtrail:CreateTrail",
        "cloudtrail:DeleteTrail",
        "cloudtrail:DescribeTrails",
        "cloudtrail:GetEventSelectors",
        "cloudtrail:GetInsightSelectors",
        "cloudtrail:GetTrail",
        "cloudtrail:GetTrailStatus",
        "cloudtrail:ListPublicKeys",
        "cloudtrail:ListTags",
        "cloudtrail:ListTrails",
        "cloudtrail:LookupEvents",
        "cloudtrail:PutEventSelectors",
        "cloudtrail:PutInsightSelectors",
        "cloudtrail:RemoveTags",
        "cloudtrail:StartLogging",
        "cloudtrail:StopLogging",
        "cloudtrail:UpdateTrail",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DeleteAnomalyDetector",
        "cloudwatch:DeleteDashboards",
        "cloudwatch:DeleteInsightRules",
        "cloudwatch:DescribeAlarmHistory",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:DescribeAlarmsForMetric",
        "cloudwatch:DescribeAnomalyDetectors",
        "cloudwatch:DescribeInsightRules",
        "cloudwatch:DisableAlarmActions",
        "cloudwatch:DisableInsightRules",
        "cloudwatch:EnableAlarmActions",
        "cloudwatch:EnableInsightRules",
        "cloudwatch:GetDashboard",
        "cloudwatch:GetInsightRuleReport",
        "cloudwatch:GetMetricData",
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:GetMetricWidgetImage",
        "cloudwatch:ListDashboards",
        "cloudwatch:ListMetrics",
        "cloudwatch:ListTagsForResource",
        "cloudwatch:PutAnomalyDetector",
        "cloudwatch:PutDashboard",
        "cloudwatch:PutInsightRule",
        "cloudwatch:PutMetricAlarm",
        "cloudwatch:PutMetricData",
        "cloudwatch:SetAlarmState",
        "cloudwatch:TagResource",
        "cloudwatch:UntagResource",
        "codeartifact:AssociateExternalConnection",
        "codeartifact:AssociateWithDownstreamRepository",
        "codeartifact:CopyPackageVersions",
        "codeartifact:CreateDomain",
        "codeartifact:CreateRepository",
        "codeartifact:DeleteDomain",
        "codeartifact:DeleteDomainPermissionsPolicy",
        "codeartifact:DeletePackageVersions",
        "codeartifact:DeleteRepository",
        "codeartifact:DeleteRepositoryPermissionsPolicy",
        "codeartifact:DescribeDomain",
        "codeartifact:DescribePackageVersion",
        "codeartifact:DescribeRepository",
        "codeartifact:DisassociateExternalConnection",
        "codeartifact:DisposePackageVersions",
        "codeartifact:GetAuthorizationToken",
        "codeartifact:GetDomainPermissionsPolicy",
        "codeartifact:GetPackageVersionAsset",
        "codeartifact:GetPackageVersionReadme",
        "codeartifact:GetRepositoryEndpoint",
        "codeartifact:GetRepositoryPermissionsPolicy",
        "codeartifact:ListDomains",
        "codeartifact:ListPackageVersionAssets",
        "codeartifact:ListPackageVersionDependencies",
        "codeartifact:ListPackageVersions",
        "codeartifact:ListPackages",
        "codeartifact:ListRepositories",
        "codeartifact:ListRepositoriesInDomain",
        "codeartifact:PublishPackageVersion",
        "codeartifact:PutDomainPermissionsPolicy",
        "codeartifact:PutPackageMetadata",
        "codeartifact:PutRepositoryPermissionsPolicy",
        "codeartifact:ReadFromRepository",
        "codeartifact:UpdatePackageVersionsStatus",
        "codeartifact:UpdateRepository",
        "codebuild:BatchDeleteBuilds",
        "codebuild:BatchGetBuilds",
        "codebuild:BatchGetProjects",
        "codebuild:BatchGetReportGroups",
        "codebuild:BatchGetReports",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateProject",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:CreateWebhook",
        "codebuild:DeleteOAuthToken",
        "codebuild:DeleteProject",
        "codebuild:DeleteReport",
        "codebuild:DeleteReportGroup",
        "codebuild:DeleteResourcePolicy",
        "codebuild:DeleteSourceCredentials",
        "codebuild:DeleteWebhook",
        "codebuild:DescribeTestCases",
        "codebuild:GetResourcePolicy",
        "codebuild:ImportSourceCredentials",
        "codebuild:InvalidateProjectCache",
        "codebuild:ListBuilds",
        "codebuild:ListBuildsForProject",
        "codebuild:ListConnectedOAuthAccounts",
        "codebuild:ListCuratedEnvironmentImages",
        "codebuild:ListProjects",
        "codebuild:ListReportGroups",
        "codebuild:ListReports",
        "codebuild:ListReportsForReportGroup",
        "codebuild:ListRepositories",
        "codebuild:ListSharedProjects",
        "codebuild:ListSharedReportGroups",
        "codebuild:ListSourceCredentials",
        "codebuild:PersistOAuthToken",
        "codebuild:PutResourcePolicy",
        "codebuild:StartBuild",
        "codebuild:StopBuild",
        "codebuild:UpdateProject",
        "codebuild:UpdateReport",
        "codebuild:UpdateReportGroup",
        "codebuild:UpdateWebhook",
        "codecommit:AssociateApprovalRuleTemplateWithRepository",
        "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
        "codecommit:BatchDescribeMergeConflicts",
        "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
        "codecommit:BatchGetCommits",
        "codecommit:BatchGetPullRequests",
        "codecommit:BatchGetRepositories",
        "codecommit:CancelUploadArchive",
        "codecommit:CreateApprovalRuleTemplate",
        "codecommit:CreateBranch",
        "codecommit:CreateCommit",
        "codecommit:CreatePullRequest",
        "codecommit:CreatePullRequestApprovalRule",
        "codecommit:CreateRepository",
        "codecommit:CreateUnreferencedMergeCommit",
        "codecommit:DeleteApprovalRuleTemplate",
        "codecommit:DeleteBranch",
        "codecommit:DeleteCommentContent",
        "codecommit:DeleteFile",
        "codecommit:DeletePullRequestApprovalRule",
        "codecommit:DeleteRepository",
        "codecommit:DescribeMergeConflicts",
        "codecommit:DescribePullRequestEvents",
        "codecommit:DisassociateApprovalRuleTemplateFromRepository",
        "codecommit:EvaluatePullRequestApprovalRules",
        "codecommit:GetApprovalRuleTemplate",
        "codecommit:GetBlob",
        "codecommit:GetBranch",
        "codecommit:GetComment",
        "codecommit:GetCommentsForComparedCommit",
        "codecommit:GetCommentsForPullRequest",
        "codecommit:GetCommit",
        "codecommit:GetCommitHistory",
        "codecommit:GetCommitsFromMergeBase",
        "codecommit:GetDifferences",
        "codecommit:GetFile",
        "codecommit:GetFolder",
        "codecommit:GetMergeCommit",
        "codecommit:GetMergeConflicts",
        "codecommit:GetMergeOptions",
        "codecommit:GetObjectIdentifier",
        "codecommit:GetPullRequest",
        "codecommit:GetPullRequestApprovalStates",
        "codecommit:GetPullRequestOverrideState",
        "codecommit:GetReferences",
        "codecommit:GetRepository",
        "codecommit:GetRepositoryTriggers",
        "codecommit:GetTree",
        "codecommit:GetUploadArchiveStatus",
        "codecommit:GitPull",
        "codecommit:GitPush",
        "codecommit:ListApprovalRuleTemplates",
        "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
        "codecommit:ListBranches",
        "codecommit:ListPullRequests",
        "codecommit:ListRepositories",
        "codecommit:ListRepositoriesForApprovalRuleTemplate",
        "codecommit:ListTagsForResource",
        "codecommit:MergeBranchesByFastForward",
        "codecommit:MergeBranchesBySquash",
        "codecommit:MergeBranchesByThreeWay",
        "codecommit:MergePullRequestByFastForward",
        "codecommit:MergePullRequestBySquash",
        "codecommit:MergePullRequestByThreeWay",
        "codecommit:OverridePullRequestApprovalRules",
        "codecommit:PostCommentForComparedCommit",
        "codecommit:PostCommentForPullRequest",
        "codecommit:PostCommentReply",
        "codecommit:PutFile",
        "codecommit:PutRepositoryTriggers",
        "codecommit:TagResource",
        "codecommit:TestRepositoryTriggers",
        "codecommit:UntagResource",
        "codecommit:UpdateApprovalRuleTemplateContent",
        "codecommit:UpdateApprovalRuleTemplateDescription",
        "codecommit:UpdateApprovalRuleTemplateName",
        "codecommit:UpdateComment",
        "codecommit:UpdateDefaultBranch",
        "codecommit:UpdatePullRequestApprovalRuleContent",
        "codecommit:UpdatePullRequestApprovalState",
        "codecommit:UpdatePullRequestDescription",
        "codecommit:UpdatePullRequestStatus",
        "codecommit:UpdatePullRequestTitle",
        "codecommit:UpdateRepositoryDescription",
        "codecommit:UpdateRepositoryName",
        "codecommit:UploadArchive",
        "codedeploy:AddTagsToOnPremisesInstances",
        "codedeploy:BatchGetApplicationRevisions",
        "codedeploy:BatchGetApplications",
        "codedeploy:BatchGetDeploymentGroups",
        "codedeploy:BatchGetDeploymentInstances",
        "codedeploy:BatchGetDeploymentTargets",
        "codedeploy:BatchGetDeployments",
        "codedeploy:BatchGetOnPremisesInstances",
        "codedeploy:ContinueDeployment",
        "codedeploy:CreateApplication",
        "codedeploy:CreateCloudFormationDeployment",
        "codedeploy:CreateDeployment",
        "codedeploy:CreateDeploymentConfig",
        "codedeploy:CreateDeploymentGroup",
        "codedeploy:DeleteApplication",
        "codedeploy:DeleteDeploymentConfig",
        "codedeploy:DeleteDeploymentGroup",
        "codedeploy:DeleteGitHubAccountToken",
        "codedeploy:DeleteResourcesByExternalId",
        "codedeploy:DeregisterOnPremisesInstance",
        "codedeploy:GetApplication",
        "codedeploy:GetApplicationRevision",
        "codedeploy:GetDeployment",
        "codedeploy:GetDeploymentConfig",
        "codedeploy:GetDeploymentGroup",
        "codedeploy:GetDeploymentInstance",
        "codedeploy:GetDeploymentTarget",
        "codedeploy:GetOnPremisesInstance",
        "codedeploy:ListApplicationRevisions",
        "codedeploy:ListApplications",
        "codedeploy:ListDeploymentConfigs",
        "codedeploy:ListDeploymentGroups",
        "codedeploy:ListDeploymentInstances",
        "codedeploy:ListDeploymentTargets",
        "codedeploy:ListDeployments",
        "codedeploy:ListGitHubAccountTokenNames",
        "codedeploy:ListOnPremisesInstances",
        "codedeploy:ListTagsForResource",
        "codedeploy:PutLifecycleEventHookExecutionStatus",
        "codedeploy:RegisterApplicationRevision",
        "codedeploy:RegisterOnPremisesInstance",
        "codedeploy:RemoveTagsFromOnPremisesInstances",
        "codedeploy:SkipWaitTimeForInstanceTermination",
        "codedeploy:StopDeployment",
        "codedeploy:TagResource",
        "codedeploy:UntagResource",
        "codedeploy:UpdateApplication",
        "codedeploy:UpdateDeploymentGroup",
        "codeguru-profiler:ConfigureAgent",
        "codeguru-profiler:CreateProfilingGroup",
        "codeguru-profiler:DeleteProfilingGroup",
        "codeguru-profiler:DescribeProfilingGroup",
        "codeguru-profiler:GetFindingsReport",
        "codeguru-profiler:GetFindingsReportAccountSummary",
        "codeguru-profiler:GetPolicy",
        "codeguru-profiler:GetProfile",
        "codeguru-profiler:GetRecommendations",
        "codeguru-profiler:ListFindingsReports",
        "codeguru-profiler:ListProfileTimes",
        "codeguru-profiler:ListProfilingGroups",
        "codeguru-profiler:PostAgentProfile",
        "codeguru-profiler:PutPermission",
        "codeguru-profiler:RemovePermission",
        "codeguru-profiler:UpdateProfilingGroup",
        "codeguru-reviewer:AssociateRepository",
        "codeguru-reviewer:CreateConnectionToken",
        "codeguru-reviewer:DescribeCodeReview",
        "codeguru-reviewer:DescribeRecommendationFeedback",
        "codeguru-reviewer:DescribeRepositoryAssociation",
        "codeguru-reviewer:DisassociateRepository",
        "codeguru-reviewer:GetMetricsData",
        "codeguru-reviewer:ListCodeReviews",
        "codeguru-reviewer:ListRecommendationFeedback",
        "codeguru-reviewer:ListRecommendations",
        "codeguru-reviewer:ListRepositoryAssociations",
        "codeguru-reviewer:ListThirdPartyRepositories",
        "codeguru-reviewer:PutRecommendationFeedback",
        "codeguru:GetCodeGuruFreeTrialSummary",
        "codepipeline:AcknowledgeJob",
        "codepipeline:AcknowledgeThirdPartyJob",
        "codepipeline:CreateCustomActionType",
        "codepipeline:CreatePipeline",
        "codepipeline:DeleteCustomActionType",
        "codepipeline:DeletePipeline",
        "codepipeline:DeleteWebhook",
        "codepipeline:DeregisterWebhookWithThirdParty",
        "codepipeline:DisableStageTransition",
        "codepipeline:EnableStageTransition",
        "codepipeline:GetJobDetails",
        "codepipeline:GetPipeline",
        "codepipeline:GetPipelineExecution",
        "codepipeline:GetPipelineState",
        "codepipeline:GetThirdPartyJobDetails",
        "codepipeline:ListActionExecutions",
        "codepipeline:ListActionTypes",
        "codepipeline:ListPipelineExecutions",
        "codepipeline:ListPipelines",
        "codepipeline:ListTagsForResource",
        "codepipeline:ListWebhooks",
        "codepipeline:PollForJobs",
        "codepipeline:PollForThirdPartyJobs",
        "codepipeline:PutActionRevision",
        "codepipeline:PutApprovalResult",
        "codepipeline:PutJobFailureResult",
        "codepipeline:PutJobSuccessResult",
        "codepipeline:PutThirdPartyJobFailureResult",
        "codepipeline:PutThirdPartyJobSuccessResult",
        "codepipeline:PutWebhook",
        "codepipeline:RegisterWebhookWithThirdParty",
        "codepipeline:RetryStageExecution",
        "codepipeline:StartPipelineExecution",
        "codepipeline:StopPipelineExecution",
        "codepipeline:TagResource",
        "codepipeline:UntagResource",
        "codepipeline:UpdatePipeline",
        "codestar-connections:CreateConnection",
        "codestar-connections:DeleteConnection",
        "codestar-connections:GetConnection",
        "codestar-connections:GetIndividualAccessToken",
        "codestar-connections:GetInstallationUrl",
        "codestar-connections:ListConnections",
        "codestar-connections:ListInstallationTargets",
        "codestar-connections:ListTagsForResource",
        "codestar-connections:PassConnection",
        "codestar-connections:StartOAuthHandshake",
        "codestar-connections:TagResource",
        "codestar-connections:UntagResource",
        "codestar-connections:UpdateConnectionInstallation",
        "codestar-connections:UseConnection",
        "codestar-notifications:CreateNotificationRule",
        "codestar-notifications:DeleteNotificationRule",
        "codestar-notifications:DeleteTarget",
        "codestar-notifications:DescribeNotificationRule",
        "codestar-notifications:ListEventTypes",
        "codestar-notifications:ListNotificationRules",
        "codestar-notifications:ListTagsForResource",
        "codestar-notifications:ListTargets",
        "codestar-notifications:Subscribe",
        "codestar-notifications:TagResource",
        "codestar-notifications:Unsubscribe",
        "codestar-notifications:UntagResource",
        "codestar-notifications:UpdateNotificationRule",
        "codestar:AssociateTeamMember",
        "codestar:CreateProject",
        "codestar:CreateUserProfile",
        "codestar:DeleteExtendedAccess",
        "codestar:DeleteProject",
        "codestar:DeleteUserProfile",
        "codestar:DescribeProject",
        "codestar:DescribeUserProfile",
        "codestar:DisassociateTeamMember",
        "codestar:GetExtendedAccess",
        "codestar:ListProjects",
        "codestar:ListResources",
        "codestar:ListTagsForProject",
        "codestar:ListTeamMembers",
        "codestar:ListUserProfiles",
        "codestar:PutExtendedAccess",
        "codestar:TagProject",
        "codestar:UntagProject",
        "codestar:UpdateProject",
        "codestar:UpdateTeamMember",
        "codestar:UpdateUserProfile",
        "cognito-identity:CreateIdentityPool",
        "cognito-identity:DeleteIdentities",
        "cognito-identity:DeleteIdentityPool",
        "cognito-identity:DescribeIdentity",
        "cognito-identity:DescribeIdentityPool",
        "cognito-identity:GetCredentialsForIdentity",
        "cognito-identity:GetId",
        "cognito-identity:GetIdentityPoolRoles",
        "cognito-identity:GetOpenIdToken",
        "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
        "cognito-identity:ListIdentities",
        "cognito-identity:ListIdentityPools",
        "cognito-identity:ListTagsForResource",
        "cognito-identity:LookupDeveloperIdentity",
        "cognito-identity:MergeDeveloperIdentities",
        "cognito-identity:SetIdentityPoolRoles",
        "cognito-identity:TagResource",
        "cognito-identity:UnlinkDeveloperIdentity",
        "cognito-identity:UnlinkIdentity",
        "cognito-identity:UntagResource",
        "cognito-identity:UpdateIdentityPool",
        "cognito-idp:AddCustomAttributes",
        "cognito-idp:AdminAddUserToGroup",
        "cognito-idp:AdminConfirmSignUp",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminDeleteUserAttributes",
        "cognito-idp:AdminDisableProviderForUser",
        "cognito-idp:AdminDisableUser",
        "cognito-idp:AdminEnableUser",
        "cognito-idp:AdminForgetDevice",
        "cognito-idp:AdminGetDevice",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminLinkProviderForUser",
        "cognito-idp:AdminListDevices",
        "cognito-idp:AdminListGroupsForUser",
        "cognito-idp:AdminListUserAuthEvents",
        "cognito-idp:AdminRemoveUserFromGroup",
        "cognito-idp:AdminResetUserPassword",
        "cognito-idp:AdminRespondToAuthChallenge",
        "cognito-idp:AdminSetUserMFAPreference",
        "cognito-idp:AdminSetUserPassword",
        "cognito-idp:AdminSetUserSettings",
        "cognito-idp:AdminUpdateAuthEventFeedback",
        "cognito-idp:AdminUpdateDeviceStatus",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:AdminUserGlobalSignOut",
        "cognito-idp:AssociateSoftwareToken",
        "cognito-idp:ChangePassword",
        "cognito-idp:ConfirmDevice",
        "cognito-idp:ConfirmForgotPassword",
        "cognito-idp:ConfirmSignUp",
        "cognito-idp:CreateGroup",
        "cognito-idp:CreateIdentityProvider",
        "cognito-idp:CreateResourceServer",
        "cognito-idp:CreateUserImportJob",
        "cognito-idp:CreateUserPool",
        "cognito-idp:CreateUserPoolClient",
        "cognito-idp:CreateUserPoolDomain",
        "cognito-idp:DeleteGroup",
        "cognito-idp:DeleteIdentityProvider",
        "cognito-idp:DeleteResourceServer",
        "cognito-idp:DeleteUser",
        "cognito-idp:DeleteUserAttributes",
        "cognito-idp:DeleteUserPool",
        "cognito-idp:DeleteUserPoolClient",
        "cognito-idp:DeleteUserPoolDomain",
        "cognito-idp:DescribeIdentityProvider",
        "cognito-idp:DescribeResourceServer",
        "cognito-idp:DescribeRiskConfiguration",
        "cognito-idp:DescribeUserImportJob",
        "cognito-idp:DescribeUserPool",
        "cognito-idp:DescribeUserPoolClient",
        "cognito-idp:DescribeUserPoolDomain",
        "cognito-idp:ForgetDevice",
        "cognito-idp:ForgotPassword",
        "cognito-idp:GetCSVHeader",
        "cognito-idp:GetDevice",
        "cognito-idp:GetGroup",
        "cognito-idp:GetIdentityProviderByIdentifier",
        "cognito-idp:GetSigningCertificate",
        "cognito-idp:GetUICustomization",
        "cognito-idp:GetUser",
        "cognito-idp:GetUserAttributeVerificationCode",
        "cognito-idp:GetUserPoolMfaConfig",
        "cognito-idp:GlobalSignOut",
        "cognito-idp:InitiateAuth",
        "cognito-idp:ListDevices",
        "cognito-idp:ListGroups",
        "cognito-idp:ListIdentityProviders",
        "cognito-idp:ListResourceServers",
        "cognito-idp:ListTagsForResource",
        "cognito-idp:ListUserImportJobs",
        "cognito-idp:ListUserPoolClients",
        "cognito-idp:ListUserPools",
        "cognito-idp:ListUsers",
        "cognito-idp:ListUsersInGroup",
        "cognito-idp:ResendConfirmationCode",
        "cognito-idp:RespondToAuthChallenge",
        "cognito-idp:SetRiskConfiguration",
        "cognito-idp:SetUICustomization",
        "cognito-idp:SetUserMFAPreference",
        "cognito-idp:SetUserPoolMfaConfig",
        "cognito-idp:SetUserSettings",
        "cognito-idp:SignUp",
        "cognito-idp:StartUserImportJob",
        "cognito-idp:StopUserImportJob",
        "cognito-idp:TagResource",
        "cognito-idp:UntagResource",
        "cognito-idp:UpdateAuthEventFeedback",
        "cognito-idp:UpdateDeviceStatus",
        "cognito-idp:UpdateGroup",
        "cognito-idp:UpdateIdentityProvider",
        "cognito-idp:UpdateResourceServer",
        "cognito-idp:UpdateUserAttributes",
        "cognito-idp:UpdateUserPool",
        "cognito-idp:UpdateUserPoolClient",
        "cognito-idp:UpdateUserPoolDomain",
        "cognito-idp:VerifySoftwareToken",
        "cognito-idp:VerifyUserAttribute",
        "cognito-sync:BulkPublish",
        "cognito-sync:DeleteDataset",
        "cognito-sync:DescribeDataset",
        "cognito-sync:DescribeIdentityPoolUsage",
        "cognito-sync:DescribeIdentityUsage",
        "cognito-sync:GetBulkPublishDetails",
        "cognito-sync:GetCognitoEvents",
        "cognito-sync:GetIdentityPoolConfiguration",
        "cognito-sync:ListDatasets",
        "cognito-sync:ListIdentityPoolUsage",
        "cognito-sync:ListRecords",
        "cognito-sync:QueryRecords",
        "cognito-sync:RegisterDevice",
        "cognito-sync:SetCognitoEvents",
        "cognito-sync:SetDatasetConfiguration",
        "cognito-sync:SetIdentityPoolConfiguration",
        "cognito-sync:SubscribeToDataset",
        "cognito-sync:UnsubscribeFromDataset",
        "cognito-sync:UpdateRecords",
        "comprehend:BatchDetectDominantLanguage",
        "comprehend:BatchDetectEntities",
        "comprehend:BatchDetectKeyPhrases",
        "comprehend:BatchDetectSentiment",
        "comprehend:BatchDetectSyntax",
        "comprehend:ClassifyDocument",
        "comprehend:CreateDocumentClassifier",
        "comprehend:CreateEndpoint",
        "comprehend:CreateEntityRecognizer",
        "comprehend:DeleteDocumentClassifier",
        "comprehend:DeleteEndpoint",
        "comprehend:DeleteEntityRecognizer",
        "comprehend:DescribeDocumentClassificationJob",
        "comprehend:DescribeDocumentClassifier",
        "comprehend:DescribeDominantLanguageDetectionJob",
        "comprehend:DescribeEndpoint",
        "comprehend:DescribeEntitiesDetectionJob",
        "comprehend:DescribeEntityRecognizer",
        "comprehend:DescribeKeyPhrasesDetectionJob",
        "comprehend:DescribeSentimentDetectionJob",
        "comprehend:DescribeTopicsDetectionJob",
        "comprehend:DetectDominantLanguage",
        "comprehend:DetectEntities",
        "comprehend:DetectKeyPhrases",
        "comprehend:DetectSentiment",
        "comprehend:DetectSyntax",
        "comprehend:ListDocumentClassificationJobs",
        "comprehend:ListDocumentClassifiers",
        "comprehend:ListDominantLanguageDetectionJobs",
        "comprehend:ListEndpoints",
        "comprehend:ListEntitiesDetectionJobs",
        "comprehend:ListEntityRecognizers",
        "comprehend:ListKeyPhrasesDetectionJobs",
        "comprehend:ListSentimentDetectionJobs",
        "comprehend:ListTagsForResource",
        "comprehend:ListTopicsDetectionJobs",
        "comprehend:StartDocumentClassificationJob",
        "comprehend:StartDominantLanguageDetectionJob",
        "comprehend:StartEntitiesDetectionJob",
        "comprehend:StartKeyPhrasesDetectionJob",
        "comprehend:StartSentimentDetectionJob",
        "comprehend:StartTopicsDetectionJob",
        "comprehend:StopDominantLanguageDetectionJob",
        "comprehend:StopEntitiesDetectionJob",
        "comprehend:StopKeyPhrasesDetectionJob",
        "comprehend:StopSentimentDetectionJob",
        "comprehend:StopTrainingDocumentClassifier",
        "comprehend:StopTrainingEntityRecognizer",
        "comprehend:TagResource",
        "comprehend:UntagResource",
        "comprehend:UpdateEndpoint",
        "comprehendmedical:DetectEntities",
        "comprehendmedical:DetectPHI",
        "compute-optimizer:DescribeRecommendationExportJobs",
        "compute-optimizer:ExportAutoScalingGroupRecommendations",
        "compute-optimizer:ExportEC2InstanceRecommendations",
        "compute-optimizer:GetAutoScalingGroupRecommendations",
        "compute-optimizer:GetEC2InstanceRecommendations",
        "compute-optimizer:GetEC2RecommendationProjectedMetrics",
        "compute-optimizer:GetEnrollmentStatus",
        "compute-optimizer:GetRecommendationSummaries",
        "compute-optimizer:UpdateEnrollmentStatus",
        "config:BatchGetAggregateResourceConfig",
        "config:BatchGetResourceConfig",
        "config:DeleteAggregationAuthorization",
        "config:DeleteConfigRule",
        "config:DeleteConfigurationAggregator",
        "config:DeleteConfigurationRecorder",
        "config:DeleteConformancePack",
        "config:DeleteDeliveryChannel",
        "config:DeleteEvaluationResults",
        "config:DeleteOrganizationConfigRule",
        "config:DeleteOrganizationConformancePack",
        "config:DeletePendingAggregationRequest",
        "config:DeleteRemediationConfiguration",
        "config:DeleteRemediationExceptions",
        "config:DeleteRetentionConfiguration",
        "config:DeliverConfigSnapshot",
        "config:DescribeAggregateComplianceByConfigRules",
        "config:DescribeAggregationAuthorizations",
        "config:DescribeComplianceByConfigRule",
        "config:DescribeComplianceByResource",
        "config:DescribeConfigRuleEvaluationStatus",
        "config:DescribeConfigRules",
        "config:DescribeConfigurationAggregatorSourcesStatus",
        "config:DescribeConfigurationAggregators",
        "config:DescribeConfigurationRecorderStatus",
        "config:DescribeConfigurationRecorders",
        "config:DescribeConformancePackCompliance",
        "config:DescribeConformancePackStatus",
        "config:DescribeConformancePacks",
        "config:DescribeDeliveryChannelStatus",
        "config:DescribeDeliveryChannels",
        "config:DescribeOrganizationConfigRuleStatuses",
        "config:DescribeOrganizationConfigRules",
        "config:DescribeOrganizationConformancePackStatuses",
        "config:DescribeOrganizationConformancePacks",
        "config:DescribePendingAggregationRequests",
        "config:DescribeRemediationConfigurations",
        "config:DescribeRemediationExceptions",
        "config:DescribeRemediationExecutionStatus",
        "config:DescribeRetentionConfigurations",
        "config:GetAggregateComplianceDetailsByConfigRule",
        "config:GetAggregateConfigRuleComplianceSummary",
        "config:GetAggregateDiscoveredResourceCounts",
        "config:GetAggregateResourceConfig",
        "config:GetComplianceDetailsByConfigRule",
        "config:GetComplianceDetailsByResource",
        "config:GetComplianceSummaryByConfigRule",
        "config:GetComplianceSummaryByResourceType",
        "config:GetConformancePackComplianceDetails",
        "config:GetConformancePackComplianceSummary",
        "config:GetDiscoveredResourceCounts",
        "config:GetOrganizationConfigRuleDetailedStatus",
        "config:GetOrganizationConformancePackDetailedStatus",
        "config:GetResourceConfigHistory",
        "config:ListAggregateDiscoveredResources",
        "config:ListDiscoveredResources",
        "config:ListTagsForResource",
        "config:PutAggregationAuthorization",
        "config:PutConfigRule",
        "config:PutConfigurationAggregator",
        "config:PutConfigurationRecorder",
        "config:PutConformancePack",
        "config:PutDeliveryChannel",
        "config:PutEvaluations",
        "config:PutOrganizationConfigRule",
        "config:PutOrganizationConformancePack",
        "config:PutRemediationConfigurations",
        "config:PutRemediationExceptions",
        "config:PutRetentionConfiguration",
        "config:SelectAggregateResourceConfig",
        "config:SelectResourceConfig",
        "config:StartConfigRulesEvaluation",
        "config:StartConfigurationRecorder",
        "config:StartRemediationExecution",
        "config:StopConfigurationRecorder",
        "config:TagResource",
        "config:UntagResource",
        "connect:CreateInstance",
        "connect:CreateUser",
        "connect:DeleteUser",
        "connect:DescribeInstance",
        "connect:DescribeUser",
        "connect:DescribeUserHierarchyGroup",
        "connect:DescribeUserHierarchyStructure",
        "connect:DestroyInstance",
        "connect:GetContactAttributes",
        "connect:GetCurrentMetricData",
        "connect:GetFederationToken",
        "connect:GetFederationTokens",
        "connect:GetMetricData",
        "connect:ListContactFlows",
        "connect:ListHoursOfOperations",
        "connect:ListInstances",
        "connect:ListPhoneNumbers",
        "connect:ListQueues",
        "connect:ListRoutingProfiles",
        "connect:ListSecurityProfiles",
        "connect:ListTagsForResource",
        "connect:ListUserHierarchyGroups",
        "connect:ListUsers",
        "connect:ModifyInstance",
        "connect:StartChatContact",
        "connect:StartOutboundVoiceContact",
        "connect:StopContact",
        "connect:TagResource",
        "connect:UntagResource",
        "connect:UpdateContactAttributes",
        "connect:UpdateUserHierarchy",
        "connect:UpdateUserIdentityInfo",
        "connect:UpdateUserPhoneConfig",
        "connect:UpdateUserRoutingProfile",
        "connect:UpdateUserSecurityProfiles",
        "cur:DeleteReportDefinition",
        "cur:DescribeReportDefinitions",
        "cur:ModifyReportDefinition",
        "cur:PutReportDefinition",
        "dataexchange:CancelJob",
        "dataexchange:CreateAsset",
        "dataexchange:CreateDataSet",
        "dataexchange:CreateJob",
        "dataexchange:CreateRevision",
        "dataexchange:DeleteAsset",
        "dataexchange:DeleteDataSet",
        "dataexchange:DeleteRevision",
        "dataexchange:GetAsset",
        "dataexchange:GetDataSet",
        "dataexchange:GetJob",
        "dataexchange:GetRevision",
        "dataexchange:ListDataSetRevisions",
        "dataexchange:ListDataSets",
        "dataexchange:ListJobs",
        "dataexchange:ListRevisionAssets",
        "dataexchange:ListTagsForResource",
        "dataexchange:StartJob",
        "dataexchange:TagResource",
        "dataexchange:UntagResource",
        "dataexchange:UpdateAsset",
        "dataexchange:UpdateDataSet",
        "dataexchange:UpdateRevision",
        "datapipeline:ActivatePipeline",
        "datapipeline:AddTags",
        "datapipeline:CreatePipeline",
        "datapipeline:DeactivatePipeline",
        "datapipeline:DeletePipeline",
        "datapipeline:DescribeObjects",
        "datapipeline:DescribePipelines",
        "datapipeline:EvaluateExpression",
        "datapipeline:GetAccountLimits",
        "datapipeline:GetPipelineDefinition",
        "datapipeline:ListPipelines",
        "datapipeline:PollForTask",
        "datapipeline:PutAccountLimits",
        "datapipeline:PutPipelineDefinition",
        "datapipeline:QueryObjects",
        "datapipeline:RemoveTags",
        "datapipeline:ReportTaskProgress",
        "datapipeline:ReportTaskRunnerHeartbeat",
        "datapipeline:SetStatus",
        "datapipeline:SetTaskStatus",
        "datapipeline:ValidatePipelineDefinition",
        "datasync:CancelTaskExecution",
        "datasync:CreateAgent",
        "datasync:CreateLocationEfs",
        "datasync:CreateLocationNfs",
        "datasync:CreateLocationS3",
        "datasync:CreateLocationSmb",
        "datasync:CreateTask",
        "datasync:DeleteAgent",
        "datasync:DeleteLocation",
        "datasync:DeleteTask",
        "datasync:DescribeAgent",
        "datasync:DescribeLocationEfs",
        "datasync:DescribeLocationNfs",
        "datasync:DescribeLocationS3",
        "datasync:DescribeLocationSmb",
        "datasync:DescribeTask",
        "datasync:DescribeTaskExecution",
        "datasync:ListAgents",
        "datasync:ListLocations",
        "datasync:ListTagsForResource",
        "datasync:ListTaskExecutions",
        "datasync:ListTasks",
        "datasync:StartTaskExecution",
        "datasync:TagResource",
        "datasync:UntagResource",
        "datasync:UpdateAgent",
        "datasync:UpdateTask",
        "dax:BatchGetItem",
        "dax:BatchWriteItem",
        "dax:ConditionCheckItem",
        "dax:CreateCluster",
        "dax:CreateParameterGroup",
        "dax:CreateSubnetGroup",
        "dax:DecreaseReplicationFactor",
        "dax:DeleteCluster",
        "dax:DeleteItem",
        "dax:DeleteParameterGroup",
        "dax:DeleteSubnetGroup",
        "dax:DescribeClusters",
        "dax:DescribeDefaultParameters",
        "dax:DescribeEvents",
        "dax:DescribeParameterGroups",
        "dax:DescribeParameters",
        "dax:DescribeSubnetGroups",
        "dax:GetItem",
        "dax:IncreaseReplicationFactor",
        "dax:ListTags",
        "dax:PutItem",
        "dax:Query",
        "dax:RebootNode",
        "dax:Scan",
        "dax:TagResource",
        "dax:UntagResource",
        "dax:UpdateCluster",
        "dax:UpdateItem",
        "dax:UpdateParameterGroup",
        "dax:UpdateSubnetGroup",
        "dbqms:CreateFavoriteQuery",
        "dbqms:CreateQueryHistory",
        "dbqms:DeleteFavoriteQueries",
        "dbqms:DeleteQueryHistory",
        "dbqms:DescribeFavoriteQueries",
        "dbqms:DescribeQueryHistory",
        "dbqms:GetQueryString",
        "dbqms:UpdateFavoriteQuery",
        "dbqms:UpdateQueryHistory",
        "deepcomposer:AssociateCoupon",
        "deepcomposer:CreateAudio",
        "deepcomposer:CreateComposition",
        "deepcomposer:CreateModel",
        "deepcomposer:DeleteComposition",
        "deepcomposer:DeleteModel",
        "deepcomposer:GetComposition",
        "deepcomposer:GetModel",
        "deepcomposer:GetSampleModel",
        "deepcomposer:ListCompositions",
        "deepcomposer:ListModels",
        "deepcomposer:ListSampleModels",
        "deepcomposer:ListTrainingTopics",
        "deepcomposer:UpdateComposition",
        "deepcomposer:UpdateModel",
        "deeplens:AssociateServiceRoleToAccount",
        "deeplens:BatchGetDevice",
        "deeplens:BatchGetModel",
        "deeplens:BatchGetProject",
        "deeplens:CreateDeviceCertificates",
        "deeplens:CreateModel",
        "deeplens:CreateProject",
        "deeplens:DeleteModel",
        "deeplens:DeleteProject",
        "deeplens:DeployProject",
        "deeplens:DeregisterDevice",
        "deeplens:GetAssociatedResources",
        "deeplens:GetDeploymentStatus",
        "deeplens:GetDevice",
        "deeplens:GetModel",
        "deeplens:GetProject",
        "deeplens:ImportProjectFromTemplate",
        "deeplens:ListDeployments",
        "deeplens:ListDevices",
        "deeplens:ListModels",
        "deeplens:ListProjects",
        "deeplens:RegisterDevice",
        "deeplens:RemoveProject",
        "deeplens:UpdateProject",
        "deepracer:CloneReinforcementLearningModel",
        "deepracer:CreateAccountResources",
        "deepracer:CreateLeaderboardSubmission",
        "deepracer:CreateReinforcementLearningModel",
        "deepracer:DeleteAccountResources",
        "deepracer:DeleteModel",
        "deepracer:GetAccountResources",
        "deepracer:GetAlias",
        "deepracer:GetEvaluation",
        "deepracer:GetLatestUserSubmission",
        "deepracer:GetLeaderboard",
        "deepracer:GetModel",
        "deepracer:GetRankedUserSubmission",
        "deepracer:GetTrack",
        "deepracer:GetTrainingJob",
        "deepracer:ListEvaluations",
        "deepracer:ListLeaderboardSubmissions",
        "deepracer:ListLeaderboards",
        "deepracer:ListModels",
        "deepracer:ListTracks",
        "deepracer:ListTrainingJobs",
        "deepracer:SetAlias",
        "deepracer:StartEvaluation",
        "deepracer:StopEvaluation",
        "deepracer:StopTrainingReinforcementLearningModel",
        "deepracer:TestRewardFunction",
        "detective:AcceptInvitation",
        "detective:CreateGraph",
        "detective:CreateMembers",
        "detective:DeleteGraph",
        "detective:DeleteMembers",
        "detective:DisassociateMembership",
        "detective:GetFreeTrialEligibility",
        "detective:GetGraphIngestState",
        "detective:GetMembers",
        "detective:GetPricingInformation",
        "detective:GetUsageInformation",
        "detective:ListGraphs",
        "detective:ListInvitations",
        "detective:ListMembers",
        "detective:RejectInvitation",
        "detective:SearchGraph",
        "detective:StartMonitoringMember",
        "devicefarm:CreateDevicePool",
        "devicefarm:CreateInstanceProfile",
        "devicefarm:CreateNetworkProfile",
        "devicefarm:CreateProject",
        "devicefarm:CreateRemoteAccessSession",
        "devicefarm:CreateTestGridProject",
        "devicefarm:CreateTestGridUrl",
        "devicefarm:CreateUpload",
        "devicefarm:CreateVPCEConfiguration",
        "devicefarm:DeleteDevicePool",
        "devicefarm:DeleteInstanceProfile",
        "devicefarm:DeleteNetworkProfile",
        "devicefarm:DeleteProject",
        "devicefarm:DeleteRemoteAccessSession",
        "devicefarm:DeleteRun",
        "devicefarm:DeleteTestGridProject",
        "devicefarm:DeleteUpload",
        "devicefarm:DeleteVPCEConfiguration",
        "devicefarm:GetAccountSettings",
        "devicefarm:GetDevice",
        "devicefarm:GetDeviceInstance",
        "devicefarm:GetDevicePool",
        "devicefarm:GetDevicePoolCompatibility",
        "devicefarm:GetInstanceProfile",
        "devicefarm:GetJob",
        "devicefarm:GetNetworkProfile",
        "devicefarm:GetOfferingStatus",
        "devicefarm:GetProject",
        "devicefarm:GetRemoteAccessSession",
        "devicefarm:GetRun",
        "devicefarm:GetSuite",
        "devicefarm:GetTest",
        "devicefarm:GetTestGridProject",
        "devicefarm:GetTestGridSession",
        "devicefarm:GetUpload",
        "devicefarm:GetVPCEConfiguration",
        "devicefarm:InstallToRemoteAccessSession",
        "devicefarm:ListArtifacts",
        "devicefarm:ListDeviceInstances",
        "devicefarm:ListDevicePools",
        "devicefarm:ListDevices",
        "devicefarm:ListInstanceProfiles",
        "devicefarm:ListJobs",
        "devicefarm:ListNetworkProfiles",
        "devicefarm:ListOfferingPromotions",
        "devicefarm:ListOfferingTransactions",
        "devicefarm:ListOfferings",
        "devicefarm:ListProjects",
        "devicefarm:ListRemoteAccessSessions",
        "devicefarm:ListRuns",
        "devicefarm:ListSamples",
        "devicefarm:ListSuites",
        "devicefarm:ListTagsForResource",
        "devicefarm:ListTestGridProjects",
        "devicefarm:ListTestGridSessionActions",
        "devicefarm:ListTestGridSessionArtifacts",
        "devicefarm:ListTestGridSessions",
        "devicefarm:ListTests",
        "devicefarm:ListUniqueProblems",
        "devicefarm:ListUploads",
        "devicefarm:ListVPCEConfigurations",
        "devicefarm:PurchaseOffering",
        "devicefarm:RenewOffering",
        "devicefarm:ScheduleRun",
        "devicefarm:StopJob",
        "devicefarm:StopRemoteAccessSession",
        "devicefarm:StopRun",
        "devicefarm:TagResource",
        "devicefarm:UntagResource",
        "devicefarm:UpdateDeviceInstance",
        "devicefarm:UpdateDevicePool",
        "devicefarm:UpdateInstanceProfile",
        "devicefarm:UpdateNetworkProfile",
        "devicefarm:UpdateProject",
        "devicefarm:UpdateTestGridProject",
        "devicefarm:UpdateUpload",
        "devicefarm:UpdateVPCEConfiguration",
        "directconnect:AcceptDirectConnectGatewayAssociationProposal",
        "directconnect:AllocateConnectionOnInterconnect",
        "directconnect:AllocateHostedConnection",
        "directconnect:AllocatePrivateVirtualInterface",
        "directconnect:AllocatePublicVirtualInterface",
        "directconnect:AllocateTransitVirtualInterface",
        "directconnect:AssociateConnectionWithLag",
        "directconnect:AssociateHostedConnection",
        "directconnect:AssociateVirtualInterface",
        "directconnect:ConfirmConnection",
        "directconnect:ConfirmPrivateVirtualInterface",
        "directconnect:ConfirmPublicVirtualInterface",
        "directconnect:ConfirmTransitVirtualInterface",
        "directconnect:CreateBGPPeer",
        "directconnect:CreateConnection",
        "directconnect:CreateDirectConnectGateway",
        "directconnect:CreateDirectConnectGatewayAssociation",
        "directconnect:CreateDirectConnectGatewayAssociationProposal",
        "directconnect:CreateInterconnect",
        "directconnect:CreateLag",
        "directconnect:CreatePrivateVirtualInterface",
        "directconnect:CreatePublicVirtualInterface",
        "directconnect:CreateTransitVirtualInterface",
        "directconnect:DeleteBGPPeer",
        "directconnect:DeleteConnection",
        "directconnect:DeleteDirectConnectGateway",
        "directconnect:DeleteDirectConnectGatewayAssociation",
        "directconnect:DeleteDirectConnectGatewayAssociationProposal",
        "directconnect:DeleteInterconnect",
        "directconnect:DeleteLag",
        "directconnect:DeleteVirtualInterface",
        "directconnect:DescribeConnectionLoa",
        "directconnect:DescribeConnections",
        "directconnect:DescribeConnectionsOnInterconnect",
        "directconnect:DescribeDirectConnectGatewayAssociationProposals",
        "directconnect:DescribeDirectConnectGatewayAssociations",
        "directconnect:DescribeDirectConnectGatewayAttachments",
        "directconnect:DescribeDirectConnectGateways",
        "directconnect:DescribeHostedConnections",
        "directconnect:DescribeInterconnectLoa",
        "directconnect:DescribeInterconnects",
        "directconnect:DescribeLags",
        "directconnect:DescribeLoa",
        "directconnect:DescribeLocations",
        "directconnect:DescribeTags",
        "directconnect:DescribeVirtualGateways",
        "directconnect:DescribeVirtualInterfaces",
        "directconnect:DisassociateConnectionFromLag",
        "directconnect:ListVirtualInterfaceTestHistory",
        "directconnect:StartBgpFailoverTest",
        "directconnect:StopBgpFailoverTest",
        "directconnect:TagResource",
        "directconnect:UntagResource",
        "directconnect:UpdateDirectConnectGatewayAssociation",
        "directconnect:UpdateLag",
        "directconnect:UpdateVirtualInterfaceAttributes",
        "discovery:AssociateConfigurationItemsToApplication",
        "discovery:BatchDeleteImportData",
        "discovery:CreateApplication",
        "discovery:CreateTags",
        "discovery:DeleteApplications",
        "discovery:DeleteTags",
        "discovery:DescribeAgents",
        "discovery:DescribeConfigurations",
        "discovery:DescribeContinuousExports",
        "discovery:DescribeExportConfigurations",
        "discovery:DescribeExportTasks",
        "discovery:DescribeImportTasks",
        "discovery:DescribeTags",
        "discovery:DisassociateConfigurationItemsFromApplication",
        "discovery:ExportConfigurations",
        "discovery:GetDiscoverySummary",
        "discovery:ListConfigurations",
        "discovery:ListServerNeighbors",
        "discovery:StartContinuousExport",
        "discovery:StartDataCollectionByAgentIds",
        "discovery:StartExportTask",
        "discovery:StartImportTask",
        "discovery:StopContinuousExport",
        "discovery:StopDataCollectionByAgentIds",
        "discovery:UpdateApplication",
        "dlm:CreateLifecyclePolicy",
        "dlm:DeleteLifecyclePolicy",
        "dlm:GetLifecyclePolicies",
        "dlm:GetLifecyclePolicy",
        "dlm:ListTagsForResource",
        "dlm:TagResource",
        "dlm:UntagResource",
        "dlm:UpdateLifecyclePolicy",
        "dms:AddTagsToResource",
        "dms:ApplyPendingMaintenanceAction",
        "dms:CreateEndpoint",
        "dms:CreateEventSubscription",
        "dms:CreateReplicationInstance",
        "dms:CreateReplicationSubnetGroup",
        "dms:CreateReplicationTask",
        "dms:DeleteCertificate",
        "dms:DeleteEndpoint",
        "dms:DeleteEventSubscription",
        "dms:DeleteReplicationInstance",
        "dms:DeleteReplicationSubnetGroup",
        "dms:DeleteReplicationTask",
        "dms:DescribeAccountAttributes",
        "dms:DescribeCertificates",
        "dms:DescribeConnections",
        "dms:DescribeEndpointTypes",
        "dms:DescribeEndpoints",
        "dms:DescribeEventCategories",
        "dms:DescribeEventSubscriptions",
        "dms:DescribeEvents",
        "dms:DescribeOrderableReplicationInstances",
        "dms:DescribeRefreshSchemasStatus",
        "dms:DescribeReplicationInstanceTaskLogs",
        "dms:DescribeReplicationInstances",
        "dms:DescribeReplicationSubnetGroups",
        "dms:DescribeReplicationTaskAssessmentResults",
        "dms:DescribeReplicationTasks",
        "dms:DescribeSchemas",
        "dms:DescribeTableStatistics",
        "dms:ImportCertificate",
        "dms:ListTagsForResource",
        "dms:ModifyEndpoint",
        "dms:ModifyEventSubscription",
        "dms:ModifyReplicationInstance",
        "dms:ModifyReplicationSubnetGroup",
        "dms:ModifyReplicationTask",
        "dms:RebootReplicationInstance",
        "dms:RefreshSchemas",
        "dms:ReloadTables",
        "dms:RemoveTagsFromResource",
        "dms:StartReplicationTask",
        "dms:StartReplicationTaskAssessment",
        "dms:StopReplicationTask",
        "dms:TestConnection",
        "ds:AcceptSharedDirectory",
        "ds:AddIpRoutes",
        "ds:AddTagsToResource",
        "ds:AuthorizeApplication",
        "ds:CancelSchemaExtension",
        "ds:CheckAlias",
        "ds:ConnectDirectory",
        "ds:CreateAlias",
        "ds:CreateComputer",
        "ds:CreateConditionalForwarder",
        "ds:CreateDirectory",
        "ds:CreateIdentityPoolDirectory",
        "ds:CreateLogSubscription",
        "ds:CreateMicrosoftAD",
        "ds:CreateSnapshot",
        "ds:CreateTrust",
        "ds:DeleteConditionalForwarder",
        "ds:DeleteDirectory",
        "ds:DeleteLogSubscription",
        "ds:DeleteSnapshot",
        "ds:DeleteTrust",
        "ds:DeregisterCertificate",
        "ds:DeregisterEventTopic",
        "ds:DescribeCertificate",
        "ds:DescribeConditionalForwarders",
        "ds:DescribeDirectories",
        "ds:DescribeDomainControllers",
        "ds:DescribeEventTopics",
        "ds:DescribeLDAPSSettings",
        "ds:DescribeSharedDirectories",
        "ds:DescribeSnapshots",
        "ds:DescribeTrusts",
        "ds:DisableLDAPS",
        "ds:DisableRadius",
        "ds:DisableSso",
        "ds:EnableLDAPS",
        "ds:EnableRadius",
        "ds:EnableSso",
        "ds:GetAuthorizedApplicationDetails",
        "ds:GetDirectoryLimits",
        "ds:GetSnapshotLimits",
        "ds:ListAuthorizedApplications",
        "ds:ListCertificates",
        "ds:ListIpRoutes",
        "ds:ListLogSubscriptions",
        "ds:ListSchemaExtensions",
        "ds:ListTagsForResource",
        "ds:RegisterCertificate",
        "ds:RegisterEventTopic",
        "ds:RejectSharedDirectory",
        "ds:RemoveIpRoutes",
        "ds:RemoveTagsFromResource",
        "ds:ResetUserPassword",
        "ds:RestoreFromSnapshot",
        "ds:ShareDirectory",
        "ds:StartSchemaExtension",
        "ds:UnauthorizeApplication",
        "ds:UnshareDirectory",
        "ds:UpdateConditionalForwarder",
        "ds:UpdateNumberOfDomainControllers",
        "ds:UpdateRadius",
        "ds:UpdateTrust",
        "ds:VerifyTrust",
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:CreateBackup",
        "dynamodb:CreateGlobalTable",
        "dynamodb:CreateTable",
        "dynamodb:CreateTableReplica",
        "dynamodb:DeleteBackup",
        "dynamodb:DeleteItem",
        "dynamodb:DeleteTable",
        "dynamodb:DeleteTableReplica",
        "dynamodb:DescribeBackup",
        "dynamodb:DescribeContinuousBackups",
        "dynamodb:DescribeContributorInsights",
        "dynamodb:DescribeGlobalTable",
        "dynamodb:DescribeGlobalTableSettings",
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeReservedCapacity",
        "dynamodb:DescribeReservedCapacityOfferings",
        "dynamodb:DescribeStream",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeTableReplicaAutoScaling",
        "dynamodb:DescribeTimeToLive",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListBackups",
        "dynamodb:ListContributorInsights",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListStreams",
        "dynamodb:ListTables",
        "dynamodb:ListTagsOfResource",
        "dynamodb:PurchaseReservedCapacityOfferings",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:RestoreTableFromBackup",
        "dynamodb:RestoreTableToPointInTime",
        "dynamodb:Scan",
        "dynamodb:TagResource",
        "dynamodb:UntagResource",
        "dynamodb:UpdateContinuousBackups",
        "dynamodb:UpdateContributorInsights",
        "dynamodb:UpdateGlobalTable",
        "dynamodb:UpdateGlobalTableSettings",
        "dynamodb:UpdateItem",
        "dynamodb:UpdateTable",
        "dynamodb:UpdateTableReplicaAutoScaling",
        "dynamodb:UpdateTimeToLive",
        "ebs:GetSnapshotBlock",
        "ebs:ListChangedBlocks",
        "ebs:ListSnapshotBlocks",
        "ec2-instance-connect:SendSSHPublicKey",
        "ec2:AcceptReservedInstancesExchangeQuote",
        "ec2:AcceptTransitGatewayPeeringAttachment",
        "ec2:AcceptTransitGatewayVpcAttachment",
        "ec2:AcceptVpcEndpointConnections",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:AdvertiseByoipCidr",
        "ec2:AllocateAddress",
        "ec2:AllocateHosts",
        "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
        "ec2:AssignIpv6Addresses",
        "ec2:AssignPrivateIpAddresses",
        "ec2:AssociateAddress",
        "ec2:AssociateClientVpnTargetNetwork",
        "ec2:AssociateDhcpOptions",
        "ec2:AssociateIamInstanceProfile",
        "ec2:AssociateRouteTable",
        "ec2:AssociateSubnetCidrBlock",
        "ec2:AssociateTransitGatewayMulticastDomain",
        "ec2:AssociateTransitGatewayRouteTable",
        "ec2:AssociateVpcCidrBlock",
        "ec2:AttachClassicLinkVpc",
        "ec2:AttachInternetGateway",
        "ec2:AttachNetworkInterface",
        "ec2:AttachVolume",
        "ec2:AttachVpnGateway",
        "ec2:AuthorizeClientVpnIngress",
        "ec2:AuthorizeSecurityGroupEgress",
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:BundleInstance",
        "ec2:CancelBundleTask",
        "ec2:CancelCapacityReservation",
        "ec2:CancelConversionTask",
        "ec2:CancelExportTask",
        "ec2:CancelImportTask",
        "ec2:CancelReservedInstancesListing",
        "ec2:CancelSpotFleetRequests",
        "ec2:CancelSpotInstanceRequests",
        "ec2:ConfirmProductInstance",
        "ec2:CopyFpgaImage",
        "ec2:CopyImage",
        "ec2:CopySnapshot",
        "ec2:CreateCapacityReservation",
        "ec2:CreateClientVpnEndpoint",
        "ec2:CreateClientVpnRoute",
        "ec2:CreateCustomerGateway",
        "ec2:CreateDefaultSubnet",
        "ec2:CreateDefaultVpc",
        "ec2:CreateDhcpOptions",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateFleet",
        "ec2:CreateFlowLogs",
        "ec2:CreateFpgaImage",
        "ec2:CreateImage",
        "ec2:CreateInstanceExportTask",
        "ec2:CreateInternetGateway",
        "ec2:CreateKeyPair",
        "ec2:CreateLaunchTemplate",
        "ec2:CreateLaunchTemplateVersion",
        "ec2:CreateLocalGatewayRoute",
        "ec2:CreateLocalGatewayRouteTableVpcAssociation",
        "ec2:CreateNatGateway",
        "ec2:CreateNetworkAcl",
        "ec2:CreateNetworkAclEntry",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:CreatePlacementGroup",
        "ec2:CreateReservedInstancesListing",
        "ec2:CreateRoute",
        "ec2:CreateRouteTable",
        "ec2:CreateSecurityGroup",
        "ec2:CreateSnapshot",
        "ec2:CreateSnapshots",
        "ec2:CreateSpotDatafeedSubscription",
        "ec2:CreateSubnet",
        "ec2:CreateTags",
        "ec2:CreateTrafficMirrorFilter",
        "ec2:CreateTrafficMirrorFilterRule",
        "ec2:CreateTrafficMirrorSession",
        "ec2:CreateTrafficMirrorTarget",
        "ec2:CreateTransitGateway",
        "ec2:CreateTransitGatewayMulticastDomain",
        "ec2:CreateTransitGatewayPeeringAttachment",
        "ec2:CreateTransitGatewayRoute",
        "ec2:CreateTransitGatewayRouteTable",
        "ec2:CreateTransitGatewayVpcAttachment",
        "ec2:CreateVolume",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcEndpointConnectionNotification",
        "ec2:CreateVpcEndpointServiceConfiguration",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpnConnection",
        "ec2:CreateVpnConnectionRoute",
        "ec2:CreateVpnGateway",
        "ec2:DeleteClientVpnEndpoint",
        "ec2:DeleteClientVpnRoute",
        "ec2:DeleteCustomerGateway",
        "ec2:DeleteDhcpOptions",
        "ec2:DeleteEgressOnlyInternetGateway",
        "ec2:DeleteFleets",
        "ec2:DeleteFlowLogs",
        "ec2:DeleteFpgaImage",
        "ec2:DeleteInternetGateway",
        "ec2:DeleteKeyPair",
        "ec2:DeleteLaunchTemplate",
        "ec2:DeleteLaunchTemplateVersions",
        "ec2:DeleteLocalGatewayRoute",
        "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
        "ec2:DeleteNatGateway",
        "ec2:DeleteNetworkAcl",
        "ec2:DeleteNetworkAclEntry",
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteNetworkInterfacePermission",
        "ec2:DeletePlacementGroup",
        "ec2:DeleteRoute",
        "ec2:DeleteRouteTable",
        "ec2:DeleteSecurityGroup",
        "ec2:DeleteSnapshot",
        "ec2:DeleteSpotDatafeedSubscription",
        "ec2:DeleteSubnet",
        "ec2:DeleteTags",
        "ec2:DeleteTrafficMirrorFilter",
        "ec2:DeleteTrafficMirrorFilterRule",
        "ec2:DeleteTrafficMirrorSession",
        "ec2:DeleteTrafficMirrorTarget",
        "ec2:DeleteTransitGateway",
        "ec2:DeleteTransitGatewayMulticastDomain",
        "ec2:DeleteTransitGatewayPeeringAttachment",
        "ec2:DeleteTransitGatewayRoute",
        "ec2:DeleteTransitGatewayRouteTable",
        "ec2:DeleteTransitGatewayVpcAttachment",
        "ec2:DeleteVolume",
        "ec2:DeleteVpc",
        "ec2:DeleteVpcEndpointConnectionNotifications",
        "ec2:DeleteVpcEndpointServiceConfigurations",
        "ec2:DeleteVpcEndpoints",
        "ec2:DeleteVpcPeeringConnection",
        "ec2:DeleteVpnConnection",
        "ec2:DeleteVpnConnectionRoute",
        "ec2:DeleteVpnGateway",
        "ec2:DeprovisionByoipCidr",
        "ec2:DeregisterImage",
        "ec2:DeregisterInstanceEventNotificationAttributes",
        "ec2:DeregisterTransitGatewayMulticastGroupMembers",
        "ec2:DeregisterTransitGatewayMulticastGroupSources",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAggregateIdFormat",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeBundleTasks",
        "ec2:DescribeByoipCidrs",
        "ec2:DescribeCapacityReservations",
        "ec2:DescribeClassicLinkInstances",
        "ec2:DescribeClientVpnAuthorizationRules",
        "ec2:DescribeClientVpnConnections",
        "ec2:DescribeClientVpnEndpoints",
        "ec2:DescribeClientVpnRoutes",
        "ec2:DescribeClientVpnTargetNetworks",
        "ec2:DescribeCoipPools",
        "ec2:DescribeConversionTasks",
        "ec2:DescribeCustomerGateways",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeEgressOnlyInternetGateways",
        "ec2:DescribeElasticGpus",
        "ec2:DescribeExportImageTasks",
        "ec2:DescribeExportTasks",
        "ec2:DescribeFastSnapshotRestores",
        "ec2:DescribeFleetHistory",
        "ec2:DescribeFleetInstances",
        "ec2:DescribeFleets",
        "ec2:DescribeFlowLogs",
        "ec2:DescribeFpgaImageAttribute",
        "ec2:DescribeFpgaImages",
        "ec2:DescribeHostReservationOfferings",
        "ec2:DescribeHostReservations",
        "ec2:DescribeHosts",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DescribeIdFormat",
        "ec2:DescribeIdentityIdFormat",
        "ec2:DescribeImageAttribute",
        "ec2:DescribeImages",
        "ec2:DescribeImportImageTasks",
        "ec2:DescribeImportSnapshotTasks",
        "ec2:DescribeInstanceAttribute",
        "ec2:DescribeInstanceCreditSpecifications",
        "ec2:DescribeInstanceEventNotificationAttributes",
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstanceTypeOfferings",
        "ec2:DescribeInstanceTypes",
        "ec2:DescribeInstances",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeKeyPairs",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeLaunchTemplates",
        "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
        "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
        "ec2:DescribeLocalGatewayRouteTables",
        "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
        "ec2:DescribeLocalGatewayVirtualInterfaces",
        "ec2:DescribeLocalGateways",
        "ec2:DescribeMovingAddresses",
        "ec2:DescribeNatGateways",
        "ec2:DescribeNetworkAcls",
        "ec2:DescribeNetworkInterfaceAttribute",
        "ec2:DescribeNetworkInterfacePermissions",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribePlacementGroups",
        "ec2:DescribePrefixLists",
        "ec2:DescribePrincipalIdFormat",
        "ec2:DescribePublicIpv4Pools",
        "ec2:DescribeRegions",
        "ec2:DescribeReservedInstances",
        "ec2:DescribeReservedInstancesListings",
        "ec2:DescribeReservedInstancesModifications",
        "ec2:DescribeReservedInstancesOfferings",
        "ec2:DescribeRouteTables",
        "ec2:DescribeScheduledInstanceAvailability",
        "ec2:DescribeScheduledInstances",
        "ec2:DescribeSecurityGroupReferences",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSnapshotAttribute",
        "ec2:DescribeSnapshots",
        "ec2:DescribeSpotDatafeedSubscription",
        "ec2:DescribeSpotFleetInstances",
        "ec2:DescribeSpotFleetRequestHistory",
        "ec2:DescribeSpotFleetRequests",
        "ec2:DescribeSpotInstanceRequests",
        "ec2:DescribeSpotPriceHistory",
        "ec2:DescribeStaleSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeTags",
        "ec2:DescribeTrafficMirrorFilters",
        "ec2:DescribeTrafficMirrorSessions",
        "ec2:DescribeTrafficMirrorTargets",
        "ec2:DescribeTransitGatewayAttachments",
        "ec2:DescribeTransitGatewayMulticastDomains",
        "ec2:DescribeTransitGatewayPeeringAttachments",
        "ec2:DescribeTransitGatewayRouteTables",
        "ec2:DescribeTransitGatewayVpcAttachments",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVolumeAttribute",
        "ec2:DescribeVolumeStatus",
        "ec2:DescribeVolumes",
        "ec2:DescribeVolumesModifications",
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeVpcClassicLink",
        "ec2:DescribeVpcClassicLinkDnsSupport",
        "ec2:DescribeVpcEndpointConnectionNotifications",
        "ec2:DescribeVpcEndpointConnections",
        "ec2:DescribeVpcEndpointServiceConfigurations",
        "ec2:DescribeVpcEndpointServicePermissions",
        "ec2:DescribeVpcEndpointServices",
        "ec2:DescribeVpcEndpoints",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpnConnections",
        "ec2:DescribeVpnGateways",
        "ec2:DetachClassicLinkVpc",
        "ec2:DetachInternetGateway",
        "ec2:DetachNetworkInterface",
        "ec2:DetachVolume",
        "ec2:DetachVpnGateway",
        "ec2:DisableEbsEncryptionByDefault",
        "ec2:DisableFastSnapshotRestores",
        "ec2:DisableTransitGatewayRouteTablePropagation",
        "ec2:DisableVgwRoutePropagation",
        "ec2:DisableVpcClassicLink",
        "ec2:DisableVpcClassicLinkDnsSupport",
        "ec2:DisassociateAddress",
        "ec2:DisassociateClientVpnTargetNetwork",
        "ec2:DisassociateIamInstanceProfile",
        "ec2:DisassociateRouteTable",
        "ec2:DisassociateSubnetCidrBlock",
        "ec2:DisassociateTransitGatewayMulticastDomain",
        "ec2:DisassociateTransitGatewayRouteTable",
        "ec2:DisassociateVpcCidrBlock",
        "ec2:EnableEbsEncryptionByDefault",
        "ec2:EnableFastSnapshotRestores",
        "ec2:EnableTransitGatewayRouteTablePropagation",
        "ec2:EnableVgwRoutePropagation",
        "ec2:EnableVolumeIO",
        "ec2:EnableVpcClassicLink",
        "ec2:EnableVpcClassicLinkDnsSupport",
        "ec2:ExportClientVpnClientCertificateRevocationList",
        "ec2:ExportClientVpnClientConfiguration",
        "ec2:ExportImage",
        "ec2:ExportTransitGatewayRoutes",
        "ec2:GetCapacityReservationUsage",
        "ec2:GetCoipPoolUsage",
        "ec2:GetConsoleOutput",
        "ec2:GetConsoleScreenshot",
        "ec2:GetDefaultCreditSpecification",
        "ec2:GetEbsDefaultKmsKeyId",
        "ec2:GetEbsEncryptionByDefault",
        "ec2:GetHostReservationPurchasePreview",
        "ec2:GetLaunchTemplateData",
        "ec2:GetPasswordData",
        "ec2:GetReservedInstancesExchangeQuote",
        "ec2:GetTransitGatewayAttachmentPropagations",
        "ec2:GetTransitGatewayMulticastDomainAssociations",
        "ec2:GetTransitGatewayRouteTableAssociations",
        "ec2:GetTransitGatewayRouteTablePropagations",
        "ec2:ImportClientVpnClientCertificateRevocationList",
        "ec2:ImportImage",
        "ec2:ImportInstance",
        "ec2:ImportKeyPair",
        "ec2:ImportSnapshot",
        "ec2:ImportVolume",
        "ec2:ModifyCapacityReservation",
        "ec2:ModifyClientVpnEndpoint",
        "ec2:ModifyDefaultCreditSpecification",
        "ec2:ModifyEbsDefaultKmsKeyId",
        "ec2:ModifyFleet",
        "ec2:ModifyFpgaImageAttribute",
        "ec2:ModifyHosts",
        "ec2:ModifyIdFormat",
        "ec2:ModifyIdentityIdFormat",
        "ec2:ModifyImageAttribute",
        "ec2:ModifyInstanceAttribute",
        "ec2:ModifyInstanceCapacityReservationAttributes",
        "ec2:ModifyInstanceCreditSpecification",
        "ec2:ModifyInstanceEventStartTime",
        "ec2:ModifyInstanceMetadataOptions",
        "ec2:ModifyInstancePlacement",
        "ec2:ModifyLaunchTemplate",
        "ec2:ModifyNetworkInterfaceAttribute",
        "ec2:ModifyReservedInstances",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifySpotFleetRequest",
        "ec2:ModifySubnetAttribute",
        "ec2:ModifyTrafficMirrorFilterNetworkServices",
        "ec2:ModifyTrafficMirrorFilterRule",
        "ec2:ModifyTrafficMirrorSession",
        "ec2:ModifyTransitGatewayVpcAttachment",
        "ec2:ModifyVolume",
        "ec2:ModifyVolumeAttribute",
        "ec2:ModifyVpcAttribute",
        "ec2:ModifyVpcEndpoint",
        "ec2:ModifyVpcEndpointConnectionNotification",
        "ec2:ModifyVpcEndpointServiceConfiguration",
        "ec2:ModifyVpcEndpointServicePermissions",
        "ec2:ModifyVpcPeeringConnectionOptions",
        "ec2:ModifyVpcTenancy",
        "ec2:ModifyVpnConnection",
        "ec2:ModifyVpnTunnelCertificate",
        "ec2:ModifyVpnTunnelOptions",
        "ec2:MonitorInstances",
        "ec2:MoveAddressToVpc",
        "ec2:ProvisionByoipCidr",
        "ec2:PurchaseHostReservation",
        "ec2:PurchaseReservedInstancesOffering",
        "ec2:PurchaseScheduledInstances",
        "ec2:RebootInstances",
        "ec2:RegisterImage",
        "ec2:RegisterInstanceEventNotificationAttributes",
        "ec2:RegisterTransitGatewayMulticastGroupMembers",
        "ec2:RegisterTransitGatewayMulticastGroupSources",
        "ec2:RejectTransitGatewayPeeringAttachment",
        "ec2:RejectTransitGatewayVpcAttachment",
        "ec2:RejectVpcEndpointConnections",
        "ec2:RejectVpcPeeringConnection",
        "ec2:ReleaseAddress",
        "ec2:ReleaseHosts",
        "ec2:ReplaceIamInstanceProfileAssociation",
        "ec2:ReplaceNetworkAclAssociation",
        "ec2:ReplaceNetworkAclEntry",
        "ec2:ReplaceRoute",
        "ec2:ReplaceRouteTableAssociation",
        "ec2:ReplaceTransitGatewayRoute",
        "ec2:ReportInstanceStatus",
        "ec2:RequestSpotFleet",
        "ec2:RequestSpotInstances",
        "ec2:ResetEbsDefaultKmsKeyId",
        "ec2:ResetFpgaImageAttribute",
        "ec2:ResetImageAttribute",
        "ec2:ResetInstanceAttribute",
        "ec2:ResetNetworkInterfaceAttribute",
        "ec2:ResetSnapshotAttribute",
        "ec2:RestoreAddressToClassic",
        "ec2:RevokeClientVpnIngress",
        "ec2:RevokeSecurityGroupEgress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:RunInstances",
        "ec2:RunScheduledInstances",
        "ec2:SearchLocalGatewayRoutes",
        "ec2:SearchTransitGatewayMulticastGroups",
        "ec2:SearchTransitGatewayRoutes",
        "ec2:SendDiagnosticInterrupt",
        "ec2:StartInstances",
        "ec2:StartVpcEndpointServicePrivateDnsVerification",
        "ec2:StopInstances",
        "ec2:TerminateClientVpnConnections",
        "ec2:TerminateInstances",
        "ec2:UnassignIpv6Addresses",
        "ec2:UnassignPrivateIpAddresses",
        "ec2:UnmonitorInstances",
        "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
        "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
        "ec2:WithdrawByoipCidr",
        "ec2messages:AcknowledgeMessage",
        "ec2messages:DeleteMessage",
        "ec2messages:FailMessage",
        "ec2messages:GetEndpoint",
        "ec2messages:GetMessages",
        "ec2messages:SendReply",
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchDeleteImage",
        "ecr:BatchGetImage",
        "ecr:CompleteLayerUpload",
        "ecr:CreateRepository",
        "ecr:DeleteLifecyclePolicy",
        "ecr:DeleteRepository",
        "ecr:DeleteRepositoryPolicy",
        "ecr:DescribeImageScanFindings",
        "ecr:DescribeImages",
        "ecr:DescribeRepositories",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer",
        "ecr:GetLifecyclePolicy",
        "ecr:GetLifecyclePolicyPreview",
        "ecr:GetRepositoryPolicy",
        "ecr:InitiateLayerUpload",
        "ecr:ListImages",
        "ecr:ListTagsForResource",
        "ecr:PutImage",
        "ecr:PutImageScanningConfiguration",
        "ecr:PutImageTagMutability",
        "ecr:PutLifecyclePolicy",
        "ecr:SetRepositoryPolicy",
        "ecr:StartImageScan",
        "ecr:StartLifecyclePolicyPreview",
        "ecr:TagResource",
        "ecr:UntagResource",
        "ecr:UploadLayerPart",
        "ecs:CreateCluster",
        "ecs:CreateService",
        "ecs:CreateTaskSet",
        "ecs:DeleteAccountSetting",
        "ecs:DeleteAttributes",
        "ecs:DeleteCluster",
        "ecs:DeleteService",
        "ecs:DeleteTaskSet",
        "ecs:DeregisterContainerInstance",
        "ecs:DeregisterTaskDefinition",
        "ecs:DescribeClusters",
        "ecs:DescribeContainerInstances",
        "ecs:DescribeServices",
        "ecs:DescribeTaskDefinition",
        "ecs:DescribeTaskSets",
        "ecs:DescribeTasks",
        "ecs:DiscoverPollEndpoint",
        "ecs:ListAccountSettings",
        "ecs:ListAttributes",
        "ecs:ListClusters",
        "ecs:ListContainerInstances",
        "ecs:ListServices",
        "ecs:ListTagsForResource",
        "ecs:ListTaskDefinitionFamilies",
        "ecs:ListTaskDefinitions",
        "ecs:ListTasks",
        "ecs:Poll",
        "ecs:PutAccountSetting",
        "ecs:PutAccountSettingDefault",
        "ecs:PutAttributes",
        "ecs:RegisterContainerInstance",
        "ecs:RegisterTaskDefinition",
        "ecs:RunTask",
        "ecs:StartTask",
        "ecs:StartTelemetrySession",
        "ecs:StopTask",
        "ecs:SubmitAttachmentStateChanges",
        "ecs:SubmitContainerStateChange",
        "ecs:SubmitTaskStateChange",
        "ecs:TagResource",
        "ecs:UntagResource",
        "ecs:UpdateContainerAgent",
        "ecs:UpdateContainerInstancesState",
        "ecs:UpdateService",
        "ecs:UpdateServicePrimaryTaskSet",
        "ecs:UpdateTaskSet",
        "eks:CreateCluster",
        "eks:CreateFargateProfile",
        "eks:CreateNodegroup",
        "eks:DeleteCluster",
        "eks:DeleteFargateProfile",
        "eks:DeleteNodegroup",
        "eks:DescribeCluster",
        "eks:DescribeFargateProfile",
        "eks:DescribeNodegroup",
        "eks:DescribeUpdate",
        "eks:ListClusters",
        "eks:ListFargateProfiles",
        "eks:ListNodegroups",
        "eks:ListTagsForResource",
        "eks:ListUpdates",
        "eks:TagResource",
        "eks:UntagResource",
        "eks:UpdateClusterConfig",
        "eks:UpdateClusterVersion",
        "eks:UpdateNodegroupConfig",
        "eks:UpdateNodegroupVersion",
        "elastic-inference:Connect",
        "elasticache:AddTagsToResource",
        "elasticache:AuthorizeCacheSecurityGroupIngress",
        "elasticache:CopySnapshot",
        "elasticache:CreateCacheCluster",
        "elasticache:CreateCacheParameterGroup",
        "elasticache:CreateCacheSecurityGroup",
        "elasticache:CreateCacheSubnetGroup",
        "elasticache:CreateReplicationGroup",
        "elasticache:CreateSnapshot",
        "elasticache:DecreaseReplicaCount",
        "elasticache:DeleteCacheCluster",
        "elasticache:DeleteCacheParameterGroup",
        "elasticache:DeleteCacheSecurityGroup",
        "elasticache:DeleteCacheSubnetGroup",
        "elasticache:DeleteReplicationGroup",
        "elasticache:DeleteSnapshot",
        "elasticache:DescribeCacheClusters",
        "elasticache:DescribeCacheEngineVersions",
        "elasticache:DescribeCacheParameterGroups",
        "elasticache:DescribeCacheParameters",
        "elasticache:DescribeCacheSecurityGroups",
        "elasticache:DescribeCacheSubnetGroups",
        "elasticache:DescribeEngineDefaultParameters",
        "elasticache:DescribeEvents",
        "elasticache:DescribeReplicationGroups",
        "elasticache:DescribeReservedCacheNodes",
        "elasticache:DescribeReservedCacheNodesOfferings",
        "elasticache:DescribeSnapshots",
        "elasticache:IncreaseReplicaCount",
        "elasticache:ListAllowedNodeTypeModifications",
        "elasticache:ListTagsForResource",
        "elasticache:ModifyCacheCluster",
        "elasticache:ModifyCacheParameterGroup",
        "elasticache:ModifyCacheSubnetGroup",
        "elasticache:ModifyReplicationGroup",
        "elasticache:ModifyReplicationGroupShardConfiguration",
        "elasticache:PurchaseReservedCacheNodesOffering",
        "elasticache:RebootCacheCluster",
        "elasticache:RemoveTagsFromResource",
        "elasticache:ResetCacheParameterGroup",
        "elasticache:RevokeCacheSecurityGroupIngress",
        "elasticache:TestFailover",
        "elasticbeanstalk:AbortEnvironmentUpdate",
        "elasticbeanstalk:AddTags",
        "elasticbeanstalk:ApplyEnvironmentManagedAction",
        "elasticbeanstalk:CheckDNSAvailability",
        "elasticbeanstalk:ComposeEnvironments",
        "elasticbeanstalk:CreateApplication",
        "elasticbeanstalk:CreateApplicationVersion",
        "elasticbeanstalk:CreateConfigurationTemplate",
        "elasticbeanstalk:CreateEnvironment",
        "elasticbeanstalk:CreatePlatformVersion",
        "elasticbeanstalk:CreateStorageLocation",
        "elasticbeanstalk:DeleteApplication",
        "elasticbeanstalk:DeleteApplicationVersion",
        "elasticbeanstalk:DeleteConfigurationTemplate",
        "elasticbeanstalk:DeleteEnvironmentConfiguration",
        "elasticbeanstalk:DeletePlatformVersion",
        "elasticbeanstalk:DescribeAccountAttributes",
        "elasticbeanstalk:DescribeApplicationVersions",
        "elasticbeanstalk:DescribeApplications",
        "elasticbeanstalk:DescribeConfigurationOptions",
        "elasticbeanstalk:DescribeConfigurationSettings",
        "elasticbeanstalk:DescribeEnvironmentHealth",
        "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
        "elasticbeanstalk:DescribeEnvironmentManagedActions",
        "elasticbeanstalk:DescribeEnvironmentResources",
        "elasticbeanstalk:DescribeEnvironments",
        "elasticbeanstalk:DescribeEvents",
        "elasticbeanstalk:DescribeInstancesHealth",
        "elasticbeanstalk:DescribePlatformVersion",
        "elasticbeanstalk:ListAvailableSolutionStacks",
        "elasticbeanstalk:ListPlatformBranches",
        "elasticbeanstalk:ListPlatformVersions",
        "elasticbeanstalk:ListTagsForResource",
        "elasticbeanstalk:RebuildEnvironment",
        "elasticbeanstalk:RemoveTags",
        "elasticbeanstalk:RequestEnvironmentInfo",
        "elasticbeanstalk:RestartAppServer",
        "elasticbeanstalk:RetrieveEnvironmentInfo",
        "elasticbeanstalk:SwapEnvironmentCNAMEs",
        "elasticbeanstalk:TerminateEnvironment",
        "elasticbeanstalk:UpdateApplication",
        "elasticbeanstalk:UpdateApplicationResourceLifecycle",
        "elasticbeanstalk:UpdateApplicationVersion",
        "elasticbeanstalk:UpdateConfigurationTemplate",
        "elasticbeanstalk:UpdateEnvironment",
        "elasticbeanstalk:ValidateConfigurationSettings",
        "elasticfilesystem:Backup",
        "elasticfilesystem:ClientMount",
        "elasticfilesystem:ClientRootAccess",
        "elasticfilesystem:ClientWrite",
        "elasticfilesystem:CreateAccessPoint",
        "elasticfilesystem:CreateFileSystem",
        "elasticfilesystem:CreateMountTarget",
        "elasticfilesystem:CreateTags",
        "elasticfilesystem:DeleteAccessPoint",
        "elasticfilesystem:DeleteFileSystem",
        "elasticfilesystem:DeleteFileSystemPolicy",
        "elasticfilesystem:DeleteMountTarget",
        "elasticfilesystem:DeleteTags",
        "elasticfilesystem:DescribeAccessPoints",
        "elasticfilesystem:DescribeFileSystemPolicy",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeLifecycleConfiguration",
        "elasticfilesystem:DescribeMountTargetSecurityGroups",
        "elasticfilesystem:DescribeMountTargets",
        "elasticfilesystem:DescribeTags",
        "elasticfilesystem:ListTagsForResource",
        "elasticfilesystem:ModifyMountTargetSecurityGroups",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticfilesystem:PutLifecycleConfiguration",
        "elasticfilesystem:Restore",
        "elasticfilesystem:TagResource",
        "elasticfilesystem:UntagResource",
        "elasticfilesystem:UpdateFileSystem",
        "elasticloadbalancing:AddListenerCertificates",
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
        "elasticloadbalancing:AttachLoadBalancerToSubnets",
        "elasticloadbalancing:ConfigureHealthCheck",
        "elasticloadbalancing:CreateAppCookieStickinessPolicy",
        "elasticloadbalancing:CreateLBCookieStickinessPolicy",
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateLoadBalancerListeners",
        "elasticloadbalancing:CreateLoadBalancerPolicy",
        "elasticloadbalancing:CreateRule",
        "elasticloadbalancing:CreateTargetGroup",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:DeleteLoadBalancerListeners",
        "elasticloadbalancing:DeleteLoadBalancerPolicy",
        "elasticloadbalancing:DeleteRule",
        "elasticloadbalancing:DeleteTargetGroup",
        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
        "elasticloadbalancing:DeregisterTargets",
        "elasticloadbalancing:DescribeAccountLimits",
        "elasticloadbalancing:DescribeInstanceHealth",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeLoadBalancerPolicies",
        "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeTags",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticloadbalancing:DetachLoadBalancerFromSubnets",
        "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
        "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "elasticloadbalancing:ModifyRule",
        "elasticloadbalancing:ModifyTargetGroup",
        "elasticloadbalancing:ModifyTargetGroupAttributes",
        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
        "elasticloadbalancing:RegisterTargets",
        "elasticloadbalancing:RemoveListenerCertificates",
        "elasticloadbalancing:RemoveTags",
        "elasticloadbalancing:SetIpAddressType",
        "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
        "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
        "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
        "elasticloadbalancing:SetRulePriorities",
        "elasticloadbalancing:SetSecurityGroups",
        "elasticloadbalancing:SetSubnets",
        "elasticloadbalancing:SetWebAcl",
        "elasticmapreduce:AddInstanceFleet",
        "elasticmapreduce:AddInstanceGroups",
        "elasticmapreduce:AddJobFlowSteps",
        "elasticmapreduce:AddTags",
        "elasticmapreduce:CancelSteps",
        "elasticmapreduce:CreateEditor",
        "elasticmapreduce:CreateSecurityConfiguration",
        "elasticmapreduce:DeleteEditor",
        "elasticmapreduce:DeleteSecurityConfiguration",
        "elasticmapreduce:DescribeCluster",
        "elasticmapreduce:DescribeEditor",
        "elasticmapreduce:DescribeJobFlows",
        "elasticmapreduce:DescribeSecurityConfiguration",
        "elasticmapreduce:DescribeStep",
        "elasticmapreduce:GetBlockPublicAccessConfiguration",
        "elasticmapreduce:ListBootstrapActions",
        "elasticmapreduce:ListClusters",
        "elasticmapreduce:ListEditors",
        "elasticmapreduce:ListInstanceFleets",
        "elasticmapreduce:ListInstanceGroups",
        "elasticmapreduce:ListInstances",
        "elasticmapreduce:ListSecurityConfigurations",
        "elasticmapreduce:ListSteps",
        "elasticmapreduce:ModifyCluster",
        "elasticmapreduce:ModifyInstanceFleet",
        "elasticmapreduce:ModifyInstanceGroups",
        "elasticmapreduce:OpenEditorInConsole",
        "elasticmapreduce:PutAutoScalingPolicy",
        "elasticmapreduce:PutBlockPublicAccessConfiguration",
        "elasticmapreduce:RemoveAutoScalingPolicy",
        "elasticmapreduce:RemoveTags",
        "elasticmapreduce:RunJobFlow",
        "elasticmapreduce:SetTerminationProtection",
        "elasticmapreduce:StartEditor",
        "elasticmapreduce:StopEditor",
        "elasticmapreduce:TerminateJobFlows",
        "elasticmapreduce:ViewEventsFromAllClustersInConsole",
        "elastictranscoder:CancelJob",
        "elastictranscoder:CreateJob",
        "elastictranscoder:CreatePipeline",
        "elastictranscoder:CreatePreset",
        "elastictranscoder:DeletePipeline",
        "elastictranscoder:DeletePreset",
        "elastictranscoder:ListJobsByPipeline",
        "elastictranscoder:ListJobsByStatus",
        "elastictranscoder:ListPipelines",
        "elastictranscoder:ListPresets",
        "elastictranscoder:ReadJob",
        "elastictranscoder:ReadPipeline",
        "elastictranscoder:ReadPreset",
        "elastictranscoder:TestRole",
        "elastictranscoder:UpdatePipeline",
        "elastictranscoder:UpdatePipelineNotifications",
        "elastictranscoder:UpdatePipelineStatus",
        "es:AcceptInboundCrossClusterSearchConnection",
        "es:AddTags",
        "es:CreateElasticsearchDomain",
        "es:CreateElasticsearchServiceRole",
        "es:CreateOutboundCrossClusterSearchConnection",
        "es:DeleteElasticsearchDomain",
        "es:DeleteElasticsearchServiceRole",
        "es:DeleteInboundCrossClusterSearchConnection",
        "es:DeleteOutboundCrossClusterSearchConnection",
        "es:DescribeElasticsearchDomain",
        "es:DescribeElasticsearchDomainConfig",
        "es:DescribeElasticsearchDomains",
        "es:DescribeElasticsearchInstanceTypeLimits",
        "es:DescribeInboundCrossClusterSearchConnections",
        "es:DescribeOutboundCrossClusterSearchConnections",
        "es:DescribeReservedElasticsearchInstanceOfferings",
        "es:DescribeReservedElasticsearchInstances",
        "es:ESCrossClusterGet",
        "es:ESHttpDelete",
        "es:ESHttpGet",
        "es:ESHttpHead",
        "es:ESHttpPatch",
        "es:ESHttpPost",
        "es:ESHttpPut",
        "es:GetCompatibleElasticsearchVersions",
        "es:GetUpgradeHistory",
        "es:GetUpgradeStatus",
        "es:ListDomainNames",
        "es:ListElasticsearchInstanceTypeDetails",
        "es:ListElasticsearchInstanceTypes",
        "es:ListElasticsearchVersions",
        "es:ListTags",
        "es:PurchaseReservedElasticsearchInstanceOffering",
        "es:RejectInboundCrossClusterSearchConnection",
        "es:RemoveTags",
        "es:UpdateElasticsearchDomainConfig",
        "es:UpgradeElasticsearchDomain",
        "events:ActivateEventSource",
        "events:CreateEventBus",
        "events:CreatePartnerEventSource",
        "events:DeactivateEventSource",
        "events:DeleteEventBus",
        "events:DeletePartnerEventSource",
        "events:DeleteRule",
        "events:DescribeEventBus",
        "events:DescribeEventSource",
        "events:DescribePartnerEventSource",
        "events:DescribeRule",
        "events:DisableRule",
        "events:EnableRule",
        "events:ListEventBuses",
        "events:ListEventSources",
        "events:ListPartnerEventSourceAccounts",
        "events:ListPartnerEventSources",
        "events:ListRuleNamesByTarget",
        "events:ListRules",
        "events:ListTagsForResource",
        "events:ListTargetsByRule",
        "events:PutEvents",
        "events:PutPartnerEvents",
        "events:PutPermission",
        "events:PutRule",
        "events:PutTargets",
        "events:RemovePermission",
        "events:RemoveTargets",
        "events:TagResource",
        "events:TestEventPattern",
        "events:UntagResource",
        "execute-api:InvalidateCache",
        "execute-api:Invoke",
        "execute-api:ManageConnections",
        "firehose:CreateDeliveryStream",
        "firehose:DeleteDeliveryStream",
        "firehose:DescribeDeliveryStream",
        "firehose:ListDeliveryStreams",
        "firehose:ListTagsForDeliveryStream",
        "firehose:PutRecord",
        "firehose:PutRecordBatch",
        "firehose:StartDeliveryStreamEncryption",
        "firehose:StopDeliveryStreamEncryption",
        "firehose:TagDeliveryStream",
        "firehose:UntagDeliveryStream",
        "firehose:UpdateDestination",
        "fms:AssociateAdminAccount",
        "fms:DeleteNotificationChannel",
        "fms:DeletePolicy",
        "fms:DisassociateAdminAccount",
        "fms:GetAdminAccount",
        "fms:GetComplianceDetail",
        "fms:GetNotificationChannel",
        "fms:GetPolicy",
        "fms:GetProtectionStatus",
        "fms:ListComplianceStatus",
        "fms:ListMemberAccounts",
        "fms:ListPolicies",
        "fms:ListTagsForResource",
        "fms:PutNotificationChannel",
        "fms:PutPolicy",
        "fms:TagResource",
        "fms:UntagResource",
        "forecast:CreateDataset",
        "forecast:CreateDatasetGroup",
        "forecast:CreateDatasetImportJob",
        "forecast:CreateForecast",
        "forecast:CreateForecastExportJob",
        "forecast:CreatePredictor",
        "forecast:DeleteDataset",
        "forecast:DeleteDatasetGroup",
        "forecast:DeleteDatasetImportJob",
        "forecast:DeleteForecast",
        "forecast:DeleteForecastExportJob",
        "forecast:DeletePredictor",
        "forecast:DescribeDataset",
        "forecast:DescribeDatasetGroup",
        "forecast:DescribeDatasetImportJob",
        "forecast:DescribeForecast",
        "forecast:DescribeForecastExportJob",
        "forecast:DescribePredictor",
        "forecast:GetAccuracyMetrics",
        "forecast:ListDatasetGroups",
        "forecast:ListDatasetImportJobs",
        "forecast:ListDatasets",
        "forecast:ListForecastExportJobs",
        "forecast:ListForecasts",
        "forecast:ListPredictors",
        "forecast:QueryForecast",
        "forecast:UpdateDatasetGroup",
        "frauddetector:BatchCreateVariable",
        "frauddetector:BatchGetVariable",
        "frauddetector:CreateDetectorVersion",
        "frauddetector:CreateModelVersion",
        "frauddetector:CreateRule",
        "frauddetector:CreateVariable",
        "frauddetector:DeleteDetector",
        "frauddetector:DeleteDetectorVersion",
        "frauddetector:DeleteEvent",
        "frauddetector:DeleteRuleVersion",
        "frauddetector:DescribeDetector",
        "frauddetector:DescribeModelVersions",
        "frauddetector:GetDetectorVersion",
        "frauddetector:GetDetectors",
        "frauddetector:GetExternalModels",
        "frauddetector:GetModelVersion",
        "frauddetector:GetModels",
        "frauddetector:GetOutcomes",
        "frauddetector:GetPrediction",
        "frauddetector:GetRules",
        "frauddetector:GetVariables",
        "frauddetector:PutDetector",
        "frauddetector:PutExternalModel",
        "frauddetector:PutModel",
        "frauddetector:PutOutcome",
        "frauddetector:UpdateDetectorVersion",
        "frauddetector:UpdateDetectorVersionMetadata",
        "frauddetector:UpdateDetectorVersionStatus",
        "frauddetector:UpdateModelVersion",
        "frauddetector:UpdateRuleMetadata",
        "frauddetector:UpdateRuleVersion",
        "frauddetector:UpdateVariable",
        "freertos:CreateSoftwareConfiguration",
        "freertos:DeleteSoftwareConfiguration",
        "freertos:DescribeHardwarePlatform",
        "freertos:DescribeSoftwareConfiguration",
        "freertos:GetSoftwareURL",
        "freertos:GetSoftwareURLForConfiguration",
        "freertos:ListFreeRTOSVersions",
        "freertos:ListHardwarePlatforms",
        "freertos:ListHardwareVendors",
        "freertos:ListSoftwareConfigurations",
        "freertos:UpdateSoftwareConfiguration",
        "fsx:CancelDataRepositoryTask",
        "fsx:CreateBackup",
        "fsx:CreateDataRepositoryTask",
        "fsx:CreateFileSystem",
        "fsx:CreateFileSystemFromBackup",
        "fsx:DeleteBackup",
        "fsx:DeleteFileSystem",
        "fsx:DescribeBackups",
        "fsx:DescribeDataRepositoryTasks",
        "fsx:DescribeFileSystems",
        "fsx:ListTagsForResource",
        "fsx:TagResource",
        "fsx:UntagResource",
        "fsx:UpdateFileSystem",
        "gamelift:AcceptMatch",
        "gamelift:CreateAlias",
        "gamelift:CreateBuild",
        "gamelift:CreateFleet",
        "gamelift:CreateGameSession",
        "gamelift:CreateGameSessionQueue",
        "gamelift:CreateMatchmakingConfiguration",
        "gamelift:CreateMatchmakingRuleSet",
        "gamelift:CreatePlayerSession",
        "gamelift:CreatePlayerSessions",
        "gamelift:CreateScript",
        "gamelift:CreateVpcPeeringAuthorization",
        "gamelift:CreateVpcPeeringConnection",
        "gamelift:DeleteAlias",
        "gamelift:DeleteBuild",
        "gamelift:DeleteFleet",
        "gamelift:DeleteGameSessionQueue",
        "gamelift:DeleteMatchmakingConfiguration",
        "gamelift:DeleteMatchmakingRuleSet",
        "gamelift:DeleteScalingPolicy",
        "gamelift:DeleteScript",
        "gamelift:DeleteVpcPeeringAuthorization",
        "gamelift:DeleteVpcPeeringConnection",
        "gamelift:DescribeAlias",
        "gamelift:DescribeBuild",
        "gamelift:DescribeEC2InstanceLimits",
        "gamelift:DescribeFleetAttributes",
        "gamelift:DescribeFleetCapacity",
        "gamelift:DescribeFleetEvents",
        "gamelift:DescribeFleetPortSettings",
        "gamelift:DescribeFleetUtilization",
        "gamelift:DescribeGameSessionDetails",
        "gamelift:DescribeGameSessionPlacement",
        "gamelift:DescribeGameSessionQueues",
        "gamelift:DescribeGameSessions",
        "gamelift:DescribeInstances",
        "gamelift:DescribeMatchmaking",
        "gamelift:DescribeMatchmakingConfigurations",
        "gamelift:DescribeMatchmakingRuleSets",
        "gamelift:DescribePlayerSessions",
        "gamelift:DescribeRuntimeConfiguration",
        "gamelift:DescribeScalingPolicies",
        "gamelift:DescribeScript",
        "gamelift:DescribeVpcPeeringAuthorizations",
        "gamelift:DescribeVpcPeeringConnections",
        "gamelift:GetGameSessionLogUrl",
        "gamelift:GetInstanceAccess",
        "gamelift:ListAliases",
        "gamelift:ListBuilds",
        "gamelift:ListFleets",
        "gamelift:ListScripts",
        "gamelift:ListTagsForResource",
        "gamelift:PutScalingPolicy",
        "gamelift:RequestUploadCredentials",
        "gamelift:ResolveAlias",
        "gamelift:SearchGameSessions",
        "gamelift:StartFleetActions",
        "gamelift:StartGameSessionPlacement",
        "gamelift:StartMatchBackfill",
        "gamelift:StartMatchmaking",
        "gamelift:StopFleetActions",
        "gamelift:StopGameSessionPlacement",
        "gamelift:StopMatchmaking",
        "gamelift:TagResource",
        "gamelift:UntagResource",
        "gamelift:UpdateAlias",
        "gamelift:UpdateBuild",
        "gamelift:UpdateFleetAttributes",
        "gamelift:UpdateFleetCapacity",
        "gamelift:UpdateFleetPortSettings",
        "gamelift:UpdateGameSession",
        "gamelift:UpdateGameSessionQueue",
        "gamelift:UpdateMatchmakingConfiguration",
        "gamelift:UpdateRuntimeConfiguration",
        "gamelift:UpdateScript",
        "gamelift:ValidateMatchmakingRuleSet",
        "glacier:AbortMultipartUpload",
        "glacier:AbortVaultLock",
        "glacier:AddTagsToVault",
        "glacier:CompleteMultipartUpload",
        "glacier:CompleteVaultLock",
        "glacier:CreateVault",
        "glacier:DeleteArchive",
        "glacier:DeleteVault",
        "glacier:DeleteVaultAccessPolicy",
        "glacier:DeleteVaultNotifications",
        "glacier:DescribeJob",
        "glacier:DescribeVault",
        "glacier:GetDataRetrievalPolicy",
        "glacier:GetJobOutput",
        "glacier:GetVaultAccessPolicy",
        "glacier:GetVaultLock",
        "glacier:GetVaultNotifications",
        "glacier:InitiateJob",
        "glacier:InitiateMultipartUpload",
        "glacier:InitiateVaultLock",
        "glacier:ListJobs",
        "glacier:ListMultipartUploads",
        "glacier:ListParts",
        "glacier:ListProvisionedCapacity",
        "glacier:ListTagsForVault",
        "glacier:ListVaults",
        "glacier:PurchaseProvisionedCapacity",
        "glacier:RemoveTagsFromVault",
        "glacier:SetDataRetrievalPolicy",
        "glacier:SetVaultAccessPolicy",
        "glacier:SetVaultNotifications",
        "glacier:UploadArchive",
        "glacier:UploadMultipartPart",
        "globalaccelerator:AdvertiseByoipCidr",
        "globalaccelerator:CreateAccelerator",
        "globalaccelerator:CreateEndpointGroup",
        "globalaccelerator:CreateListener",
        "globalaccelerator:DeleteAccelerator",
        "globalaccelerator:DeleteEndpointGroup",
        "globalaccelerator:DeleteListener",
        "globalaccelerator:DeprovisionByoipCidr",
        "globalaccelerator:DescribeAccelerator",
        "globalaccelerator:DescribeAcceleratorAttributes",
        "globalaccelerator:DescribeEndpointGroup",
        "globalaccelerator:DescribeListener",
        "globalaccelerator:ListAccelerators",
        "globalaccelerator:ListByoipCidrs",
        "globalaccelerator:ListEndpointGroups",
        "globalaccelerator:ListListeners",
        "globalaccelerator:ListTagsForResource",
        "globalaccelerator:ProvisionByoipCidr",
        "globalaccelerator:TagResource",
        "globalaccelerator:UntagResource",
        "globalaccelerator:UpdateAccelerator",
        "globalaccelerator:UpdateAcceleratorAttributes",
        "globalaccelerator:UpdateEndpointGroup",
        "globalaccelerator:UpdateListener",
        "globalaccelerator:WithdrawByoipCidr",
        "glue:BatchCreatePartition",
        "glue:BatchDeleteConnection",
        "glue:BatchDeletePartition",
        "glue:BatchDeleteTable",
        "glue:BatchDeleteTableVersion",
        "glue:BatchGetCrawlers",
        "glue:BatchGetDevEndpoints",
        "glue:BatchGetJobs",
        "glue:BatchGetPartition",
        "glue:BatchGetTriggers",
        "glue:BatchGetWorkflows",
        "glue:BatchStopJobRun",
        "glue:CancelMLTaskRun",
        "glue:CreateClassifier",
        "glue:CreateConnection",
        "glue:CreateCrawler",
        "glue:CreateDatabase",
        "glue:CreateDevEndpoint",
        "glue:CreateJob",
        "glue:CreateMLTransform",
        "glue:CreatePartition",
        "glue:CreateScript",
        "glue:CreateSecurityConfiguration",
        "glue:CreateTable",
        "glue:CreateTrigger",
        "glue:CreateUserDefinedFunction",
        "glue:CreateWorkflow",
        "glue:DeleteClassifier",
        "glue:DeleteConnection",
        "glue:DeleteCrawler",
        "glue:DeleteDatabase",
        "glue:DeleteDevEndpoint",
        "glue:DeleteJob",
        "glue:DeleteMLTransform",
        "glue:DeletePartition",
        "glue:DeleteResourcePolicy",
        "glue:DeleteSecurityConfiguration",
        "glue:DeleteTable",
        "glue:DeleteTableVersion",
        "glue:DeleteTrigger",
        "glue:DeleteUserDefinedFunction",
        "glue:DeleteWorkflow",
        "glue:GetCatalogImportStatus",
        "glue:GetClassifier",
        "glue:GetClassifiers",
        "glue:GetConnection",
        "glue:GetConnections",
        "glue:GetCrawler",
        "glue:GetCrawlerMetrics",
        "glue:GetCrawlers",
        "glue:GetDataCatalogEncryptionSettings",
        "glue:GetDatabase",
        "glue:GetDatabases",
        "glue:GetDataflowGraph",
        "glue:GetDevEndpoint",
        "glue:GetDevEndpoints",
        "glue:GetJob",
        "glue:GetJobBookmark",
        "glue:GetJobRun",
        "glue:GetJobRuns",
        "glue:GetJobs",
        "glue:GetMLTaskRun",
        "glue:GetMLTaskRuns",
        "glue:GetMLTransform",
        "glue:GetMLTransforms",
        "glue:GetMapping",
        "glue:GetPartition",
        "glue:GetPartitions",
        "glue:GetPlan",
        "glue:GetResourcePolicy",
        "glue:GetSecurityConfiguration",
        "glue:GetSecurityConfigurations",
        "glue:GetTable",
        "glue:GetTableVersion",
        "glue:GetTableVersions",
        "glue:GetTables",
        "glue:GetTags",
        "glue:GetTrigger",
        "glue:GetTriggers",
        "glue:GetUserDefinedFunction",
        "glue:GetUserDefinedFunctions",
        "glue:GetWorkflow",
        "glue:GetWorkflowRun",
        "glue:GetWorkflowRunProperties",
        "glue:GetWorkflowRuns",
        "glue:ImportCatalogToGlue",
        "glue:ListCrawlers",
        "glue:ListDevEndpoints",
        "glue:ListJobs",
        "glue:ListMLTransforms",
        "glue:ListTriggers",
        "glue:ListWorkflows",
        "glue:PutDataCatalogEncryptionSettings",
        "glue:PutResourcePolicy",
        "glue:PutWorkflowRunProperties",
        "glue:ResetJobBookmark",
        "glue:SearchTables",
        "glue:StartCrawler",
        "glue:StartCrawlerSchedule",
        "glue:StartExportLabelsTaskRun",
        "glue:StartImportLabelsTaskRun",
        "glue:StartJobRun",
        "glue:StartMLEvaluationTaskRun",
        "glue:StartMLLabelingSetGenerationTaskRun",
        "glue:StartTrigger",
        "glue:StartWorkflowRun",
        "glue:StopCrawler",
        "glue:StopCrawlerSchedule",
        "glue:StopTrigger",
        "glue:TagResource",
        "glue:UntagResource",
        "glue:UpdateClassifier",
        "glue:UpdateConnection",
        "glue:UpdateCrawler",
        "glue:UpdateCrawlerSchedule",
        "glue:UpdateDatabase",
        "glue:UpdateDevEndpoint",
        "glue:UpdateJob",
        "glue:UpdateMLTransform",
        "glue:UpdatePartition",
        "glue:UpdateTable",
        "glue:UpdateTrigger",
        "glue:UpdateUserDefinedFunction",
        "glue:UpdateWorkflow",
        "glue:UseMLTransforms",
        "greengrass:AssociateRoleToGroup",
        "greengrass:AssociateServiceRoleToAccount",
        "greengrass:CreateConnectorDefinition",
        "greengrass:CreateConnectorDefinitionVersion",
        "greengrass:CreateCoreDefinition",
        "greengrass:CreateCoreDefinitionVersion",
        "greengrass:CreateDeployment",
        "greengrass:CreateDeviceDefinition",
        "greengrass:CreateDeviceDefinitionVersion",
        "greengrass:CreateFunctionDefinition",
        "greengrass:CreateFunctionDefinitionVersion",
        "greengrass:CreateGroup",
        "greengrass:CreateGroupCertificateAuthority",
        "greengrass:CreateGroupVersion",
        "greengrass:CreateLoggerDefinition",
        "greengrass:CreateLoggerDefinitionVersion",
        "greengrass:CreateResourceDefinition",
        "greengrass:CreateResourceDefinitionVersion",
        "greengrass:CreateSoftwareUpdateJob",
        "greengrass:CreateSubscriptionDefinition",
        "greengrass:CreateSubscriptionDefinitionVersion",
        "greengrass:DeleteConnectorDefinition",
        "greengrass:DeleteCoreDefinition",
        "greengrass:DeleteDeviceDefinition",
        "greengrass:DeleteFunctionDefinition",
        "greengrass:DeleteGroup",
        "greengrass:DeleteLoggerDefinition",
        "greengrass:DeleteResourceDefinition",
        "greengrass:DeleteSubscriptionDefinition",
        "greengrass:DisassociateRoleFromGroup",
        "greengrass:DisassociateServiceRoleFromAccount",
        "greengrass:GetAssociatedRole",
        "greengrass:GetBulkDeploymentStatus",
        "greengrass:GetConnectivityInfo",
        "greengrass:GetConnectorDefinition",
        "greengrass:GetConnectorDefinitionVersion",
        "greengrass:GetCoreDefinition",
        "greengrass:GetCoreDefinitionVersion",
        "greengrass:GetDeploymentStatus",
        "greengrass:GetDeviceDefinition",
        "greengrass:GetDeviceDefinitionVersion",
        "greengrass:GetFunctionDefinition",
        "greengrass:GetFunctionDefinitionVersion",
        "greengrass:GetGroup",
        "greengrass:GetGroupCertificateAuthority",
        "greengrass:GetGroupCertificateConfiguration",
        "greengrass:GetGroupVersion",
        "greengrass:GetLoggerDefinition",
        "greengrass:GetLoggerDefinitionVersion",
        "greengrass:GetResourceDefinition",
        "greengrass:GetResourceDefinitionVersion",
        "greengrass:GetServiceRoleForAccount",
        "greengrass:GetSubscriptionDefinition",
        "greengrass:GetSubscriptionDefinitionVersion",
        "greengrass:ListBulkDeploymentDetailedReports",
        "greengrass:ListBulkDeployments",
        "greengrass:ListConnectorDefinitionVersions",
        "greengrass:ListConnectorDefinitions",
        "greengrass:ListCoreDefinitionVersions",
        "greengrass:ListCoreDefinitions",
        "greengrass:ListDeployments",
        "greengrass:ListDeviceDefinitionVersions",
        "greengrass:ListDeviceDefinitions",
        "greengrass:ListFunctionDefinitionVersions",
        "greengrass:ListFunctionDefinitions",
        "greengrass:ListGroupCertificateAuthorities",
        "greengrass:ListGroupVersions",
        "greengrass:ListGroups",
        "greengrass:ListLoggerDefinitionVersions",
        "greengrass:ListLoggerDefinitions",
        "greengrass:ListResourceDefinitionVersions",
        "greengrass:ListResourceDefinitions",
        "greengrass:ListSubscriptionDefinitionVersions",
        "greengrass:ListSubscriptionDefinitions",
        "greengrass:ListTagsForResource",
        "greengrass:ResetDeployments",
        "greengrass:StartBulkDeployment",
        "greengrass:StopBulkDeployment",
        "greengrass:TagResource",
        "greengrass:UntagResource",
        "greengrass:UpdateConnectivityInfo",
        "greengrass:UpdateConnectorDefinition",
        "greengrass:UpdateCoreDefinition",
        "greengrass:UpdateDeviceDefinition",
        "greengrass:UpdateFunctionDefinition",
        "greengrass:UpdateGroup",
        "greengrass:UpdateGroupCertificateConfiguration",
        "greengrass:UpdateLoggerDefinition",
        "greengrass:UpdateResourceDefinition",
        "greengrass:UpdateSubscriptionDefinition",
        "groundstation:CancelContact",
        "groundstation:CreateConfig",
        "groundstation:CreateDataflowEndpointGroup",
        "groundstation:CreateMissionProfile",
        "groundstation:DeleteConfig",
        "groundstation:DeleteDataflowEndpointGroup",
        "groundstation:DeleteMissionProfile",
        "groundstation:DescribeContact",
        "groundstation:GetConfig",
        "groundstation:GetDataflowEndpointGroup",
        "groundstation:GetMinuteUsage",
        "groundstation:GetMissionProfile",
        "groundstation:GetSatellite",
        "groundstation:ListConfigs",
        "groundstation:ListContacts",
        "groundstation:ListDataflowEndpointGroups",
        "groundstation:ListGroundStations",
        "groundstation:ListMissionProfiles",
        "groundstation:ListSatellites",
        "groundstation:ListTagsForResource",
        "groundstation:ReserveContact",
        "groundstation:TagResource",
        "groundstation:UntagResource",
        "groundstation:UpdateConfig",
        "groundstation:UpdateMissionProfile",
        "groundtruthlabeling:DescribeConsoleJob",
        "groundtruthlabeling:ListDatasetObjects",
        "groundtruthlabeling:RunFilterOrSampleDatasetJob",
        "groundtruthlabeling:RunGenerateManifestByCrawlingJob",
        "guardduty:AcceptInvitation",
        "guardduty:ArchiveFindings",
        "guardduty:CreateDetector",
        "guardduty:CreateFilter",
        "guardduty:CreateIPSet",
        "guardduty:CreateMembers",
        "guardduty:CreatePublishingDestination",
        "guardduty:CreateSampleFindings",
        "guardduty:CreateThreatIntelSet",
        "guardduty:DeclineInvitations",
        "guardduty:DeleteDetector",
        "guardduty:DeleteFilter",
        "guardduty:DeleteIPSet",
        "guardduty:DeleteInvitations",
        "guardduty:DeleteMembers",
        "guardduty:DeletePublishingDestination",
        "guardduty:DeleteThreatIntelSet",
        "guardduty:DescribeOrganizationConfiguration",
        "guardduty:DescribePublishingDestination",
        "guardduty:DisableOrganizationAdminAccount",
        "guardduty:DisassociateFromMasterAccount",
        "guardduty:DisassociateMembers",
        "guardduty:EnableOrganizationAdminAccount",
        "guardduty:GetDetector",
        "guardduty:GetFilter",
        "guardduty:GetFindings",
        "guardduty:GetFindingsStatistics",
        "guardduty:GetIPSet",
        "guardduty:GetInvitationsCount",
        "guardduty:GetMasterAccount",
        "guardduty:GetMembers",
        "guardduty:GetThreatIntelSet",
        "guardduty:InviteMembers",
        "guardduty:ListDetectors",
        "guardduty:ListFilters",
        "guardduty:ListFindings",
        "guardduty:ListInvitations",
        "guardduty:ListMembers",
        "guardduty:ListOrganizationAdminAccounts",
        "guardduty:ListPublishingDestinations",
        "guardduty:ListTagsForResource",
        "guardduty:ListThreatIntelSets",
        "guardduty:StartMonitoringMembers",
        "guardduty:StopMonitoringMembers",
        "guardduty:TagResource",
        "guardduty:UnarchiveFindings",
        "guardduty:UntagResource",
        "guardduty:UpdateDetector",
        "guardduty:UpdateFilter",
        "guardduty:UpdateFindingsFeedback",
        "guardduty:UpdateIPSet",
        "guardduty:UpdateOrganizationConfiguration",
        "guardduty:UpdatePublishingDestination",
        "guardduty:UpdateThreatIntelSet",
        "health:DescribeAffectedAccountsForOrganization",
        "health:DescribeAffectedEntities",
        "health:DescribeAffectedEntitiesForOrganization",
        "health:DescribeEntityAggregates",
        "health:DescribeEventAggregates",
        "health:DescribeEventDetails",
        "health:DescribeEventDetailsForOrganization",
        "health:DescribeEventTypes",
        "health:DescribeEvents",
        "health:DescribeEventsForOrganization",
        "health:DescribeHealthServiceStatusForOrganization",
        "health:DisableHealthServiceAccessForOrganization",
        "health:EnableHealthServiceAccessForOrganization",
        "imagebuilder:CancelImageCreation",
        "imagebuilder:CreateComponent",
        "imagebuilder:CreateDistributionConfiguration",
        "imagebuilder:CreateImage",
        "imagebuilder:CreateImagePipeline",
        "imagebuilder:CreateImageRecipe",
        "imagebuilder:CreateInfrastructureConfiguration",
        "imagebuilder:DeleteComponent",
        "imagebuilder:DeleteDistributionConfiguration",
        "imagebuilder:DeleteImage",
        "imagebuilder:DeleteImagePipeline",
        "imagebuilder:DeleteImageRecipe",
        "imagebuilder:DeleteInfrastructureConfiguration",
        "imagebuilder:GetComponent",
        "imagebuilder:GetComponentPolicy",
        "imagebuilder:GetDistributionConfiguration",
        "imagebuilder:GetImage",
        "imagebuilder:GetImagePipeline",
        "imagebuilder:GetImagePolicy",
        "imagebuilder:GetImageRecipe",
        "imagebuilder:GetImageRecipePolicy",
        "imagebuilder:GetInfrastructureConfiguration",
        "imagebuilder:ListComponentBuildVersions",
        "imagebuilder:ListComponents",
        "imagebuilder:ListDistributionConfigurations",
        "imagebuilder:ListImageBuildVersions",
        "imagebuilder:ListImagePipelines",
        "imagebuilder:ListImageRecipes",
        "imagebuilder:ListImages",
        "imagebuilder:ListInfrastructureConfigurations",
        "imagebuilder:ListTagsForResource",
        "imagebuilder:PutComponentPolicy",
        "imagebuilder:PutImagePolicy",
        "imagebuilder:PutImageRecipePolicy",
        "imagebuilder:StartImagePipelineExecution",
        "imagebuilder:TagResource",
        "imagebuilder:UntagResource",
        "imagebuilder:UpdateDistributionConfiguration",
        "imagebuilder:UpdateImagePipeline",
        "imagebuilder:UpdateInfrastructureConfiguration",
        "importexport:CancelJob",
        "importexport:CreateJob",
        "importexport:GetShippingLabel",
        "importexport:GetStatus",
        "importexport:ListJobs",
        "importexport:UpdateJob",
        "inspector:AddAttributesToFindings",
        "inspector:CreateAssessmentTarget",
        "inspector:CreateAssessmentTemplate",
        "inspector:CreateResourceGroup",
        "inspector:DeleteAssessmentRun",
        "inspector:DeleteAssessmentTarget",
        "inspector:DeleteAssessmentTemplate",
        "inspector:DescribeAssessmentRuns",
        "inspector:DescribeAssessmentTargets",
        "inspector:DescribeAssessmentTemplates",
        "inspector:DescribeCrossAccountAccessRole",
        "inspector:DescribeFindings",
        "inspector:DescribeResourceGroups",
        "inspector:DescribeRulesPackages",
        "inspector:GetTelemetryMetadata",
        "inspector:ListAssessmentRunAgents",
        "inspector:ListAssessmentRuns",
        "inspector:ListAssessmentTargets",
        "inspector:ListAssessmentTemplates",
        "inspector:ListEventSubscriptions",
        "inspector:ListFindings",
        "inspector:ListRulesPackages",
        "inspector:ListTagsForResource",
        "inspector:PreviewAgents",
        "inspector:RegisterCrossAccountAccessRole",
        "inspector:RemoveAttributesFromFindings",
        "inspector:SetTagsForResource",
        "inspector:StartAssessmentRun",
        "inspector:StopAssessmentRun",
        "inspector:SubscribeToEvent",
        "inspector:UnsubscribeFromEvent",
        "inspector:UpdateAssessmentTarget",
        "iot-device-tester:CheckVersion",
        "iot-device-tester:DownloadTestSuite",
        "iot-device-tester:LatestIdt",
        "iot-device-tester:SendMetrics",
        "iot-device-tester:SupportedVersion",
        "iot1click:AssociateDeviceWithPlacement",
        "iot1click:ClaimDevicesByClaimCode",
        "iot1click:CreatePlacement",
        "iot1click:CreateProject",
        "iot1click:DeletePlacement",
        "iot1click:DeleteProject",
        "iot1click:DescribeDevice",
        "iot1click:DescribePlacement",
        "iot1click:DescribeProject",
        "iot1click:DisassociateDeviceFromPlacement",
        "iot1click:FinalizeDeviceClaim",
        "iot1click:GetDeviceMethods",
        "iot1click:GetDevicesInPlacement",
        "iot1click:InitiateDeviceClaim",
        "iot1click:InvokeDeviceMethod",
        "iot1click:ListDeviceEvents",
        "iot1click:ListDevices",
        "iot1click:ListPlacements",
        "iot1click:ListProjects",
        "iot1click:ListTagsForResource",
        "iot1click:TagResource",
        "iot1click:UnclaimDevice",
        "iot1click:UntagResource",
        "iot1click:UpdateDeviceState",
        "iot1click:UpdatePlacement",
        "iot1click:UpdateProject",
        "iot:AcceptCertificateTransfer",
        "iot:AddThingToBillingGroup",
        "iot:AddThingToThingGroup",
        "iot:AssociateTargetsWithJob",
        "iot:AttachPolicy",
        "iot:AttachPrincipalPolicy",
        "iot:AttachSecurityProfile",
        "iot:AttachThingPrincipal",
        "iot:CancelAuditMitigationActionsTask",
        "iot:CancelAuditTask",
        "iot:CancelCertificateTransfer",
        "iot:CancelJob",
        "iot:CancelJobExecution",
        "iot:ClearDefaultAuthorizer",
        "iot:CloseTunnel",
        "iot:Connect",
        "iot:CreateAuthorizer",
        "iot:CreateBillingGroup",
        "iot:CreateCertificateFromCsr",
        "iot:CreateDimension",
        "iot:CreateDynamicThingGroup",
        "iot:CreateJob",
        "iot:CreateKeysAndCertificate",
        "iot:CreateMitigationAction",
        "iot:CreateOTAUpdate",
        "iot:CreatePolicy",
        "iot:CreatePolicyVersion",
        "iot:CreateProvisioningClaim",
        "iot:CreateProvisioningTemplate",
        "iot:CreateProvisioningTemplateVersion",
        "iot:CreateRoleAlias",
        "iot:CreateScheduledAudit",
        "iot:CreateSecurityProfile",
        "iot:CreateStream",
        "iot:CreateThing",
        "iot:CreateThingGroup",
        "iot:CreateThingType",
        "iot:CreateTopicRule",
        "iot:DeleteAccountAuditConfiguration",
        "iot:DeleteAuthorizer",
        "iot:DeleteBillingGroup",
        "iot:DeleteCACertificate",
        "iot:DeleteCertificate",
        "iot:DeleteDimension",
        "iot:DeleteDynamicThingGroup",
        "iot:DeleteJob",
        "iot:DeleteJobExecution",
        "iot:DeleteMitigationAction",
        "iot:DeleteOTAUpdate",
        "iot:DeletePolicy",
        "iot:DeletePolicyVersion",
        "iot:DeleteProvisioningTemplate",
        "iot:DeleteProvisioningTemplateVersion",
        "iot:DeleteRegistrationCode",
        "iot:DeleteRoleAlias",
        "iot:DeleteScheduledAudit",
        "iot:DeleteSecurityProfile",
        "iot:DeleteStream",
        "iot:DeleteThing",
        "iot:DeleteThingGroup",
        "iot:DeleteThingShadow",
        "iot:DeleteThingType",
        "iot:DeleteTopicRule",
        "iot:DeleteV2LoggingLevel",
        "iot:DeprecateThingType",
        "iot:DescribeAccountAuditConfiguration",
        "iot:DescribeAuditMitigationActionsTask",
        "iot:DescribeAuditTask",
        "iot:DescribeAuthorizer",
        "iot:DescribeBillingGroup",
        "iot:DescribeCACertificate",
        "iot:DescribeCertificate",
        "iot:DescribeDefaultAuthorizer",
        "iot:DescribeDimension",
        "iot:DescribeEndpoint",
        "iot:DescribeEventConfigurations",
        "iot:DescribeIndex",
        "iot:DescribeJob",
        "iot:DescribeJobExecution",
        "iot:DescribeMitigationAction",
        "iot:DescribeProvisioningTemplate",
        "iot:DescribeProvisioningTemplateVersion",
        "iot:DescribeRoleAlias",
        "iot:DescribeScheduledAudit",
        "iot:DescribeSecurityProfile",
        "iot:DescribeStream",
        "iot:DescribeThing",
        "iot:DescribeThingGroup",
        "iot:DescribeThingRegistrationTask",
        "iot:DescribeThingType",
        "iot:DescribeTunnel",
        "iot:DetachPolicy",
        "iot:DetachPrincipalPolicy",
        "iot:DetachSecurityProfile",
        "iot:DetachThingPrincipal",
        "iot:DisableTopicRule",
        "iot:EnableTopicRule",
        "iot:GetCardinality",
        "iot:GetEffectivePolicies",
        "iot:GetIndexingConfiguration",
        "iot:GetJobDocument",
        "iot:GetLoggingOptions",
        "iot:GetOTAUpdate",
        "iot:GetPendingJobExecutions",
        "iot:GetPercentiles",
        "iot:GetPolicy",
        "iot:GetPolicyVersion",
        "iot:GetRegistrationCode",
        "iot:GetStatistics",
        "iot:GetThingShadow",
        "iot:GetTopicRule",
        "iot:GetV2LoggingOptions",
        "iot:ListActiveViolations",
        "iot:ListAttachedPolicies",
        "iot:ListAuditFindings",
        "iot:ListAuditMitigationActionsExecutions",
        "iot:ListAuditMitigationActionsTasks",
        "iot:ListAuditTasks",
        "iot:ListAuthorizers",
        "iot:ListBillingGroups",
        "iot:ListCACertificates",
        "iot:ListCertificates",
        "iot:ListCertificatesByCA",
        "iot:ListDimensions",
        "iot:ListIndices",
        "iot:ListJobExecutionsForJob",
        "iot:ListJobExecutionsForThing",
        "iot:ListJobs",
        "iot:ListMitigationActions",
        "iot:ListNamedShadowsForThing",
        "iot:ListOTAUpdates",
        "iot:ListOutgoingCertificates",
        "iot:ListPolicies",
        "iot:ListPolicyPrincipals",
        "iot:ListPolicyVersions",
        "iot:ListPrincipalPolicies",
        "iot:ListPrincipalThings",
        "iot:ListProvisioningTemplateVersions",
        "iot:ListProvisioningTemplates",
        "iot:ListRoleAliases",
        "iot:ListScheduledAudits",
        "iot:ListSecurityProfiles",
        "iot:ListSecurityProfilesForTarget",
        "iot:ListStreams",
        "iot:ListTagsForResource",
        "iot:ListTargetsForPolicy",
        "iot:ListTargetsForSecurityProfile",
        "iot:ListThingGroups",
        "iot:ListThingGroupsForThing",
        "iot:ListThingPrincipals",
        "iot:ListThingRegistrationTaskReports",
        "iot:ListThingRegistrationTasks",
        "iot:ListThingTypes",
        "iot:ListThings",
        "iot:ListThingsInBillingGroup",
        "iot:ListThingsInThingGroup",
        "iot:ListTopicRules",
        "iot:ListTunnels",
        "iot:ListV2LoggingLevels",
        "iot:ListViolationEvents",
        "iot:OpenTunnel",
        "iot:Publish",
        "iot:Receive",
        "iot:RegisterCACertificate",
        "iot:RegisterCertificate",
        "iot:RegisterCertificateWithoutCA",
        "iot:RegisterThing",
        "iot:RejectCertificateTransfer",
        "iot:RemoveThingFromBillingGroup",
        "iot:RemoveThingFromThingGroup",
        "iot:ReplaceTopicRule",
        "iot:SearchIndex",
        "iot:SetDefaultAuthorizer",
        "iot:SetDefaultPolicyVersion",
        "iot:SetLoggingOptions",
        "iot:SetV2LoggingLevel",
        "iot:SetV2LoggingOptions",
        "iot:StartAuditMitigationActionsTask",
        "iot:StartNextPendingJobExecution",
        "iot:StartOnDemandAuditTask",
        "iot:StartThingRegistrationTask",
        "iot:StopThingRegistrationTask",
        "iot:Subscribe",
        "iot:TagResource",
        "iot:TestAuthorization",
        "iot:TestInvokeAuthorizer",
        "iot:TransferCertificate",
        "iot:UntagResource",
        "iot:UpdateAccountAuditConfiguration",
        "iot:UpdateAuthorizer",
        "iot:UpdateBillingGroup",
        "iot:UpdateCACertificate",
        "iot:UpdateCertificate",
        "iot:UpdateDimension",
        "iot:UpdateDynamicThingGroup",
        "iot:UpdateEventConfigurations",
        "iot:UpdateIndexingConfiguration",
        "iot:UpdateJob",
        "iot:UpdateJobExecution",
        "iot:UpdateMitigationAction",
        "iot:UpdateProvisioningTemplate",
        "iot:UpdateRoleAlias",
        "iot:UpdateScheduledAudit",
        "iot:UpdateSecurityProfile",
        "iot:UpdateStream",
        "iot:UpdateThing",
        "iot:UpdateThingGroup",
        "iot:UpdateThingGroupsForThing",
        "iot:UpdateThingShadow",
        "iot:ValidateSecurityProfileBehaviors",
        "iotanalytics:BatchPutMessage",
        "iotanalytics:CancelPipelineReprocessing",
        "iotanalytics:CreateChannel",
        "iotanalytics:CreateDataset",
        "iotanalytics:CreateDatasetContent",
        "iotanalytics:CreateDatastore",
        "iotanalytics:CreatePipeline",
        "iotanalytics:DeleteChannel",
        "iotanalytics:DeleteDataset",
        "iotanalytics:DeleteDatasetContent",
        "iotanalytics:DeleteDatastore",
        "iotanalytics:DeletePipeline",
        "iotanalytics:DescribeChannel",
        "iotanalytics:DescribeDataset",
        "iotanalytics:DescribeDatastore",
        "iotanalytics:DescribeLoggingOptions",
        "iotanalytics:DescribePipeline",
        "iotanalytics:GetDatasetContent",
        "iotanalytics:ListChannels",
        "iotanalytics:ListDatasets",
        "iotanalytics:ListDatastores",
        "iotanalytics:ListPipelines",
        "iotanalytics:ListTagsForResource",
        "iotanalytics:PutLoggingOptions",
        "iotanalytics:RunPipelineActivity",
        "iotanalytics:SampleChannelData",
        "iotanalytics:StartPipelineReprocessing",
        "iotanalytics:TagResource",
        "iotanalytics:UntagResource",
        "iotanalytics:UpdateChannel",
        "iotanalytics:UpdateDataset",
        "iotanalytics:UpdateDatastore",
        "iotanalytics:UpdatePipeline",
        "iotevents:BatchPutMessage",
        "iotevents:BatchUpdateDetector",
        "iotevents:CreateDetectorModel",
        "iotevents:CreateInput",
        "iotevents:DeleteDetectorModel",
        "iotevents:DeleteInput",
        "iotevents:DescribeDetector",
        "iotevents:DescribeDetectorModel",
        "iotevents:DescribeInput",
        "iotevents:DescribeLoggingOptions",
        "iotevents:ListDetectorModelVersions",
        "iotevents:ListDetectorModels",
        "iotevents:ListDetectors",
        "iotevents:ListInputs",
        "iotevents:ListTagsForResource",
        "iotevents:PutLoggingOptions",
        "iotevents:TagResource",
        "iotevents:UntagResource",
        "iotevents:UpdateDetectorModel",
        "iotevents:UpdateInput",
        "iotevents:UpdateInputRouting",
        "iotsitewise:AssociateAssets",
        "iotsitewise:BatchAssociateProjectAssets",
        "iotsitewise:BatchDisassociateProjectAssets",
        "iotsitewise:BatchPutAssetPropertyValue",
        "iotsitewise:CreateAccessPolicy",
        "iotsitewise:CreateAsset",
        "iotsitewise:CreateAssetModel",
        "iotsitewise:CreateDashboard",
        "iotsitewise:CreateGateway",
        "iotsitewise:CreatePortal",
        "iotsitewise:CreateProject",
        "iotsitewise:DeleteAccessPolicy",
        "iotsitewise:DeleteAsset",
        "iotsitewise:DeleteAssetModel",
        "iotsitewise:DeleteDashboard",
        "iotsitewise:DeleteGateway",
        "iotsitewise:DeletePortal",
        "iotsitewise:DeleteProject",
        "iotsitewise:DescribeAccessPolicy",
        "iotsitewise:DescribeAsset",
        "iotsitewise:DescribeAssetModel",
        "iotsitewise:DescribeAssetProperty",
        "iotsitewise:DescribeDashboard",
        "iotsitewise:DescribeGateway",
        "iotsitewise:DescribeGatewayCapabilityConfiguration",
        "iotsitewise:DescribeLoggingOptions",
        "iotsitewise:DescribePortal",
        "iotsitewise:DescribeProject",
        "iotsitewise:DisassociateAssets",
        "iotsitewise:GetAssetPropertyAggregates",
        "iotsitewise:GetAssetPropertyValue",
        "iotsitewise:GetAssetPropertyValueHistory",
        "iotsitewise:ListAccessPolicies",
        "iotsitewise:ListAssetModels",
        "iotsitewise:ListAssets",
        "iotsitewise:ListAssociatedAssets",
        "iotsitewise:ListDashboards",
        "iotsitewise:ListGateways",
        "iotsitewise:ListPortals",
        "iotsitewise:ListProjectAssets",
        "iotsitewise:ListProjects",
        "iotsitewise:ListTagsForResource",
        "iotsitewise:PutLoggingOptions",
        "iotsitewise:TagResource",
        "iotsitewise:UntagResource",
        "iotsitewise:UpdateAccessPolicy",
        "iotsitewise:UpdateAsset",
        "iotsitewise:UpdateAssetModel",
        "iotsitewise:UpdateAssetProperty",
        "iotsitewise:UpdateDashboard",
        "iotsitewise:UpdateGateway",
        "iotsitewise:UpdateGatewayCapabilityConfiguration",
        "iotsitewise:UpdatePortal",
        "iotsitewise:UpdateProject",
        "iotthingsgraph:AssociateEntityToThing",
        "iotthingsgraph:CreateFlowTemplate",
        "iotthingsgraph:CreateSystemInstance",
        "iotthingsgraph:CreateSystemTemplate",
        "iotthingsgraph:DeleteFlowTemplate",
        "iotthingsgraph:DeleteNamespace",
        "iotthingsgraph:DeleteSystemInstance",
        "iotthingsgraph:DeleteSystemTemplate",
        "iotthingsgraph:DeploySystemInstance",
        "iotthingsgraph:DeprecateFlowTemplate",
        "iotthingsgraph:DeprecateSystemTemplate",
        "iotthingsgraph:DescribeNamespace",
        "iotthingsgraph:DissociateEntityFromThing",
        "iotthingsgraph:GetEntities",
        "iotthingsgraph:GetFlowTemplate",
        "iotthingsgraph:GetFlowTemplateRevisions",
        "iotthingsgraph:GetNamespaceDeletionStatus",
        "iotthingsgraph:GetSystemInstance",
        "iotthingsgraph:GetSystemTemplate",
        "iotthingsgraph:GetSystemTemplateRevisions",
        "iotthingsgraph:GetUploadStatus",
        "iotthingsgraph:ListFlowExecutionMessages",
        "iotthingsgraph:ListTagsForResource",
        "iotthingsgraph:SearchEntities",
        "iotthingsgraph:SearchFlowExecutions",
        "iotthingsgraph:SearchFlowTemplates",
        "iotthingsgraph:SearchSystemInstances",
        "iotthingsgraph:SearchSystemTemplates",
        "iotthingsgraph:SearchThings",
        "iotthingsgraph:TagResource",
        "iotthingsgraph:UndeploySystemInstance",
        "iotthingsgraph:UntagResource",
        "iotthingsgraph:UpdateFlowTemplate",
        "iotthingsgraph:UpdateSystemTemplate",
        "iotthingsgraph:UploadEntityDefinitions",
        "iq-permission:ApproveAccessGrant",
        "iq:CreateProject",
        "kafka:CreateCluster",
        "kafka:CreateConfiguration",
        "kafka:DeleteCluster",
        "kafka:DescribeCluster",
        "kafka:DescribeClusterOperation",
        "kafka:DescribeConfiguration",
        "kafka:DescribeConfigurationRevision",
        "kafka:GetBootstrapBrokers",
        "kafka:GetCompatibleKafkaVersions",
        "kafka:ListClusterOperations",
        "kafka:ListClusters",
        "kafka:ListConfigurations",
        "kafka:ListNodes",
        "kafka:ListTagsForResource",
        "kafka:TagResource",
        "kafka:UntagResource",
        "kafka:UpdateBrokerCount",
        "kafka:UpdateBrokerStorage",
        "kafka:UpdateClusterConfiguration",
        "kafka:UpdateClusterKafkaVersion",
        "kafka:UpdateMonitoring",
        "kendra:BatchDeleteDocument",
        "kendra:BatchPutDocument",
        "kendra:CreateDataSource",
        "kendra:CreateFaq",
        "kendra:CreateIndex",
        "kendra:DeleteDataSource",
        "kendra:DeleteFaq",
        "kendra:DeleteIndex",
        "kendra:DescribeDataSource",
        "kendra:DescribeFaq",
        "kendra:DescribeIndex",
        "kendra:ListDataSourceSyncJobs",
        "kendra:ListDataSources",
        "kendra:ListFaqs",
        "kendra:ListIndices",
        "kendra:ListTagsForResource",
        "kendra:Query",
        "kendra:StartDataSourceSyncJob",
        "kendra:StopDataSourceSyncJob",
        "kendra:SubmitFeedback",
        "kendra:TagResource",
        "kendra:UntagResource",
        "kendra:UpdateDataSource",
        "kendra:UpdateIndex",
        "kinesis:AddTagsToStream",
        "kinesis:CreateStream",
        "kinesis:DecreaseStreamRetentionPeriod",
        "kinesis:DeleteStream",
        "kinesis:DeregisterStreamConsumer",
        "kinesis:DescribeLimits",
        "kinesis:DescribeStream",
        "kinesis:DescribeStreamConsumer",
        "kinesis:DescribeStreamSummary",
        "kinesis:DisableEnhancedMonitoring",
        "kinesis:EnableEnhancedMonitoring",
        "kinesis:GetRecords",
        "kinesis:GetShardIterator",
        "kinesis:IncreaseStreamRetentionPeriod",
        "kinesis:ListShards",
        "kinesis:ListStreamConsumers",
        "kinesis:ListStreams",
        "kinesis:ListTagsForStream",
        "kinesis:MergeShards",
        "kinesis:PutRecord",
        "kinesis:PutRecords",
        "kinesis:RegisterStreamConsumer",
        "kinesis:RemoveTagsFromStream",
        "kinesis:SplitShard",
        "kinesis:SubscribeToShard",
        "kinesis:UpdateShardCount",
        "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
        "kinesisanalytics:AddApplicationInput",
        "kinesisanalytics:AddApplicationInputProcessingConfiguration",
        "kinesisanalytics:AddApplicationOutput",
        "kinesisanalytics:AddApplicationReferenceDataSource",
        "kinesisanalytics:AddApplicationVpcConfiguration",
        "kinesisanalytics:CreateApplication",
        "kinesisanalytics:CreateApplicationSnapshot",
        "kinesisanalytics:DeleteApplication",
        "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
        "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
        "kinesisanalytics:DeleteApplicationOutput",
        "kinesisanalytics:DeleteApplicationReferenceDataSource",
        "kinesisanalytics:DeleteApplicationSnapshot",
        "kinesisanalytics:DeleteApplicationVpcConfiguration",
        "kinesisanalytics:DescribeApplication",
        "kinesisanalytics:DescribeApplicationSnapshot",
        "kinesisanalytics:DiscoverInputSchema",
        "kinesisanalytics:GetApplicationState",
        "kinesisanalytics:ListApplicationSnapshots",
        "kinesisanalytics:ListApplications",
        "kinesisanalytics:ListTagsForResource",
        "kinesisanalytics:StartApplication",
        "kinesisanalytics:StopApplication",
        "kinesisanalytics:TagResource",
        "kinesisanalytics:UntagResource",
        "kinesisanalytics:UpdateApplication",
        "kinesisvideo:ConnectAsMaster",
        "kinesisvideo:ConnectAsViewer",
        "kinesisvideo:CreateSignalingChannel",
        "kinesisvideo:CreateStream",
        "kinesisvideo:DeleteSignalingChannel",
        "kinesisvideo:DeleteStream",
        "kinesisvideo:DescribeSignalingChannel",
        "kinesisvideo:DescribeStream",
        "kinesisvideo:GetClip",
        "kinesisvideo:GetDASHStreamingSessionURL",
        "kinesisvideo:GetDataEndpoint",
        "kinesisvideo:GetHLSStreamingSessionURL",
        "kinesisvideo:GetIceServerConfig",
        "kinesisvideo:GetMedia",
        "kinesisvideo:GetMediaForFragmentList",
        "kinesisvideo:GetSignalingChannelEndpoint",
        "kinesisvideo:ListFragments",
        "kinesisvideo:ListSignalingChannels",
        "kinesisvideo:ListStreams",
        "kinesisvideo:ListTagsForResource",
        "kinesisvideo:ListTagsForStream",
        "kinesisvideo:PutMedia",
        "kinesisvideo:SendAlexaOfferToMaster",
        "kinesisvideo:TagResource",
        "kinesisvideo:TagStream",
        "kinesisvideo:UntagResource",
        "kinesisvideo:UntagStream",
        "kinesisvideo:UpdateDataRetention",
        "kinesisvideo:UpdateSignalingChannel",
        "kinesisvideo:UpdateStream",
        "kms:CancelKeyDeletion",
        "kms:ConnectCustomKeyStore",
        "kms:CreateAlias",
        "kms:CreateCustomKeyStore",
        "kms:CreateGrant",
        "kms:CreateKey",
        "kms:Decrypt",
        "kms:DeleteAlias",
        "kms:DeleteCustomKeyStore",
        "kms:DeleteImportedKeyMaterial",
        "kms:DescribeCustomKeyStores",
        "kms:DescribeKey",
        "kms:DisableKey",
        "kms:DisableKeyRotation",
        "kms:DisconnectCustomKeyStore",
        "kms:EnableKey",
        "kms:EnableKeyRotation",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyPair",
        "kms:GenerateDataKeyPairWithoutPlaintext",
        "kms:GenerateDataKeyWithoutPlaintext",
        "kms:GenerateRandom",
        "kms:GetKeyPolicy",
        "kms:GetKeyRotationStatus",
        "kms:GetParametersForImport",
        "kms:GetPublicKey",
        "kms:ImportKeyMaterial",
        "kms:ListAliases",
        "kms:ListGrants",
        "kms:ListKeyPolicies",
        "kms:ListKeys",
        "kms:ListResourceTags",
        "kms:ListRetirableGrants",
        "kms:PutKeyPolicy",
        "kms:ReEncryptFrom",
        "kms:ReEncryptTo",
        "kms:RetireGrant",
        "kms:RevokeGrant",
        "kms:ScheduleKeyDeletion",
        "kms:Sign",
        "kms:TagResource",
        "kms:UntagResource",
        "kms:UpdateAlias",
        "kms:UpdateCustomKeyStore",
        "kms:UpdateKeyDescription",
        "kms:Verify",
        "lakeformation:BatchGrantPermissions",
        "lakeformation:BatchRevokePermissions",
        "lakeformation:DeregisterResource",
        "lakeformation:DescribeResource",
        "lakeformation:GetDataAccess",
        "lakeformation:GetDataLakeSettings",
        "lakeformation:GetEffectivePermissionsForPath",
        "lakeformation:GrantPermissions",
        "lakeformation:ListPermissions",
        "lakeformation:ListResources",
        "lakeformation:PutDataLakeSettings",
        "lakeformation:RegisterResource",
        "lakeformation:RevokePermissions",
        "lakeformation:UpdateResource",
        "lambda:AddLayerVersionPermission",
        "lambda:AddPermission",
        "lambda:CreateAlias",
        "lambda:CreateEventSourceMapping",
        "lambda:CreateFunction",
        "lambda:DeleteAlias",
        "lambda:DeleteEventSourceMapping",
        "lambda:DeleteFunction",
        "lambda:DeleteFunctionConcurrency",
        "lambda:DeleteFunctionEventInvokeConfig",
        "lambda:DeleteLayerVersion",
        "lambda:DeleteProvisionedConcurrencyConfig",
        "lambda:DisableReplication",
        "lambda:EnableReplication",
        "lambda:GetAccountSettings",
        "lambda:GetAlias",
        "lambda:GetEventSourceMapping",
        "lambda:GetFunction",
        "lambda:GetFunctionConcurrency",
        "lambda:GetFunctionConfiguration",
        "lambda:GetFunctionEventInvokeConfig",
        "lambda:GetLayerVersion",
        "lambda:GetLayerVersionByArn",
        "lambda:GetLayerVersionPolicy",
        "lambda:GetPolicy",
        "lambda:GetProvisionedConcurrencyConfig",
        "lambda:InvokeAsync",
        "lambda:InvokeFunction",
        "lambda:ListAliases",
        "lambda:ListEventSourceMappings",
        "lambda:ListFunctionEventInvokeConfigs",
        "lambda:ListFunctions",
        "lambda:ListLayerVersions",
        "lambda:ListLayers",
        "lambda:ListProvisionedConcurrencyConfigs",
        "lambda:ListTags",
        "lambda:ListVersionsByFunction",
        "lambda:PublishLayerVersion",
        "lambda:PublishVersion",
        "lambda:PutFunctionConcurrency",
        "lambda:PutFunctionEventInvokeConfig",
        "lambda:PutProvisionedConcurrencyConfig",
        "lambda:RemoveLayerVersionPermission",
        "lambda:RemovePermission",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:UpdateAlias",
        "lambda:UpdateEventSourceMapping",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateFunctionEventInvokeConfig",
        "launchwizard:DeleteApp",
        "launchwizard:DescribeProvisionedApp",
        "launchwizard:DescribeProvisioningEvents",
        "launchwizard:GetInfrastructureSuggestion",
        "launchwizard:GetIpAddress",
        "launchwizard:GetResourceCostEstimate",
        "launchwizard:ListProvisionedApps",
        "launchwizard:StartProvisioning",
        "lex:CreateBotVersion",
        "lex:CreateIntentVersion",
        "lex:CreateSlotTypeVersion",
        "lex:DeleteBot",
        "lex:DeleteBotAlias",
        "lex:DeleteBotChannelAssociation",
        "lex:DeleteBotVersion",
        "lex:DeleteIntent",
        "lex:DeleteIntentVersion",
        "lex:DeleteSession",
        "lex:DeleteSlotType",
        "lex:DeleteSlotTypeVersion",
        "lex:DeleteUtterances",
        "lex:GetBot",
        "lex:GetBotAlias",
        "lex:GetBotAliases",
        "lex:GetBotChannelAssociation",
        "lex:GetBotChannelAssociations",
        "lex:GetBotVersions",
        "lex:GetBots",
        "lex:GetBuiltinIntent",
        "lex:GetBuiltinIntents",
        "lex:GetBuiltinSlotTypes",
        "lex:GetExport",
        "lex:GetImport",
        "lex:GetIntent",
        "lex:GetIntentVersions",
        "lex:GetIntents",
        "lex:GetSession",
        "lex:GetSlotType",
        "lex:GetSlotTypeVersions",
        "lex:GetSlotTypes",
        "lex:GetUtterancesView",
        "lex:ListTagsForResource",
        "lex:PostContent",
        "lex:PostText",
        "lex:PutBot",
        "lex:PutBotAlias",
        "lex:PutIntent",
        "lex:PutSession",
        "lex:PutSlotType",
        "lex:StartImport",
        "lex:TagResource",
        "lex:UntagResource",
        "license-manager:CreateLicenseConfiguration",
        "license-manager:DeleteLicenseConfiguration",
        "license-manager:GetLicenseConfiguration",
        "license-manager:GetServiceSettings",
        "license-manager:ListAssociationsForLicenseConfiguration",
        "license-manager:ListLicenseConfigurations",
        "license-manager:ListLicenseSpecificationsForResource",
        "license-manager:ListResourceInventory",
        "license-manager:ListTagsForResource",
        "license-manager:ListUsageForLicenseConfiguration",
        "license-manager:TagResource",
        "license-manager:UntagResource",
        "license-manager:UpdateLicenseConfiguration",
        "license-manager:UpdateLicenseSpecificationsForResource",
        "license-manager:UpdateServiceSettings",
        "lightsail:AllocateStaticIp",
        "lightsail:AttachDisk",
        "lightsail:AttachInstancesToLoadBalancer",
        "lightsail:AttachLoadBalancerTlsCertificate",
        "lightsail:AttachStaticIp",
        "lightsail:CloseInstancePublicPorts",
        "lightsail:CopySnapshot",
        "lightsail:CreateCloudFormationStack",
        "lightsail:CreateDisk",
        "lightsail:CreateDiskFromSnapshot",
        "lightsail:CreateDiskSnapshot",
        "lightsail:CreateDomain",
        "lightsail:CreateDomainEntry",
        "lightsail:CreateInstanceSnapshot",
        "lightsail:CreateInstances",
        "lightsail:CreateInstancesFromSnapshot",
        "lightsail:CreateKeyPair",
        "lightsail:CreateLoadBalancer",
        "lightsail:CreateLoadBalancerTlsCertificate",
        "lightsail:CreateRelationalDatabase",
        "lightsail:CreateRelationalDatabaseFromSnapshot",
        "lightsail:CreateRelationalDatabaseSnapshot",
        "lightsail:DeleteDisk",
        "lightsail:DeleteDiskSnapshot",
        "lightsail:DeleteDomain",
        "lightsail:DeleteDomainEntry",
        "lightsail:DeleteInstance",
        "lightsail:DeleteInstanceSnapshot",
        "lightsail:DeleteKeyPair",
        "lightsail:DeleteKnownHostKeys",
        "lightsail:DeleteLoadBalancer",
        "lightsail:DeleteLoadBalancerTlsCertificate",
        "lightsail:DeleteRelationalDatabase",
        "lightsail:DeleteRelationalDatabaseSnapshot",
        "lightsail:DetachDisk",
        "lightsail:DetachInstancesFromLoadBalancer",
        "lightsail:DetachStaticIp",
        "lightsail:DownloadDefaultKeyPair",
        "lightsail:ExportSnapshot",
        "lightsail:GetActiveNames",
        "lightsail:GetBlueprints",
        "lightsail:GetBundles",
        "lightsail:GetCloudFormationStackRecords",
        "lightsail:GetDisk",
        "lightsail:GetDiskSnapshot",
        "lightsail:GetDiskSnapshots",
        "lightsail:GetDisks",
        "lightsail:GetDomain",
        "lightsail:GetDomains",
        "lightsail:GetExportSnapshotRecords",
        "lightsail:GetInstance",
        "lightsail:GetInstanceAccessDetails",
        "lightsail:GetInstanceMetricData",
        "lightsail:GetInstancePortStates",
        "lightsail:GetInstanceSnapshot",
        "lightsail:GetInstanceSnapshots",
        "lightsail:GetInstanceState",
        "lightsail:GetInstances",
        "lightsail:GetKeyPair",
        "lightsail:GetKeyPairs",
        "lightsail:GetLoadBalancer",
        "lightsail:GetLoadBalancerMetricData",
        "lightsail:GetLoadBalancerTlsCertificates",
        "lightsail:GetLoadBalancers",
        "lightsail:GetOperation",
        "lightsail:GetOperations",
        "lightsail:GetOperationsForResource",
        "lightsail:GetRegions",
        "lightsail:GetRelationalDatabase",
        "lightsail:GetRelationalDatabaseBlueprints",
        "lightsail:GetRelationalDatabaseBundles",
        "lightsail:GetRelationalDatabaseEvents",
        "lightsail:GetRelationalDatabaseLogEvents",
        "lightsail:GetRelationalDatabaseLogStreams",
        "lightsail:GetRelationalDatabaseMasterUserPassword",
        "lightsail:GetRelationalDatabaseMetricData",
        "lightsail:GetRelationalDatabaseParameters",
        "lightsail:GetRelationalDatabaseSnapshot",
        "lightsail:GetRelationalDatabaseSnapshots",
        "lightsail:GetRelationalDatabases",
        "lightsail:GetStaticIp",
        "lightsail:GetStaticIps",
        "lightsail:ImportKeyPair",
        "lightsail:IsVpcPeered",
        "lightsail:OpenInstancePublicPorts",
        "lightsail:PeerVpc",
        "lightsail:PutInstancePublicPorts",
        "lightsail:RebootInstance",
        "lightsail:RebootRelationalDatabase",
        "lightsail:ReleaseStaticIp",
        "lightsail:StartInstance",
        "lightsail:StartRelationalDatabase",
        "lightsail:StopInstance",
        "lightsail:StopRelationalDatabase",
        "lightsail:TagResource",
        "lightsail:UnpeerVpc",
        "lightsail:UntagResource",
        "lightsail:UpdateDomainEntry",
        "lightsail:UpdateLoadBalancerAttribute",
        "lightsail:UpdateRelationalDatabase",
        "lightsail:UpdateRelationalDatabaseParameters",
        "logs:AssociateKmsKey",
        "logs:CancelExportTask",
        "logs:CreateExportTask",
        "logs:CreateLogDelivery",
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DeleteDestination",
        "logs:DeleteLogDelivery",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream",
        "logs:DeleteMetricFilter",
        "logs:DeleteResourcePolicy",
        "logs:DeleteRetentionPolicy",
        "logs:DeleteSubscriptionFilter",
        "logs:DescribeDestinations",
        "logs:DescribeExportTasks",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DescribeMetricFilters",
        "logs:DescribeQueries",
        "logs:DescribeResourcePolicies",
        "logs:DescribeSubscriptionFilters",
        "logs:DisassociateKmsKey",
        "logs:FilterLogEvents",
        "logs:GetLogDelivery",
        "logs:GetLogEvents",
        "logs:GetLogGroupFields",
        "logs:GetLogRecord",
        "logs:GetQueryResults",
        "logs:ListLogDeliveries",
        "logs:ListTagsLogGroup",
        "logs:PutDestination",
        "logs:PutDestinationPolicy",
        "logs:PutLogEvents",
        "logs:PutMetricFilter",
        "logs:PutResourcePolicy",
        "logs:PutRetentionPolicy",
        "logs:PutSubscriptionFilter",
        "logs:StartQuery",
        "logs:StopQuery",
        "logs:TagLogGroup",
        "logs:TestMetricFilter",
        "logs:UntagLogGroup",
        "logs:UpdateLogDelivery",
        "machinelearning:AddTags",
        "machinelearning:CreateBatchPrediction",
        "machinelearning:CreateDataSourceFromRDS",
        "machinelearning:CreateDataSourceFromRedshift",
        "machinelearning:CreateDataSourceFromS3",
        "machinelearning:CreateEvaluation",
        "machinelearning:CreateMLModel",
        "machinelearning:CreateRealtimeEndpoint",
        "machinelearning:DeleteBatchPrediction",
        "machinelearning:DeleteDataSource",
        "machinelearning:DeleteEvaluation",
        "machinelearning:DeleteMLModel",
        "machinelearning:DeleteRealtimeEndpoint",
        "machinelearning:DeleteTags",
        "machinelearning:DescribeBatchPredictions",
        "machinelearning:DescribeDataSources",
        "machinelearning:DescribeEvaluations",
        "machinelearning:DescribeMLModels",
        "machinelearning:DescribeTags",
        "machinelearning:GetBatchPrediction",
        "machinelearning:GetDataSource",
        "machinelearning:GetEvaluation",
        "machinelearning:GetMLModel",
        "machinelearning:Predict",
        "machinelearning:UpdateBatchPrediction",
        "machinelearning:UpdateDataSource",
        "machinelearning:UpdateEvaluation",
        "machinelearning:UpdateMLModel",
        "macie2:AcceptInvitation",
        "macie2:ArchiveFindings",
        "macie2:BatchGetCustomDataIdentifiers",
        "macie2:CreateClassificationJob",
        "macie2:CreateCustomDataIdentifier",
        "macie2:CreateFindingsFilter",
        "macie2:CreateInvitations",
        "macie2:CreateMember",
        "macie2:CreateSampleFindings",
        "macie2:DeclineInvitations",
        "macie2:DeleteCustomDataIdentifier",
        "macie2:DeleteFindingsFilter",
        "macie2:DeleteInvitations",
        "macie2:DeleteMember",
        "macie2:DescribeBuckets",
        "macie2:DescribeClassificationJob",
        "macie2:DescribeOrganizationConfiguration",
        "macie2:DisableMacie",
        "macie2:DisableOrganizationAdminAccount",
        "macie2:DisassociateFromMasterAccount",
        "macie2:DisassociateMember",
        "macie2:EnableMacie",
        "macie2:EnableOrganizationAdminAccount",
        "macie2:GetBucketStatistics",
        "macie2:GetClassificationExportConfiguration",
        "macie2:GetCustomDataIdentifier",
        "macie2:GetFindingStatistics",
        "macie2:GetFindings",
        "macie2:GetFindingsFilter",
        "macie2:GetInvitationsCount",
        "macie2:GetMacieSession",
        "macie2:GetMasterAccount",
        "macie2:GetMember",
        "macie2:GetUsageStatistics",
        "macie2:GetUsageTotals",
        "macie2:ListClassificationJobs",
        "macie2:ListCustomDataIdentifiers",
        "macie2:ListFindings",
        "macie2:ListFindingsFilters",
        "macie2:ListInvitations",
        "macie2:ListMembers",
        "macie2:ListOrganizationAdminAccounts",
        "macie2:ListTagsForResources",
        "macie2:PutClassificationExportConfiguration",
        "macie2:TagResource",
        "macie2:TestCustomDataIdentifier",
        "macie2:UnarchiveFindings",
        "macie2:UntagResource",
        "macie2:UpdateClassificationJob",
        "macie2:UpdateFindingsFilter",
        "macie2:UpdateMacieSession",
        "macie2:UpdateMemberSession",
        "macie2:UpdateOrganizationConfiguration",
        "macie:AssociateMemberAccount",
        "macie:AssociateS3Resources",
        "macie:DisassociateMemberAccount",
        "macie:DisassociateS3Resources",
        "macie:ListMemberAccounts",
        "macie:ListS3Resources",
        "macie:UpdateS3Resources",
        "managedblockchain:CreateMember",
        "managedblockchain:CreateNetwork",
        "managedblockchain:CreateNode",
        "managedblockchain:CreateProposal",
        "managedblockchain:DeleteMember",
        "managedblockchain:DeleteNode",
        "managedblockchain:GetMember",
        "managedblockchain:GetNetwork",
        "managedblockchain:GetNode",
        "managedblockchain:GetProposal",
        "managedblockchain:ListInvitations",
        "managedblockchain:ListMembers",
        "managedblockchain:ListNetworks",
        "managedblockchain:ListNodes",
        "managedblockchain:ListProposalVotes",
        "managedblockchain:ListProposals",
        "managedblockchain:RejectInvitation",
        "managedblockchain:UpdateMember",
        "managedblockchain:UpdateNode",
        "managedblockchain:VoteOnProposal",
        "mechanicalturk:AcceptQualificationRequest",
        "mechanicalturk:ApproveAssignment",
        "mechanicalturk:AssociateQualificationWithWorker",
        "mechanicalturk:CreateAdditionalAssignmentsForHIT",
        "mechanicalturk:CreateHIT",
        "mechanicalturk:CreateHITType",
        "mechanicalturk:CreateHITWithHITType",
        "mechanicalturk:CreateQualificationType",
        "mechanicalturk:CreateWorkerBlock",
        "mechanicalturk:DeleteHIT",
        "mechanicalturk:DeleteQualificationType",
        "mechanicalturk:DeleteWorkerBlock",
        "mechanicalturk:DisassociateQualificationFromWorker",
        "mechanicalturk:GetAccountBalance",
        "mechanicalturk:GetAssignment",
        "mechanicalturk:GetFileUploadURL",
        "mechanicalturk:GetHIT",
        "mechanicalturk:GetQualificationScore",
        "mechanicalturk:GetQualificationType",
        "mechanicalturk:ListAssignmentsForHIT",
        "mechanicalturk:ListBonusPayments",
        "mechanicalturk:ListHITs",
        "mechanicalturk:ListHITsForQualificationType",
        "mechanicalturk:ListQualificationRequests",
        "mechanicalturk:ListQualificationTypes",
        "mechanicalturk:ListReviewPolicyResultsForHIT",
        "mechanicalturk:ListReviewableHITs",
        "mechanicalturk:ListWorkerBlocks",
        "mechanicalturk:ListWorkersWithQualificationType",
        "mechanicalturk:NotifyWorkers",
        "mechanicalturk:RejectAssignment",
        "mechanicalturk:RejectQualificationRequest",
        "mechanicalturk:SendBonus",
        "mechanicalturk:SendTestEventNotification",
        "mechanicalturk:UpdateExpirationForHIT",
        "mechanicalturk:UpdateHITReviewStatus",
        "mechanicalturk:UpdateHITTypeOfHIT",
        "mechanicalturk:UpdateNotificationSettings",
        "mechanicalturk:UpdateQualificationType",
        "mediaconnect:AddFlowOutputs",
        "mediaconnect:CreateFlow",
        "mediaconnect:DeleteFlow",
        "mediaconnect:DescribeFlow",
        "mediaconnect:GrantFlowEntitlements",
        "mediaconnect:ListEntitlements",
        "mediaconnect:ListFlows",
        "mediaconnect:RemoveFlowOutput",
        "mediaconnect:RevokeFlowEntitlement",
        "mediaconnect:StartFlow",
        "mediaconnect:StopFlow",
        "mediaconnect:UpdateFlowEntitlement",
        "mediaconnect:UpdateFlowOutput",
        "mediaconnect:UpdateFlowSource",
        "mediaconvert:AssociateCertificate",
        "mediaconvert:CancelJob",
        "mediaconvert:CreateJob",
        "mediaconvert:CreateJobTemplate",
        "mediaconvert:CreatePreset",
        "mediaconvert:CreateQueue",
        "mediaconvert:DeleteJobTemplate",
        "mediaconvert:DeletePreset",
        "mediaconvert:DeleteQueue",
        "mediaconvert:DescribeEndpoints",
        "mediaconvert:DisassociateCertificate",
        "mediaconvert:GetJob",
        "mediaconvert:GetJobTemplate",
        "mediaconvert:GetPreset",
        "mediaconvert:GetQueue",
        "mediaconvert:ListJobTemplates",
        "mediaconvert:ListJobs",
        "mediaconvert:ListPresets",
        "mediaconvert:ListQueues",
        "mediaconvert:ListTagsForResource",
        "mediaconvert:TagResource",
        "mediaconvert:UntagResource",
        "mediaconvert:UpdateJobTemplate",
        "mediaconvert:UpdatePreset",
        "mediaconvert:UpdateQueue",
        "medialive:BatchUpdateSchedule",
        "medialive:CreateChannel",
        "medialive:CreateInput",
        "medialive:CreateInputSecurityGroup",
        "medialive:CreateMultiplex",
        "medialive:CreateTags",
        "medialive:DeleteChannel",
        "medialive:DeleteInput",
        "medialive:DeleteInputSecurityGroup",
        "medialive:DeleteMultiplex",
        "medialive:DeleteReservation",
        "medialive:DeleteTags",
        "medialive:DescribeChannel",
        "medialive:DescribeInput",
        "medialive:DescribeInputDevice",
        "medialive:DescribeInputSecurityGroup",
        "medialive:DescribeMultiplex",
        "medialive:DescribeOffering",
        "medialive:DescribeReservation",
        "medialive:DescribeSchedule",
        "medialive:ListChannels",
        "medialive:ListInputDevices",
        "medialive:ListInputSecurityGroups",
        "medialive:ListInputs",
        "medialive:ListMultiplexes",
        "medialive:ListOfferings",
        "medialive:ListReservations",
        "medialive:ListTagsForResource",
        "medialive:PurchaseOffering",
        "medialive:StartChannel",
        "medialive:StartMultiplex",
        "medialive:StopChannel",
        "medialive:StopMultiplex",
        "medialive:UpdateChannel",
        "medialive:UpdateChannelClass",
        "medialive:UpdateInput",
        "medialive:UpdateInputDevice",
        "medialive:UpdateInputSecurityGroup",
        "medialive:UpdateMultiplex",
        "medialive:UpdateReservation",
        "mediapackage-vod:CreateAsset",
        "mediapackage-vod:CreatePackagingConfiguration",
        "mediapackage-vod:CreatePackagingGroup",
        "mediapackage-vod:DeleteAsset",
        "mediapackage-vod:DeletePackagingConfiguration",
        "mediapackage-vod:DeletePackagingGroup",
        "mediapackage-vod:DescribeAsset",
        "mediapackage-vod:DescribePackagingConfiguration",
        "mediapackage-vod:DescribePackagingGroup",
        "mediapackage-vod:ListAssets",
        "mediapackage-vod:ListPackagingConfigurations",
        "mediapackage-vod:ListPackagingGroups",
        "mediapackage-vod:ListTagsForResource",
        "mediapackage-vod:TagResource",
        "mediapackage-vod:UntagResource",
        "mediapackage:CreateChannel",
        "mediapackage:CreateOriginEndpoint",
        "mediapackage:DeleteChannel",
        "mediapackage:DeleteOriginEndpoint",
        "mediapackage:DescribeChannel",
        "mediapackage:DescribeOriginEndpoint",
        "mediapackage:ListChannels",
        "mediapackage:ListOriginEndpoints",
        "mediapackage:ListTagsForResource",
        "mediapackage:RotateIngestEndpointCredentials",
        "mediapackage:TagResource",
        "mediapackage:UntagResource",
        "mediapackage:UpdateChannel",
        "mediapackage:UpdateOriginEndpoint",
        "mediastore:CreateContainer",
        "mediastore:DeleteContainer",
        "mediastore:DeleteContainerPolicy",
        "mediastore:DeleteCorsPolicy",
        "mediastore:DeleteLifecyclePolicy",
        "mediastore:DeleteMetricPolicy",
        "mediastore:DeleteObject",
        "mediastore:DescribeContainer",
        "mediastore:DescribeObject",
        "mediastore:GetContainerPolicy",
        "mediastore:GetCorsPolicy",
        "mediastore:GetLifecyclePolicy",
        "mediastore:GetMetricPolicy",
        "mediastore:GetObject",
        "mediastore:ListContainers",
        "mediastore:ListItems",
        "mediastore:ListTagsForResource",
        "mediastore:PutContainerPolicy",
        "mediastore:PutCorsPolicy",
        "mediastore:PutLifecyclePolicy",
        "mediastore:PutMetricPolicy",
        "mediastore:PutObject",
        "mediastore:StartAccessLogging",
        "mediastore:StopAccessLogging",
        "mediastore:TagResource",
        "mediastore:UntagResource",
        "mediatailor:DeletePlaybackConfiguration",
        "mediatailor:GetPlaybackConfiguration",
        "mediatailor:ListPlaybackConfigurations",
        "mediatailor:ListTagsForResource",
        "mediatailor:PutPlaybackConfiguration",
        "mediatailor:TagResource",
        "mediatailor:UntagResource",
        "mgh:AssociateCreatedArtifact",
        "mgh:AssociateDiscoveredResource",
        "mgh:CreateHomeRegionControl",
        "mgh:CreateProgressUpdateStream",
        "mgh:DeleteProgressUpdateStream",
        "mgh:DescribeApplicationState",
        "mgh:DescribeHomeRegionControls",
        "mgh:DescribeMigrationTask",
        "mgh:DisassociateCreatedArtifact",
        "mgh:DisassociateDiscoveredResource",
        "mgh:GetHomeRegion",
        "mgh:ImportMigrationTask",
        "mgh:ListCreatedArtifacts",
        "mgh:ListDiscoveredResources",
        "mgh:ListMigrationTasks",
        "mgh:ListProgressUpdateStreams",
        "mgh:NotifyApplicationState",
        "mgh:NotifyMigrationTaskState",
        "mgh:PutResourceAttributes",
        "mobileanalytics:GetFinancialReports",
        "mobileanalytics:GetReports",
        "mobileanalytics:PutEvents",
        "mobilehub:CreateProject",
        "mobilehub:CreateServiceRole",
        "mobilehub:DeleteProject",
        "mobilehub:DeleteProjectSnapshot",
        "mobilehub:DeployToStage",
        "mobilehub:DescribeBundle",
        "mobilehub:ExportBundle",
        "mobilehub:ExportProject",
        "mobilehub:GenerateProjectParameters",
        "mobilehub:GetProject",
        "mobilehub:GetProjectSnapshot",
        "mobilehub:ImportProject",
        "mobilehub:InstallBundle",
        "mobilehub:ListAvailableConnectors",
        "mobilehub:ListAvailableFeatures",
        "mobilehub:ListAvailableRegions",
        "mobilehub:ListBundles",
        "mobilehub:ListProjectSnapshots",
        "mobilehub:ListProjects",
        "mobilehub:SynchronizeProject",
        "mobilehub:UpdateProject",
        "mobilehub:ValidateProject",
        "mobilehub:VerifyServiceRole",
        "mobiletargeting:CreateApp",
        "mobiletargeting:CreateCampaign",
        "mobiletargeting:CreateEmailTemplate",
        "mobiletargeting:CreateExportJob",
        "mobiletargeting:CreateImportJob",
        "mobiletargeting:CreateJourney",
        "mobiletargeting:CreatePushTemplate",
        "mobiletargeting:CreateRecommenderConfiguration",
        "mobiletargeting:CreateSegment",
        "mobiletargeting:CreateSmsTemplate",
        "mobiletargeting:CreateVoiceTemplate",
        "mobiletargeting:DeleteAdmChannel",
        "mobiletargeting:DeleteApnsChannel",
        "mobiletargeting:DeleteApnsSandboxChannel",
        "mobiletargeting:DeleteApnsVoipChannel",
        "mobiletargeting:DeleteApnsVoipSandboxChannel",
        "mobiletargeting:DeleteApp",
        "mobiletargeting:DeleteBaiduChannel",
        "mobiletargeting:DeleteCampaign",
        "mobiletargeting:DeleteEmailChannel",
        "mobiletargeting:DeleteEmailTemplate",
        "mobiletargeting:DeleteEndpoint",
        "mobiletargeting:DeleteEventStream",
        "mobiletargeting:DeleteGcmChannel",
        "mobiletargeting:DeleteJourney",
        "mobiletargeting:DeletePushTemplate",
        "mobiletargeting:DeleteRecommenderConfiguration",
        "mobiletargeting:DeleteSegment",
        "mobiletargeting:DeleteSmsChannel",
        "mobiletargeting:DeleteSmsTemplate",
        "mobiletargeting:DeleteUserEndpoints",
        "mobiletargeting:DeleteVoiceChannel",
        "mobiletargeting:DeleteVoiceTemplate",
        "mobiletargeting:GetAdmChannel",
        "mobiletargeting:GetApnsChannel",
        "mobiletargeting:GetApnsSandboxChannel",
        "mobiletargeting:GetApnsVoipChannel",
        "mobiletargeting:GetApnsVoipSandboxChannel",
        "mobiletargeting:GetApp",
        "mobiletargeting:GetApplicationSettings",
        "mobiletargeting:GetApps",
        "mobiletargeting:GetBaiduChannel",
        "mobiletargeting:GetCampaign",
        "mobiletargeting:GetCampaignActivities",
        "mobiletargeting:GetCampaignVersion",
        "mobiletargeting:GetCampaignVersions",
        "mobiletargeting:GetCampaigns",
        "mobiletargeting:GetChannels",
        "mobiletargeting:GetEmailChannel",
        "mobiletargeting:GetEmailTemplate",
        "mobiletargeting:GetEndpoint",
        "mobiletargeting:GetEventStream",
        "mobiletargeting:GetExportJob",
        "mobiletargeting:GetExportJobs",
        "mobiletargeting:GetGcmChannel",
        "mobiletargeting:GetImportJob",
        "mobiletargeting:GetImportJobs",
        "mobiletargeting:GetJourney",
        "mobiletargeting:GetPushTemplate",
        "mobiletargeting:GetRecommenderConfiguration",
        "mobiletargeting:GetRecommenderConfigurations",
        "mobiletargeting:GetSegment",
        "mobiletargeting:GetSegmentExportJobs",
        "mobiletargeting:GetSegmentImportJobs",
        "mobiletargeting:GetSegmentVersion",
        "mobiletargeting:GetSegmentVersions",
        "mobiletargeting:GetSegments",
        "mobiletargeting:GetSmsChannel",
        "mobiletargeting:GetSmsTemplate",
        "mobiletargeting:GetUserEndpoints",
        "mobiletargeting:GetVoiceChannel",
        "mobiletargeting:GetVoiceTemplate",
        "mobiletargeting:ListJourneys",
        "mobiletargeting:ListTagsForResource",
        "mobiletargeting:ListTemplateVersions",
        "mobiletargeting:ListTemplates",
        "mobiletargeting:PhoneNumberValidate",
        "mobiletargeting:PutEventStream",
        "mobiletargeting:PutEvents",
        "mobiletargeting:RemoveAttributes",
        "mobiletargeting:SendMessages",
        "mobiletargeting:SendUsersMessages",
        "mobiletargeting:TagResource",
        "mobiletargeting:UntagResource",
        "mobiletargeting:UpdateAdmChannel",
        "mobiletargeting:UpdateApnsChannel",
        "mobiletargeting:UpdateApnsSandboxChannel",
        "mobiletargeting:UpdateApnsVoipChannel",
        "mobiletargeting:UpdateApnsVoipSandboxChannel",
        "mobiletargeting:UpdateApplicationSettings",
        "mobiletargeting:UpdateBaiduChannel",
        "mobiletargeting:UpdateCampaign",
        "mobiletargeting:UpdateEmailChannel",
        "mobiletargeting:UpdateEmailTemplate",
        "mobiletargeting:UpdateEndpoint",
        "mobiletargeting:UpdateEndpointsBatch",
        "mobiletargeting:UpdateGcmChannel",
        "mobiletargeting:UpdateJourney",
        "mobiletargeting:UpdateJourneyState",
        "mobiletargeting:UpdatePushTemplate",
        "mobiletargeting:UpdateRecommenderConfiguration",
        "mobiletargeting:UpdateSegment",
        "mobiletargeting:UpdateSmsChannel",
        "mobiletargeting:UpdateSmsTemplate",
        "mobiletargeting:UpdateTemplateActiveVersion",
        "mobiletargeting:UpdateVoiceChannel",
        "mobiletargeting:UpdateVoiceTemplate",
        "mq:CreateBroker",
        "mq:CreateConfiguration",
        "mq:CreateTags",
        "mq:CreateUser",
        "mq:DeleteBroker",
        "mq:DeleteTags",
        "mq:DeleteUser",
        "mq:DescribeBroker",
        "mq:DescribeBrokerEngineTypes",
        "mq:DescribeBrokerInstanceOptions",
        "mq:DescribeConfiguration",
        "mq:DescribeConfigurationRevision",
        "mq:DescribeUser",
        "mq:ListBrokers",
        "mq:ListConfigurationRevisions",
        "mq:ListConfigurations",
        "mq:ListTags",
        "mq:ListUsers",
        "mq:RebootBroker",
        "mq:UpdateBroker",
        "mq:UpdateConfiguration",
        "mq:UpdateUser",
        "neptune-db:connect",
        "networkmanager:AssociateCustomerGateway",
        "networkmanager:AssociateLink",
        "networkmanager:CreateDevice",
        "networkmanager:CreateGlobalNetwork",
        "networkmanager:CreateLink",
        "networkmanager:CreateSite",
        "networkmanager:DeleteDevice",
        "networkmanager:DeleteGlobalNetwork",
        "networkmanager:DeleteLink",
        "networkmanager:DeleteSite",
        "networkmanager:DeregisterTransitGateway",
        "networkmanager:DescribeGlobalNetworks",
        "networkmanager:DisassociateCustomerGateway",
        "networkmanager:DisassociateLink",
        "networkmanager:GetCustomerGatewayAssociations",
        "networkmanager:GetDevices",
        "networkmanager:GetLinkAssociations",
        "networkmanager:GetLinks",
        "networkmanager:GetSites",
        "networkmanager:GetTransitGatewayRegistrations",
        "networkmanager:ListTagsForResource",
        "networkmanager:RegisterTransitGateway",
        "networkmanager:TagResource",
        "networkmanager:UntagResource",
        "networkmanager:UpdateDevice",
        "networkmanager:UpdateGlobalNetwork",
        "networkmanager:UpdateLink",
        "networkmanager:UpdateSite",
        "opsworks-cm:AssociateNode",
        "opsworks-cm:CreateBackup",
        "opsworks-cm:CreateServer",
        "opsworks-cm:DeleteBackup",
        "opsworks-cm:DeleteServer",
        "opsworks-cm:DescribeAccountAttributes",
        "opsworks-cm:DescribeBackups",
        "opsworks-cm:DescribeEvents",
        "opsworks-cm:DescribeNodeAssociationStatus",
        "opsworks-cm:DescribeServers",
        "opsworks-cm:DisassociateNode",
        "opsworks-cm:RestoreServer",
        "opsworks-cm:StartMaintenance",
        "opsworks-cm:UpdateServer",
        "opsworks-cm:UpdateServerEngineAttributes",
        "opsworks:AssignInstance",
        "opsworks:AssignVolume",
        "opsworks:AssociateElasticIp",
        "opsworks:AttachElasticLoadBalancer",
        "opsworks:CloneStack",
        "opsworks:CreateApp",
        "opsworks:CreateDeployment",
        "opsworks:CreateInstance",
        "opsworks:CreateLayer",
        "opsworks:CreateStack",
        "opsworks:CreateUserProfile",
        "opsworks:DeleteApp",
        "opsworks:DeleteInstance",
        "opsworks:DeleteLayer",
        "opsworks:DeleteStack",
        "opsworks:DeleteUserProfile",
        "opsworks:DeregisterEcsCluster",
        "opsworks:DeregisterElasticIp",
        "opsworks:DeregisterInstance",
        "opsworks:DeregisterRdsDbInstance",
        "opsworks:DeregisterVolume",
        "opsworks:DescribeAgentVersions",
        "opsworks:DescribeApps",
        "opsworks:DescribeCommands",
        "opsworks:DescribeDeployments",
        "opsworks:DescribeEcsClusters",
        "opsworks:DescribeElasticIps",
        "opsworks:DescribeElasticLoadBalancers",
        "opsworks:DescribeInstances",
        "opsworks:DescribeLayers",
        "opsworks:DescribeLoadBasedAutoScaling",
        "opsworks:DescribeMyUserProfile",
        "opsworks:DescribePermissions",
        "opsworks:DescribeRaidArrays",
        "opsworks:DescribeRdsDbInstances",
        "opsworks:DescribeServiceErrors",
        "opsworks:DescribeStackProvisioningParameters",
        "opsworks:DescribeStackSummary",
        "opsworks:DescribeStacks",
        "opsworks:DescribeTimeBasedAutoScaling",
        "opsworks:DescribeUserProfiles",
        "opsworks:DescribeVolumes",
        "opsworks:DetachElasticLoadBalancer",
        "opsworks:DisassociateElasticIp",
        "opsworks:GetHostnameSuggestion",
        "opsworks:GrantAccess",
        "opsworks:ListTags",
        "opsworks:RebootInstance",
        "opsworks:RegisterEcsCluster",
        "opsworks:RegisterElasticIp",
        "opsworks:RegisterInstance",
        "opsworks:RegisterRdsDbInstance",
        "opsworks:RegisterVolume",
        "opsworks:SetLoadBasedAutoScaling",
        "opsworks:SetPermission",
        "opsworks:SetTimeBasedAutoScaling",
        "opsworks:StartInstance",
        "opsworks:StartStack",
        "opsworks:StopInstance",
        "opsworks:StopStack",
        "opsworks:TagResource",
        "opsworks:UnassignInstance",
        "opsworks:UnassignVolume",
        "opsworks:UntagResource",
        "opsworks:UpdateApp",
        "opsworks:UpdateElasticIp",
        "opsworks:UpdateInstance",
        "opsworks:UpdateLayer",
        "opsworks:UpdateMyUserProfile",
        "opsworks:UpdateRdsDbInstance",
        "opsworks:UpdateStack",
        "opsworks:UpdateUserProfile",
        "opsworks:UpdateVolume",
        "outposts:CreateOutpost",
        "outposts:GetOutpost",
        "outposts:GetOutpostInstanceTypes",
        "outposts:ListOutposts",
        "outposts:ListSites",
        "personalize:CreateCampaign",
        "personalize:CreateDataset",
        "personalize:CreateDatasetGroup",
        "personalize:CreateDatasetImportJob",
        "personalize:CreateEventTracker",
        "personalize:CreateSchema",
        "personalize:CreateSolution",
        "personalize:CreateSolutionVersion",
        "personalize:DeleteCampaign",
        "personalize:DeleteDataset",
        "personalize:DeleteDatasetGroup",
        "personalize:DeleteEventTracker",
        "personalize:DeleteSchema",
        "personalize:DeleteSolution",
        "personalize:DescribeAlgorithm",
        "personalize:DescribeCampaign",
        "personalize:DescribeDataset",
        "personalize:DescribeDatasetGroup",
        "personalize:DescribeDatasetImportJob",
        "personalize:DescribeEventTracker",
        "personalize:DescribeFeatureTransformation",
        "personalize:DescribeRecipe",
        "personalize:DescribeSchema",
        "personalize:DescribeSolution",
        "personalize:DescribeSolutionVersion",
        "personalize:GetPersonalizedRanking",
        "personalize:GetRecommendations",
        "personalize:GetSolutionMetrics",
        "personalize:ListCampaigns",
        "personalize:ListDatasetGroups",
        "personalize:ListDatasetImportJobs",
        "personalize:ListDatasets",
        "personalize:ListEventTrackers",
        "personalize:ListRecipes",
        "personalize:ListSchemas",
        "personalize:ListSolutionVersions",
        "personalize:ListSolutions",
        "personalize:PutEvents",
        "personalize:UpdateCampaign",
        "pi:DescribeDimensionKeys",
        "pi:GetResourceMetrics",
        "polly:DeleteLexicon",
        "polly:DescribeVoices",
        "polly:GetLexicon",
        "polly:GetSpeechSynthesisTask",
        "polly:ListLexicons",
        "polly:ListSpeechSynthesisTasks",
        "polly:PutLexicon",
        "polly:StartSpeechSynthesisTask",
        "polly:SynthesizeSpeech",
        "pricing:DescribeServices",
        "pricing:GetAttributeValues",
        "pricing:GetProducts",
        "purchase-orders:ModifyPurchaseOrders",
        "purchase-orders:ViewPurchaseOrders",
        "qldb:CancelJournalKinesisStream",
        "qldb:CreateLedger",
        "qldb:DeleteLedger",
        "qldb:DescribeJournalKinesisStream",
        "qldb:DescribeJournalS3Export",
        "qldb:DescribeLedger",
        "qldb:ExecuteStatement",
        "qldb:ExportJournalToS3",
        "qldb:GetBlock",
        "qldb:GetDigest",
        "qldb:GetRevision",
        "qldb:InsertSampleData",
        "qldb:ListJournalKinesisStreamsForLedger",
        "qldb:ListJournalS3Exports",
        "qldb:ListJournalS3ExportsForLedger",
        "qldb:ListLedgers",
        "qldb:ListTagsForResource",
        "qldb:SendCommand",
        "qldb:ShowCatalog",
        "qldb:StreamJournalToKinesis",
        "qldb:TagResource",
        "qldb:UntagResource",
        "qldb:UpdateLedger",
        "quicksight:CreateAdmin",
        "quicksight:CreateDashboard",
        "quicksight:CreateGroup",
        "quicksight:CreateGroupMembership",
        "quicksight:CreateIAMPolicyAssignment",
        "quicksight:CreateReader",
        "quicksight:CreateTemplate",
        "quicksight:CreateTemplateAlias",
        "quicksight:CreateUser",
        "quicksight:DeleteDashboard",
        "quicksight:DeleteGroup",
        "quicksight:DeleteGroupMembership",
        "quicksight:DeleteIAMPolicyAssignment",
        "quicksight:DeleteTemplate",
        "quicksight:DeleteTemplateAlias",
        "quicksight:DeleteUser",
        "quicksight:DeleteUserByPrincipalId",
        "quicksight:DescribeDashboard",
        "quicksight:DescribeDashboardPermissions",
        "quicksight:DescribeGroup",
        "quicksight:DescribeIAMPolicyAssignment",
        "quicksight:DescribeTemplate",
        "quicksight:DescribeTemplateAlias",
        "quicksight:DescribeTemplatePermissions",
        "quicksight:DescribeUser",
        "quicksight:GetAuthCode",
        "quicksight:GetDashboardEmbedUrl",
        "quicksight:GetGroupMapping",
        "quicksight:ListDashboardVersions",
        "quicksight:ListDashboards",
        "quicksight:ListGroupMemberships",
        "quicksight:ListGroups",
        "quicksight:ListIAMPolicyAssignments",
        "quicksight:ListIAMPolicyAssignmentsForUser",
        "quicksight:ListTagsForResource",
        "quicksight:ListTemplateAliases",
        "quicksight:ListTemplateVersions",
        "quicksight:ListTemplates",
        "quicksight:ListUserGroups",
        "quicksight:ListUsers",
        "quicksight:RegisterUser",
        "quicksight:SearchDirectoryGroups",
        "quicksight:SetGroupMapping",
        "quicksight:Subscribe",
        "quicksight:TagResource",
        "quicksight:Unsubscribe",
        "quicksight:UntagResource",
        "quicksight:UpdateDashboard",
        "quicksight:UpdateDashboardPermissions",
        "quicksight:UpdateDashboardPublishedVersion",
        "quicksight:UpdateGroup",
        "quicksight:UpdateIAMPolicyAssignment",
        "quicksight:UpdateTemplate",
        "quicksight:UpdateTemplateAlias",
        "quicksight:UpdateTemplatePermissions",
        "quicksight:UpdateUser",
        "ram:AcceptResourceShareInvitation",
        "ram:AssociateResourceShare",
        "ram:AssociateResourceSharePermission",
        "ram:CreateResourceShare",
        "ram:DeleteResourceShare",
        "ram:DisassociateResourceShare",
        "ram:DisassociateResourceSharePermission",
        "ram:EnableSharingWithAwsOrganization",
        "ram:GetPermission",
        "ram:GetResourcePolicies",
        "ram:GetResourceShareAssociations",
        "ram:GetResourceShareInvitations",
        "ram:GetResourceShares",
        "ram:ListPendingInvitationResources",
        "ram:ListPermissions",
        "ram:ListPrincipals",
        "ram:ListResourceSharePermissions",
        "ram:ListResources",
        "ram:RejectResourceShareInvitation",
        "ram:TagResource",
        "ram:UntagResource",
        "ram:UpdateResourceShare",
        "rds-data:BatchExecuteStatement",
        "rds-data:BeginTransaction",
        "rds-data:CommitTransaction",
        "rds-data:ExecuteSql",
        "rds-data:ExecuteStatement",
        "rds-data:RollbackTransaction",
        "rds-db:connect",
        "rds:AddRoleToDBCluster",
        "rds:AddRoleToDBInstance",
        "rds:AddSourceIdentifierToSubscription",
        "rds:AddTagsToResource",
        "rds:ApplyPendingMaintenanceAction",
        "rds:AuthorizeDBSecurityGroupIngress",
        "rds:BacktrackDBCluster",
        "rds:CancelExportTask",
        "rds:CopyDBClusterParameterGroup",
        "rds:CopyDBClusterSnapshot",
        "rds:CopyDBParameterGroup",
        "rds:CopyDBSnapshot",
        "rds:CopyOptionGroup",
        "rds:CreateDBCluster",
        "rds:CreateDBClusterEndpoint",
        "rds:CreateDBClusterParameterGroup",
        "rds:CreateDBClusterSnapshot",
        "rds:CreateDBInstance",
        "rds:CreateDBInstanceReadReplica",
        "rds:CreateDBParameterGroup",
        "rds:CreateDBProxy",
        "rds:CreateDBSecurityGroup",
        "rds:CreateDBSnapshot",
        "rds:CreateDBSubnetGroup",
        "rds:CreateEventSubscription",
        "rds:CreateGlobalCluster",
        "rds:CreateOptionGroup",
        "rds:DeleteDBCluster",
        "rds:DeleteDBClusterEndpoint",
        "rds:DeleteDBClusterParameterGroup",
        "rds:DeleteDBClusterSnapshot",
        "rds:DeleteDBInstance",
        "rds:DeleteDBInstanceAutomatedBackup",
        "rds:DeleteDBParameterGroup",
        "rds:DeleteDBProxy",
        "rds:DeleteDBSecurityGroup",
        "rds:DeleteDBSnapshot",
        "rds:DeleteDBSubnetGroup",
        "rds:DeleteEventSubscription",
        "rds:DeleteGlobalCluster",
        "rds:DeleteOptionGroup",
        "rds:DeregisterDBProxyTargets",
        "rds:DescribeAccountAttributes",
        "rds:DescribeCertificates",
        "rds:DescribeDBClusterBacktracks",
        "rds:DescribeDBClusterEndpoints",
        "rds:DescribeDBClusterParameterGroups",
        "rds:DescribeDBClusterParameters",
        "rds:DescribeDBClusterSnapshotAttributes",
        "rds:DescribeDBClusterSnapshots",
        "rds:DescribeDBClusters",
        "rds:DescribeDBEngineVersions",
        "rds:DescribeDBInstanceAutomatedBackups",
        "rds:DescribeDBInstances",
        "rds:DescribeDBLogFiles",
        "rds:DescribeDBParameterGroups",
        "rds:DescribeDBParameters",
        "rds:DescribeDBProxies",
        "rds:DescribeDBProxyTargetGroups",
        "rds:DescribeDBProxyTargets",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshotAttributes",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEngineDefaultClusterParameters",
        "rds:DescribeEngineDefaultParameters",
        "rds:DescribeEventCategories",
        "rds:DescribeEventSubscriptions",
        "rds:DescribeEvents",
        "rds:DescribeExportTasks",
        "rds:DescribeGlobalClusters",
        "rds:DescribeOptionGroupOptions",
        "rds:DescribeOptionGroups",
        "rds:DescribeOrderableDBInstanceOptions",
        "rds:DescribePendingMaintenanceActions",
        "rds:DescribeReservedDBInstances",
        "rds:DescribeReservedDBInstancesOfferings",
        "rds:DescribeSourceRegions",
        "rds:DescribeValidDBInstanceModifications",
        "rds:DownloadCompleteDBLogFile",
        "rds:DownloadDBLogFilePortion",
        "rds:FailoverDBCluster",
        "rds:ListTagsForResource",
        "rds:ModifyCurrentDBClusterCapacity",
        "rds:ModifyDBCluster",
        "rds:ModifyDBClusterEndpoint",
        "rds:ModifyDBClusterParameterGroup",
        "rds:ModifyDBClusterSnapshotAttribute",
        "rds:ModifyDBInstance",
        "rds:ModifyDBParameterGroup",
        "rds:ModifyDBProxy",
        "rds:ModifyDBProxyTargetGroup",
        "rds:ModifyDBSnapshot",
        "rds:ModifyDBSnapshotAttribute",
        "rds:ModifyDBSubnetGroup",
        "rds:ModifyEventSubscription",
        "rds:ModifyGlobalCluster",
        "rds:ModifyOptionGroup",
        "rds:PromoteReadReplica",
        "rds:PromoteReadReplicaDBCluster",
        "rds:PurchaseReservedDBInstancesOffering",
        "rds:RebootDBInstance",
        "rds:RegisterDBProxyTargets",
        "rds:RemoveFromGlobalCluster",
        "rds:RemoveRoleFromDBCluster",
        "rds:RemoveRoleFromDBInstance",
        "rds:RemoveSourceIdentifierFromSubscription",
        "rds:RemoveTagsFromResource",
        "rds:ResetDBClusterParameterGroup",
        "rds:ResetDBParameterGroup",
        "rds:RestoreDBClusterFromS3",
        "rds:RestoreDBClusterFromSnapshot",
        "rds:RestoreDBClusterToPointInTime",
        "rds:RestoreDBInstanceFromDBSnapshot",
        "rds:RestoreDBInstanceFromS3",
        "rds:RestoreDBInstanceToPointInTime",
        "rds:RevokeDBSecurityGroupIngress",
        "rds:StartActivityStream",
        "rds:StartDBCluster",
        "rds:StartDBInstance",
        "rds:StartExportTask",
        "rds:StopActivityStream",
        "rds:StopDBCluster",
        "rds:StopDBInstance",
        "redshift:AcceptReservedNodeExchange",
        "redshift:AuthorizeClusterSecurityGroupIngress",
        "redshift:AuthorizeSnapshotAccess",
        "redshift:BatchDeleteClusterSnapshots",
        "redshift:BatchModifyClusterSnapshots",
        "redshift:CancelQuery",
        "redshift:CancelQuerySession",
        "redshift:CancelResize",
        "redshift:CopyClusterSnapshot",
        "redshift:CreateCluster",
        "redshift:CreateClusterParameterGroup",
        "redshift:CreateClusterSecurityGroup",
        "redshift:CreateClusterSnapshot",
        "redshift:CreateClusterSubnetGroup",
        "redshift:CreateClusterUser",
        "redshift:CreateEventSubscription",
        "redshift:CreateHsmClientCertificate",
        "redshift:CreateHsmConfiguration",
        "redshift:CreateSavedQuery",
        "redshift:CreateScheduledAction",
        "redshift:CreateSnapshotCopyGrant",
        "redshift:CreateSnapshotSchedule",
        "redshift:CreateTags",
        "redshift:DeleteCluster",
        "redshift:DeleteClusterParameterGroup",
        "redshift:DeleteClusterSecurityGroup",
        "redshift:DeleteClusterSnapshot",
        "redshift:DeleteClusterSubnetGroup",
        "redshift:DeleteEventSubscription",
        "redshift:DeleteHsmClientCertificate",
        "redshift:DeleteHsmConfiguration",
        "redshift:DeleteSavedQueries",
        "redshift:DeleteScheduledAction",
        "redshift:DeleteSnapshotCopyGrant",
        "redshift:DeleteSnapshotSchedule",
        "redshift:DeleteTags",
        "redshift:DescribeAccountAttributes",
        "redshift:DescribeClusterDbRevisions",
        "redshift:DescribeClusterParameterGroups",
        "redshift:DescribeClusterParameters",
        "redshift:DescribeClusterSecurityGroups",
        "redshift:DescribeClusterSnapshots",
        "redshift:DescribeClusterSubnetGroups",
        "redshift:DescribeClusterTracks",
        "redshift:DescribeClusterVersions",
        "redshift:DescribeClusters",
        "redshift:DescribeDefaultClusterParameters",
        "redshift:DescribeEventCategories",
        "redshift:DescribeEventSubscriptions",
        "redshift:DescribeEvents",
        "redshift:DescribeHsmClientCertificates",
        "redshift:DescribeHsmConfigurations",
        "redshift:DescribeLoggingStatus",
        "redshift:DescribeNodeConfigurationOptions",
        "redshift:DescribeOrderableClusterOptions",
        "redshift:DescribeQuery",
        "redshift:DescribeReservedNodeOfferings",
        "redshift:DescribeReservedNodes",
        "redshift:DescribeResize",
        "redshift:DescribeSavedQueries",
        "redshift:DescribeScheduledActions",
        "redshift:DescribeSnapshotCopyGrants",
        "redshift:DescribeSnapshotSchedules",
        "redshift:DescribeStorage",
        "redshift:DescribeTable",
        "redshift:DescribeTableRestoreStatus",
        "redshift:DescribeTags",
        "redshift:DisableLogging",
        "redshift:DisableSnapshotCopy",
        "redshift:EnableLogging",
        "redshift:EnableSnapshotCopy",
        "redshift:ExecuteQuery",
        "redshift:FetchResults",
        "redshift:GetClusterCredentials",
        "redshift:GetReservedNodeExchangeOfferings",
        "redshift:JoinGroup",
        "redshift:ListDatabases",
        "redshift:ListSavedQueries",
        "redshift:ListSchemas",
        "redshift:ListTables",
        "redshift:ModifyCluster",
        "redshift:ModifyClusterDbRevision",
        "redshift:ModifyClusterIamRoles",
        "redshift:ModifyClusterMaintenance",
        "redshift:ModifyClusterParameterGroup",
        "redshift:ModifyClusterSnapshot",
        "redshift:ModifyClusterSnapshotSchedule",
        "redshift:ModifyClusterSubnetGroup",
        "redshift:ModifyEventSubscription",
        "redshift:ModifySavedQuery",
        "redshift:ModifyScheduledAction",
        "redshift:ModifySnapshotCopyRetentionPeriod",
        "redshift:ModifySnapshotSchedule",
        "redshift:PauseCluster",
        "redshift:PurchaseReservedNodeOffering",
        "redshift:RebootCluster",
        "redshift:ResetClusterParameterGroup",
        "redshift:ResizeCluster",
        "redshift:RestoreFromClusterSnapshot",
        "redshift:RestoreTableFromClusterSnapshot",
        "redshift:ResumeCluster",
        "redshift:RevokeClusterSecurityGroupIngress",
        "redshift:RevokeSnapshotAccess",
        "redshift:RotateEncryptionKey",
        "redshift:ViewQueriesFromConsole",
        "redshift:ViewQueriesInConsole",
        "rekognition:CompareFaces",
        "rekognition:CreateCollection",
        "rekognition:CreateProject",
        "rekognition:CreateProjectVersion",
        "rekognition:CreateStreamProcessor",
        "rekognition:DeleteCollection",
        "rekognition:DeleteFaces",
        "rekognition:DeleteProject",
        "rekognition:DeleteProjectVersion",
        "rekognition:DeleteStreamProcessor",
        "rekognition:DescribeCollection",
        "rekognition:DescribeProjectVersions",
        "rekognition:DescribeProjects",
        "rekognition:DescribeStreamProcessor",
        "rekognition:DetectCustomLabels",
        "rekognition:DetectFaces",
        "rekognition:DetectLabels",
        "rekognition:DetectModerationLabels",
        "rekognition:DetectText",
        "rekognition:GetCelebrityInfo",
        "rekognition:GetCelebrityRecognition",
        "rekognition:GetContentModeration",
        "rekognition:GetFaceDetection",
        "rekognition:GetFaceSearch",
        "rekognition:GetLabelDetection",
        "rekognition:GetPersonTracking",
        "rekognition:GetSegmentDetection",
        "rekognition:GetTextDetection",
        "rekognition:IndexFaces",
        "rekognition:ListCollections",
        "rekognition:ListFaces",
        "rekognition:ListStreamProcessors",
        "rekognition:RecognizeCelebrities",
        "rekognition:SearchFaces",
        "rekognition:SearchFacesByImage",
        "rekognition:StartCelebrityRecognition",
        "rekognition:StartContentModeration",
        "rekognition:StartFaceDetection",
        "rekognition:StartFaceSearch",
        "rekognition:StartLabelDetection",
        "rekognition:StartPersonTracking",
        "rekognition:StartProjectVersion",
        "rekognition:StartSegmentDetection",
        "rekognition:StartStreamProcessor",
        "rekognition:StartTextDetection",
        "rekognition:StopProjectVersion",
        "rekognition:StopStreamProcessor",
        "resource-explorer:ListResourceTypes",
        "resource-explorer:ListResources",
        "resource-explorer:ListTags",
        "resource-groups:CreateGroup",
        "resource-groups:DeleteGroup",
        "resource-groups:GetGroup",
        "resource-groups:GetGroupQuery",
        "resource-groups:GetTags",
        "resource-groups:ListGroupResources",
        "resource-groups:ListGroups",
        "resource-groups:SearchResources",
        "resource-groups:Tag",
        "resource-groups:Untag",
        "resource-groups:UpdateGroup",
        "resource-groups:UpdateGroupQuery",
        "robomaker:BatchDescribeSimulationJob",
        "robomaker:CancelDeploymentJob",
        "robomaker:CancelSimulationJob",
        "robomaker:CancelSimulationJobBatch",
        "robomaker:CreateDeploymentJob",
        "robomaker:CreateFleet",
        "robomaker:CreateRobot",
        "robomaker:CreateRobotApplication",
        "robomaker:CreateRobotApplicationVersion",
        "robomaker:CreateSimulationApplication",
        "robomaker:CreateSimulationApplicationVersion",
        "robomaker:CreateSimulationJob",
        "robomaker:DeleteFleet",
        "robomaker:DeleteRobot",
        "robomaker:DeleteRobotApplication",
        "robomaker:DeleteSimulationApplication",
        "robomaker:DeregisterRobot",
        "robomaker:DescribeDeploymentJob",
        "robomaker:DescribeFleet",
        "robomaker:DescribeRobot",
        "robomaker:DescribeRobotApplication",
        "robomaker:DescribeSimulationApplication",
        "robomaker:DescribeSimulationJob",
        "robomaker:DescribeSimulationJobBatch",
        "robomaker:ListDeploymentJobs",
        "robomaker:ListFleets",
        "robomaker:ListRobotApplications",
        "robomaker:ListRobots",
        "robomaker:ListSimulationApplications",
        "robomaker:ListSimulationJobBatches",
        "robomaker:ListSimulationJobs",
        "robomaker:ListTagsForResource",
        "robomaker:RegisterRobot",
        "robomaker:RestartSimulationJob",
        "robomaker:StartSimulationJobBatch",
        "robomaker:SyncDeploymentJob",
        "robomaker:TagResource",
        "robomaker:UntagResource",
        "robomaker:UpdateRobotApplication",
        "robomaker:UpdateSimulationApplication",
        "route53:AssociateVPCWithHostedZone",
        "route53:ChangeResourceRecordSets",
        "route53:ChangeTagsForResource",
        "route53:CreateHealthCheck",
        "route53:CreateHostedZone",
        "route53:CreateQueryLoggingConfig",
        "route53:CreateReusableDelegationSet",
        "route53:CreateTrafficPolicy",
        "route53:CreateTrafficPolicyInstance",
        "route53:CreateTrafficPolicyVersion",
        "route53:CreateVPCAssociationAuthorization",
        "route53:DeleteHealthCheck",
        "route53:DeleteHostedZone",
        "route53:DeleteQueryLoggingConfig",
        "route53:DeleteReusableDelegationSet",
        "route53:DeleteTrafficPolicy",
        "route53:DeleteTrafficPolicyInstance",
        "route53:DeleteVPCAssociationAuthorization",
        "route53:DisassociateVPCFromHostedZone",
        "route53:GetAccountLimit",
        "route53:GetChange",
        "route53:GetCheckerIpRanges",
        "route53:GetGeoLocation",
        "route53:GetHealthCheck",
        "route53:GetHealthCheckCount",
        "route53:GetHealthCheckLastFailureReason",
        "route53:GetHealthCheckStatus",
        "route53:GetHostedZone",
        "route53:GetHostedZoneCount",
        "route53:GetHostedZoneLimit",
        "route53:GetQueryLoggingConfig",
        "route53:GetReusableDelegationSet",
        "route53:GetReusableDelegationSetLimit",
        "route53:GetTrafficPolicy",
        "route53:GetTrafficPolicyInstance",
        "route53:GetTrafficPolicyInstanceCount",
        "route53:ListGeoLocations",
        "route53:ListHealthChecks",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ListQueryLoggingConfigs",
        "route53:ListResourceRecordSets",
        "route53:ListReusableDelegationSets",
        "route53:ListTagsForResource",
        "route53:ListTagsForResources",
        "route53:ListTrafficPolicies",
        "route53:ListTrafficPolicyInstances",
        "route53:ListTrafficPolicyInstancesByHostedZone",
        "route53:ListTrafficPolicyInstancesByPolicy",
        "route53:ListTrafficPolicyVersions",
        "route53:ListVPCAssociationAuthorizations",
        "route53:TestDNSAnswer",
        "route53:UpdateHealthCheck",
        "route53:UpdateHostedZoneComment",
        "route53:UpdateTrafficPolicyComment",
        "route53:UpdateTrafficPolicyInstance",
        "route53domains:CheckDomainAvailability",
        "route53domains:DeleteTagsForDomain",
        "route53domains:DisableDomainAutoRenew",
        "route53domains:DisableDomainTransferLock",
        "route53domains:EnableDomainAutoRenew",
        "route53domains:EnableDomainTransferLock",
        "route53domains:GetContactReachabilityStatus",
        "route53domains:GetDomainDetail",
        "route53domains:GetDomainSuggestions",
        "route53domains:GetOperationDetail",
        "route53domains:ListDomains",
        "route53domains:ListOperations",
        "route53domains:ListTagsForDomain",
        "route53domains:RegisterDomain",
        "route53domains:RenewDomain",
        "route53domains:ResendContactReachabilityEmail",
        "route53domains:RetrieveDomainAuthCode",
        "route53domains:TransferDomain",
        "route53domains:UpdateDomainContact",
        "route53domains:UpdateDomainContactPrivacy",
        "route53domains:UpdateDomainNameservers",
        "route53domains:UpdateTagsForDomain",
        "route53domains:ViewBilling",
        "route53resolver:AssociateResolverEndpointIpAddress",
        "route53resolver:AssociateResolverRule",
        "route53resolver:CreateResolverEndpoint",
        "route53resolver:CreateResolverRule",
        "route53resolver:DeleteResolverEndpoint",
        "route53resolver:DeleteResolverRule",
        "route53resolver:DisassociateResolverEndpointIpAddress",
        "route53resolver:DisassociateResolverRule",
        "route53resolver:GetResolverEndpoint",
        "route53resolver:GetResolverRule",
        "route53resolver:GetResolverRuleAssociation",
        "route53resolver:GetResolverRulePolicy",
        "route53resolver:ListResolverEndpointIpAddresses",
        "route53resolver:ListResolverEndpoints",
        "route53resolver:ListResolverRuleAssociations",
        "route53resolver:ListResolverRules",
        "route53resolver:ListTagsForResource",
        "route53resolver:PutResolverRulePolicy",
        "route53resolver:TagResource",
        "route53resolver:UntagResource",
        "route53resolver:UpdateResolverEndpoint",
        "route53resolver:UpdateResolverRule",
        "s3:AbortMultipartUpload",
        "s3:BypassGovernanceRetention",
        "s3:CreateAccessPoint",
        "s3:CreateBucket",
        "s3:CreateJob",
        "s3:DeleteAccessPoint",
        "s3:DeleteAccessPointPolicy",
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:DeleteBucketWebsite",
        "s3:DeleteObject",
        "s3:DeleteObjectTagging",
        "s3:DeleteObjectVersion",
        "s3:DeleteObjectVersionTagging",
        "s3:DescribeJob",
        "s3:GetAccelerateConfiguration",
        "s3:GetAccessPoint",
        "s3:GetAccessPointPolicy",
        "s3:GetAccessPointPolicyStatus",
        "s3:GetAccountPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLocation",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketRequestPayment",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetObject",
        "s3:GetObjectAcl",
        "s3:GetObjectLegalHold",
        "s3:GetObjectRetention",
        "s3:GetObjectTagging",
        "s3:GetObjectTorrent",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectVersionForReplication",
        "s3:GetObjectVersionTagging",
        "s3:GetObjectVersionTorrent",
        "s3:GetReplicationConfiguration",
        "s3:ListAccessPoints",
        "s3:ListAllMyBuckets",
        "s3:ListBucket",
        "s3:ListBucketMultipartUploads",
        "s3:ListBucketVersions",
        "s3:ListJobs",
        "s3:ListMultipartUploadParts",
        "s3:ObjectOwnerOverrideToBucketOwner",
        "s3:PutAccelerateConfiguration",
        "s3:PutAccessPointPolicy",
        "s3:PutAccountPublicAccessBlock",
        "s3:PutAnalyticsConfiguration",
        "s3:PutBucketAcl",
        "s3:PutBucketCORS",
        "s3:PutBucketLogging",
        "s3:PutBucketNotification",
        "s3:PutBucketObjectLockConfiguration",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketRequestPayment",
        "s3:PutBucketTagging",
        "s3:PutBucketVersioning",
        "s3:PutBucketWebsite",
        "s3:PutEncryptionConfiguration",
        "s3:PutInventoryConfiguration",
        "s3:PutLifecycleConfiguration",
        "s3:PutMetricsConfiguration",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionAcl",
        "s3:PutObjectVersionTagging",
        "s3:PutReplicationConfiguration",
        "s3:ReplicateDelete",
        "s3:ReplicateObject",
        "s3:ReplicateTags",
        "s3:RestoreObject",
        "s3:UpdateJobPriority",
        "s3:UpdateJobStatus",
        "sagemaker:AddTags",
        "sagemaker:AssociateTrialComponent",
        "sagemaker:BatchGetMetrics",
        "sagemaker:BatchPutMetrics",
        "sagemaker:CreateAlgorithm",
        "sagemaker:CreateApp",
        "sagemaker:CreateAutoMLJob",
        "sagemaker:CreateCodeRepository",
        "sagemaker:CreateCompilationJob",
        "sagemaker:CreateDomain",
        "sagemaker:CreateEndpoint",
        "sagemaker:CreateEndpointConfig",
        "sagemaker:CreateExperiment",
        "sagemaker:CreateFlowDefinition",
        "sagemaker:CreateHumanTaskUi",
        "sagemaker:CreateHyperParameterTuningJob",
        "sagemaker:CreateLabelingJob",
        "sagemaker:CreateModel",
        "sagemaker:CreateModelPackage",
        "sagemaker:CreateMonitoringSchedule",
        "sagemaker:CreateNotebookInstance",
        "sagemaker:CreateNotebookInstanceLifecycleConfig",
        "sagemaker:CreatePresignedDomainUrl",
        "sagemaker:CreatePresignedNotebookInstanceUrl",
        "sagemaker:CreateProcessingJob",
        "sagemaker:CreateTrainingJob",
        "sagemaker:CreateTransformJob",
        "sagemaker:CreateTrial",
        "sagemaker:CreateTrialComponent",
        "sagemaker:CreateUserProfile",
        "sagemaker:CreateWorkteam",
        "sagemaker:DeleteAlgorithm",
        "sagemaker:DeleteApp",
        "sagemaker:DeleteCodeRepository",
        "sagemaker:DeleteDomain",
        "sagemaker:DeleteEndpoint",
        "sagemaker:DeleteEndpointConfig",
        "sagemaker:DeleteExperiment",
        "sagemaker:DeleteFlowDefinition",
        "sagemaker:DeleteHumanLoop",
        "sagemaker:DeleteModel",
        "sagemaker:DeleteModelPackage",
        "sagemaker:DeleteMonitoringSchedule",
        "sagemaker:DeleteNotebookInstance",
        "sagemaker:DeleteNotebookInstanceLifecycleConfig",
        "sagemaker:DeleteTags",
        "sagemaker:DeleteTrial",
        "sagemaker:DeleteTrialComponent",
        "sagemaker:DeleteUserProfile",
        "sagemaker:DeleteWorkteam",
        "sagemaker:DescribeAlgorithm",
        "sagemaker:DescribeApp",
        "sagemaker:DescribeAutoMLJob",
        "sagemaker:DescribeCodeRepository",
        "sagemaker:DescribeCompilationJob",
        "sagemaker:DescribeDomain",
        "sagemaker:DescribeEndpoint",
        "sagemaker:DescribeEndpointConfig",
        "sagemaker:DescribeExperiment",
        "sagemaker:DescribeFlowDefinition",
        "sagemaker:DescribeHumanLoop",
        "sagemaker:DescribeHumanTaskUi",
        "sagemaker:DescribeHyperParameterTuningJob",
        "sagemaker:DescribeLabelingJob",
        "sagemaker:DescribeModel",
        "sagemaker:DescribeModelPackage",
        "sagemaker:DescribeMonitoringSchedule",
        "sagemaker:DescribeNotebookInstance",
        "sagemaker:DescribeNotebookInstanceLifecycleConfig",
        "sagemaker:DescribeProcessingJob",
        "sagemaker:DescribeSubscribedWorkteam",
        "sagemaker:DescribeTrainingJob",
        "sagemaker:DescribeTransformJob",
        "sagemaker:DescribeTrial",
        "sagemaker:DescribeTrialComponent",
        "sagemaker:DescribeUserProfile",
        "sagemaker:DescribeWorkforce",
        "sagemaker:DescribeWorkteam",
        "sagemaker:DisassociateTrialComponent",
        "sagemaker:GetSearchSuggestions",
        "sagemaker:InvokeEndpoint",
        "sagemaker:ListAlgorithms",
        "sagemaker:ListApps",
        "sagemaker:ListAutoMLJobs",
        "sagemaker:ListCandidatesForAutoMLJob",
        "sagemaker:ListCodeRepositories",
        "sagemaker:ListCompilationJobs",
        "sagemaker:ListDomains",
        "sagemaker:ListEndpointConfigs",
        "sagemaker:ListEndpoints",
        "sagemaker:ListExperiments",
        "sagemaker:ListFlowDefinitions",
        "sagemaker:ListHumanLoops",
        "sagemaker:ListHumanTaskUis",
        "sagemaker:ListHyperParameterTuningJobs",
        "sagemaker:ListLabelingJobs",
        "sagemaker:ListLabelingJobsForWorkteam",
        "sagemaker:ListModelPackages",
        "sagemaker:ListModels",
        "sagemaker:ListMonitoringExecutions",
        "sagemaker:ListMonitoringSchedules",
        "sagemaker:ListNotebookInstanceLifecycleConfigs",
        "sagemaker:ListNotebookInstances",
        "sagemaker:ListProcessingJobs",
        "sagemaker:ListSubscribedWorkteams",
        "sagemaker:ListTags",
        "sagemaker:ListTrainingJobs",
        "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
        "sagemaker:ListTransformJobs",
        "sagemaker:ListTrialComponents",
        "sagemaker:ListTrials",
        "sagemaker:ListUserProfiles",
        "sagemaker:ListWorkteams",
        "sagemaker:RenderUiTemplate",
        "sagemaker:Search",
        "sagemaker:StartHumanLoop",
        "sagemaker:StartMonitoringSchedule",
        "sagemaker:StartNotebookInstance",
        "sagemaker:StopAutoMLJob",
        "sagemaker:StopCompilationJob",
        "sagemaker:StopHumanLoop",
        "sagemaker:StopHyperParameterTuningJob",
        "sagemaker:StopLabelingJob",
        "sagemaker:StopMonitoringSchedule",
        "sagemaker:StopNotebookInstance",
        "sagemaker:StopProcessingJob",
        "sagemaker:StopTrainingJob",
        "sagemaker:StopTransformJob",
        "sagemaker:UpdateCodeRepository",
        "sagemaker:UpdateDomain",
        "sagemaker:UpdateEndpoint",
        "sagemaker:UpdateEndpointWeightsAndCapacities",
        "sagemaker:UpdateExperiment",
        "sagemaker:UpdateMonitoringSchedule",
        "sagemaker:UpdateNotebookInstance",
        "sagemaker:UpdateNotebookInstanceLifecycleConfig",
        "sagemaker:UpdateTrial",
        "sagemaker:UpdateTrialComponent",
        "sagemaker:UpdateUserProfile",
        "sagemaker:UpdateWorkforce",
        "sagemaker:UpdateWorkteam",
        "savingsplans:CreateSavingsPlan",
        "savingsplans:DescribeSavingsPlanRates",
        "savingsplans:DescribeSavingsPlans",
        "savingsplans:DescribeSavingsPlansOfferingRates",
        "savingsplans:DescribeSavingsPlansOfferings",
        "savingsplans:ListTagsForResource",
        "savingsplans:TagResource",
        "savingsplans:UntagResource",
        "schemas:CreateDiscoverer",
        "schemas:CreateRegistry",
        "schemas:CreateSchema",
        "schemas:DeleteDiscoverer",
        "schemas:DeleteRegistry",
        "schemas:DeleteResourcePolicy",
        "schemas:DeleteSchema",
        "schemas:DeleteSchemaVersion",
        "schemas:DescribeCodeBinding",
        "schemas:DescribeDiscoverer",
        "schemas:DescribeRegistry",
        "schemas:DescribeSchema",
        "schemas:GetCodeBindingSource",
        "schemas:GetDiscoveredSchema",
        "schemas:GetResourcePolicy",
        "schemas:ListDiscoverers",
        "schemas:ListRegistries",
        "schemas:ListSchemaVersions",
        "schemas:ListSchemas",
        "schemas:ListTagsForResource",
        "schemas:PutCodeBinding",
        "schemas:PutResourcePolicy",
        "schemas:SearchSchemas",
        "schemas:StartDiscoverer",
        "schemas:StopDiscoverer",
        "schemas:TagResource",
        "schemas:UntagResource",
        "schemas:UpdateDiscoverer",
        "schemas:UpdateRegistry",
        "schemas:UpdateSchema",
        "sdb:BatchDeleteAttributes",
        "sdb:BatchPutAttributes",
        "sdb:CreateDomain",
        "sdb:DeleteAttributes",
        "sdb:DeleteDomain",
        "sdb:DomainMetadata",
        "sdb:GetAttributes",
        "sdb:ListDomains",
        "sdb:PutAttributes",
        "sdb:Select",
        "secretsmanager:CancelRotateSecret",
        "secretsmanager:CreateSecret",
        "secretsmanager:DeleteResourcePolicy",
        "secretsmanager:DeleteSecret",
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetRandomPassword",
        "secretsmanager:GetResourcePolicy",
        "secretsmanager:GetSecretValue",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:ListSecrets",
        "secretsmanager:PutResourcePolicy",
        "secretsmanager:PutSecretValue",
        "secretsmanager:RestoreSecret",
        "secretsmanager:RotateSecret",
        "secretsmanager:TagResource",
        "secretsmanager:UntagResource",
        "secretsmanager:UpdateSecret",
        "secretsmanager:UpdateSecretVersionStage",
        "securityhub:AcceptInvitation",
        "securityhub:BatchDisableStandards",
        "securityhub:BatchEnableStandards",
        "securityhub:BatchImportFindings",
        "securityhub:BatchUpdateFindings",
        "securityhub:CreateActionTarget",
        "securityhub:CreateInsight",
        "securityhub:CreateMembers",
        "securityhub:DeclineInvitations",
        "securityhub:DeleteActionTarget",
        "securityhub:DeleteInsight",
        "securityhub:DeleteInvitations",
        "securityhub:DeleteMembers",
        "securityhub:DescribeActionTargets",
        "securityhub:DescribeHub",
        "securityhub:DescribeProducts",
        "securityhub:DescribeStandards",
        "securityhub:DescribeStandardsControls",
        "securityhub:DisableImportFindingsForProduct",
        "securityhub:DisableSecurityHub",
        "securityhub:DisassociateFromMasterAccount",
        "securityhub:DisassociateMembers",
        "securityhub:EnableImportFindingsForProduct",
        "securityhub:EnableSecurityHub",
        "securityhub:GetEnabledStandards",
        "securityhub:GetFindings",
        "securityhub:GetInsightResults",
        "securityhub:GetInsights",
        "securityhub:GetInvitationsCount",
        "securityhub:GetMasterAccount",
        "securityhub:GetMembers",
        "securityhub:InviteMembers",
        "securityhub:ListEnabledProductsForImport",
        "securityhub:ListInvitations",
        "securityhub:ListMembers",
        "securityhub:ListTagsForResource",
        "securityhub:TagResource",
        "securityhub:UntagResource",
        "securityhub:UpdateActionTarget",
        "securityhub:UpdateFindings",
        "securityhub:UpdateInsight",
        "securityhub:UpdateStandardsControl",
        "serverlessrepo:CreateApplication",
        "serverlessrepo:CreateApplicationVersion",
        "serverlessrepo:CreateCloudFormationChangeSet",
        "serverlessrepo:CreateCloudFormationTemplate",
        "serverlessrepo:DeleteApplication",
        "serverlessrepo:GetApplication",
        "serverlessrepo:GetApplicationPolicy",
        "serverlessrepo:GetCloudFormationTemplate",
        "serverlessrepo:ListApplicationDependencies",
        "serverlessrepo:ListApplicationVersions",
        "serverlessrepo:ListApplications",
        "serverlessrepo:PutApplicationPolicy",
        "serverlessrepo:SearchApplications",
        "serverlessrepo:UnshareApplication",
        "serverlessrepo:UpdateApplication",
        "servicecatalog:AcceptPortfolioShare",
        "servicecatalog:AssociateBudgetWithResource",
        "servicecatalog:AssociatePrincipalWithPortfolio",
        "servicecatalog:AssociateProductWithPortfolio",
        "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
        "servicecatalog:AssociateTagOptionWithResource",
        "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
        "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
        "servicecatalog:CopyProduct",
        "servicecatalog:CreateConstraint",
        "servicecatalog:CreatePortfolio",
        "servicecatalog:CreatePortfolioShare",
        "servicecatalog:CreateProduct",
        "servicecatalog:CreateProvisionedProductPlan",
        "servicecatalog:CreateProvisioningArtifact",
        "servicecatalog:CreateServiceAction",
        "servicecatalog:CreateTagOption",
        "servicecatalog:DeleteConstraint",
        "servicecatalog:DeletePortfolio",
        "servicecatalog:DeletePortfolioShare",
        "servicecatalog:DeleteProduct",
        "servicecatalog:DeleteProvisionedProductPlan",
        "servicecatalog:DeleteProvisioningArtifact",
        "servicecatalog:DeleteServiceAction",
        "servicecatalog:DeleteTagOption",
        "servicecatalog:DescribeConstraint",
        "servicecatalog:DescribeCopyProductStatus",
        "servicecatalog:DescribePortfolio",
        "servicecatalog:DescribePortfolioShareStatus",
        "servicecatalog:DescribeProduct",
        "servicecatalog:DescribeProductAsAdmin",
        "servicecatalog:DescribeProductView",
        "servicecatalog:DescribeProvisionedProduct",
        "servicecatalog:DescribeProvisionedProductPlan",
        "servicecatalog:DescribeProvisioningArtifact",
        "servicecatalog:DescribeProvisioningParameters",
        "servicecatalog:DescribeRecord",
        "servicecatalog:DescribeServiceAction",
        "servicecatalog:DescribeServiceActionExecutionParameters",
        "servicecatalog:DescribeTagOption",
        "servicecatalog:DisableAWSOrganizationsAccess",
        "servicecatalog:DisassociateBudgetFromResource",
        "servicecatalog:DisassociatePrincipalFromPortfolio",
        "servicecatalog:DisassociateProductFromPortfolio",
        "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
        "servicecatalog:DisassociateTagOptionFromResource",
        "servicecatalog:EnableAWSOrganizationsAccess",
        "servicecatalog:ExecuteProvisionedProductPlan",
        "servicecatalog:ExecuteProvisionedProductServiceAction",
        "servicecatalog:GetAWSOrganizationsAccessStatus",
        "servicecatalog:ListAcceptedPortfolioShares",
        "servicecatalog:ListBudgetsForResource",
        "servicecatalog:ListConstraintsForPortfolio",
        "servicecatalog:ListLaunchPaths",
        "servicecatalog:ListOrganizationPortfolioAccess",
        "servicecatalog:ListPortfolioAccess",
        "servicecatalog:ListPortfolios",
        "servicecatalog:ListPortfoliosForProduct",
        "servicecatalog:ListPrincipalsForPortfolio",
        "servicecatalog:ListProvisionedProductPlans",
        "servicecatalog:ListProvisioningArtifacts",
        "servicecatalog:ListProvisioningArtifactsForServiceAction",
        "servicecatalog:ListRecordHistory",
        "servicecatalog:ListResourcesForTagOption",
        "servicecatalog:ListServiceActions",
        "servicecatalog:ListServiceActionsForProvisioningArtifact",
        "servicecatalog:ListStackInstancesForProvisionedProduct",
        "servicecatalog:ListTagOptions",
        "servicecatalog:ProvisionProduct",
        "servicecatalog:RejectPortfolioShare",
        "servicecatalog:ScanProvisionedProducts",
        "servicecatalog:SearchProducts",
        "servicecatalog:SearchProductsAsAdmin",
        "servicecatalog:SearchProvisionedProducts",
        "servicecatalog:TerminateProvisionedProduct",
        "servicecatalog:UpdateConstraint",
        "servicecatalog:UpdatePortfolio",
        "servicecatalog:UpdateProduct",
        "servicecatalog:UpdateProvisionedProduct",
        "servicecatalog:UpdateProvisionedProductProperties",
        "servicecatalog:UpdateProvisioningArtifact",
        "servicecatalog:UpdateServiceAction",
        "servicecatalog:UpdateTagOption",
        "servicediscovery:CreateHttpNamespace",
        "servicediscovery:CreatePrivateDnsNamespace",
        "servicediscovery:CreatePublicDnsNamespace",
        "servicediscovery:CreateService",
        "servicediscovery:DeleteNamespace",
        "servicediscovery:DeleteService",
        "servicediscovery:DeregisterInstance",
        "servicediscovery:DiscoverInstances",
        "servicediscovery:GetInstance",
        "servicediscovery:GetInstancesHealthStatus",
        "servicediscovery:GetNamespace",
        "servicediscovery:GetOperation",
        "servicediscovery:GetService",
        "servicediscovery:ListInstances",
        "servicediscovery:ListNamespaces",
        "servicediscovery:ListOperations",
        "servicediscovery:ListServices",
        "servicediscovery:ListTagsForResource",
        "servicediscovery:RegisterInstance",
        "servicediscovery:TagResource",
        "servicediscovery:UntagResource",
        "servicediscovery:UpdateInstanceCustomHealthStatus",
        "servicediscovery:UpdateService",
        "servicequotas:AssociateServiceQuotaTemplate",
        "servicequotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
        "servicequotas:DisassociateServiceQuotaTemplate",
        "servicequotas:GetAWSDefaultServiceQuota",
        "servicequotas:GetAssociationForServiceQuotaTemplate",
        "servicequotas:GetRequestedServiceQuotaChange",
        "servicequotas:GetServiceQuota",
        "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
        "servicequotas:ListAWSDefaultServiceQuotas",
        "servicequotas:ListRequestedServiceQuotaChangeHistory",
        "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
        "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
        "servicequotas:ListServiceQuotas",
        "servicequotas:ListServices",
        "servicequotas:PutServiceQuotaIncreaseRequestIntoTemplate",
        "servicequotas:RequestServiceQuotaIncrease",
        "ses:CloneReceiptRuleSet",
        "ses:CreateConfigurationSet",
        "ses:CreateConfigurationSetEventDestination",
        "ses:CreateConfigurationSetTrackingOptions",
        "ses:CreateCustomVerificationEmailTemplate",
        "ses:CreateDedicatedIpPool",
        "ses:CreateDeliverabilityTestReport",
        "ses:CreateEmailIdentity",
        "ses:CreateReceiptFilter",
        "ses:CreateReceiptRule",
        "ses:CreateReceiptRuleSet",
        "ses:CreateTemplate",
        "ses:DeleteConfigurationSet",
        "ses:DeleteConfigurationSetEventDestination",
        "ses:DeleteConfigurationSetTrackingOptions",
        "ses:DeleteCustomVerificationEmailTemplate",
        "ses:DeleteDedicatedIpPool",
        "ses:DeleteEmailIdentity",
        "ses:DeleteIdentity",
        "ses:DeleteIdentityPolicy",
        "ses:DeleteReceiptFilter",
        "ses:DeleteReceiptRule",
        "ses:DeleteReceiptRuleSet",
        "ses:DeleteTemplate",
        "ses:DeleteVerifiedEmailAddress",
        "ses:DescribeActiveReceiptRuleSet",
        "ses:DescribeConfigurationSet",
        "ses:DescribeReceiptRule",
        "ses:DescribeReceiptRuleSet",
        "ses:GetAccount",
        "ses:GetAccountSendingEnabled",
        "ses:GetBlacklistReports",
        "ses:GetConfigurationSet",
        "ses:GetConfigurationSetEventDestinations",
        "ses:GetCustomVerificationEmailTemplate",
        "ses:GetDedicatedIp",
        "ses:GetDedicatedIps",
        "ses:GetDeliverabilityDashboardOptions",
        "ses:GetDeliverabilityTestReport",
        "ses:GetDomainStatisticsReport",
        "ses:GetEmailIdentity",
        "ses:GetIdentityDkimAttributes",
        "ses:GetIdentityMailFromDomainAttributes",
        "ses:GetIdentityNotificationAttributes",
        "ses:GetIdentityPolicies",
        "ses:GetIdentityVerificationAttributes",
        "ses:GetSendQuota",
        "ses:GetSendStatistics",
        "ses:GetTemplate",
        "ses:ListConfigurationSets",
        "ses:ListCustomVerificationEmailTemplates",
        "ses:ListDedicatedIpPools",
        "ses:ListDeliverabilityTestReports",
        "ses:ListEmailIdentities",
        "ses:ListIdentities",
        "ses:ListIdentityPolicies",
        "ses:ListReceiptFilters",
        "ses:ListReceiptRuleSets",
        "ses:ListTagsForResource",
        "ses:ListTemplates",
        "ses:ListVerifiedEmailAddresses",
        "ses:PutAccountDedicatedIpWarmupAttributes",
        "ses:PutAccountSendingAttributes",
        "ses:PutConfigurationSetDeliveryOptions",
        "ses:PutConfigurationSetReputationOptions",
        "ses:PutConfigurationSetSendingOptions",
        "ses:PutConfigurationSetTrackingOptions",
        "ses:PutDedicatedIpInPool",
        "ses:PutDedicatedIpWarmupAttributes",
        "ses:PutDeliverabilityDashboardOption",
        "ses:PutEmailIdentityDkimAttributes",
        "ses:PutEmailIdentityFeedbackAttributes",
        "ses:PutEmailIdentityMailFromAttributes",
        "ses:PutIdentityPolicy",
        "ses:ReorderReceiptRuleSet",
        "ses:SendBounce",
        "ses:SendBulkTemplatedEmail",
        "ses:SendCustomVerificationEmail",
        "ses:SendEmail",
        "ses:SendRawEmail",
        "ses:SendTemplatedEmail",
        "ses:SetActiveReceiptRuleSet",
        "ses:SetIdentityDkimEnabled",
        "ses:SetIdentityFeedbackForwardingEnabled",
        "ses:SetIdentityHeadersInNotificationsEnabled",
        "ses:SetIdentityMailFromDomain",
        "ses:SetIdentityNotificationTopic",
        "ses:SetReceiptRulePosition",
        "ses:TagResource",
        "ses:TestRenderTemplate",
        "ses:UntagResource",
        "ses:UpdateAccountSendingEnabled",
        "ses:UpdateConfigurationSetEventDestination",
        "ses:UpdateConfigurationSetReputationMetricsEnabled",
        "ses:UpdateConfigurationSetSendingEnabled",
        "ses:UpdateConfigurationSetTrackingOptions",
        "ses:UpdateCustomVerificationEmailTemplate",
        "ses:UpdateReceiptRule",
        "ses:UpdateTemplate",
        "ses:VerifyDomainDkim",
        "ses:VerifyDomainIdentity",
        "ses:VerifyEmailAddress",
        "ses:VerifyEmailIdentity",
        "shield:AssociateDRTLogBucket",
        "shield:AssociateDRTRole",
        "shield:CreateProtection",
        "shield:CreateSubscription",
        "shield:DeleteProtection",
        "shield:DeleteSubscription",
        "shield:DescribeAttack",
        "shield:DescribeDRTAccess",
        "shield:DescribeEmergencyContactSettings",
        "shield:DescribeProtection",
        "shield:DescribeSubscription",
        "shield:DisassociateDRTLogBucket",
        "shield:DisassociateDRTRole",
        "shield:GetSubscriptionState",
        "shield:ListAttacks",
        "shield:ListProtections",
        "shield:UpdateEmergencyContactSettings",
        "shield:UpdateSubscription",
        "signer:CancelSigningProfile",
        "signer:DescribeSigningJob",
        "signer:GetSigningPlatform",
        "signer:GetSigningProfile",
        "signer:ListSigningJobs",
        "signer:ListSigningPlatforms",
        "signer:ListSigningProfiles",
        "signer:ListTagsForResource",
        "signer:PutSigningProfile",
        "signer:StartSigningJob",
        "signer:TagResource",
        "signer:UntagResource",
        "sms-voice:CreateConfigurationSet",
        "sms-voice:CreateConfigurationSetEventDestination",
        "sms-voice:DeleteConfigurationSet",
        "sms-voice:DeleteConfigurationSetEventDestination",
        "sms-voice:GetConfigurationSetEventDestinations",
        "sms-voice:ListConfigurationSets",
        "sms-voice:SendVoiceMessage",
        "sms-voice:UpdateConfigurationSetEventDestination",
        "sms:CreateApp",
        "sms:CreateReplicationJob",
        "sms:DeleteApp",
        "sms:DeleteAppLaunchConfiguration",
        "sms:DeleteAppReplicationConfiguration",
        "sms:DeleteReplicationJob",
        "sms:DeleteServerCatalog",
        "sms:DisassociateConnector",
        "sms:GenerateChangeSet",
        "sms:GenerateTemplate",
        "sms:GetApp",
        "sms:GetAppLaunchConfiguration",
        "sms:GetAppReplicationConfiguration",
        "sms:GetConnectors",
        "sms:GetMessages",
        "sms:GetReplicationJobs",
        "sms:GetReplicationRuns",
        "sms:GetServers",
        "sms:ImportServerCatalog",
        "sms:LaunchApp",
        "sms:ListApps",
        "sms:PutAppLaunchConfiguration",
        "sms:PutAppReplicationConfiguration",
        "sms:SendMessage",
        "sms:StartAppReplication",
        "sms:StartOnDemandReplicationRun",
        "sms:StopAppReplication",
        "sms:TerminateApp",
        "sms:UpdateApp",
        "sms:UpdateReplicationJob",
        "snowball:CancelCluster",
        "snowball:CancelJob",
        "snowball:CreateAddress",
        "snowball:CreateCluster",
        "snowball:CreateJob",
        "snowball:DescribeAddress",
        "snowball:DescribeAddresses",
        "snowball:DescribeCluster",
        "snowball:DescribeJob",
        "snowball:GetJobManifest",
        "snowball:GetJobUnlockCode",
        "snowball:GetSnowballUsage",
        "snowball:ListClusterJobs",
        "snowball:ListClusters",
        "snowball:ListJobs",
        "snowball:UpdateCluster",
        "snowball:UpdateJob",
        "sns:AddPermission",
        "sns:CheckIfPhoneNumberIsOptedOut",
        "sns:ConfirmSubscription",
        "sns:CreatePlatformApplication",
        "sns:CreatePlatformEndpoint",
        "sns:CreateTopic",
        "sns:DeleteEndpoint",
        "sns:DeletePlatformApplication",
        "sns:DeleteTopic",
        "sns:GetEndpointAttributes",
        "sns:GetPlatformApplicationAttributes",
        "sns:GetSMSAttributes",
        "sns:GetSubscriptionAttributes",
        "sns:GetTopicAttributes",
        "sns:ListEndpointsByPlatformApplication",
        "sns:ListPhoneNumbersOptedOut",
        "sns:ListPlatformApplications",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTagsForResource",
        "sns:ListTopics",
        "sns:OptInPhoneNumber",
        "sns:Publish",
        "sns:RemovePermission",
        "sns:SetEndpointAttributes",
        "sns:SetPlatformApplicationAttributes",
        "sns:SetSubscriptionAttributes",
        "sns:SetTopicAttributes",
        "sns:Subscribe",
        "sns:TagResource",
        "sns:Unsubscribe",
        "sns:UntagResource",
        "sqs:AddPermission",
        "sqs:ChangeMessageVisibility",
        "sqs:ChangeMessageVisibilityBatch",
        "sqs:CreateQueue",
        "sqs:DeleteMessage",
        "sqs:DeleteMessageBatch",
        "sqs:DeleteQueue",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ListDeadLetterSourceQueues",
        "sqs:ListQueueTags",
        "sqs:ListQueues",
        "sqs:PurgeQueue",
        "sqs:ReceiveMessage",
        "sqs:RemovePermission",
        "sqs:SendMessage",
        "sqs:SendMessageBatch",
        "sqs:SetQueueAttributes",
        "sqs:TagQueue",
        "sqs:UntagQueue",
        "ssm:AddTagsToResource",
        "ssm:CancelCommand",
        "ssm:CancelMaintenanceWindowExecution",
        "ssm:CreateActivation",
        "ssm:CreateAssociation",
        "ssm:CreateAssociationBatch",
        "ssm:CreateDocument",
        "ssm:CreateMaintenanceWindow",
        "ssm:CreateOpsItem",
        "ssm:CreatePatchBaseline",
        "ssm:CreateResourceDataSync",
        "ssm:DeleteActivation",
        "ssm:DeleteAssociation",
        "ssm:DeleteDocument",
        "ssm:DeleteInventory",
        "ssm:DeleteMaintenanceWindow",
        "ssm:DeleteParameter",
        "ssm:DeleteParameters",
        "ssm:DeletePatchBaseline",
        "ssm:DeleteResourceDataSync",
        "ssm:DeregisterManagedInstance",
        "ssm:DeregisterPatchBaselineForPatchGroup",
        "ssm:DeregisterTargetFromMaintenanceWindow",
        "ssm:DeregisterTaskFromMaintenanceWindow",
        "ssm:DescribeActivations",
        "ssm:DescribeAssociation",
        "ssm:DescribeAssociationExecutionTargets",
        "ssm:DescribeAssociationExecutions",
        "ssm:DescribeAutomationExecutions",
        "ssm:DescribeAutomationStepExecutions",
        "ssm:DescribeAvailablePatches",
        "ssm:DescribeDocument",
        "ssm:DescribeDocumentParameters",
        "ssm:DescribeDocumentPermission",
        "ssm:DescribeEffectiveInstanceAssociations",
        "ssm:DescribeEffectivePatchesForPatchBaseline",
        "ssm:DescribeInstanceAssociationsStatus",
        "ssm:DescribeInstanceInformation",
        "ssm:DescribeInstancePatchStates",
        "ssm:DescribeInstancePatchStatesForPatchGroup",
        "ssm:DescribeInstancePatches",
        "ssm:DescribeInstanceProperties",
        "ssm:DescribeInventoryDeletions",
        "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
        "ssm:DescribeMaintenanceWindowExecutionTasks",
        "ssm:DescribeMaintenanceWindowExecutions",
        "ssm:DescribeMaintenanceWindowSchedule",
        "ssm:DescribeMaintenanceWindowTargets",
        "ssm:DescribeMaintenanceWindowTasks",
        "ssm:DescribeMaintenanceWindows",
        "ssm:DescribeMaintenanceWindowsForTarget",
        "ssm:DescribeOpsItems",
        "ssm:DescribeParameters",
        "ssm:DescribePatchBaselines",
        "ssm:DescribePatchGroupState",
        "ssm:DescribePatchGroups",
        "ssm:DescribePatchProperties",
        "ssm:DescribeSessions",
        "ssm:GetAutomationExecution",
        "ssm:GetCommandInvocation",
        "ssm:GetConnectionStatus",
        "ssm:GetDefaultPatchBaseline",
        "ssm:GetDeployablePatchSnapshotForInstance",
        "ssm:GetDocument",
        "ssm:GetInventory",
        "ssm:GetInventorySchema",
        "ssm:GetMaintenanceWindow",
        "ssm:GetMaintenanceWindowExecution",
        "ssm:GetMaintenanceWindowExecutionTask",
        "ssm:GetMaintenanceWindowExecutionTaskInvocation",
        "ssm:GetMaintenanceWindowTask",
        "ssm:GetManifest",
        "ssm:GetOpsItem",
        "ssm:GetOpsSummary",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters",
        "ssm:GetParametersByPath",
        "ssm:GetPatchBaseline",
        "ssm:GetPatchBaselineForPatchGroup",
        "ssm:GetServiceSetting",
        "ssm:LabelParameterVersion",
        "ssm:ListAssociationVersions",
        "ssm:ListAssociations",
        "ssm:ListCommandInvocations",
        "ssm:ListCommands",
        "ssm:ListComplianceItems",
        "ssm:ListComplianceSummaries",
        "ssm:ListDocumentVersions",
        "ssm:ListDocuments",
        "ssm:ListInstanceAssociations",
        "ssm:ListInventoryEntries",
        "ssm:ListResourceComplianceSummaries",
        "ssm:ListResourceDataSync",
        "ssm:ListTagsForResource",
        "ssm:ModifyDocumentPermission",
        "ssm:PutComplianceItems",
        "ssm:PutConfigurePackageResult",
        "ssm:PutInventory",
        "ssm:PutParameter",
        "ssm:RegisterDefaultPatchBaseline",
        "ssm:RegisterPatchBaselineForPatchGroup",
        "ssm:RegisterTargetWithMaintenanceWindow",
        "ssm:RegisterTaskWithMaintenanceWindow",
        "ssm:RemoveTagsFromResource",
        "ssm:ResetServiceSetting",
        "ssm:ResumeSession",
        "ssm:SendAutomationSignal",
        "ssm:SendCommand",
        "ssm:StartAssociationsOnce",
        "ssm:StartAutomationExecution",
        "ssm:StartSession",
        "ssm:StopAutomationExecution",
        "ssm:TerminateSession",
        "ssm:UpdateAssociation",
        "ssm:UpdateAssociationStatus",
        "ssm:UpdateDocument",
        "ssm:UpdateDocumentDefaultVersion",
        "ssm:UpdateInstanceAssociationStatus",
        "ssm:UpdateInstanceInformation",
        "ssm:UpdateMaintenanceWindow",
        "ssm:UpdateMaintenanceWindowTarget",
        "ssm:UpdateMaintenanceWindowTask",
        "ssm:UpdateManagedInstanceRole",
        "ssm:UpdateOpsItem",
        "ssm:UpdatePatchBaseline",
        "ssm:UpdateResourceDataSync",
        "ssm:UpdateServiceSetting",
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel",
        "sso-directory:AddMemberToGroup",
        "sso-directory:CompleteVirtualMfaDeviceRegistration",
        "sso-directory:CreateAlias",
        "sso-directory:CreateBearerToken",
        "sso-directory:CreateExternalIdPConfigurationForDirectory",
        "sso-directory:CreateGroup",
        "sso-directory:CreateProvisioningTenant",
        "sso-directory:CreateUser",
        "sso-directory:DeleteBearerToken",
        "sso-directory:DeleteExternalIdPConfigurationForDirectory",
        "sso-directory:DeleteGroup",
        "sso-directory:DeleteMfaDeviceForUser",
        "sso-directory:DeleteProvisioningTenant",
        "sso-directory:DeleteUser",
        "sso-directory:DescribeDirectory",
        "sso-directory:DescribeGroups",
        "sso-directory:DescribeUsers",
        "sso-directory:DisableExternalIdPConfigurationForDirectory",
        "sso-directory:DisableUser",
        "sso-directory:EnableExternalIdPConfigurationForDirectory",
        "sso-directory:EnableUser",
        "sso-directory:GetAWSSPConfigurationForDirectory",
        "sso-directory:ListBearerTokens",
        "sso-directory:ListExternalIdPConfigurationsForDirectory",
        "sso-directory:ListGroupsForUser",
        "sso-directory:ListMembersInGroup",
        "sso-directory:ListMfaDevicesForUser",
        "sso-directory:ListProvisioningTenants",
        "sso-directory:RemoveMemberFromGroup",
        "sso-directory:SearchGroups",
        "sso-directory:SearchUsers",
        "sso-directory:StartVirtualMfaDeviceRegistration",
        "sso-directory:UpdateExternalIdPConfigurationForDirectory",
        "sso-directory:UpdateGroup",
        "sso-directory:UpdatePassword",
        "sso-directory:UpdateUser",
        "sso-directory:VerifyEmail",
        "sso:AssociateDirectory",
        "sso:AssociateProfile",
        "sso:CreateApplicationInstance",
        "sso:CreateApplicationInstanceCertificate",
        "sso:CreateManagedApplicationInstance",
        "sso:CreatePermissionSet",
        "sso:CreateProfile",
        "sso:CreateTrust",
        "sso:DeleteApplicationInstance",
        "sso:DeleteApplicationInstanceCertificate",
        "sso:DeleteManagedApplicationInstance",
        "sso:DeletePermissionSet",
        "sso:DeletePermissionsPolicy",
        "sso:DeleteProfile",
        "sso:DescribePermissionsPolicies",
        "sso:DescribeRegisteredRegions",
        "sso:DisassociateDirectory",
        "sso:DisassociateProfile",
        "sso:GetApplicationInstance",
        "sso:GetApplicationTemplate",
        "sso:GetManagedApplicationInstance",
        "sso:GetMfaDeviceManagementForDirectory",
        "sso:GetPermissionSet",
        "sso:GetPermissionsPolicy",
        "sso:GetProfile",
        "sso:GetSSOStatus",
        "sso:GetSharedSsoConfiguration",
        "sso:GetSsoConfiguration",
        "sso:GetTrust",
        "sso:ImportApplicationInstanceServiceProviderMetadata",
        "sso:ListApplicationInstanceCertificates",
        "sso:ListApplicationInstances",
        "sso:ListApplicationTemplates",
        "sso:ListApplications",
        "sso:ListDirectoryAssociations",
        "sso:ListPermissionSets",
        "sso:ListProfileAssociations",
        "sso:ListProfiles",
        "sso:PutMfaDeviceManagementForDirectory",
        "sso:PutPermissionsPolicy",
        "sso:StartSSO",
        "sso:UpdateApplicationInstanceActiveCertificate",
        "sso:UpdateApplicationInstanceDisplayData",
        "sso:UpdateApplicationInstanceResponseConfiguration",
        "sso:UpdateApplicationInstanceResponseSchemaConfiguration",
        "sso:UpdateApplicationInstanceSecurityConfiguration",
        "sso:UpdateApplicationInstanceServiceProviderConfiguration",
        "sso:UpdateApplicationInstanceStatus",
        "sso:UpdateDirectoryAssociation",
        "sso:UpdateManagedApplicationInstanceStatus",
        "sso:UpdatePermissionSet",
        "sso:UpdateProfile",
        "sso:UpdateSSOConfiguration",
        "sso:UpdateTrust",
        "states:CreateActivity",
        "states:CreateStateMachine",
        "states:DeleteActivity",
        "states:DeleteStateMachine",
        "states:DescribeActivity",
        "states:DescribeExecution",
        "states:DescribeStateMachine",
        "states:DescribeStateMachineForExecution",
        "states:GetActivityTask",
        "states:GetExecutionHistory",
        "states:ListActivities",
        "states:ListExecutions",
        "states:ListStateMachines",
        "states:ListTagsForResource",
        "states:SendTaskFailure",
        "states:SendTaskHeartbeat",
        "states:SendTaskSuccess",
        "states:StartExecution",
        "states:StopExecution",
        "states:TagResource",
        "states:UntagResource",
        "states:UpdateStateMachine",
        "storagegateway:ActivateGateway",
        "storagegateway:AddCache",
        "storagegateway:AddTagsToResource",
        "storagegateway:AddUploadBuffer",
        "storagegateway:AddWorkingStorage",
        "storagegateway:AttachVolume",
        "storagegateway:CancelArchival",
        "storagegateway:CancelRetrieval",
        "storagegateway:CreateCachediSCSIVolume",
        "storagegateway:CreateNFSFileShare",
        "storagegateway:CreateSMBFileShare",
        "storagegateway:CreateSnapshot",
        "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
        "storagegateway:CreateStorediSCSIVolume",
        "storagegateway:CreateTapeWithBarcode",
        "storagegateway:CreateTapes",
        "storagegateway:DeleteBandwidthRateLimit",
        "storagegateway:DeleteChapCredentials",
        "storagegateway:DeleteFileShare",
        "storagegateway:DeleteGateway",
        "storagegateway:DeleteSnapshotSchedule",
        "storagegateway:DeleteTape",
        "storagegateway:DeleteTapeArchive",
        "storagegateway:DeleteVolume",
        "storagegateway:DescribeBandwidthRateLimit",
        "storagegateway:DescribeCache",
        "storagegateway:DescribeCachediSCSIVolumes",
        "storagegateway:DescribeChapCredentials",
        "storagegateway:DescribeGatewayInformation",
        "storagegateway:DescribeMaintenanceStartTime",
        "storagegateway:DescribeNFSFileShares",
        "storagegateway:DescribeSMBFileShares",
        "storagegateway:DescribeSMBSettings",
        "storagegateway:DescribeSnapshotSchedule",
        "storagegateway:DescribeStorediSCSIVolumes",
        "storagegateway:DescribeTapeArchives",
        "storagegateway:DescribeTapeRecoveryPoints",
        "storagegateway:DescribeTapes",
        "storagegateway:DescribeUploadBuffer",
        "storagegateway:DescribeVTLDevices",
        "storagegateway:DescribeWorkingStorage",
        "storagegateway:DetachVolume",
        "storagegateway:DisableGateway",
        "storagegateway:JoinDomain",
        "storagegateway:ListFileShares",
        "storagegateway:ListGateways",
        "storagegateway:ListLocalDisks",
        "storagegateway:ListTagsForResource",
        "storagegateway:ListTapes",
        "storagegateway:ListVolumeInitiators",
        "storagegateway:ListVolumeRecoveryPoints",
        "storagegateway:ListVolumes",
        "storagegateway:NotifyWhenUploaded",
        "storagegateway:RefreshCache",
        "storagegateway:RemoveTagsFromResource",
        "storagegateway:ResetCache",
        "storagegateway:RetrieveTapeArchive",
        "storagegateway:RetrieveTapeRecoveryPoint",
        "storagegateway:SetLocalConsolePassword",
        "storagegateway:SetSMBGuestPassword",
        "storagegateway:ShutdownGateway",
        "storagegateway:StartGateway",
        "storagegateway:UpdateBandwidthRateLimit",
        "storagegateway:UpdateChapCredentials",
        "storagegateway:UpdateGatewayInformation",
        "storagegateway:UpdateGatewaySoftwareNow",
        "storagegateway:UpdateMaintenanceStartTime",
        "storagegateway:UpdateNFSFileShare",
        "storagegateway:UpdateSMBFileShare",
        "storagegateway:UpdateSnapshotSchedule",
        "storagegateway:UpdateVTLDeviceType",
        "sts:AssumeRole",
        "sts:AssumeRoleWithSAML",
        "sts:AssumeRoleWithWebIdentity",
        "sts:DecodeAuthorizationMessage",
        "sts:GetAccessKeyInfo",
        "sts:GetCallerIdentity",
        "sts:GetFederationToken",
        "sts:GetServiceBearerToken",
        "sts:GetSessionToken",
        "sts:TagSession",
        "sumerian:Login",
        "sumerian:ViewRelease",
        "support:AddAttachmentsToSet",
        "support:AddCommunicationToCase",
        "support:CreateCase",
        "support:DescribeAttachment",
        "support:DescribeCaseAttributes",
        "support:DescribeCases",
        "support:DescribeCommunications",
        "support:DescribeIssueTypes",
        "support:DescribeServices",
        "support:DescribeSeverityLevels",
        "support:DescribeSupportLevel",
        "support:DescribeTrustedAdvisorCheckRefreshStatuses",
        "support:DescribeTrustedAdvisorCheckResult",
        "support:DescribeTrustedAdvisorCheckSummaries",
        "support:DescribeTrustedAdvisorChecks",
        "support:InitiateCallForCase",
        "support:InitiateChatForCase",
        "support:PutCaseAttributes",
        "support:RateCaseCommunication",
        "support:RefreshTrustedAdvisorCheck",
        "support:ResolveCase",
        "support:SearchForCases",
        "swf:CancelTimer",
        "swf:CancelWorkflowExecution",
        "swf:CompleteWorkflowExecution",
        "swf:ContinueAsNewWorkflowExecution",
        "swf:CountClosedWorkflowExecutions",
        "swf:CountOpenWorkflowExecutions",
        "swf:CountPendingActivityTasks",
        "swf:CountPendingDecisionTasks",
        "swf:DeprecateActivityType",
        "swf:DeprecateDomain",
        "swf:DeprecateWorkflowType",
        "swf:DescribeActivityType",
        "swf:DescribeDomain",
        "swf:DescribeWorkflowExecution",
        "swf:DescribeWorkflowType",
        "swf:FailWorkflowExecution",
        "swf:GetWorkflowExecutionHistory",
        "swf:ListActivityTypes",
        "swf:ListClosedWorkflowExecutions",
        "swf:ListDomains",
        "swf:ListOpenWorkflowExecutions",
        "swf:ListTagsForResource",
        "swf:ListWorkflowTypes",
        "swf:PollForActivityTask",
        "swf:PollForDecisionTask",
        "swf:RecordActivityTaskHeartbeat",
        "swf:RecordMarker",
        "swf:RegisterActivityType",
        "swf:RegisterDomain",
        "swf:RegisterWorkflowType",
        "swf:RequestCancelActivityTask",
        "swf:RequestCancelExternalWorkflowExecution",
        "swf:RequestCancelWorkflowExecution",
        "swf:RespondActivityTaskCanceled",
        "swf:RespondActivityTaskCompleted",
        "swf:RespondActivityTaskFailed",
        "swf:RespondDecisionTaskCompleted",
        "swf:ScheduleActivityTask",
        "swf:SignalExternalWorkflowExecution",
        "swf:SignalWorkflowExecution",
        "swf:StartChildWorkflowExecution",
        "swf:StartTimer",
        "swf:StartWorkflowExecution",
        "swf:TagResource",
        "swf:TerminateWorkflowExecution",
        "swf:UntagResource",
        "synthetics:CreateCanary",
        "synthetics:DeleteCanary",
        "synthetics:DescribeCanaries",
        "synthetics:DescribeCanariesLastRun",
        "synthetics:GetCanaryRuns",
        "synthetics:ListTagsForResource",
        "synthetics:StartCanary",
        "synthetics:StopCanary",
        "synthetics:TagResource",
        "synthetics:UntagResource",
        "synthetics:UpdateCanary",
        "tag:DescribeReportCreation",
        "tag:GetComplianceSummary",
        "tag:GetResources",
        "tag:GetTagKeys",
        "tag:GetTagValues",
        "tag:StartReportCreation",
        "tag:TagResources",
        "tag:UntagResources",
        "textract:AnalyzeDocument",
        "textract:DetectDocumentText",
        "textract:GetDocumentAnalysis",
        "textract:GetDocumentTextDetection",
        "textract:StartDocumentAnalysis",
        "textract:StartDocumentTextDetection",
        "transcribe:CreateMedicalVocabulary",
        "transcribe:CreateVocabulary",
        "transcribe:CreateVocabularyFilter",
        "transcribe:DeleteMedicalTranscriptionJob",
        "transcribe:DeleteMedicalVocabulary",
        "transcribe:DeleteTranscriptionJob",
        "transcribe:DeleteVocabulary",
        "transcribe:DeleteVocabularyFilter",
        "transcribe:GetMedicalTranscriptionJob",
        "transcribe:GetMedicalVocabulary",
        "transcribe:GetTranscriptionJob",
        "transcribe:GetVocabulary",
        "transcribe:GetVocabularyFilter",
        "transcribe:ListMedicalTranscriptionJobs",
        "transcribe:ListMedicalVocabularies",
        "transcribe:ListTranscriptionJobs",
        "transcribe:ListVocabularies",
        "transcribe:ListVocabularyFilters",
        "transcribe:StartMedicalStreamTranscription",
        "transcribe:StartMedicalStreamTranscriptionWebSocket",
        "transcribe:StartMedicalTranscriptionJob",
        "transcribe:StartStreamTranscription",
        "transcribe:StartStreamTranscriptionWebSocket",
        "transcribe:StartTranscriptionJob",
        "transcribe:UpdateMedicalVocabulary",
        "transcribe:UpdateVocabulary",
        "transcribe:UpdateVocabularyFilter",
        "transfer:CreateServer",
        "transfer:CreateUser",
        "transfer:DeleteServer",
        "transfer:DeleteSshPublicKey",
        "transfer:DeleteUser",
        "transfer:DescribeServer",
        "transfer:DescribeUser",
        "transfer:ImportSshPublicKey",
        "transfer:ListServers",
        "transfer:ListTagsForResource",
        "transfer:ListUsers",
        "transfer:StartServer",
        "transfer:StopServer",
        "transfer:TagResource",
        "transfer:TestIdentityProvider",
        "transfer:UntagResource",
        "transfer:UpdateServer",
        "transfer:UpdateUser",
        "translate:DeleteTerminology",
        "translate:DescribeTextTranslationJob",
        "translate:GetTerminology",
        "translate:ImportTerminology",
        "translate:ListTerminologies",
        "translate:ListTextTranslationJobs",
        "translate:StartTextTranslationJob",
        "translate:StopTextTranslationJob",
        "translate:TranslateText",
        "trustedadvisor:DescribeAccount",
        "trustedadvisor:DescribeAccountAccess",
        "trustedadvisor:DescribeCheckItems",
        "trustedadvisor:DescribeCheckRefreshStatuses",
        "trustedadvisor:DescribeCheckSummaries",
        "trustedadvisor:DescribeChecks",
        "trustedadvisor:DescribeNotificationPreferences",
        "trustedadvisor:ExcludeCheckItems",
        "trustedadvisor:IncludeCheckItems",
        "trustedadvisor:RefreshCheck",
        "trustedadvisor:SetAccountAccess",
        "trustedadvisor:UpdateNotificationPreferences",
        "waf-regional:AssociateWebACL",
        "waf-regional:CreateByteMatchSet",
        "waf-regional:CreateGeoMatchSet",
        "waf-regional:CreateIPSet",
        "waf-regional:CreateRateBasedRule",
        "waf-regional:CreateRegexMatchSet",
        "waf-regional:CreateRegexPatternSet",
        "waf-regional:CreateRule",
        "waf-regional:CreateRuleGroup",
        "waf-regional:CreateSizeConstraintSet",
        "waf-regional:CreateSqlInjectionMatchSet",
        "waf-regional:CreateWebACL",
        "waf-regional:CreateWebACLMigrationStack",
        "waf-regional:CreateXssMatchSet",
        "waf-regional:DeleteByteMatchSet",
        "waf-regional:DeleteGeoMatchSet",
        "waf-regional:DeleteIPSet",
        "waf-regional:DeleteLoggingConfiguration",
        "waf-regional:DeletePermissionPolicy",
        "waf-regional:DeleteRateBasedRule",
        "waf-regional:DeleteRegexMatchSet",
        "waf-regional:DeleteRegexPatternSet",
        "waf-regional:DeleteRule",
        "waf-regional:DeleteRuleGroup",
        "waf-regional:DeleteSizeConstraintSet",
        "waf-regional:DeleteSqlInjectionMatchSet",
        "waf-regional:DeleteWebACL",
        "waf-regional:DeleteXssMatchSet",
        "waf-regional:DisassociateWebACL",
        "waf-regional:GetByteMatchSet",
        "waf-regional:GetChangeToken",
        "waf-regional:GetChangeTokenStatus",
        "waf-regional:GetGeoMatchSet",
        "waf-regional:GetIPSet",
        "waf-regional:GetLoggingConfiguration",
        "waf-regional:GetPermissionPolicy",
        "waf-regional:GetRateBasedRule",
        "waf-regional:GetRateBasedRuleManagedKeys",
        "waf-regional:GetRegexMatchSet",
        "waf-regional:GetRegexPatternSet",
        "waf-regional:GetRule",
        "waf-regional:GetRuleGroup",
        "waf-regional:GetSampledRequests",
        "waf-regional:GetSizeConstraintSet",
        "waf-regional:GetSqlInjectionMatchSet",
        "waf-regional:GetWebACL",
        "waf-regional:GetWebACLForResource",
        "waf-regional:GetXssMatchSet",
        "waf-regional:ListActivatedRulesInRuleGroup",
        "waf-regional:ListByteMatchSets",
        "waf-regional:ListGeoMatchSets",
        "waf-regional:ListIPSets",
        "waf-regional:ListLoggingConfigurations",
        "waf-regional:ListRateBasedRules",
        "waf-regional:ListRegexMatchSets",
        "waf-regional:ListRegexPatternSets",
        "waf-regional:ListResourcesForWebACL",
        "waf-regional:ListRuleGroups",
        "waf-regional:ListRules",
        "waf-regional:ListSizeConstraintSets",
        "waf-regional:ListSqlInjectionMatchSets",
        "waf-regional:ListSubscribedRuleGroups",
        "waf-regional:ListTagsForResource",
        "waf-regional:ListWebACLs",
        "waf-regional:ListXssMatchSets",
        "waf-regional:PutLoggingConfiguration",
        "waf-regional:PutPermissionPolicy",
        "waf-regional:TagResource",
        "waf-regional:UntagResource",
        "waf-regional:UpdateByteMatchSet",
        "waf-regional:UpdateGeoMatchSet",
        "waf-regional:UpdateIPSet",
        "waf-regional:UpdateRateBasedRule",
        "waf-regional:UpdateRegexMatchSet",
        "waf-regional:UpdateRegexPatternSet",
        "waf-regional:UpdateRule",
        "waf-regional:UpdateRuleGroup",
        "waf-regional:UpdateSizeConstraintSet",
        "waf-regional:UpdateSqlInjectionMatchSet",
        "waf-regional:UpdateWebACL",
        "waf-regional:UpdateXssMatchSet",
        "waf:CreateByteMatchSet",
        "waf:CreateGeoMatchSet",
        "waf:CreateIPSet",
        "waf:CreateRateBasedRule",
        "waf:CreateRegexMatchSet",
        "waf:CreateRegexPatternSet",
        "waf:CreateRule",
        "waf:CreateRuleGroup",
        "waf:CreateSizeConstraintSet",
        "waf:CreateSqlInjectionMatchSet",
        "waf:CreateWebACL",
        "waf:CreateWebACLMigrationStack",
        "waf:CreateXssMatchSet",
        "waf:DeleteByteMatchSet",
        "waf:DeleteGeoMatchSet",
        "waf:DeleteIPSet",
        "waf:DeleteLoggingConfiguration",
        "waf:DeletePermissionPolicy",
        "waf:DeleteRateBasedRule",
        "waf:DeleteRegexMatchSet",
        "waf:DeleteRegexPatternSet",
        "waf:DeleteRule",
        "waf:DeleteRuleGroup",
        "waf:DeleteSizeConstraintSet",
        "waf:DeleteSqlInjectionMatchSet",
        "waf:DeleteWebACL",
        "waf:DeleteXssMatchSet",
        "waf:GetByteMatchSet",
        "waf:GetChangeToken",
        "waf:GetChangeTokenStatus",
        "waf:GetGeoMatchSet",
        "waf:GetIPSet",
        "waf:GetLoggingConfiguration",
        "waf:GetPermissionPolicy",
        "waf:GetRateBasedRule",
        "waf:GetRateBasedRuleManagedKeys",
        "waf:GetRegexMatchSet",
        "waf:GetRegexPatternSet",
        "waf:GetRule",
        "waf:GetRuleGroup",
        "waf:GetSampledRequests",
        "waf:GetSizeConstraintSet",
        "waf:GetSqlInjectionMatchSet",
        "waf:GetWebACL",
        "waf:GetXssMatchSet",
        "waf:ListActivatedRulesInRuleGroup",
        "waf:ListByteMatchSets",
        "waf:ListGeoMatchSets",
        "waf:ListIPSets",
        "waf:ListLoggingConfigurations",
        "waf:ListRateBasedRules",
        "waf:ListRegexMatchSets",
        "waf:ListRegexPatternSets",
        "waf:ListRuleGroups",
        "waf:ListRules",
        "waf:ListSizeConstraintSets",
        "waf:ListSqlInjectionMatchSets",
        "waf:ListSubscribedRuleGroups",
        "waf:ListTagsForResource",
        "waf:ListWebACLs",
        "waf:ListXssMatchSets",
        "waf:PutLoggingConfiguration",
        "waf:PutPermissionPolicy",
        "waf:TagResource",
        "waf:UntagResource",
        "waf:UpdateByteMatchSet",
        "waf:UpdateGeoMatchSet",
        "waf:UpdateIPSet",
        "waf:UpdateRateBasedRule",
        "waf:UpdateRegexMatchSet",
        "waf:UpdateRegexPatternSet",
        "waf:UpdateRule",
        "waf:UpdateRuleGroup",
        "waf:UpdateSizeConstraintSet",
        "waf:UpdateSqlInjectionMatchSet",
        "waf:UpdateWebACL",
        "waf:UpdateXssMatchSet",
        "wafv2:AssociateWebACL",
        "wafv2:CheckCapacity",
        "wafv2:CreateIPSet",
        "wafv2:CreateRegexPatternSet",
        "wafv2:CreateRuleGroup",
        "wafv2:CreateWebACL",
        "wafv2:DeleteFirewallManagerRuleGroups",
        "wafv2:DeleteIPSet",
        "wafv2:DeleteLoggingConfiguration",
        "wafv2:DeletePermissionPolicy",
        "wafv2:DeleteRegexPatternSet",
        "wafv2:DeleteRuleGroup",
        "wafv2:DeleteWebACL",
        "wafv2:DescribeManagedRuleGroup",
        "wafv2:DisassociateWebACL",
        "wafv2:GetIPSet",
        "wafv2:GetLoggingConfiguration",
        "wafv2:GetPermissionPolicy",
        "wafv2:GetRateBasedStatementManagedKeys",
        "wafv2:GetRegexPatternSet",
        "wafv2:GetRuleGroup",
        "wafv2:GetSampledRequests",
        "wafv2:GetWebACL",
        "wafv2:GetWebACLForResource",
        "wafv2:ListAvailableManagedRuleGroups",
        "wafv2:ListIPSets",
        "wafv2:ListLoggingConfigurations",
        "wafv2:ListRegexPatternSets",
        "wafv2:ListResourcesForWebACL",
        "wafv2:ListRuleGroups",
        "wafv2:ListTagsForResource",
        "wafv2:ListWebACLs",
        "wafv2:PutLoggingConfiguration",
        "wafv2:PutPermissionPolicy",
        "wafv2:TagResource",
        "wafv2:UntagResource",
        "wafv2:UpdateIPSet",
        "wafv2:UpdateRegexPatternSet",
        "wafv2:UpdateRuleGroup",
        "wafv2:UpdateWebACL",
        "wam:AuthenticatePackager",
        "wellarchitected:CreateWorkload",
        "wellarchitected:CreateWorkloadShare",
        "wellarchitected:DeleteWorkload",
        "wellarchitected:GetWorkload",
        "wellarchitected:ListWorkloads",
        "workdocs:AbortDocumentVersionUpload",
        "workdocs:ActivateUser",
        "workdocs:AddResourcePermissions",
        "workdocs:AddUserToGroup",
        "workdocs:CheckAlias",
        "workdocs:CreateComment",
        "workdocs:CreateCustomMetadata",
        "workdocs:CreateFolder",
        "workdocs:CreateInstance",
        "workdocs:CreateLabels",
        "workdocs:CreateNotificationSubscription",
        "workdocs:CreateUser",
        "workdocs:DeactivateUser",
        "workdocs:DeleteComment",
        "workdocs:DeleteCustomMetadata",
        "workdocs:DeleteDocument",
        "workdocs:DeleteFolder",
        "workdocs:DeleteFolderContents",
        "workdocs:DeleteInstance",
        "workdocs:DeleteLabels",
        "workdocs:DeleteNotificationSubscription",
        "workdocs:DeleteUser",
        "workdocs:DeregisterDirectory",
        "workdocs:DescribeActivities",
        "workdocs:DescribeAvailableDirectories",
        "workdocs:DescribeComments",
        "workdocs:DescribeDocumentVersions",
        "workdocs:DescribeFolderContents",
        "workdocs:DescribeGroups",
        "workdocs:DescribeInstances",
        "workdocs:DescribeNotificationSubscriptions",
        "workdocs:DescribeResourcePermissions",
        "workdocs:DescribeRootFolders",
        "workdocs:DescribeUsers",
        "workdocs:DownloadDocumentVersion",
        "workdocs:GetCurrentUser",
        "workdocs:GetDocument",
        "workdocs:GetDocumentPath",
        "workdocs:GetDocumentVersion",
        "workdocs:GetFolder",
        "workdocs:GetFolderPath",
        "workdocs:GetResources",
        "workdocs:InitiateDocumentVersionUpload",
        "workdocs:RegisterDirectory",
        "workdocs:RemoveAllResourcePermissions",
        "workdocs:RemoveResourcePermission",
        "workdocs:UpdateDocument",
        "workdocs:UpdateDocumentVersion",
        "workdocs:UpdateFolder",
        "workdocs:UpdateInstanceAlias",
        "workdocs:UpdateUser",
        "worklink:AssociateDomain",
        "worklink:AssociateWebsiteAuthorizationProvider",
        "worklink:AssociateWebsiteCertificateAuthority",
        "worklink:CreateFleet",
        "worklink:DeleteFleet",
        "worklink:DescribeAuditStreamConfiguration",
        "worklink:DescribeCompanyNetworkConfiguration",
        "worklink:DescribeDevice",
        "worklink:DescribeDevicePolicyConfiguration",
        "worklink:DescribeDomain",
        "worklink:DescribeFleetMetadata",
        "worklink:DescribeIdentityProviderConfiguration",
        "worklink:DescribeWebsiteCertificateAuthority",
        "worklink:DisassociateDomain",
        "worklink:DisassociateWebsiteAuthorizationProvider",
        "worklink:DisassociateWebsiteCertificateAuthority",
        "worklink:ListDevices",
        "worklink:ListDomains",
        "worklink:ListFleets",
        "worklink:ListTagsForResource",
        "worklink:ListWebsiteAuthorizationProviders",
        "worklink:ListWebsiteCertificateAuthorities",
        "worklink:RestoreDomainAccess",
        "worklink:RevokeDomainAccess",
        "worklink:SignOutUser",
        "worklink:TagResource",
        "worklink:UntagResource",
        "worklink:UpdateAuditStreamConfiguration",
        "worklink:UpdateCompanyNetworkConfiguration",
        "worklink:UpdateDevicePolicyConfiguration",
        "worklink:UpdateDomainMetadata",
        "worklink:UpdateFleetMetadata",
        "worklink:UpdateIdentityProviderConfiguration",
        "workmail:AddMembersToGroup",
        "workmail:AssociateDelegateToResource",
        "workmail:AssociateMemberToGroup",
        "workmail:CreateAlias",
        "workmail:CreateGroup",
        "workmail:CreateInboundMailFlowRule",
        "workmail:CreateMailDomain",
        "workmail:CreateMailUser",
        "workmail:CreateOrganization",
        "workmail:CreateOutboundMailFlowRule",
        "workmail:CreateResource",
        "workmail:CreateSmtpGateway",
        "workmail:CreateUser",
        "workmail:DeleteAccessControlRule",
        "workmail:DeleteAlias",
        "workmail:DeleteGroup",
        "workmail:DeleteInboundMailFlowRule",
        "workmail:DeleteMailDomain",
        "workmail:DeleteMailboxPermissions",
        "workmail:DeleteMobileDevice",
        "workmail:DeleteOrganization",
        "workmail:DeleteOutboundMailFlowRule",
        "workmail:DeleteResource",
        "workmail:DeleteRetentionPolicy",
        "workmail:DeleteSmtpGateway",
        "workmail:DeleteUser",
        "workmail:DeregisterFromWorkMail",
        "workmail:DescribeDirectories",
        "workmail:DescribeGroup",
        "workmail:DescribeInboundMailFlowRule",
        "workmail:DescribeKmsKeys",
        "workmail:DescribeMailDomains",
        "workmail:DescribeMailGroups",
        "workmail:DescribeMailUsers",
        "workmail:DescribeOrganization",
        "workmail:DescribeOrganizations",
        "workmail:DescribeOutboundMailFlowRule",
        "workmail:DescribeResource",
        "workmail:DescribeSmtpGateway",
        "workmail:DescribeUser",
        "workmail:DisableMailGroups",
        "workmail:DisableMailUsers",
        "workmail:DisassociateDelegateFromResource",
        "workmail:DisassociateMemberFromGroup",
        "workmail:EnableMailDomain",
        "workmail:EnableMailGroups",
        "workmail:EnableMailUsers",
        "workmail:GetAccessControlEffect",
        "workmail:GetDefaultRetentionPolicy",
        "workmail:GetJournalingRules",
        "workmail:GetMailDomainDetails",
        "workmail:GetMailGroupDetails",
        "workmail:GetMailUserDetails",
        "workmail:GetMailboxDetails",
        "workmail:GetMobileDeviceDetails",
        "workmail:GetMobileDevicesForUser",
        "workmail:GetMobilePolicyDetails",
        "workmail:ListAccessControlRules",
        "workmail:ListAliases",
        "workmail:ListGroupMembers",
        "workmail:ListGroups",
        "workmail:ListInboundMailFlowRules",
        "workmail:ListMailboxPermissions",
        "workmail:ListMembersInMailGroup",
        "workmail:ListOrganizations",
        "workmail:ListOutboundMailFlowRules",
        "workmail:ListResourceDelegates",
        "workmail:ListResources",
        "workmail:ListSmtpGateways",
        "workmail:ListTagsForResource",
        "workmail:ListUsers",
        "workmail:PutAccessControlRule",
        "workmail:PutMailboxPermissions",
        "workmail:PutRetentionPolicy",
        "workmail:RegisterToWorkMail",
        "workmail:RemoveMembersFromGroup",
        "workmail:ResetPassword",
        "workmail:ResetUserPassword",
        "workmail:SearchMembers",
        "workmail:SetAdmin",
        "workmail:SetDefaultMailDomain",
        "workmail:SetJournalingRules",
        "workmail:SetMailGroupDetails",
        "workmail:SetMailUserDetails",
        "workmail:SetMobilePolicyDetails",
        "workmail:TagResource",
        "workmail:TestInboundMailFlowRules",
        "workmail:TestOutboundMailFlowRules",
        "workmail:UntagResource",
        "workmail:UpdateInboundMailFlowRule",
        "workmail:UpdateMailboxQuota",
        "workmail:UpdateOutboundMailFlowRule",
        "workmail:UpdatePrimaryEmailAddress",
        "workmail:UpdateResource",
        "workmail:UpdateSmtpGateway",
        "workmail:WipeMobileDevice",
        "workmailmessageflow:GetRawMessageContent",
        "workspaces:AssociateIpGroups",
        "workspaces:AuthorizeIpRules",
        "workspaces:CreateIpGroup",
        "workspaces:CreateTags",
        "workspaces:CreateWorkspaces",
        "workspaces:DeleteIpGroup",
        "workspaces:DeleteTags",
        "workspaces:DeleteWorkspaceImage",
        "workspaces:DescribeAccount",
        "workspaces:DescribeAccountModifications",
        "workspaces:DescribeClientProperties",
        "workspaces:DescribeIpGroups",
        "workspaces:DescribeTags",
        "workspaces:DescribeWorkspaceBundles",
        "workspaces:DescribeWorkspaceDirectories",
        "workspaces:DescribeWorkspaceImages",
        "workspaces:DescribeWorkspaces",
        "workspaces:DescribeWorkspacesConnectionStatus",
        "workspaces:DisassociateIpGroups",
        "workspaces:ImportWorkspaceImage",
        "workspaces:ListAvailableManagementCidrRanges",
        "workspaces:ModifyAccount",
        "workspaces:ModifyClientProperties",
        "workspaces:ModifyWorkspaceProperties",
        "workspaces:ModifyWorkspaceState",
        "workspaces:RebootWorkspaces",
        "workspaces:RebuildWorkspaces",
        "workspaces:RevokeIpRules",
        "workspaces:StartWorkspaces",
        "workspaces:StopWorkspaces",
        "workspaces:TerminateWorkspaces",
        "workspaces:UpdateRulesOfIpGroup",
        "xray:BatchGetTraces",
        "xray:CreateGroup",
        "xray:CreateSamplingRule",
        "xray:DeleteGroup",
        "xray:DeleteSamplingRule",
        "xray:GetEncryptionConfig",
        "xray:GetGroup",
        "xray:GetGroups",
        "xray:GetSamplingRules",
        "xray:GetSamplingStatisticSummaries",
        "xray:GetSamplingTargets",
        "xray:GetServiceGraph",
        "xray:GetTimeSeriesServiceStatistics",
        "xray:GetTraceGraph",
        "xray:GetTraceSummaries",
        "xray:PutEncryptionConfig",
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments",
        "xray:UpdateGroup",
        "xray:UpdateSamplingRule",
        "account:ListRegions",
        "iam:CreateServiceLinkedRole",
        "iam:DeleteServiceLinkedRole",
        "iam:ListRoles",
        "organizations:DescribeOrganization"
      ]
    },
    "ANPAZKAPJZG4OV6AFDA5J": {
      "PolicyName": "CloudWatch-CrossAccountAccess",
      "PolicyId": "ANPAZKAPJZG4OV6AFDA5J",
      "Arn": "arn:aws:iam::aws:policy/aws-service-role/CloudWatch-CrossAccountAccess",
      "Path": "/aws-service-role/",
      "DefaultVersionId": "v1",
      "AttachmentCount": 1,
      "IsAttachable": true,
      "CreateDate": "2019-07-23 09:59:27+00:00",
      "UpdateDate": "2019-07-23 09:59:27+00:00",
      "PolicyVersionList": [
        {
          "Document": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Action": [
                  "sts:AssumeRole"
                ],
                "Resource": [
                  "arn:aws:iam::*:role/CloudWatch-CrossAccountSharing*"
                ],
                "Effect": "Allow"
              }
            ]
          },
          "VersionId": "v1",
          "IsDefaultVersion": true,
          "CreateDate": "2019-07-23 09:59:27+00:00"
        }
      ],
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [],
      "InfrastructureModification": []
    }
  },
  "inline-policies": {
    "9dfb8b36ce6c68a741355e7a2ab5ee62a47755f8f25d68e4fa6f87dabc036986": {
      "PolicyName": "InlinePolicyForBidenGroup",
      "PolicyId": "9dfb8b36ce6c68a741355e7a2ab5ee62a47755f8f25d68e4fa6f87dabc036986",
      "PolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
              "s3:GetObject",
              "s3:PutObjectAcl"
            ],
            "Resource": "*"
          }
        ]
      },
      "PrivilegeEscalation": [],
      "DataExfiltration": [
        "s3:GetObject"
      ],
      "ResourceExposure": [
        "s3:PutObjectAcl"
      ],
      "InfrastructureModification": [
        "s3:GetObject",
        "s3:PutObjectAcl"
      ]
    },
    "aad4a5d1e0cd67fb99c658e1d326f16afd2f6857804f6ffd547c9c13ef508540": {
      "PolicyName": "EC2-IAM-example",
      "PolicyId": "aad4a5d1e0cd67fb99c658e1d326f16afd2f6857804f6ffd547c9c13ef508540",
      "PolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
              "iam:CreateInstanceProfile",
              "iam:ListInstanceProfilesForRole",
              "iam:PassRole",
              "ec2:DescribeIamInstanceProfileAssociations",
              "iam:GetInstanceProfile",
              "ec2:DisassociateIamInstanceProfile",
              "ec2:AssociateIamInstanceProfile",
              "iam:AddRoleToInstanceProfile"
            ],
            "Resource": "*"
          }
        ]
      },
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "iam:AddRoleToInstanceProfile",
        "iam:CreateInstanceProfile",
        "iam:PassRole"
      ],
      "InfrastructureModification": [
        "ec2:AssociateIamInstanceProfile",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DisassociateIamInstanceProfile",
        "iam:AddRoleToInstanceProfile",
        "iam:CreateInstanceProfile",
        "iam:GetInstanceProfile",
        "iam:ListInstanceProfilesForRole",
        "iam:PassRole"
      ]
    },
    "946be6acd0316408ed304d2dcd5147aa2f2a4d2634c6121f841615e75b95cc8d": {
      "PolicyName": "SupYo",
      "PolicyId": "946be6acd0316408ed304d2dcd5147aa2f2a4d2634c6121f841615e75b95cc8d",
      "PolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
              "iam:CreateInstanceProfile",
              "iam:ListInstanceProfilesForRole",
              "iam:PassRole",
              "ec2:DescribeIamInstanceProfileAssociations",
              "iam:GetInstanceProfile",
              "ec2:DisassociateIamInstanceProfile",
              "ec2:AssociateIamInstanceProfile",
              "iam:AddRoleToInstanceProfile"
            ],
            "Resource": "*"
          }
        ]
      },
      "PrivilegeEscalation": [],
      "DataExfiltration": [],
      "ResourceExposure": [
        "iam:AddRoleToInstanceProfile",
        "iam:CreateInstanceProfile",
        "iam:PassRole"
      ],
      "InfrastructureModification": [
        "ec2:AssociateIamInstanceProfile",
        "ec2:DescribeIamInstanceProfileAssociations",
        "ec2:DisassociateIamInstanceProfile",
        "iam:AddRoleToInstanceProfile",
        "iam:CreateInstanceProfile",
        "iam:GetInstanceProfile",
        "iam:ListInstanceProfilesForRole",
        "iam:PassRole"
      ]
    },
    "4d5d2bf1baaf66fd24b21397410fd0eb30ab5758d69fc365b1862dd9a5be5eb8": {
      "PolicyName": "InsecureUserPolicy",
      "PolicyId": "4d5d2bf1baaf66fd24b21397410fd0eb30ab5758d69fc365b1862dd9a5be5eb8",
      "PolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
              "s3:PutObject",
              "s3:PutObjectAcl",
              "s3:GetObject"
            ],
            "Resource": [
              "*"
            ]
          }
        ]
      },
      "PrivilegeEscalation": [],
      "DataExfiltration": [
        "s3:GetObject"
      ],
      "ResourceExposure": [
        "s3:PutObjectAcl"
      ]
    }
  }
}
